(function(/*! Brunch !*/) {
  'use strict';

  var globals = typeof window !== 'undefined' ? window : global;
  if (typeof globals.require === 'function') return;

  var modules = {};
  var cache = {};

  var has = function(object, name) {
    return ({}).hasOwnProperty.call(object, name);
  };

  var expand = function(root, name) {
    var results = [], parts, part;
    if (/^\.\.?(\/|$)/.test(name)) {
      parts = [root, name].join('/').split('/');
    } else {
      parts = name.split('/');
    }
    for (var i = 0, length = parts.length; i < length; i++) {
      part = parts[i];
      if (part === '..') {
        results.pop();
      } else if (part !== '.' && part !== '') {
        results.push(part);
      }
    }
    return results.join('/');
  };

  var dirname = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  var localRequire = function(path) {
    return function(name) {
      var dir = dirname(path);
      var absolute = expand(dir, name);
      return globals.require(absolute);
    };
  };

  var initModule = function(name, definition) {
    var module = {id: name, exports: {}};
    definition(module.exports, localRequire(name), module);
    var exports = cache[name] = module.exports;
    return exports;
  };

  var require = function(name) {
    var path = expand(name, '.');

    if (has(cache, path)) return cache[path];
    if (has(modules, path)) return initModule(path, modules[path]);

    var dirIndex = expand(path, './index');
    if (has(cache, dirIndex)) return cache[dirIndex];
    if (has(modules, dirIndex)) return initModule(dirIndex, modules[dirIndex]);

    throw new Error('Cannot find module "' + name + '"');
  };

  var define = function(bundle) {
    for (var key in bundle) {
      if (has(bundle, key)) {
        modules[key] = bundle[key];
      }
    }
  }

  globals.require = require;
  globals.require.define = define;
  globals.require.brunch = true;
})();

// Make it safe to do console.log() always.
(function (con) {
  var method;
  var dummy = function() {};
  var methods = ('assert,count,debug,dir,dirxml,error,exception,group,' +
     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,' + 
     'time,timeEnd,trace,warn').split(',');
  while (method = methods.pop()) {
    con[method] = con[method] || dummy;
  }
})(window.console = window.console || {});
;

/*!
 * jQuery JavaScript Library v1.7.2
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Wed Mar 21 12:46:34 2012 -0700
 */
(function( window, undefined ) {

// Use the correct document accordingly with window argument (sandbox)
var document = window.document,
	navigator = window.navigator,
	location = window.location;
var jQuery = (function() {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Check if a string has a non-whitespace character in it
	rnotwhite = /\S/,

	// Used for trimming whitespace
	trimLeft = /^\s+/,
	trimRight = /\s+$/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

	// Useragent RegExp
	rwebkit = /(webkit)[ \/]([\w.]+)/,
	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
	rmsie = /(msie) ([\w.]+)/,
	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

	// Matches dashed string for camelizing
	rdashAlpha = /-([a-z]|[0-9])/ig,
	rmsPrefix = /^-ms-/,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// Keep a UserAgent string for use with jQuery.browser
	userAgent = navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,

	// The deferred used on DOM ready
	readyList,

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString = Object.prototype.toString,
	hasOwn = Object.prototype.hasOwnProperty,
	push = Array.prototype.push,
	slice = Array.prototype.slice,
	trim = String.prototype.trim,
	indexOf = Array.prototype.indexOf,

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// The body element only exists once, optimize finding it
		if ( selector === "body" && !context && document.body ) {
			this.context = document;
			this[0] = document.body;
			this.selector = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			// Are we dealing with HTML string or an ID?
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = quickExpr.exec( selector );
			}

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context ? context.ownerDocument || context : document );

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret = rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector = [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector = [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
						selector = ( ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment ).childNodes;
					}

					return jQuery.merge( this, selector );

				// HANDLE: $("#id")
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.7.2",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret = this.constructor();

		if ( jQuery.isArray( elems ) ) {
			push.apply( ret, elems );

		} else {
			jQuery.merge( ret, elems );
		}

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// Add the callback
		readyList.add( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {
		// Either a released hold or an DOMready/load event and not yet ready
		if ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {
			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 1 );
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.fireWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.trigger ) {
				jQuery( document ).trigger( "ready" ).off( "ready" );
			}
		}
	},

	bindReady: function() {
		if ( readyList ) {
			return;
		}

		readyList = jQuery.Callbacks( "once memory" );

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			return setTimeout( jQuery.ready, 1 );
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel = false;

			try {
				toplevel = window.frameElement == null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	parseJSON: function( data ) {
		if ( typeof data !== "string" || !data ) {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		if ( typeof data !== "string" || !data ) {
			return null;
		}
		var xml, tmp;
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i = 0,
			length = object.length,
			isObj = length === undefined || jQuery.isFunction( object );

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return object;
	},

	// Use native String.trim function wherever possible
	trim: trim ?
		function( text ) {
			return text == null ?
				"" :
				trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
		},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret = results || [];

		if ( array != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			var type = jQuery.type( array );

			if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array, i ) {
		var len;

		if ( array ) {
			if ( indexOf ) {
				return indexOf.call( array, elem, i );
			}

			len = array.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in array && array[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i = first.length,
			j = 0;

		if ( typeof second.length === "number" ) {
			for ( var l = second.length; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret = [], retVal;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i = 0, length = elems.length; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key, ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		if ( typeof context === "string" ) {
			var tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		var args = slice.call( arguments, 2 ),
			proxy = function() {
				return fn.apply( context, args.concat( slice.call( arguments ) ) );
			};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

		return proxy;
	},

	// Mutifunctional method to get and set values to a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
		var exec,
			bulk = key == null,
			i = 0,
			length = elems.length;

		// Sets many values
		if ( key && typeof key === "object" ) {
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
			}
			chainable = 1;

		// Sets one value
		} else if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = pass === undefined && jQuery.isFunction( value );

			if ( bulk ) {
				// Bulk operations only iterate when executing function values
				if ( exec ) {
					exec = fn;
					fn = function( elem, key, value ) {
						return exec.call( jQuery( elem ), value );
					};

				// Otherwise they run against the entire set
				} else {
					fn.call( elems, value );
					fn = null;
				}
			}

			if ( fn ) {
				for (; i < length; i++ ) {
					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
				}
			}

			chainable = 1;
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua = ua.toLowerCase();

		var match = rwebkit.exec( ua ) ||
			ropera.exec( ua ) ||
			rmsie.exec( ua ) ||
			ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
			[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	sub: function() {
		function jQuerySub( selector, context ) {
			return new jQuerySub.fn.init( selector, context );
		}
		jQuery.extend( true, jQuerySub, this );
		jQuerySub.superclass = this;
		jQuerySub.fn = jQuerySub.prototype = this();
		jQuerySub.fn.constructor = jQuerySub;
		jQuerySub.sub = this.sub;
		jQuerySub.fn.init = function init( selector, context ) {
			if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
				context = jQuerySub( context );
			}

			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
		};
		jQuerySub.fn.init.prototype = jQuerySub.fn;
		var rootjQuerySub = jQuerySub(document);
		return jQuerySub;
	},

	browser: {}
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

browserMatch = jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] = true;
	jQuery.browser.version = browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari = true;
}

// IE doesn't match non-breaking spaces with \s
if ( rnotwhite.test( "\xA0" ) ) {
	trimLeft = /^[\s\xA0]+/;
	trimRight = /[\s\xA0]+$/;
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded = function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded = function() {
		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( document.readyState === "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch(e) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

return jQuery;

})();


// String to Object flags format cache
var flagsCache = {};

// Convert String-formatted flags into Object-formatted ones and store in cache
function createFlags( flags ) {
	var object = flagsCache[ flags ] = {},
		i, length;
	flags = flags.split( /\s+/ );
	for ( i = 0, length = flags.length; i < length; i++ ) {
		object[ flags[i] ] = true;
	}
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	flags:	an optional list of space-separated flags that will change how
 *			the callback list behaves
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible flags:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( flags ) {

	// Convert flags from String-formatted to Object-formatted
	// (we check in cache first)
	flags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};

	var // Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = [],
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Add one or several callbacks to the list
		add = function( args ) {
			var i,
				length,
				elem,
				type,
				actual;
			for ( i = 0, length = args.length; i < length; i++ ) {
				elem = args[ i ];
				type = jQuery.type( elem );
				if ( type === "array" ) {
					// Inspect recursively
					add( elem );
				} else if ( type === "function" ) {
					// Add if not in unique mode and callback is not in
					if ( !flags.unique || !self.has( elem ) ) {
						list.push( elem );
					}
				}
			}
		},
		// Fire callbacks
		fire = function( context, args ) {
			args = args || [];
			memory = !flags.memory || [ context, args ];
			fired = true;
			firing = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( context, args ) === false && flags.stopOnFalse ) {
					memory = true; // Mark as halted
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( !flags.once ) {
					if ( stack && stack.length ) {
						memory = stack.shift();
						self.fireWith( memory[ 0 ], memory[ 1 ] );
					}
				} else if ( memory === true ) {
					self.disable();
				} else {
					list = [];
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					var length = list.length;
					add( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away, unless previous
					// firing was halted (stopOnFalse)
					} else if ( memory && memory !== true ) {
						firingStart = length;
						fire( memory[ 0 ], memory[ 1 ] );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					var args = arguments,
						argIndex = 0,
						argLength = args.length;
					for ( ; argIndex < argLength ; argIndex++ ) {
						for ( var i = 0; i < list.length; i++ ) {
							if ( args[ argIndex ] === list[ i ] ) {
								// Handle firingIndex and firingLength
								if ( firing ) {
									if ( i <= firingLength ) {
										firingLength--;
										if ( i <= firingIndex ) {
											firingIndex--;
										}
									}
								}
								// Remove the element
								list.splice( i--, 1 );
								// If we have some unicity property then
								// we only need to do this once
								if ( flags.unique ) {
									break;
								}
							}
						}
					}
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				if ( list ) {
					var i = 0,
						length = list.length;
					for ( ; i < length; i++ ) {
						if ( fn === list[ i ] ) {
							return true;
						}
					}
				}
				return false;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory || memory === true ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( stack ) {
					if ( firing ) {
						if ( !flags.once ) {
							stack.push( [ context, args ] );
						}
					} else if ( !( flags.once && memory ) ) {
						fire( context, args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};




var // Static reference to slice
	sliceDeferred = [].slice;

jQuery.extend({

	Deferred: function( func ) {
		var doneList = jQuery.Callbacks( "once memory" ),
			failList = jQuery.Callbacks( "once memory" ),
			progressList = jQuery.Callbacks( "memory" ),
			state = "pending",
			lists = {
				resolve: doneList,
				reject: failList,
				notify: progressList
			},
			promise = {
				done: doneList.add,
				fail: failList.add,
				progress: progressList.add,

				state: function() {
					return state;
				},

				// Deprecated
				isResolved: doneList.fired,
				isRejected: failList.fired,

				then: function( doneCallbacks, failCallbacks, progressCallbacks ) {
					deferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );
					return this;
				},
				always: function() {
					deferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );
					return this;
				},
				pipe: function( fnDone, fnFail, fnProgress ) {
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( {
							done: [ fnDone, "resolve" ],
							fail: [ fnFail, "reject" ],
							progress: [ fnProgress, "notify" ]
						}, function( handler, data ) {
							var fn = data[ 0 ],
								action = data[ 1 ],
								returned;
							if ( jQuery.isFunction( fn ) ) {
								deferred[ handler ](function() {
									returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								});
							} else {
								deferred[ handler ]( newDefer[ action ] );
							}
						});
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					if ( obj == null ) {
						obj = promise;
					} else {
						for ( var key in promise ) {
							obj[ key ] = promise[ key ];
						}
					}
					return obj;
				}
			},
			deferred = promise.promise({}),
			key;

		for ( key in lists ) {
			deferred[ key ] = lists[ key ].fire;
			deferred[ key + "With" ] = lists[ key ].fireWith;
		}

		// Handle state
		deferred.done( function() {
			state = "resolved";
		}, failList.disable, progressList.lock ).fail( function() {
			state = "rejected";
		}, doneList.disable, progressList.lock );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( firstParam ) {
		var args = sliceDeferred.call( arguments, 0 ),
			i = 0,
			length = args.length,
			pValues = new Array( length ),
			count = length,
			pCount = length,
			deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?
				firstParam :
				jQuery.Deferred(),
			promise = deferred.promise();
		function resolveFunc( i ) {
			return function( value ) {
				args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				if ( !( --count ) ) {
					deferred.resolveWith( deferred, args );
				}
			};
		}
		function progressFunc( i ) {
			return function( value ) {
				pValues[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				deferred.notifyWith( promise, pValues );
			};
		}
		if ( length > 1 ) {
			for ( ; i < length; i++ ) {
				if ( args[ i ] && args[ i ].promise && jQuery.isFunction( args[ i ].promise ) ) {
					args[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );
				} else {
					--count;
				}
			}
			if ( !count ) {
				deferred.resolveWith( deferred, args );
			}
		} else if ( deferred !== firstParam ) {
			deferred.resolveWith( deferred, length ? [ firstParam ] : [] );
		}
		return promise;
	}
});




jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		fragment,
		tds,
		events,
		eventName,
		i,
		isSupported,
		div = document.createElement( "div" ),
		documentElement = document.documentElement;

	// Preliminary tests
	div.setAttribute("className", "t");
	div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName( "*" );
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement( "select" );
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName( "input" )[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form(#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true,
		pixelMargin: true
	};

	// jQuery.boxModel DEPRECATED in 1.3, use jQuery.support.boxModel instead
	jQuery.boxModel = support.boxModel = (document.compatMode === "CSS1Compat");

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent( "onclick" );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute("type", "radio");
	support.radioValue = input.value === "t";

	input.setAttribute("checked", "checked");

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "name", "t" );

	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for ( i in {
			submit: 1,
			change: 1,
			focusin: 1
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	fragment.removeChild( div );

	// Null elements to avoid leaks in IE
	fragment = select = opt = div = input = null;

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, outer, inner, table, td, offsetSupport,
			marginDiv, conMarginTop, style, html, positionTopLeftWidthHeight,
			paddingMarginBorderVisibility, paddingMarginBorder,
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		conMarginTop = 1;
		paddingMarginBorder = "padding:0;margin:0;border:";
		positionTopLeftWidthHeight = "position:absolute;top:0;left:0;width:1px;height:1px;";
		paddingMarginBorderVisibility = paddingMarginBorder + "0;visibility:hidden;";
		style = "style='" + positionTopLeftWidthHeight + paddingMarginBorder + "5px solid #000;";
		html = "<div " + style + "display:block;'><div style='" + paddingMarginBorder + "0;display:block;overflow:hidden;'></div></div>" +
			"<table " + style + "' cellpadding='0' cellspacing='0'>" +
			"<tr><td></td></tr></table>";

		container = document.createElement("div");
		container.style.cssText = paddingMarginBorderVisibility + "width:0;height:0;position:static;top:0;margin-top:" + conMarginTop + "px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td style='" + paddingMarginBorder + "0;display:none'></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName( "td" );
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check if div with explicit width and no margin-right incorrectly
		// gets computed margin-right based on width of container. For more
		// info see bug #3333
		// Fails in WebKit before Feb 2011 nightlies
		// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
		if ( window.getComputedStyle ) {
			div.innerHTML = "";
			marginDiv = document.createElement( "div" );
			marginDiv.style.width = "0";
			marginDiv.style.marginRight = "0";
			div.style.width = "2px";
			div.appendChild( marginDiv );
			support.reliableMarginRight =
				( parseInt( ( window.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;
		}

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.innerHTML = "";
			div.style.width = div.style.padding = "1px";
			div.style.border = 0;
			div.style.overflow = "hidden";
			div.style.display = "inline";
			div.style.zoom = 1;
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "block";
			div.style.overflow = "visible";
			div.innerHTML = "<div style='width:5px;'></div>";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );
		}

		div.style.cssText = positionTopLeftWidthHeight + paddingMarginBorderVisibility;
		div.innerHTML = html;

		outer = div.firstChild;
		inner = outer.firstChild;
		td = outer.nextSibling.firstChild.firstChild;

		offsetSupport = {
			doesNotAddBorder: ( inner.offsetTop !== 5 ),
			doesAddBorderForTableAndCells: ( td.offsetTop === 5 )
		};

		inner.style.position = "fixed";
		inner.style.top = "20px";

		// safari subtracts parent border width here which is 5px
		offsetSupport.fixedPosition = ( inner.offsetTop === 20 || inner.offsetTop === 15 );
		inner.style.position = inner.style.top = "";

		outer.style.overflow = "hidden";
		outer.style.position = "relative";

		offsetSupport.subtractsBorderForOverflowNotVisible = ( inner.offsetTop === -5 );
		offsetSupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== conMarginTop );

		if ( window.getComputedStyle ) {
			div.style.marginTop = "1%";
			support.pixelMargin = ( window.getComputedStyle( div, null ) || { marginTop: 0 } ).marginTop !== "1%";
		}

		if ( typeof container.style.zoom !== "undefined" ) {
			container.style.zoom = 1;
		}

		body.removeChild( container );
		marginDiv = div = container = null;

		jQuery.extend( support, offsetSupport );
	});

	return support;
})();




var rbrace = /^(?:\{.*\}|\[.*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	// Please use with caution
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var privateCache, thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey,
			isEvents = name === "events";

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = ++jQuery.uuid;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		privateCache = thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Users should not attempt to inspect the internal events object using jQuery.data,
		// it is undocumented and subject to change. But does anyone listen? No.
		if ( isEvents && !thisCache[ name ] ) {
			return privateCache.events;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			// Reference to internal data cache key
			internalKey = jQuery.expando,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,

			// See jQuery.data for more information
			id = isNode ? elem[ internalKey ] : internalKey;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split( " " );
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject(cache[ id ]) ) {
				return;
			}
		}

		// Browsers that fail expando deletion also refuse to delete expandos on
		// the window, but it will allow it on all other JS objects; other browsers
		// don't care
		// Ensure that `cache` is not a window object #10080
		if ( jQuery.support.deleteExpando || !cache.setInterval ) {
			delete cache[ id ];
		} else {
			cache[ id ] = null;
		}

		// We destroyed the cache and need to eliminate the expando on the node to avoid
		// false lookups in the cache for entries that no longer exist
		if ( isNode ) {
			// IE does not allow us to delete expando properties from nodes,
			// nor does it have a removeAttribute function on Document nodes;
			// we must handle all of these cases
			if ( jQuery.support.deleteExpando ) {
				delete elem[ internalKey ];
			} else if ( elem.removeAttribute ) {
				elem.removeAttribute( internalKey );
			} else {
				elem[ internalKey ] = null;
			}
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		if ( elem.nodeName ) {
			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

			if ( match ) {
				return !(match === true || elem.getAttribute("classid") !== match);
			}
		}

		return true;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, part, attr, name, l,
			elem = this[0],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attr = elem.attributes;
					for ( l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split( ".", 2 );
		parts[1] = parts[1] ? "." + parts[1] : "";
		part = parts[1] + "!";

		return jQuery.access( this, function( value ) {

			if ( value === undefined ) {
				data = this.triggerHandler( "getData" + part, [ parts[0] ] );

				// Try to fetch any internally stored data first
				if ( data === undefined && elem ) {
					data = jQuery.data( elem, key );
					data = dataAttr( elem, key, data );
				}

				return data === undefined && parts[1] ?
					this.data( parts[0] ) :
					data;
			}

			parts[1] = value;
			this.each(function() {
				var self = jQuery( this );

				self.triggerHandler( "setData" + part, parts );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + part, parts );
			});
		}, null, value, arguments.length > 1, null, false );
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				jQuery.isNumeric( data ) ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	for ( var name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}




function handleQueueMarkDefer( elem, type, src ) {
	var deferDataKey = type + "defer",
		queueDataKey = type + "queue",
		markDataKey = type + "mark",
		defer = jQuery._data( elem, deferDataKey );
	if ( defer &&
		( src === "queue" || !jQuery._data(elem, queueDataKey) ) &&
		( src === "mark" || !jQuery._data(elem, markDataKey) ) ) {
		// Give room for hard-coded callbacks to fire first
		// and eventually mark/queue something else on the element
		setTimeout( function() {
			if ( !jQuery._data( elem, queueDataKey ) &&
				!jQuery._data( elem, markDataKey ) ) {
				jQuery.removeData( elem, deferDataKey, true );
				defer.fire();
			}
		}, 0 );
	}
}

jQuery.extend({

	_mark: function( elem, type ) {
		if ( elem ) {
			type = ( type || "fx" ) + "mark";
			jQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );
		}
	},

	_unmark: function( force, elem, type ) {
		if ( force !== true ) {
			type = elem;
			elem = force;
			force = false;
		}
		if ( elem ) {
			type = type || "fx";
			var key = type + "mark",
				count = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );
			if ( count ) {
				jQuery._data( elem, key, count );
			} else {
				jQuery.removeData( elem, key, true );
				handleQueueMarkDefer( elem, type, "mark" );
			}
		}
	},

	queue: function( elem, type, data ) {
		var q;
		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			q = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !q || jQuery.isArray(data) ) {
					q = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					q.push( data );
				}
			}
			return q || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			fn = queue.shift(),
			hooks = {};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			jQuery._data( elem, type + ".run", hooks );
			fn.call( elem, function() {
				jQuery.dequeue( elem, type );
			}, hooks );
		}

		if ( !queue.length ) {
			jQuery.removeData( elem, type + "queue " + type + ".run", true );
			handleQueueMarkDefer( elem, type, "queue" );
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, object ) {
		if ( typeof type !== "string" ) {
			object = type;
			type = undefined;
		}
		type = type || "fx";
		var defer = jQuery.Deferred(),
			elements = this,
			i = elements.length,
			count = 1,
			deferDataKey = type + "defer",
			queueDataKey = type + "queue",
			markDataKey = type + "mark",
			tmp;
		function resolve() {
			if ( !( --count ) ) {
				defer.resolveWith( elements, [ elements ] );
			}
		}
		while( i-- ) {
			if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||
					( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||
						jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&
					jQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( "once memory" ), true ) )) {
				count++;
				tmp.add( resolve );
			}
		}
		resolve();
		return defer.promise( object );
	}
});




var rclass = /[\n\t\r]/g,
	rspace = /\s+/,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea)?$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute,
	nodeHook, boolHook, fixSpecified;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, i, l, elem, className, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}

		if ( (value && typeof value === "string") || value === undefined ) {
			classNames = ( value || "" ).split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 && elem.className ) {
					if ( value ) {
						className = (" " + elem.className + " ").replace( rclass, " " );
						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							className = className.replace(" " + classNames[ c ] + " ", " ");
						}
						elem.className = jQuery.trim( className );

					} else {
						elem.className = "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var self = jQuery(this), val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, i, max, option,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				i = one ? index : 0;
				max = one ? index + 1 : options.length;
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, "" + value );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, l, isBool,
			i = 0;

		if ( value && elem.nodeType === 1 ) {
			attrNames = value.toLowerCase().split( rspace );
			l = attrNames.length;

			for ( ; i < l; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;
					isBool = rboolean.test( name );

					// See #9699 for explanation of this approach (setting first, then removal)
					// Do not do this for boolean attributes (see #10870)
					if ( !isBool ) {
						jQuery.attr( elem, name, "" );
					}
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( isBool && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)
jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true,
		coords: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.nodeValue !== "" : ret.specified ) ?
				ret.nodeValue :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.nodeValue = value + "" );
		}
	};

	// Apply the nodeHook to tabindex
	jQuery.attrHooks.tabindex.set = nodeHook.set;

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = "" + value );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});




var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/,
	rhoverHack = /(?:^|\s)hover(\.\S+)?\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
	quickParse = function( selector ) {
		var quick = rquickIs.exec( selector );
		if ( quick ) {
			//   0  1    2   3
			// [ _, tag, id, class ]
			quick[1] = ( quick[1] || "" ).toLowerCase();
			quick[3] = quick[3] && new RegExp( "(?:^|\\s)" + quick[3] + "(?:\\s|$)" );
		}
		return quick;
	},
	quickIs = function( elem, m ) {
		var attrs = elem.attributes || {};
		return (
			(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&
			(!m[2] || (attrs.id || {}).value === m[2]) &&
			(!m[3] || m[3].test( (attrs[ "class" ] || {}).value ))
		);
	},
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, quick, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				quick: selector && quickParse( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var elemData = jQuery.hasData( elem ) && jQuery._data( elem ),
			t, tns, type, origType, namespaces, origCount,
			j, events, special, handle, eventType, handleObj;

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			handle = elemData.handle;
			if ( handle ) {
				handle.elem = null;
			}

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, [ "events", "handle" ], true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var type = event.type || event,
			namespaces = [],
			cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			old = null;
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old && old === elem.ownerDocument ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = [].slice.call( arguments, 0 ),
			run_all = !event.exclusive && !event.namespace,
			special = jQuery.event.special[ event.type ] || {},
			handlerQueue = [],
			i, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers that should run if there are delegated events
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !(event.button && event.type === "click") ) {

			// Pregenerate a single jQuery object for reuse with .is()
			jqcur = jQuery(this);
			jqcur.context = this.ownerDocument || this;

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

				// Don't process events on disabled elements (#6911, #8165)
				if ( cur.disabled !== true ) {
					selMatch = {};
					matches = [];
					jqcur[0] = cur;
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						sel = handleObj.selector;

						if ( selMatch[ sel ] === undefined ) {
							selMatch[ sel ] = (
								handleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )
							);
						}
						if ( selMatch[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, matches: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)
		if ( event.metaKey === undefined ) {
			event.metaKey = event.ctrlKey;
		}

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady
		},

		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		if ( elem.detachEvent ) {
			elem.detachEvent( "on" + type, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector,
				ret;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !form._submit_attached ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					form._submit_attached = true;
				}
			});
			// return undefined since we don't need an event listener
		},
		
		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
							jQuery.event.simulate( "change", this, event, true );
						}
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !elem._change_attached ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					elem._change_attached = true;
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) { // && selector != null
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			var handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( var type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector, fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] = true;
	}

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});



/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2011, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	expando = "sizcache" + (Math.random() + '').replace('.', ''),
	done = 0,
	toString = Object.prototype.toString,
	hasDuplicate = false,
	baseHasDuplicate = true,
	rBackslash = /\\/g,
	rReturn = /\r\n/g,
	rNonWord = /\W/;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function() {
	baseHasDuplicate = false;
	return 0;
});

var Sizzle = function( selector, context, results, seed ) {
	results = results || [];
	context = context || document;

	var origContext = context;

	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
		return [];
	}

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var m, set, checkSet, extra, ret, cur, pop, i,
		prune = true,
		contextXML = Sizzle.isXML( context ),
		parts = [],
		soFar = selector;

	// Reset the position of the chunker regexp (start from head)
	do {
		chunker.exec( "" );
		m = chunker.exec( soFar );

		if ( m ) {
			soFar = m[3];

			parts.push( m[1] );

			if ( m[2] ) {
				extra = m[3];
				break;
			}
		}
	} while ( m );

	if ( parts.length > 1 && origPOS.exec( selector ) ) {

		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			set = posProcess( parts[0] + parts[1], context, seed );

		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector = parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector += parts.shift();
				}

				set = posProcess( selector, set, seed );
			}
		}

	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

			ret = Sizzle.find( parts.shift(), context, contextXML );
			context = ret.expr ?
				Sizzle.filter( ret.expr, ret.set )[0] :
				ret.set[0];
		}

		if ( context ) {
			ret = seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

			set = ret.expr ?
				Sizzle.filter( ret.expr, ret.set ) :
				ret.set;

			if ( parts.length > 0 ) {
				checkSet = makeArray( set );

			} else {
				prune = false;
			}

			while ( parts.length ) {
				cur = parts.pop();
				pop = cur;

				if ( !Expr.relative[ cur ] ) {
					cur = "";
				} else {
					pop = parts.pop();
				}

				if ( pop == null ) {
					pop = context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}

		} else {
			checkSet = parts = [];
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );

		} else if ( context && context.nodeType === 1 ) {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}

		} else {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}

	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort = function( results ) {
	if ( sortOrder ) {
		hasDuplicate = baseHasDuplicate;
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			for ( var i = 1; i < results.length; i++ ) {
				if ( results[i] === results[ i - 1 ] ) {
					results.splice( i--, 1 );
				}
			}
		}
	}

	return results;
};

Sizzle.matches = function( expr, set ) {
	return Sizzle( expr, null, null, set );
};

Sizzle.matchesSelector = function( node, expr ) {
	return Sizzle( expr, null, null, [node] ).length > 0;
};

Sizzle.find = function( expr, context, isXML ) {
	var set, i, len, match, type, left;

	if ( !expr ) {
		return [];
	}

	for ( i = 0, len = Expr.order.length; i < len; i++ ) {
		type = Expr.order[i];

		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
			left = match[1];
			match.splice( 1, 1 );

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace( rBackslash, "" );
				set = Expr.find[ type ]( match, context, isXML );

				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( "*" ) :
			[];
	}

	return { set: set, expr: expr };
};

Sizzle.filter = function( expr, set, inplace, not ) {
	var match, anyFound,
		type, found, item, filter, left,
		i, pass,
		old = expr,
		result = [],
		curLoop = set,
		isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

	while ( expr && set.length ) {
		for ( type in Expr.filter ) {
			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
				filter = Expr.filter[ type ];
				left = match[1];

				anyFound = false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) === "\\" ) {
					continue;
				}

				if ( curLoop === result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

					if ( !match ) {
						anyFound = found = true;

					} else if ( match === true ) {
						continue;
					}
				}

				if ( match ) {
					for ( i = 0; (item = curLoop[i]) != null; i++ ) {
						if ( item ) {
							found = filter( item, match, i, curLoop );
							pass = not ^ found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;

								} else {
									curLoop[i] = false;
								}

							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr === old ) {
			if ( anyFound == null ) {
				Sizzle.error( expr );

			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Utility function for retreiving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
var getText = Sizzle.getText = function( elem ) {
    var i, node,
		nodeType = elem.nodeType,
		ret = "";

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent || innerText for elements
			if ( typeof elem.textContent === 'string' ) {
				return elem.textContent;
			} else if ( typeof elem.innerText === 'string' ) {
				// Replace IE's carriage returns
				return elem.innerText.replace( rReturn, '' );
			} else {
				// Traverse it's children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
	} else {

		// If no nodeType, this is expected to be an array
		for ( i = 0; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			if ( node.nodeType !== 8 ) {
				ret += getText( node );
			}
		}
	}
	return ret;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],

	match: {
		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
	},

	leftMatch: {},

	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},

	attrHandle: {
		href: function( elem ) {
			return elem.getAttribute( "href" );
		},
		type: function( elem ) {
			return elem.getAttribute( "type" );
		}
	},

	relative: {
		"+": function(checkSet, part){
			var isPartStr = typeof part === "string",
				isTag = isPartStr && !rNonWord.test( part ),
				isPartStrNotTag = isPartStr && !isTag;

			if ( isTag ) {
				part = part.toLowerCase();
			}

			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
				if ( (elem = checkSet[i]) ) {
					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

					checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
						elem || false :
						elem === part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},

		">": function( checkSet, part ) {
			var elem,
				isPartStr = typeof part === "string",
				i = 0,
				l = checkSet.length;

			if ( isPartStr && !rNonWord.test( part ) ) {
				part = part.toLowerCase();

				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
					}
				}

			} else {
				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						checkSet[i] = isPartStr ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},

		"": function(checkSet, part, isXML){
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
		},

		"~": function( checkSet, part, isXML ) {
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
		}
	},

	find: {
		ID: function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		},

		NAME: function( match, context ) {
			if ( typeof context.getElementsByName !== "undefined" ) {
				var ret = [],
					results = context.getElementsByName( match[1] );

				for ( var i = 0, l = results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") === match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length === 0 ? null : ret;
			}
		},

		TAG: function( match, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( match[1] );
			}
		}
	},
	preFilter: {
		CLASS: function( match, curLoop, inplace, result, not, isXML ) {
			match = " " + match[1].replace( rBackslash, "" ) + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}

					} else if ( inplace ) {
						curLoop[i] = false;
					}
				}
			}

			return false;
		},

		ID: function( match ) {
			return match[1].replace( rBackslash, "" );
		},

		TAG: function( match, curLoop ) {
			return match[1].replace( rBackslash, "" ).toLowerCase();
		},

		CHILD: function( match ) {
			if ( match[1] === "nth" ) {
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				match[2] = match[2].replace(/^\+|\s*/g, '');

				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
				var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
					match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are negative
				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}
			else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			// TODO: Move to normal caching system
			match[0] = done++;

			return match;
		},

		ATTR: function( match, curLoop, inplace, result, not, isXML ) {
			var name = match[1] = match[1].replace( rBackslash, "" );

			if ( !isXML && Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			// Handle if an un-quoted value was used
			match[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},

		PSEUDO: function( match, curLoop, inplace, result, not ) {
			if ( match[1] === "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
					match[3] = Sizzle(match[3], null, null, curLoop);

				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

					if ( !inplace ) {
						result.push.apply( result, ret );
					}

					return false;
				}

			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
				return true;
			}

			return match;
		},

		POS: function( match ) {
			match.unshift( true );

			return match;
		}
	},

	filters: {
		enabled: function( elem ) {
			return elem.disabled === false && elem.type !== "hidden";
		},

		disabled: function( elem ) {
			return elem.disabled === true;
		},

		checked: function( elem ) {
			return elem.checked === true;
		},

		selected: function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		parent: function( elem ) {
			return !!elem.firstChild;
		},

		empty: function( elem ) {
			return !elem.firstChild;
		},

		has: function( elem, i, match ) {
			return !!Sizzle( match[3], elem ).length;
		},

		header: function( elem ) {
			return (/h\d/i).test( elem.nodeName );
		},

		text: function( elem ) {
			var attr = elem.getAttribute( "type" ), type = elem.type;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );
		},

		radio: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;
		},

		checkbox: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;
		},

		file: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "file" === elem.type;
		},

		password: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "password" === elem.type;
		},

		submit: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "submit" === elem.type;
		},

		image: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "image" === elem.type;
		},

		reset: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "reset" === elem.type;
		},

		button: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && "button" === elem.type || name === "button";
		},

		input: function( elem ) {
			return (/input|select|textarea|button/i).test( elem.nodeName );
		},

		focus: function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		}
	},
	setFilters: {
		first: function( elem, i ) {
			return i === 0;
		},

		last: function( elem, i, match, array ) {
			return i === array.length - 1;
		},

		even: function( elem, i ) {
			return i % 2 === 0;
		},

		odd: function( elem, i ) {
			return i % 2 === 1;
		},

		lt: function( elem, i, match ) {
			return i < match[3] - 0;
		},

		gt: function( elem, i, match ) {
			return i > match[3] - 0;
		},

		nth: function( elem, i, match ) {
			return match[3] - 0 === i;
		},

		eq: function( elem, i, match ) {
			return match[3] - 0 === i;
		}
	},
	filter: {
		PSEUDO: function( elem, match, i, array ) {
			var name = match[1],
				filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );

			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || getText([ elem ]) || "").indexOf(match[3]) >= 0;

			} else if ( name === "not" ) {
				var not = match[3];

				for ( var j = 0, l = not.length; j < l; j++ ) {
					if ( not[j] === elem ) {
						return false;
					}
				}

				return true;

			} else {
				Sizzle.error( name );
			}
		},

		CHILD: function( elem, match ) {
			var first, last,
				doneName, parent, cache,
				count, diff,
				type = match[1],
				node = elem;

			switch ( type ) {
				case "only":
				case "first":
					while ( (node = node.previousSibling) ) {
						if ( node.nodeType === 1 ) {
							return false;
						}
					}

					if ( type === "first" ) {
						return true;
					}

					node = elem;

					/* falls through */
				case "last":
					while ( (node = node.nextSibling) ) {
						if ( node.nodeType === 1 ) {
							return false;
						}
					}

					return true;

				case "nth":
					first = match[2];
					last = match[3];

					if ( first === 1 && last === 0 ) {
						return true;
					}

					doneName = match[0];
					parent = elem.parentNode;

					if ( parent && (parent[ expando ] !== doneName || !elem.nodeIndex) ) {
						count = 0;

						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.nodeIndex = ++count;
							}
						}

						parent[ expando ] = doneName;
					}

					diff = elem.nodeIndex - last;

					if ( first === 0 ) {
						return diff === 0;

					} else {
						return ( diff % first === 0 && diff / first >= 0 );
					}
			}
		},

		ID: function( elem, match ) {
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},

		TAG: function( elem, match ) {
			return (match === "*" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;
		},

		CLASS: function( elem, match ) {
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},

		ATTR: function( elem, match ) {
			var name = match[1],
				result = Sizzle.attr ?
					Sizzle.attr( elem, name ) :
					Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] != null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value = result + "",
				type = match[2],
				check = match[4];

			return result == null ?
				type === "!=" :
				!type && Sizzle.attr ?
				result != null :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!check ?
				value && result !== false :
				type === "!=" ?
				value !== check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},

		POS: function( elem, match, i, array ) {
			var name = match[2],
				filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS = Expr.match.POS,
	fescape = function(all, num){
		return "\\" + (num - 0 + 1);
	};

for ( var type in Expr.match ) {
	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
}
// Expose origPOS
// "global" as in regardless of relation to brackets/parens
Expr.match.globalPOS = origPOS;

var makeArray = function( array, results ) {
	array = Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}

	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

// Provide a fallback method if it does not work
} catch( e ) {
	makeArray = function( array, results ) {
		var i = 0,
			ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );

		} else {
			if ( typeof array.length === "number" ) {
				for ( var l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}

			} else {
				for ( ; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder, siblingCheck;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			return a.compareDocumentPosition ? -1 : 1;
		}

		return a.compareDocumentPosition(b) & 4 ? -1 : 1;
	};

} else {
	sortOrder = function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

	siblingCheck = function( a, b, ret ) {
		if ( a === b ) {
			return ret;
		}

		var cur = a.nextSibling;

		while ( cur ) {
			if ( cur === b ) {
				return -1;
			}

			cur = cur.nextSibling;
		}

		return 1;
	};
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form = document.createElement("div"),
		id = "script" + (new Date()).getTime(),
		root = document.documentElement;

	form.innerHTML = "<a name='" + id + "'/>";

	// Inject it into the root element, check its status, and remove it quickly
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID = function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);

				return m ?
					m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
						[m] :
						undefined :
					[];
			}
		};

		Expr.filter.ID = function( elem, match ) {
			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );

	// release memory in IE
	root = form = null;
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function( match, context ) {
			var results = context.getElementsByTagName( match[1] );

			// Filter out possible comments
			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML = "<a href='#'></a>";

	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
			div.firstChild.getAttribute("href") !== "#" ) {

		Expr.attrHandle.href = function( elem ) {
			return elem.getAttribute( "href", 2 );
		};
	}

	// release memory in IE
	div = null;
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle = Sizzle,
			div = document.createElement("div"),
			id = "__sizzle__";

		div.innerHTML = "<p class='TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
			return;
		}

		Sizzle = function( query, context, extra, seed ) {
			context = context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && !Sizzle.isXML(context) ) {
				// See if we find a selector to speed up
				var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );

				if ( match && (context.nodeType === 1 || context.nodeType === 9) ) {
					// Speed-up: Sizzle("TAG")
					if ( match[1] ) {
						return makeArray( context.getElementsByTagName( query ), extra );

					// Speed-up: Sizzle(".CLASS")
					} else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {
						return makeArray( context.getElementsByClassName( match[2] ), extra );
					}
				}

				if ( context.nodeType === 9 ) {
					// Speed-up: Sizzle("body")
					// The body element only exists once, optimize finding it
					if ( query === "body" && context.body ) {
						return makeArray( [ context.body ], extra );

					// Speed-up: Sizzle("#ID")
					} else if ( match && match[3] ) {
						var elem = context.getElementById( match[3] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Handle the case where IE and Opera return items
							// by name instead of ID
							if ( elem.id === match[3] ) {
								return makeArray( [ elem ], extra );
							}

						} else {
							return makeArray( [], extra );
						}
					}

					try {
						return makeArray( context.querySelectorAll(query), extra );
					} catch(qsaError) {}

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					var oldContext = context,
						old = context.getAttribute( "id" ),
						nid = old || id,
						hasParent = context.parentNode,
						relativeHierarchySelector = /^\s*[+~]/.test( query );

					if ( !old ) {
						context.setAttribute( "id", nid );
					} else {
						nid = nid.replace( /'/g, "\\$&" );
					}
					if ( relativeHierarchySelector && hasParent ) {
						context = context.parentNode;
					}

					try {
						if ( !relativeHierarchySelector || hasParent ) {
							return makeArray( context.querySelectorAll( "[id='" + nid + "'] " + query ), extra );
						}

					} catch(pseudoError) {
					} finally {
						if ( !old ) {
							oldContext.removeAttribute( "id" );
						}
					}
				}
			}

			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] = oldSizzle[ prop ];
		}

		// release memory in IE
		div = null;
	})();
}

(function(){
	var html = document.documentElement,
		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;

	if ( matches ) {
		// Check to see if it's possible to do matchesSelector
		// on a disconnected node (IE 9 fails this)
		var disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),
			pseudoWorks = false;

		try {
			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( document.documentElement, "[test!='']:sizzle" );

		} catch( pseudoError ) {
			pseudoWorks = true;
		}

		Sizzle.matchesSelector = function( node, expr ) {
			// Make sure that attribute selectors are quoted
			expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

			if ( !Sizzle.isXML( node ) ) {
				try {
					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
						var ret = matches.call( node, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || !disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9, so check for that
								node.document && node.document.nodeType !== 11 ) {
							return ret;
						}
					}
				} catch(e) {}
			}

			return Sizzle(expr, null, null, [node]).length > 0;
		};
	}
})();

(function(){
	var div = document.createElement("div");

	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className = "e";

	if ( div.getElementsByClassName("e").length === 1 ) {
		return;
	}

	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function( match, context, isXML ) {
		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	// release memory in IE
	div = null;
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;

			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 && !isXML ){
					elem[ expando ] = doneName;
					elem.sizset = i;
				}

				if ( elem.nodeName.toLowerCase() === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;

			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML ) {
						elem[ expando ] = doneName;
						elem.sizset = i;
					}

					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

if ( document.documentElement.contains ) {
	Sizzle.contains = function( a, b ) {
		return a !== b && (a.contains ? a.contains(b) : true);
	};

} else if ( document.documentElement.compareDocumentPosition ) {
	Sizzle.contains = function( a, b ) {
		return !!(a.compareDocumentPosition(b) & 16);
	};

} else {
	Sizzle.contains = function() {
		return false;
	};
}

Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

var posProcess = function( selector, context, seed ) {
	var match,
		tmpSet = [],
		later = "",
		root = context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
		later += match[0];
		selector = selector.replace( Expr.match.PSEUDO, "" );
	}

	selector = Expr.relative[selector] ? selector + "*" : selector;

	for ( var i = 0, l = root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet, seed );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
Sizzle.selectors.attrMap = {};
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})();


var runtil = /Until$/,
	rparentsprev = /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector = /,/,
	isSimple = /^.[^:#\[\.,]*$/,
	slice = Array.prototype.slice,
	POS = jQuery.expr.match.globalPOS,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var self = this,
			i, l;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		var ret = this.pushStack( "", "find", selector ),
			length, n, r;

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets = jQuery( target );
		return this.filter(function() {
			for ( var i = 0, l = targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && (
			typeof selector === "string" ?
				// If this is a positional selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				POS.test( selector ) ?
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var ret = [], i, l, cur = this[0];

		// Array (deprecated as of jQuery 1.7)
		if ( jQuery.isArray( selectors ) ) {
			var level = 1;

			while ( cur && cur.ownerDocument && cur !== context ) {
				for ( i = 0; i < selectors.length; i++ ) {

					if ( jQuery( cur ).is( selectors[ i ] ) ) {
						ret.push({ selector: selectors[ i ], elem: cur, level: level });
					}
				}

				cur = cur.parentNode;
				level++;
			}

			return ret;
		}

		// String
		var pos = POS.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( i = 0, l = this.length; i < l; i++ ) {
			cur = this[i];

			while ( cur ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;

				} else {
					cur = cur.parentNode;
					if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {
						break;
					}
				}
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result = result || 1;
		var num = 0;

		for ( ; cur; cur = cur[dir] ) {
			if ( cur.nodeType === 1 && ++num === result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}




function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set = this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery.clean(arguments) );
			return set;
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					null;
			}


			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( elem.getElementsByTagName( "*" ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.length ?
				this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
				this;
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, fragment, parent,
			value = args[0],
			scripts = [];

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			parent = value && value.parentNode;

			// If we're in a fragment, just use that instead of building a new one
			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
				results = { fragment: parent };

			} else {
				results = jQuery.buildFragment( args, this, scripts );
			}

			fragment = results.fragment;

			if ( fragment.childNodes.length === 1 ) {
				first = fragment = fragment.firstChild;
			} else {
				first = fragment.firstChild;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				for ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						// Make sure that we do not leak memory by inadvertently discarding
						// the original fragment (which might have attached data) instead of
						// using it; in addition, use the original fragment object for the last
						// item instead of first because it can end up being emptied incorrectly
						// in certain situations (Bug #8070).
						// Fragments from the fragment cache must always be cloned and never used
						// in place.
						results.cacheable || ( l > 1 && i < lastIndex ) ?
							jQuery.clone( fragment, true, true ) :
							fragment
					);
				}
			}

			if ( scripts.length ) {
				jQuery.each( scripts, function( i, elem ) {
					if ( elem.src ) {
						jQuery.ajax({
							type: "GET",
							global: false,
							url: elem.src,
							async: false,
							dataType: "script"
						});
					} else {
						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );
					}

					if ( elem.parentNode ) {
						elem.parentNode.removeChild( elem );
					}
				});
			}
		}

		return this;
	}
});

function root( elem, cur ) {
	return jQuery.nodeName(elem, "table") ?
		(elem.getElementsByTagName("tbody")[0] ||
		elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
		elem;
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 fail to clone children inside object elements that use
	// the proprietary classid attribute value (rather than the type
	// attribute) to identify the type of content to display
	if ( nodeName === "object" ) {
		dest.outerHTML = src.outerHTML;

	} else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set
		if ( src.checked ) {
			dest.defaultChecked = dest.checked = src.checked;
		}

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;

	// IE blanks contents when cloning scripts
	} else if ( nodeName === "script" && dest.text !== src.text ) {
		dest.text = src.text;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );

	// Clear flags for bubbling special change/submit events, they must
	// be reattached when the newly cloned events are first activated
	dest.removeAttribute( "_submit_attached" );
	dest.removeAttribute( "_change_attached" );
}

jQuery.buildFragment = function( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults, doc,
	first = args[ 0 ];

	// nodes may contain either an explicit document object,
	// a jQuery collection or context object.
	// If nodes[0] contains a valid object to assign to doc
	if ( nodes && nodes[0] ) {
		doc = nodes[0].ownerDocument || nodes[0];
	}

	// Ensure that an attr object doesn't incorrectly stand in as a document object
	// Chrome and Firefox seem to allow this to occur and will throw exception
	// Fixes #8950
	if ( !doc.createDocumentFragment ) {
		doc = document;
	}

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && doc === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		cacheable = true;

		cacheresults = jQuery.fragments[ first ];
		if ( cacheresults && cacheresults !== 1 ) {
			fragment = cacheresults;
		}
	}

	if ( !fragment ) {
		fragment = doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ first ] = cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var ret = [],
			insert = jQuery( selector ),
			parent = this.length === 1 && this[0].parentNode;

		if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
			insert[ original ]( this[0] );
			return this;

		} else {
			for ( var i = 0, l = insert.length; i < l; i++ ) {
				var elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( elem.type === "checkbox" || elem.type === "radio" ) {
		elem.defaultChecked = elem.checked;
	}
}
// Finds all inputs and passes them to fixDefaultChecked
function findInputs( elem ) {
	var nodeName = ( elem.nodeName || "" ).toLowerCase();
	if ( nodeName === "input" ) {
		fixDefaultChecked( elem );
	// Skip scripts, get other children
	} else if ( nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined" ) {
		jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
	}
}

// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js
function shimCloneNode( elem ) {
	var div = document.createElement( "div" );
	safeFragment.appendChild( div );

	div.innerHTML = elem.outerHTML;
	return div.firstChild;
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			// IE<=8 does not properly clone detached, unknown element nodes
			clone = jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ?
				elem.cloneNode( true ) :
				shimCloneNode( elem );

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var checkScriptType, script, j,
				ret = [];

		context = context || document;

		// !context.createElement fails in IE with an error but returns typeof 'object'
		if ( typeof context.createElement === "undefined" ) {
			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
		}

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Trim whitespace, otherwise indexOf won't work as expected
					var tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase(),
						wrap = wrapMap[ tag ] || wrapMap._default,
						depth = wrap[0],
						div = context.createElement("div"),
						safeChildNodes = safeFragment.childNodes,
						remove;

					// Append wrapper element to unknown element safe doc fragment
					if ( context === document ) {
						// Use the fragment we've already created for this document
						safeFragment.appendChild( div );
					} else {
						// Use a fragment created with the owner document
						createSafeFragment( context ).appendChild( div );
					}

					// Go to html and back, then peel off extra wrappers
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						var hasBody = rtbody.test(elem),
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;

					// Clear elements from DocumentFragment (safeFragment or otherwise)
					// to avoid hoarding elements. Fixes #11356
					if ( div ) {
						div.parentNode.removeChild( div );

						// Guard against -1 index exceptions in FF3.6
						if ( safeChildNodes.length > 0 ) {
							remove = safeChildNodes[ safeChildNodes.length - 1 ];

							if ( remove && remove.parentNode ) {
								remove.parentNode.removeChild( remove );
							}
						}
					}
				}
			}

			// Resets defaultChecked for any radios and checkboxes
			// about to be appended to the DOM in IE 6/7 (#8060)
			var len;
			if ( !jQuery.support.appendChecked ) {
				if ( elem[0] && typeof (len = elem.length) === "number" ) {
					for ( j = 0; j < len; j++ ) {
						findInputs( elem[j] );
					}
				} else {
					findInputs( elem );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret = jQuery.merge( ret, elem );
			}
		}

		if ( fragment ) {
			checkScriptType = function( elem ) {
				return !elem.type || rscriptType.test( elem.type );
			};
			for ( i = 0; ret[i]; i++ ) {
				script = ret[i];
				if ( scripts && jQuery.nodeName( script, "script" ) && (!script.type || rscriptType.test( script.type )) ) {
					scripts.push( script.parentNode ? script.parentNode.removeChild( script ) : script );

				} else {
					if ( script.nodeType === 1 ) {
						var jsTags = jQuery.grep( script.getElementsByTagName( "script" ), checkScriptType );

						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
					}
					fragment.appendChild( script );
				}
			}
		}

		return ret;
	},

	cleanData: function( elems ) {
		var data, id,
			cache = jQuery.cache,
			special = jQuery.event.special,
			deleteExpando = jQuery.support.deleteExpando;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
				continue;
			}

			id = elem[ jQuery.expando ];

			if ( id ) {
				data = cache[ id ];

				if ( data && data.events ) {
					for ( var type in data.events ) {
						if ( special[ type ] ) {
							jQuery.event.remove( elem, type );

						// This is a shortcut to avoid jQuery.event.remove's overhead
						} else {
							jQuery.removeEvent( elem, type, data.handle );
						}
					}

					// Null the DOM reference to avoid IE6/7/8 leak (#7054)
					if ( data.handle ) {
						data.handle.elem = null;
					}
				}

				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else if ( elem.removeAttribute ) {
					elem.removeAttribute( jQuery.expando );
				}

				delete cache[ id ];
			}
		}
	}
});




var ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	// fixed for IE9, see #8346
	rupper = /([A-Z]|^ms)/g,
	rnum = /^[\-+]?(?:\d*\.)?\d+$/i,
	rnumnonpx = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,
	rrelNum = /^([\-+])=([\-+.\de]+)/,
	rmargin = /^margin/,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },

	// order is important!
	cssExpand = [ "Top", "Right", "Bottom", "Left" ],

	curCSS,

	getComputedStyle,
	currentStyle;

jQuery.fn.css = function( name, value ) {
	return jQuery.access( this, function( elem, name, value ) {
		return value !== undefined ?
			jQuery.style( elem, name, value ) :
			jQuery.css( elem, name );
	}, name, value, arguments.length > 1 );
};

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;

				} else {
					return elem.style.opacity;
				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, origName = jQuery.camelCase( name ),
			style = elem.style, hooks = jQuery.cssHooks[ origName ];

		name = jQuery.cssProps[ origName ] || origName;

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra ) {
		var ret, hooks;

		// Make sure that we're working with the right name
		name = jQuery.camelCase( name );
		hooks = jQuery.cssHooks[ name ];
		name = jQuery.cssProps[ name ] || name;

		// cssFloat needs a special treatment
		if ( name === "cssFloat" ) {
			name = "float";
		}

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
			return ret;

		// Otherwise, if a way to get the computed value exists, use that
		} else if ( curCSS ) {
			return curCSS( elem, name );
		}
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var old = {},
			ret, name;

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

// DEPRECATED in 1.3, Use jQuery.css() instead
jQuery.curCSS = jQuery.css;

if ( document.defaultView && document.defaultView.getComputedStyle ) {
	getComputedStyle = function( elem, name ) {
		var ret, defaultView, computedStyle, width,
			style = elem.style;

		name = name.replace( rupper, "-$1" ).toLowerCase();

		if ( (defaultView = elem.ownerDocument.defaultView) &&
				(computedStyle = defaultView.getComputedStyle( elem, null )) ) {

			ret = computedStyle.getPropertyValue( name );
			if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
				ret = jQuery.style( elem, name );
			}
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// WebKit uses "computed value (percentage if specified)" instead of "used value" for margins
		// which is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( !jQuery.support.pixelMargin && computedStyle && rmargin.test( name ) && rnumnonpx.test( ret ) ) {
			width = style.width;
			style.width = ret;
			ret = computedStyle.width;
			style.width = width;
		}

		return ret;
	};
}

if ( document.documentElement.currentStyle ) {
	currentStyle = function( elem, name ) {
		var left, rsLeft, uncomputed,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && (uncomputed = style[ name ]) ) {
			ret = uncomputed;
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		if ( rnumnonpx.test( ret ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

curCSS = getComputedStyle || currentStyle;

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		i = name === "width" ? 1 : 0,
		len = 4;

	if ( val > 0 ) {
		if ( extra !== "border" ) {
			for ( ; i < len; i += 2 ) {
				if ( !extra ) {
					val -= parseFloat( jQuery.css( elem, "padding" + cssExpand[ i ] ) ) || 0;
				}
				if ( extra === "margin" ) {
					val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ] ) ) || 0;
				} else {
					val -= parseFloat( jQuery.css( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
				}
			}
		}

		return val + "px";
	}

	// Fall back to computed then uncomputed css if necessary
	val = curCSS( elem, name );
	if ( val < 0 || val == null ) {
		val = elem.style[ name ];
	}

	// Computed unit is not pixels. Stop here and return.
	if ( rnumnonpx.test(val) ) {
		return val;
	}

	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Add padding, border, margin
	if ( extra ) {
		for ( ; i < len; i += 2 ) {
			val += parseFloat( jQuery.css( elem, "padding" + cssExpand[ i ] ) ) || 0;
			if ( extra !== "padding" ) {
				val += parseFloat( jQuery.css( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
			if ( extra === "margin" ) {
				val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ]) ) || 0;
			}
		}
	}

	return val + "px";
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				if ( elem.offsetWidth !== 0 ) {
					return getWidthOrHeight( elem, name, extra );
				} else {
					return jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					});
				}
			}
		},

		set: function( elem, value ) {
			return rnum.test( value ) ?
				value + "px" :
				value;
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( parseFloat( RegExp.$1 ) / 100 ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery(function() {
	// This hook cannot be added until DOM ready because the support test
	// for it is not run until after DOM ready
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				return jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						return curCSS( elem, "margin-right" );
					} else {
						return elem.style.marginRight;
					}
				});
			}
		};
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		var width = elem.offsetWidth,
			height = elem.offsetHeight;

		return ( width === 0 && height === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {

	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i,

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ],
				expanded = {};

			for ( i = 0; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};
});




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rselectTextarea = /^(?:select|textarea)/i,
	rspacesAjax = /\s+/,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Document location
	ajaxLocation,

	// Document location segments
	ajaxLocParts,

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		if ( jQuery.isFunction( func ) ) {
			var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),
				i = 0,
				length = dataTypes.length,
				dataType,
				list,
				placeBefore;

			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters ),
		selection;

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.extend({
	load: function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off = url.indexOf( " " );
		if ( off >= 0 ) {
			var selector = url.slice( off, url.length );
			url = url.slice( 0, off );
		}

		// Default to a GET request
		var type = "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback = params;
				params = undefined;

			// Otherwise, build a param string
			} else if ( typeof params === "object" ) {
				params = jQuery.param( params, jQuery.ajaxSettings.traditional );
				type = "POST";
			}
		}

		var self = this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			// Complete callback (responseText is used internally)
			complete: function( jqXHR, status, responseText ) {
				// Store the response as specified by the jqXHR object
				responseText = jqXHR.responseText;
				// If successful, inject the HTML into all the matched elements
				if ( jqXHR.isResolved() ) {
					// #4825: Get the actual response in case
					// a dataFilter is present in ajaxSettings
					jqXHR.done(function( r ) {
						responseText = r;
					});
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div>")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						responseText );
				}

				if ( callback ) {
					self.each( callback, [ responseText, status, jqXHR ] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},

	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// ifModified key
			ifModifiedKey,
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// The jqXHR state
			state = 0,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || "abort";
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			var isSuccess,
				success,
				error,
				statusText = nativeStatusText,
				response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,
				lastModified,
				etag;

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					if ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {
						jQuery.lastModified[ ifModifiedKey ] = lastModified;
					}
					if ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {
						jQuery.etag[ ifModifiedKey ] = etag;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					try {
						success = ajaxConvert( s, response );
						statusText = "success";
						isSuccess = true;
					} catch(e) {
						// We have a parsererror
						statusText = "parsererror";
						error = e;
					}
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = "" + ( nativeStatusText || statusText );

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.then( tmp, tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );

		// Determine if a cross-domain request is in order
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return false;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already
				jqXHR.abort();
				return false;

		}

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : value;
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	}
});

function buildParams( prefix, obj, traditional, add ) {
	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( var name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// This is still on the jQuery object... for now
// Want to move this to jQuery.ajax some day
jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields,
		ct,
		type,
		finalDataType,
		firstDataType;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	var dataTypes = s.dataTypes,
		converters = {},
		i,
		key,
		length = dataTypes.length,
		tmp,
		// Current and previous dataTypes
		current = dataTypes[ 0 ],
		prev,
		// Conversion expression
		conversion,
		// Conversion function
		conv,
		// Conversion functions (transitive conversion)
		conv1,
		conv2;

	// For each dataType in the chain
	for ( i = 1; i < length; i++ ) {

		// Create converters map
		// with lowercased keys
		if ( i === 1 ) {
			for ( key in s.converters ) {
				if ( typeof key === "string" ) {
					converters[ key.toLowerCase() ] = s.converters[ key ];
				}
			}
		}

		// Get the dataTypes
		prev = current;
		current = dataTypes[ i ];

		// If current is auto dataType, update it to prev
		if ( current === "*" ) {
			current = prev;
		// If no auto and dataTypes are actually different
		} else if ( prev !== "*" && prev !== current ) {

			// Get the converter
			conversion = prev + " " + current;
			conv = converters[ conversion ] || converters[ "* " + current ];

			// If there is no direct converter, search transitively
			if ( !conv ) {
				conv2 = undefined;
				for ( conv1 in converters ) {
					tmp = conv1.split( " " );
					if ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {
						conv2 = converters[ tmp[1] + " " + current ];
						if ( conv2 ) {
							conv1 = converters[ conv1 ];
							if ( conv1 === true ) {
								conv = conv2;
							} else if ( conv2 === true ) {
								conv = conv1;
							}
							break;
						}
					}
				}
			}
			// If we found no converter, dispatch an error
			if ( !( conv || conv2 ) ) {
				jQuery.error( "No conversion from " + conversion.replace(" "," to ") );
			}
			// If found converter is not an equivalence
			if ( conv !== true ) {
				// Convert with 1 or 2 converters accordingly
				response = conv ? conv( response ) : conv2( conv1(response) );
			}
		}
	}
	return response;
}




var jsc = jQuery.now(),
	jsre = /(\=)\?(&|$)|\?\?/i;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		return jQuery.expando + "_" + ( jsc++ );
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var inspectData = ( typeof s.data === "string" ) && /^application\/x\-www\-form\-urlencoded/.test( s.contentType );

	if ( s.dataTypes[ 0 ] === "jsonp" ||
		s.jsonp !== false && ( jsre.test( s.url ) ||
				inspectData && jsre.test( s.data ) ) ) {

		var responseContainer,
			jsonpCallback = s.jsonpCallback =
				jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,
			previous = window[ jsonpCallback ],
			url = s.url,
			data = s.data,
			replace = "$1" + jsonpCallback + "$2";

		if ( s.jsonp !== false ) {
			url = url.replace( jsre, replace );
			if ( s.url === url ) {
				if ( inspectData ) {
					data = data.replace( jsre, replace );
				}
				if ( s.data === data ) {
					// Add callback manually
					url += (/\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;
				}
			}
		}

		s.url = url;
		s.data = data;

		// Install callback
		window[ jsonpCallback ] = function( response ) {
			responseContainer = [ response ];
		};

		// Clean-up function
		jqXHR.always(function() {
			// Set callback back to previous value
			window[ jsonpCallback ] = previous;
			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( previous ) ) {
				window[ jsonpCallback ]( responseContainer[ 0 ] );
			}
		});

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( jsonpCallback + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Delegate to script
		return "script";
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});




var // #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0,
	xhrCallbacks;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var xhr = s.xhr(),
						handle,
						i;

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occured
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									try {
										responses.text = xhr.responseText;
									} catch( _ ) {
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					// if we're in sync mode or it's in cache
					// and has been retrieved directly (IE6 & IE7)
					// we need to manually fire the callback
					if ( !s.async || xhr.readyState === 4 ) {
						callback();
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}




var elemdisplay = {},
	iframe, iframeDoc,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
	timerId,
	fxAttrs = [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
		// opacity animations
		[ "opacity" ]
	],
	fxNow;

jQuery.fn.extend({
	show: function( speed, easing, callback ) {
		var elem, display;

		if ( speed || speed === 0 ) {
			return this.animate( genFx("show", 3), speed, easing, callback );

		} else {
			for ( var i = 0, j = this.length; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					// Reset the inline display of this element to learn if it is
					// being hidden by cascaded rules or not
					if ( !jQuery._data(elem, "olddisplay") && display === "none" ) {
						display = elem.style.display = "";
					}

					// Set elements which have been overridden with display: none
					// in a stylesheet to whatever the default browser style is
					// for such an element
					if ( (display === "" && jQuery.css(elem, "display") === "none") ||
						!jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
						jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
					}
				}
			}

			// Set the display of most of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					if ( display === "" || display === "none" ) {
						elem.style.display = jQuery._data( elem, "olddisplay" ) || "";
					}
				}
			}

			return this;
		}
	},

	hide: function( speed, easing, callback ) {
		if ( speed || speed === 0 ) {
			return this.animate( genFx("hide", 3), speed, easing, callback);

		} else {
			var elem, display,
				i = 0,
				j = this.length;

			for ( ; i < j; i++ ) {
				elem = this[i];
				if ( elem.style ) {
					display = jQuery.css( elem, "display" );

					if ( display !== "none" && !jQuery._data( elem, "olddisplay" ) ) {
						jQuery._data( elem, "olddisplay", display );
					}
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				if ( this[i].style ) {
					this[i].style.display = "none";
				}
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2, callback ) {
		var bool = typeof fn === "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn == null || bool ) {
			this.each(function() {
				var state = bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2, callback);
		}

		return this;
	},

	fadeTo: function( speed, to, easing, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, easing, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall = jQuery.speed( speed, easing, callback );

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete, [ false ] );
		}

		// Do not change referenced properties as per-property easing will be lost
		prop = jQuery.extend( {}, prop );

		function doAnimation() {
			// XXX 'this' does not always have a nodeName when running the
			// test suite

			if ( optall.queue === false ) {
				jQuery._mark( this );
			}

			var opt = jQuery.extend( {}, optall ),
				isElement = this.nodeType === 1,
				hidden = isElement && jQuery(this).is(":hidden"),
				name, val, p, e, hooks, replace,
				parts, start, end, unit,
				method;

			// will store per property easing and be used to determine when an animation is complete
			opt.animatedProperties = {};

			// first pass over propertys to expand / normalize
			for ( p in prop ) {
				name = jQuery.camelCase( p );
				if ( p !== name ) {
					prop[ name ] = prop[ p ];
					delete prop[ p ];
				}

				if ( ( hooks = jQuery.cssHooks[ name ] ) && "expand" in hooks ) {
					replace = hooks.expand( prop[ name ] );
					delete prop[ name ];

					// not quite $.extend, this wont overwrite keys already present.
					// also - reusing 'p' from above because we have the correct "name"
					for ( p in replace ) {
						if ( ! ( p in prop ) ) {
							prop[ p ] = replace[ p ];
						}
					}
				}
			}

			for ( name in prop ) {
				val = prop[ name ];
				// easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)
				if ( jQuery.isArray( val ) ) {
					opt.animatedProperties[ name ] = val[ 1 ];
					val = prop[ name ] = val[ 0 ];
				} else {
					opt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || 'swing';
				}

				if ( val === "hide" && hidden || val === "show" && !hidden ) {
					return opt.complete.call( this );
				}

				if ( isElement && ( name === "height" || name === "width" ) ) {
					// Make sure that nothing sneaks out
					// Record all 3 overflow attributes because IE does not
					// change the overflow attribute when overflowX and
					// overflowY are set to the same value
					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

					// Set display property to inline-block for height/width
					// animations on inline elements that are having width/height animated
					if ( jQuery.css( this, "display" ) === "inline" &&
							jQuery.css( this, "float" ) === "none" ) {

						// inline-level elements accept inline-block;
						// block-level elements need to be inline with layout
						if ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === "inline" ) {
							this.style.display = "inline-block";

						} else {
							this.style.zoom = 1;
						}
					}
				}
			}

			if ( opt.overflow != null ) {
				this.style.overflow = "hidden";
			}

			for ( p in prop ) {
				e = new jQuery.fx( this, opt, p );
				val = prop[ p ];

				if ( rfxtypes.test( val ) ) {

					// Tracks whether to show or hide based on private
					// data attached to the element
					method = jQuery._data( this, "toggle" + p ) || ( val === "toggle" ? hidden ? "show" : "hide" : 0 );
					if ( method ) {
						jQuery._data( this, "toggle" + p, method === "show" ? "hide" : "show" );
						e[ method ]();
					} else {
						e[ val ]();
					}

				} else {
					parts = rfxnum.exec( val );
					start = e.cur();

					if ( parts ) {
						end = parseFloat( parts[2] );
						unit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );

						// We need to compute starting value
						if ( unit !== "px" ) {
							jQuery.style( this, p, (end || 1) + unit);
							start = ( (end || 1) / e.cur() ) * start;
							jQuery.style( this, p, start + unit);
						}

						// If a +=/-= token was provided, we're doing a relative animation
						if ( parts[1] ) {
							end = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			}

			// For JS strict compliance
			return true;
		}

		return optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},

	stop: function( type, clearQueue, gotoEnd ) {
		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var index,
				hadTimers = false,
				timers = jQuery.timers,
				data = jQuery._data( this );

			// clear marker counters if we know they won't be
			if ( !gotoEnd ) {
				jQuery._unmark( true, this );
			}

			function stopQueue( elem, data, index ) {
				var hooks = data[ index ];
				jQuery.removeData( elem, index, true );
				hooks.stop( gotoEnd );
			}

			if ( type == null ) {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && index.indexOf(".run") === index.length - 4 ) {
						stopQueue( this, data, index );
					}
				}
			} else if ( data[ index = type + ".run" ] && data[ index ].stop ){
				stopQueue( this, data, index );
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					if ( gotoEnd ) {

						// force the next step to be the last
						timers[ index ]( true );
					} else {
						timers[ index ].saveState();
					}
					hadTimers = true;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( !( gotoEnd && hadTimers ) ) {
				jQuery.dequeue( this, type );
			}
		});
	}

});

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout( clearFxNow, 0 );
	return ( fxNow = jQuery.now() );
}

function clearFxNow() {
	fxNow = undefined;
}

// Generate parameters to create a standard animation
function genFx( type, num ) {
	var obj = {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {
		obj[ this ] = type;
	});

	return obj;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx( "show", 1 ),
	slideUp: genFx( "hide", 1 ),
	slideToggle: genFx( "toggle", 1 ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function( noUnmark ) {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			} else if ( noUnmark !== false ) {
				jQuery._unmark( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return ( -Math.cos( p*Math.PI ) / 2 ) + 0.5;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options = options;
		this.elem = elem;
		this.prop = prop;

		options.orig = options.orig || {};
	}

});

jQuery.fx.prototype = {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );
	},

	// Get the current size
	cur: function() {
		if ( this.elem[ this.prop ] != null && (!this.elem.style || this.elem.style[ this.prop ] == null) ) {
			return this.elem[ this.prop ];
		}

		var parsed,
			r = jQuery.css( this.elem, this.prop );
		// Empty strings, null, undefined and "auto" are converted to 0,
		// complex values such as "rotate(1rad)" are returned as is,
		// simple values such as "10px" are parsed to Float.
		return isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		var self = this,
			fx = jQuery.fx;

		this.startTime = fxNow || createFxNow();
		this.end = to;
		this.now = this.start = from;
		this.pos = this.state = 0;
		this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );

		function t( gotoEnd ) {
			return self.step( gotoEnd );
		}

		t.queue = this.options.queue;
		t.elem = this.elem;
		t.saveState = function() {
			if ( jQuery._data( self.elem, "fxshow" + self.prop ) === undefined ) {
				if ( self.options.hide ) {
					jQuery._data( self.elem, "fxshow" + self.prop, self.start );
				} else if ( self.options.show ) {
					jQuery._data( self.elem, "fxshow" + self.prop, self.end );
				}
			}
		};

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			timerId = setInterval( fx.tick, fx.interval );
		}
	},

	// Simple 'show' function
	show: function() {
		var dataShow = jQuery._data( this.elem, "fxshow" + this.prop );

		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );
		this.options.show = true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any flash of content
		if ( dataShow !== undefined ) {
			// This show is picking up where a previous hide or show left off
			this.custom( this.cur(), dataShow );
		} else {
			this.custom( this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur() );
		}

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = jQuery._data( this.elem, "fxshow" + this.prop ) || jQuery.style( this.elem, this.prop );
		this.options.hide = true;

		// Begin the animation
		this.custom( this.cur(), 0 );
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var p, n, complete,
			t = fxNow || createFxNow(),
			done = true,
			elem = this.elem,
			options = this.options;

		if ( gotoEnd || t >= options.duration + this.startTime ) {
			this.now = this.end;
			this.pos = this.state = 1;
			this.update();

			options.animatedProperties[ this.prop ] = true;

			for ( p in options.animatedProperties ) {
				if ( options.animatedProperties[ p ] !== true ) {
					done = false;
				}
			}

			if ( done ) {
				// Reset the overflow
				if ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {

					jQuery.each( [ "", "X", "Y" ], function( index, value ) {
						elem.style[ "overflow" + value ] = options.overflow[ index ];
					});
				}

				// Hide the element if the "hide" operation was done
				if ( options.hide ) {
					jQuery( elem ).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( options.hide || options.show ) {
					for ( p in options.animatedProperties ) {
						jQuery.style( elem, p, options.orig[ p ] );
						jQuery.removeData( elem, "fxshow" + p, true );
						// Toggle data is no longer needed
						jQuery.removeData( elem, "toggle" + p, true );
					}
				}

				// Execute the complete function
				// in the event that the complete function throws an exception
				// we must ensure it won't be called twice. #5684

				complete = options.complete;
				if ( complete ) {

					options.complete = false;
					complete.call( elem );
				}
			}

			return false;

		} else {
			// classical easing cannot be used with an Infinity duration
			if ( options.duration == Infinity ) {
				this.now = t;
			} else {
				n = t - this.startTime;
				this.state = n / options.duration;

				// Perform the easing function, defaults to swing
				this.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );
				this.now = this.start + ( (this.end - this.start) * this.pos );
			}
			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		var timer,
			timers = jQuery.timers,
			i = 0;

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},

	interval: 13,

	stop: function() {
		clearInterval( timerId );
		timerId = null;
	},

	speeds: {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style( fx.elem, "opacity", fx.now );
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
				fx.elem.style[ fx.prop ] = fx.now + fx.unit;
			} else {
				fx.elem[ fx.prop ] = fx.now;
			}
		}
	}
});

// Ensure props that can't be negative don't go there on undershoot easing
jQuery.each( fxAttrs.concat.apply( [], fxAttrs ), function( i, prop ) {
	// exclude marginTop, marginLeft, marginBottom and marginRight from this list
	if ( prop.indexOf( "margin" ) ) {
		jQuery.fx.step[ prop ] = function( fx ) {
			jQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );
		};
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}

// Try to restore the default display value of an element
function defaultDisplay( nodeName ) {

	if ( !elemdisplay[ nodeName ] ) {

		var body = document.body,
			elem = jQuery( "<" + nodeName + ">" ).appendTo( body ),
			display = elem.css( "display" );
		elem.remove();

		// If the simple way fails,
		// get element's real default display by attaching it to a temp iframe
		if ( display === "none" || display === "" ) {
			// No iframe to use yet, so create it
			if ( !iframe ) {
				iframe = document.createElement( "iframe" );
				iframe.frameBorder = iframe.width = iframe.height = 0;
			}

			body.appendChild( iframe );

			// Create a cacheable copy of the iframe document on first call.
			// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
			// document to it; WebKit & Firefox won't allow reusing the iframe document.
			if ( !iframeDoc || !iframe.createElement ) {
				iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
				iframeDoc.write( ( jQuery.support.boxModel ? "<!doctype html>" : "" ) + "<html><body>" );
				iframeDoc.close();
			}

			elem = iframeDoc.createElement( nodeName );

			iframeDoc.body.appendChild( elem );

			display = jQuery.css( elem, "display" );
			body.removeChild( iframe );
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return elemdisplay[ nodeName ];
}




var getOffset,
	rtable = /^t(?:able|d|h)$/i,
	rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
	getOffset = function( elem, doc, docElem, box ) {
		try {
			box = elem.getBoundingClientRect();
		} catch(e) {}

		// Make sure we're not dealing with a disconnected DOM node
		if ( !box || !jQuery.contains( docElem, elem ) ) {
			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
		}

		var body = doc.body,
			win = getWindow( doc ),
			clientTop  = docElem.clientTop  || body.clientTop  || 0,
			clientLeft = docElem.clientLeft || body.clientLeft || 0,
			scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
			scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
			top  = box.top  + scrollTop  - clientTop,
			left = box.left + scrollLeft - clientLeft;

		return { top: top, left: left };
	};

} else {
	getOffset = function( elem, doc, docElem ) {
		var computedStyle,
			offsetParent = elem.offsetParent,
			prevOffsetParent = elem,
			body = doc.body,
			defaultView = doc.defaultView,
			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
			top = elem.offsetTop,
			left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
				break;
			}

			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
			top  -= elem.scrollTop;
			left -= elem.scrollLeft;

			if ( elem === offsetParent ) {
				top  += elem.offsetTop;
				left += elem.offsetLeft;

				if ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent = offsetParent;
				offsetParent = elem.offsetParent;
			}

			if ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
			top  += body.offsetTop;
			left += body.offsetLeft;
		}

		if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
			top  += Math.max( docElem.scrollTop, body.scrollTop );
			left += Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var elem = this[0],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return null;
	}

	if ( elem === doc.body ) {
		return jQuery.offset.bodyOffset( elem );
	}

	return getOffset( elem, doc, doc.documentElement );
};

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					jQuery.support.boxModel && win.document.documentElement[ method ] ||
						win.document.body[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					 top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	var clientProp = "client" + name,
		scrollProp = "scroll" + name,
		offsetProp = "offset" + name;

	// innerHeight and innerWidth
	jQuery.fn[ "inner" + name ] = function() {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, "padding" ) ) :
			this[ type ]() :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn[ "outer" + name ] = function( margin ) {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
			this[ type ]() :
			null;
	};

	jQuery.fn[ type ] = function( value ) {
		return jQuery.access( this, function( elem, type, value ) {
			var doc, docElemProp, orig, ret;

			if ( jQuery.isWindow( elem ) ) {
				// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
				doc = elem.document;
				docElemProp = doc.documentElement[ clientProp ];
				return jQuery.support.boxModel && docElemProp ||
					doc.body && doc.body[ clientProp ] || docElemProp;
			}

			// Get document width or height
			if ( elem.nodeType === 9 ) {
				// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
				doc = elem.documentElement;

				// when a window > document, IE6 reports a offset[Width/Height] > client[Width/Height]
				// so we can't use max, as it'll choose the incorrect offset[Width/Height]
				// instead we use the correct client[Width/Height]
				// support:IE6
				if ( doc[ clientProp ] >= doc[ scrollProp ] ) {
					return doc[ clientProp ];
				}

				return Math.max(
					elem.body[ scrollProp ], doc[ scrollProp ],
					elem.body[ offsetProp ], doc[ offsetProp ]
				);
			}

			// Get width or height on the element
			if ( value === undefined ) {
				orig = jQuery.css( elem, type );
				ret = parseFloat( orig );
				return jQuery.isNumeric( ret ) ? ret : orig;
			}

			// Set the width or height on the element
			jQuery( elem ).css( type, value );
		}, type, value, arguments.length, null );
	};
});




// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}



})( window );
;

//     Underscore.js 1.3.3
//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore is freely distributable under the MIT license.
//     Portions of Underscore are inspired or borrowed from Prototype,
//     Oliver Steele's Functional, and John Resig's Micro-Templating.
//     For all details and documentation:
//     http://documentcloud.github.com/underscore

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `global` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var slice            = ArrayProto.slice,
      unshift          = ArrayProto.unshift,
      toString         = ObjProto.toString,
      hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) { return new wrapper(obj); };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root['_'] = _;
  }

  // Current version.
  _.VERSION = '1.3.3';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, l = obj.length; i < l; i++) {
        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      for (var key in obj) {
        if (_.has(obj, key)) {
          if (iterator.call(context, obj[key], key, obj) === breaker) return;
        }
      }
    }
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results[results.length] = iterator.call(context, value, index, list);
    });
    if (obj.length === +obj.length) results.length = obj.length;
    return results;
  };

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError('Reduce of empty array with no initial value');
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var reversed = _.toArray(obj).reverse();
    if (context && !initial) iterator = _.bind(iterator, context);
    return initial ? _.reduce(reversed, iterator, memo, context) : _.reduce(reversed, iterator);
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, iterator, context) {
    var result;
    any(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    each(obj, function(value, index, list) {
      if (!iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, iterator, context) {
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function(value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function(value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if a given value is included in the array or object using `===`.
  // Aliased as `contains`.
  _.include = _.contains = function(obj, target) {
    var found = false;
    if (obj == null) return found;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    found = any(obj, function(value) {
      return value === target;
    });
    return found;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    return _.map(obj, function(value) {
      return (_.isFunction(method) ? method || value : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, function(value){ return value[key]; });
  };

  // Return the maximum element or (element-based computation).
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.max.apply(Math, obj);
    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {computed : -Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed >= result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.min.apply(Math, obj);
    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {computed : Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Shuffle an array.
  _.shuffle = function(obj) {
    var shuffled = [], rand;
    each(obj, function(value, index, list) {
      rand = Math.floor(Math.random() * (index + 1));
      shuffled[index] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, val, context) {
    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value : value,
        criteria : iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      if (a === void 0) return 1;
      if (b === void 0) return -1;
      return a < b ? -1 : a > b ? 1 : 0;
    }), 'value');
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = function(obj, val) {
    var result = {};
    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };
    each(obj, function(value, index) {
      var key = iterator(value, index);
      (result[key] || (result[key] = [])).push(value);
    });
    return result;
  };

  // Use a comparator function to figure out at what index an object should
  // be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator) {
    iterator || (iterator = _.identity);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >> 1;
      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely convert anything iterable into a real, live array.
  _.toArray = function(obj) {
    if (!obj)                                     return [];
    if (_.isArray(obj))                           return slice.call(obj);
    if (_.isArguments(obj))                       return slice.call(obj);
    if (obj.toArray && _.isFunction(obj.toArray)) return obj.toArray();
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    return _.isArray(obj) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];
  };

  // Returns everything but the last entry of the array. Especcialy useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if ((n != null) && !guard) {
      return slice.call(array, Math.max(array.length - n, 0));
    } else {
      return array[array.length - 1];
    }
  };

  // Returns everything but the first entry of the array. Aliased as `tail`.
  // Especially useful on the arguments object. Passing an **index** will return
  // the rest of the values in the array from that index onward. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = function(array, index, guard) {
    return slice.call(array, (index == null) || guard ? 1 : index);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, function(value){ return !!value; });
  };

  // Return a completely flattened version of an array.
  _.flatten = function(array, shallow) {
    return _.reduce(array, function(memo, value) {
      if (_.isArray(value)) return memo.concat(shallow ? value : _.flatten(value));
      memo[memo.length] = value;
      return memo;
    }, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator) {
    var initial = iterator ? _.map(array, iterator) : array;
    var results = [];
    // The `isSorted` flag is irrelevant if the array only contains two elements.
    if (array.length < 3) isSorted = true;
    _.reduce(initial, function (memo, value, index) {
      if (isSorted ? _.last(memo) !== value || !memo.length : !_.include(memo, value)) {
        memo.push(value);
        results.push(array[index]);
      }
      return memo;
    }, []);
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(_.flatten(arguments, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays. (Aliased as "intersect" for back-compat.)
  _.intersection = _.intersect = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = _.flatten(slice.call(arguments, 1), true);
    return _.filter(array, function(value){ return !_.include(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var args = slice.call(arguments);
    var length = _.max(_.pluck(args, 'length'));
    var results = new Array(length);
    for (var i = 0; i < length; i++) results[i] = _.pluck(args, "" + i);
    return results;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i, l;
    if (isSorted) {
      i = _.sortedIndex(array, item);
      return array[i] === item ? i : -1;
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);
    for (i = 0, l = array.length; i < l; i++) if (i in array && array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item) {
    if (array == null) return -1;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);
    var i = array.length;
    while (i--) if (i in array && array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var len = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(len);

    while(idx < len) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var ctor = function(){};

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Binding with arguments is also known as `curry`.
  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.
  // We check for `func.bind` first, to fail fast when `func` is undefined.
  _.bind = function bind(func, context) {
    var bound, args;
    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError;
    args = slice.call(arguments, 2);
    return bound = function() {
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result) return result;
      return self;
    };
  };

  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length == 0) funcs = _.functions(obj);
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time.
  _.throttle = function(func, wait) {
    var context, args, timeout, throttling, more, result;
    var whenDone = _.debounce(function(){ more = throttling = false; }, wait);
    return function() {
      context = this; args = arguments;
      var later = function() {
        timeout = null;
        if (more) func.apply(context, args);
        whenDone();
      };
      if (!timeout) timeout = setTimeout(later, wait);
      if (throttling) {
        more = true;
      } else {
        result = func.apply(context, args);
      }
      whenDone();
      throttling = true;
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      if (immediate && !timeout) func.apply(context, args);
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      return memo = func.apply(this, arguments);
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return function() {
      var args = [func].concat(slice.call(arguments, 0));
      return wrapper.apply(this, args);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    if (times <= 0) return func();
    return function() {
      if (--times < 1) { return func.apply(this, arguments); }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function(obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    return _.map(obj, _.identity);
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      for (var prop in source) {
        obj[prop] = source[prop];
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var result = {};
    each(_.flatten(slice.call(arguments, 1)), function(key) {
      if (key in obj) result[key] = obj[key];
    });
    return result;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      for (var prop in source) {
        if (obj[prop] == null) obj[prop] = source[prop];
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function.
  function eq(a, b, stack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a._chain) a = a._wrapped;
    if (b._chain) b = b._wrapped;
    // Invoke a custom `isEqual` method if one is provided.
    if (a.isEqual && _.isFunction(a.isEqual)) return a.isEqual(b);
    if (b.isEqual && _.isFunction(b.isEqual)) return b.isEqual(a);
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = stack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (stack[length] == a) return true;
    }
    // Add the first object to the stack of traversed objects.
    stack.push(a);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          // Ensure commutative equality for sparse arrays.
          if (!(result = size in a == size in b && eq(a[size], b[size], stack))) break;
        }
      }
    } else {
      // Objects with different constructors are not equivalent.
      if ('constructor' in a != 'constructor' in b || a.constructor != b.constructor) return false;
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], stack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    stack.pop();
    return result;
  }

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType == 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Is a given variable an arguments object?
  _.isArguments = function(obj) {
    return toString.call(obj) == '[object Arguments]';
  };
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Is a given value a function?
  _.isFunction = function(obj) {
    return toString.call(obj) == '[object Function]';
  };

  // Is a given value a string?
  _.isString = function(obj) {
    return toString.call(obj) == '[object String]';
  };

  // Is a given value a number?
  _.isNumber = function(obj) {
    return toString.call(obj) == '[object Number]';
  };

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return _.isNumber(obj) && isFinite(obj);
  };

  // Is the given value `NaN`?
  _.isNaN = function(obj) {
    // `NaN` is the only value for which `===` is not reflexive.
    return obj !== obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value a date?
  _.isDate = function(obj) {
    return toString.call(obj) == '[object Date]';
  };

  // Is the given value a regular expression?
  _.isRegExp = function(obj) {
    return toString.call(obj) == '[object RegExp]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Has own property?
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  // Run a function **n** times.
  _.times = function (n, iterator, context) {
    for (var i = 0; i < n; i++) iterator.call(context, i);
  };

  // Escape a string for HTML interpolation.
  _.escape = function(string) {
    return (''+string).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;');
  };

  // If the value of the named property is a function then invoke it;
  // otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return null;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object, ensuring that
  // they're correctly added to the OOP wrapper as well.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name){
      addToWrapper(name, _[name] = obj[name]);
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = idCounter++;
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /.^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    '\\': '\\',
    "'": "'",
    'r': '\r',
    'n': '\n',
    't': '\t',
    'u2028': '\u2028',
    'u2029': '\u2029'
  };

  for (var p in escapes) escapes[escapes[p]] = p;
  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var unescaper = /\\(\\|'|r|n|t|u2028|u2029)/g;

  // Within an interpolation, evaluation, or escaping, remove HTML escaping
  // that had been previously added.
  var unescape = function(code) {
    return code.replace(unescaper, function(match, escape) {
      return escapes[escape];
    });
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    settings = _.defaults(settings || {}, _.templateSettings);

    // Compile the template source, taking care to escape characters that
    // cannot be included in a string literal and then unescape them in code
    // blocks.
    var source = "__p+='" + text
      .replace(escaper, function(match) {
        return '\\' + escapes[match];
      })
      .replace(settings.escape || noMatch, function(match, code) {
        return "'+\n_.escape(" + unescape(code) + ")+\n'";
      })
      .replace(settings.interpolate || noMatch, function(match, code) {
        return "'+\n(" + unescape(code) + ")+\n'";
      })
      .replace(settings.evaluate || noMatch, function(match, code) {
        return "';\n" + unescape(code) + "\n;__p+='";
      }) + "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __p='';" +
      "var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" +
      source + "return __p;\n";

    var render = new Function(settings.variable || 'obj', '_', source);
    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for build time
    // precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' +
      source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // The OOP Wrapper
  // ---------------

  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  var wrapper = function(obj) { this._wrapped = obj; };

  // Expose `wrapper.prototype` as `_.prototype`
  _.prototype = wrapper.prototype;

  // Helper function to continue chaining intermediate results.
  var result = function(obj, chain) {
    return chain ? _(obj).chain() : obj;
  };

  // A method to easily add functions to the OOP wrapper.
  var addToWrapper = function(name, func) {
    wrapper.prototype[name] = function() {
      var args = slice.call(arguments);
      unshift.call(args, this._wrapped);
      return result(func.apply(_, args), this._chain);
    };
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    wrapper.prototype[name] = function() {
      var wrapped = this._wrapped;
      method.apply(wrapped, arguments);
      var length = wrapped.length;
      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];
      return result(wrapped, this._chain);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    wrapper.prototype[name] = function() {
      return result(method.apply(this._wrapped, arguments), this._chain);
    };
  });

  // Start chaining a wrapped Underscore object.
  wrapper.prototype.chain = function() {
    this._chain = true;
    return this;
  };

  // Extracts the result from a wrapped and chained object.
  wrapper.prototype.value = function() {
    return this._wrapped;
  };

}).call(this);
;

//     Backbone.js 0.9.2

//     (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(){

  // Initial Setup
  // -------------

  // Save a reference to the global object (`window` in the browser, `global`
  // on the server).
  var root = this;

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to slice/splice.
  var slice = Array.prototype.slice;
  var splice = Array.prototype.splice;

  // The top-level namespace. All public Backbone classes and modules will
  // be attached to this. Exported for both CommonJS and the browser.
  var Backbone;
  if (typeof exports !== 'undefined') {
    Backbone = exports;
  } else {
    Backbone = root.Backbone = {};
  }

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '0.9.2';

  // Require Underscore, if we're on the server, and it's not already present.
  var _ = root._;
  if (!_ && (typeof require !== 'undefined')) _ = require('underscore');

  // For Backbone's purposes, jQuery, Zepto, or Ender owns the `$` variable.
  var $ = root.jQuery || root.Zepto || root.ender;

  // Set the JavaScript library that will be used for DOM manipulation and
  // Ajax calls (a.k.a. the `$` variable). By default Backbone will use: jQuery,
  // Zepto, or Ender; but the `setDomLibrary()` method lets you inject an
  // alternate JavaScript library (or a mock library for testing your views
  // outside of a browser).
  Backbone.setDomLibrary = function(lib) {
    $ = lib;
  };

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Backbone.Events
  // -----------------

  // Regular expression used to split event strings
  var eventSplitter = /\s+/;

  // A module that can be mixed in to *any object* in order to provide it with
  // custom events. You may bind with `on` or remove with `off` callback functions
  // to an event; trigger`-ing an event fires all callbacks in succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {

    // Bind one or more space separated events, `events`, to a `callback`
    // function. Passing `"all"` will bind the callback to all events fired.
    on: function(events, callback, context) {

      var calls, event, node, tail, list;
      if (!callback) return this;
      events = events.split(eventSplitter);
      calls = this._callbacks || (this._callbacks = {});

      // Create an immutable callback list, allowing traversal during
      // modification.  The tail is an empty object that will always be used
      // as the next node.
      while (event = events.shift()) {
        list = calls[event];
        node = list ? list.tail : {};
        node.next = tail = {};
        node.context = context;
        node.callback = callback;
        calls[event] = {tail: tail, next: list ? list.next : node};
      }

      return this;
    },

    // Remove one or many callbacks. If `context` is null, removes all callbacks
    // with that function. If `callback` is null, removes all callbacks for the
    // event. If `events` is null, removes all bound callbacks for all events.
    off: function(events, callback, context) {
      var event, calls, node, tail, cb, ctx;

      // No events, or removing *all* events.
      if (!(calls = this._callbacks)) return;
      if (!(events || callback || context)) {
        delete this._callbacks;
        return this;
      }

      // Loop through the listed events and contexts, splicing them out of the
      // linked list of callbacks if appropriate.
      events = events ? events.split(eventSplitter) : _.keys(calls);
      while (event = events.shift()) {
        node = calls[event];
        delete calls[event];
        if (!node || !(callback || context)) continue;
        // Create a new list, omitting the indicated callbacks.
        tail = node.tail;
        while ((node = node.next) !== tail) {
          cb = node.callback;
          ctx = node.context;
          if ((callback && cb !== callback) || (context && ctx !== context)) {
            this.on(event, cb, ctx);
          }
        }
      }

      return this;
    },

    // Trigger one or many events, firing all bound callbacks. Callbacks are
    // passed the same arguments as `trigger` is, apart from the event name
    // (unless you're listening on `"all"`, which will cause your callback to
    // receive the true name of the event as the first argument).
    trigger: function(events) {
      var event, node, calls, tail, args, all, rest;
      if (!(calls = this._callbacks)) return this;
      all = calls.all;
      events = events.split(eventSplitter);
      rest = slice.call(arguments, 1);

      // For each event, walk through the linked list of callbacks twice,
      // first to trigger the event, then to trigger any `"all"` callbacks.
      while (event = events.shift()) {
        if (node = calls[event]) {
          tail = node.tail;
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, rest);
          }
        }
        if (node = all) {
          tail = node.tail;
          args = [event].concat(rest);
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, args);
          }
        }
      }

      return this;
    }

  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Backbone.Model
  // --------------

  // Create a new model, with defined attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var defaults;
    attributes || (attributes = {});
    if (options && options.parse) attributes = this.parse(attributes);
    if (defaults = getValue(this, 'defaults')) {
      attributes = _.extend({}, defaults, attributes);
    }
    if (options && options.collection) this.collection = options.collection;
    this.attributes = {};
    this._escapedAttributes = {};
    this.cid = _.uniqueId('c');
    this.changed = {};
    this._silent = {};
    this._pending = {};
    this.set(attributes, {silent: true});
    // Reset change tracking.
    this.changed = {};
    this._silent = {};
    this._pending = {};
    this._previousAttributes = _.clone(this.attributes);
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // A hash of attributes that have silently changed since the last time
    // `change` was called.  Will become pending attributes on the next call.
    _silent: null,

    // A hash of attributes that have changed since the last `'change'` event
    // began.
    _pending: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      var html;
      if (html = this._escapedAttributes[attr]) return html;
      var val = this.get(attr);
      return this._escapedAttributes[attr] = _.escape(val == null ? '' : '' + val);
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Set a hash of model attributes on the object, firing `"change"` unless
    // you choose to silence it.
    set: function(key, value, options) {
      var attrs, attr, val;

      // Handle both
      if (_.isObject(key) || key == null) {
        attrs = key;
        options = value;
      } else {
        attrs = {};
        attrs[key] = value;
      }

      // Extract attributes and options.
      options || (options = {});
      if (!attrs) return this;
      if (attrs instanceof Model) attrs = attrs.attributes;
      if (options.unset) for (attr in attrs) attrs[attr] = void 0;

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Check for changes of `id`.
      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];

      var changes = options.changes = {};
      var now = this.attributes;
      var escaped = this._escapedAttributes;
      var prev = this._previousAttributes || {};

      // For each `set` attribute...
      for (attr in attrs) {
        val = attrs[attr];

        // If the new and current value differ, record the change.
        if (!_.isEqual(now[attr], val) || (options.unset && _.has(now, attr))) {
          delete escaped[attr];
          (options.silent ? this._silent : changes)[attr] = true;
        }

        // Update or delete the current value.
        options.unset ? delete now[attr] : now[attr] = val;

        // If the new and previous value differ, record the change.  If not,
        // then remove changes for this attribute.
        if (!_.isEqual(prev[attr], val) || (_.has(now, attr) != _.has(prev, attr))) {
          this.changed[attr] = val;
          if (!options.silent) this._pending[attr] = true;
        } else {
          delete this.changed[attr];
          delete this._pending[attr];
        }
      }

      // Fire the `"change"` events.
      if (!options.silent) this.change(options);
      return this;
    },

    // Remove an attribute from the model, firing `"change"` unless you choose
    // to silence it. `unset` is a noop if the attribute doesn't exist.
    unset: function(attr, options) {
      (options || (options = {})).unset = true;
      return this.set(attr, null, options);
    },

    // Clear all attributes on the model, firing `"change"` unless you choose
    // to silence it.
    clear: function(options) {
      (options || (options = {})).unset = true;
      return this.set(_.clone(this.attributes), options);
    },

    // Fetch the model from the server. If the server's representation of the
    // model differs from its current attributes, they will be overriden,
    // triggering a `"change"` event.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        if (!model.set(model.parse(resp, xhr), options)) return false;
        if (success) success(model, resp);
      };
      options.error = Backbone.wrapError(options.error, model, options);
      return (this.sync || Backbone.sync).call(this, 'read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, value, options) {
      var attrs, current;

      // Handle both `("key", value)` and `({key: value})` -style calls.
      if (_.isObject(key) || key == null) {
        attrs = key;
        options = value;
      } else {
        attrs = {};
        attrs[key] = value;
      }
      options = options ? _.clone(options) : {};

      // If we're "wait"-ing to set changed attributes, validate early.
      if (options.wait) {
        if (!this._validate(attrs, options)) return false;
        current = _.clone(this.attributes);
      }

      // Regular saves `set` attributes before persisting to the server.
      var silentOptions = _.extend({}, options, {silent: true});
      if (attrs && !this.set(attrs, options.wait ? silentOptions : options)) {
        return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        var serverAttrs = model.parse(resp, xhr);
        if (options.wait) {
          delete options.wait;
          serverAttrs = _.extend(attrs || {}, serverAttrs);
        }
        if (!model.set(serverAttrs, options)) return false;
        if (success) {
          success(model, resp);
        } else {
          model.trigger('sync', model, resp, options);
        }
      };

      // Finish configuring and sending the Ajax request.
      options.error = Backbone.wrapError(options.error, model, options);
      var method = this.isNew() ? 'create' : 'update';
      var xhr = (this.sync || Backbone.sync).call(this, method, this, options);
      if (options.wait) this.set(current, silentOptions);
      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;

      var triggerDestroy = function() {
        model.trigger('destroy', model, model.collection, options);
      };

      if (this.isNew()) {
        triggerDestroy();
        return false;
      }

      options.success = function(resp) {
        if (options.wait) triggerDestroy();
        if (success) {
          success(model, resp);
        } else {
          model.trigger('sync', model, resp, options);
        }
      };

      options.error = Backbone.wrapError(options.error, model, options);
      var xhr = (this.sync || Backbone.sync).call(this, 'delete', this, options);
      if (!options.wait) triggerDestroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base = getValue(this, 'urlRoot') || getValue(this.collection, 'url') || urlError();
      if (this.isNew()) return base;
      return base + (base.charAt(base.length - 1) == '/' ? '' : '/') + encodeURIComponent(this.id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, xhr) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return this.id == null;
    },

    // Call this method to manually fire a `"change"` event for this model and
    // a `"change:attribute"` event for each changed attribute.
    // Calling this will cause all objects observing the model to update.
    change: function(options) {
      options || (options = {});
      var changing = this._changing;
      this._changing = true;

      // Silent changes become pending changes.
      for (var attr in this._silent) this._pending[attr] = true;

      // Silent changes are triggered.
      var changes = _.extend({}, options.changes, this._silent);
      this._silent = {};
      for (var attr in changes) {
        this.trigger('change:' + attr, this, this.get(attr), options);
      }
      if (changing) return this;

      // Continue firing `"change"` events while there are pending changes.
      while (!_.isEmpty(this._pending)) {
        this._pending = {};
        this.trigger('change', this, options);
        // Pending and silent changes still remain.
        for (var attr in this.changed) {
          if (this._pending[attr] || this._silent[attr]) continue;
          delete this.changed[attr];
        }
        this._previousAttributes = _.clone(this.attributes);
      }

      this._changing = false;
      return this;
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (!arguments.length) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var val, changed = false, old = this._previousAttributes;
      for (var attr in diff) {
        if (_.isEqual(old[attr], (val = diff[attr]))) continue;
        (changed || (changed = {}))[attr] = val;
      }
      return changed;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (!arguments.length || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Check if the model is currently in a valid state. It's only possible to
    // get into an *invalid* state if you're using silent changes.
    isValid: function() {
      return !this.validate(this.attributes);
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. If a specific `error` callback has
    // been passed, call that instead of firing the general `"error"` event.
    _validate: function(attrs, options) {
      if (options.silent || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validate(attrs, options);
      if (!error) return true;
      if (options && options.error) {
        options.error(this, error, options);
      } else {
        this.trigger('error', this, error, options);
      }
      return false;
    }

  });

  // Backbone.Collection
  // -------------------

  // Provides a standard collection class for our sets of models, ordered
  // or unordered. If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, {silent: true, parse: options.parse});
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model){ return model.toJSON(options); });
    },

    // Add a model, or list of models to the set. Pass **silent** to avoid
    // firing the `add` event for every new model.
    add: function(models, options) {
      var i, index, length, model, cid, id, cids = {}, ids = {}, dups = [];
      options || (options = {});
      models = _.isArray(models) ? models.slice() : [models];

      // Begin by turning bare objects into model references, and preventing
      // invalid models or duplicate models from being added.
      for (i = 0, length = models.length; i < length; i++) {
        if (!(model = models[i] = this._prepareModel(models[i], options))) {
          throw new Error("Can't add an invalid model to a collection");
        }
        cid = model.cid;
        id = model.id;
        if (cids[cid] || this._byCid[cid] || ((id != null) && (ids[id] || this._byId[id]))) {
          dups.push(i);
          continue;
        }
        cids[cid] = ids[id] = model;
      }

      // Remove duplicates.
      i = dups.length;
      while (i--) {
        models.splice(dups[i], 1);
      }

      // Listen to added models' events, and index models for lookup by
      // `id` and by `cid`.
      for (i = 0, length = models.length; i < length; i++) {
        (model = models[i]).on('all', this._onModelEvent, this);
        this._byCid[model.cid] = model;
        if (model.id != null) this._byId[model.id] = model;
      }

      // Insert models into the collection, re-sorting if needed, and triggering
      // `add` events unless silenced.
      this.length += length;
      index = options.at != null ? options.at : this.models.length;
      splice.apply(this.models, [index, 0].concat(models));
      if (this.comparator) this.sort({silent: true});
      if (options.silent) return this;
      for (i = 0, length = this.models.length; i < length; i++) {
        if (!cids[(model = this.models[i]).cid]) continue;
        options.index = i;
        model.trigger('add', model, this, options);
      }
      return this;
    },

    // Remove a model, or a list of models from the set. Pass silent to avoid
    // firing the `remove` event for every model removed.
    remove: function(models, options) {
      var i, l, index, model;
      options || (options = {});
      models = _.isArray(models) ? models.slice() : [models];
      for (i = 0, l = models.length; i < l; i++) {
        model = this.getByCid(models[i]) || this.get(models[i]);
        if (!model) continue;
        delete this._byId[model.id];
        delete this._byCid[model.cid];
        index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;
        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }
        this._removeReference(model);
      }
      return this;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, options);
      return model;
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      this.remove(model, options);
      return model;
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, _.extend({at: 0}, options));
      return model;
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      this.remove(model, options);
      return model;
    },

    // Get a model from the set by id.
    get: function(id) {
      if (id == null) return void 0;
      return this._byId[id.id != null ? id.id : id];
    },

    // Get a model from the set by client id.
    getByCid: function(cid) {
      return cid && this._byCid[cid.cid || cid];
    },

    // Get the model at the given index.
    at: function(index) {
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of `filter`.
    where: function(attrs) {
      if (_.isEmpty(attrs)) return [];
      return this.filter(function(model) {
        for (var key in attrs) {
          if (attrs[key] !== model.get(key)) return false;
        }
        return true;
      });
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      options || (options = {});
      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
      var boundComparator = _.bind(this.comparator, this);
      if (this.comparator.length == 1) {
        this.models = this.sortBy(boundComparator);
      } else {
        this.models.sort(boundComparator);
      }
      if (!options.silent) this.trigger('reset', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return _.map(this.models, function(model){ return model.get(attr); });
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any `add` or `remove` events. Fires `reset` when finished.
    reset: function(models, options) {
      models  || (models = []);
      options || (options = {});
      for (var i = 0, l = this.models.length; i < l; i++) {
        this._removeReference(this.models[i]);
      }
      this._reset();
      this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return this;
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `add: true` is passed, appends the
    // models to the collection instead of resetting.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === undefined) options.parse = true;
      var collection = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        collection[options.add ? 'add' : 'reset'](collection.parse(resp, xhr), options);
        if (success) success(collection, resp);
      };
      options.error = Backbone.wrapError(options.error, collection, options);
      return (this.sync || Backbone.sync).call(this, 'read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      var coll = this;
      options = options ? _.clone(options) : {};
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!options.wait) coll.add(model, options);
      var success = options.success;
      options.success = function(nextModel, resp, xhr) {
        if (options.wait) coll.add(nextModel, options);
        if (success) {
          success(nextModel, resp);
        } else {
          nextModel.trigger('sync', model, resp, options);
        }
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, xhr) {
      return resp;
    },

    // Proxy to _'s chain. Can't be proxied the same way the rest of the
    // underscore methods are proxied because it relies on the underscore
    // constructor.
    chain: function () {
      return _(this.models).chain();
    },

    // Reset all internal state. Called when the collection is reset.
    _reset: function(options) {
      this.length = 0;
      this.models = [];
      this._byId  = {};
      this._byCid = {};
    },

    // Prepare a model or hash of attributes to be added to this collection.
    _prepareModel: function(model, options) {
      options || (options = {});
      if (!(model instanceof Model)) {
        var attrs = model;
        options.collection = this;
        model = new this.model(attrs, options);
        if (!model._validate(model.attributes, options)) model = false;
      } else if (!model.collection) {
        model.collection = this;
      }
      return model;
    },

    // Internal method to remove a model's ties to a collection.
    _removeReference: function(model) {
      if (this == model.collection) {
        delete model.collection;
      }
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if ((event == 'add' || event == 'remove') && collection != this) return;
      if (event == 'destroy') {
        this.remove(model, options);
      }
      if (model && event === 'change:' + model.idAttribute) {
        delete this._byId[model.previous(model.idAttribute)];
        this._byId[model.id] = model;
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',
    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',
    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',
    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',
    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];

  // Mix in each Underscore method as a proxy to `Collection#models`.
  _.each(methods, function(method) {
    Collection.prototype[method] = function() {
      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));
    };
  });

  // Backbone.Router
  // -------------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var namedParam    = /:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[-[\]{}()+?.,\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      Backbone.history || (Backbone.history = new History);
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (!callback) callback = this[name];
      Backbone.history.route(route, _.bind(function(fragment) {
        var args = this._extractParameters(route, fragment);
        callback && callback.apply(this, args);
        this.trigger.apply(this, ['route:' + name].concat(args));
        Backbone.history.trigger('route', this, name, args);
      }, this));
      return this;
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      var routes = [];
      for (var route in this.routes) {
        routes.unshift([route, this.routes[route]]);
      }
      for (var i = 0, l = routes.length; i < l; i++) {
        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(namedParam, '([^\/]+)')
                   .replace(splatParam, '(.*?)');
      return new RegExp('^' + route + '$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted parameters.
    _extractParameters: function(route, fragment) {
      return route.exec(fragment).slice(1);
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on URL fragments. If the
  // browser does not support `onhashchange`, falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    _.bindAll(this, 'checkUrl');
  };

  // Cached regex for cleaning leading hashes and slashes .
  var routeStripper = /^[#\/]/;

  // Cached regex for detecting MSIE.
  var isExplorer = /msie [\w.]+/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(windowOverride) {
      var loc = windowOverride ? windowOverride.location : window.location;
      var match = loc.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the cross-browser normalized URL fragment, either from the URL,
    // the hash, or the override.
    getFragment: function(fragment, forcePushState) {
      if (fragment == null) {
        if (this._hasPushState || forcePushState) {
          fragment = window.location.pathname;
          var search = window.location.search;
          if (search) fragment += search;
        } else {
          fragment = this.getHash();
        }
      }
      if (!fragment.indexOf(this.options.root)) fragment = fragment.substr(this.options.root.length);
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error("Backbone.history has already been started");
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({}, {root: '/'}, this.options, options);
      this._wantsHashChange = this.options.hashChange !== false;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.options.pushState && window.history && window.history.pushState);
      var fragment          = this.getFragment();
      var docMode           = document.documentMode;
      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));

      if (oldIE) {
        this.iframe = $('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;
        this.navigate(fragment);
      }

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._hasPushState) {
        $(window).bind('popstate', this.checkUrl);
      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {
        $(window).bind('hashchange', this.checkUrl);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      // Determine if we need to change the base url, for a pushState link
      // opened by a non-pushState browser.
      this.fragment = fragment;
      var loc = window.location;
      var atRoot  = loc.pathname == this.options.root;

      // If we've started off with a route from a `pushState`-enabled browser,
      // but we're currently in a browser that doesn't support it...
      if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {
        this.fragment = this.getFragment(null, true);
        window.location.replace(this.options.root + '#' + this.fragment);
        // Return immediately as browser will do redirect to new url
        return true;

      // Or if we've started out with a hash-based route, but we're currently
      // in a browser where it could be `pushState`-based instead...
      } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {
        this.fragment = this.getHash().replace(routeStripper, '');
        window.history.replaceState({}, document.title, loc.protocol + '//' + loc.host + this.options.root + this.fragment);
      }

      if (!this.options.silent) {
        return this.loadUrl();
      }
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      $(window).unbind('popstate', this.checkUrl).unbind('hashchange', this.checkUrl);
      clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();
      if (current == this.fragment && this.iframe) current = this.getFragment(this.getHash(this.iframe));
      if (current == this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl() || this.loadUrl(this.getHash());
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragmentOverride) {
      var fragment = this.fragment = this.getFragment(fragmentOverride);
      var matched = _.any(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
      return matched;
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: options};
      var frag = (fragment || '').replace(routeStripper, '');
      if (this.fragment == frag) return;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._hasPushState) {
        if (frag.indexOf(this.options.root) != 0) frag = this.options.root + frag;
        this.fragment = frag;
        window.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, frag);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this.fragment = frag;
        this._updateHash(window.location, frag, options.replace);
        if (this.iframe && (frag != this.getFragment(this.getHash(this.iframe)))) {
          // Opening and closing the iframe tricks IE7 and earlier to push a history entry on hash-tag change.
          // When replace is true, we don't want this.
          if(!options.replace) this.iframe.document.open().close();
          this._updateHash(this.iframe.location, frag, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        window.location.assign(this.options.root + fragment);
      }
      if (options.trigger) this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        location.replace(location.toString().replace(/(javascript:|#).*$/, '') + '#' + fragment);
      } else {
        location.hash = fragment;
      }
    }
  });

  // Backbone.View
  // -------------

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    this._configure(options || {});
    this._ensureElement();
    this.initialize.apply(this, arguments);
    this.delegateEvents();
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be merged as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be prefered to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view from the DOM. Note that the view isn't present in the
    // DOM by default, so calling this method may be a no-op.
    remove: function() {
      this.$el.remove();
      return this;
    },

    // For small amounts of DOM Elements, where a full-blown template isn't
    // needed, use **make** to manufacture elements, one at a time.
    //
    //     var el = this.make('li', {'class': 'row'}, this.model.escape('title'));
    //
    make: function(tagName, attributes, content) {
      var el = document.createElement(tagName);
      if (attributes) $(el).attr(attributes);
      if (content) $(el).html(content);
      return el;
    },

    // Change the view's element (`this.el` property), including event
    // re-delegation.
    setElement: function(element, delegate) {
      if (this.$el) this.undelegateEvents();
      this.$el = (element instanceof $) ? element : $(element);
      this.el = this.$el[0];
      if (delegate !== false) this.delegateEvents();
      return this;
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save'
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    // This only works for delegate-able events: not `focus`, `blur`, and
    // not `change`, `submit`, and `reset` in Internet Explorer.
    delegateEvents: function(events) {
      if (!(events || (events = getValue(this, 'events')))) return;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[events[key]];
        if (!method) throw new Error('Method "' + events[key] + '" does not exist');
        var match = key.match(delegateEventSplitter);
        var eventName = match[1], selector = match[2];
        method = _.bind(method, this);
        eventName += '.delegateEvents' + this.cid;
        if (selector === '') {
          this.$el.bind(eventName, method);
        } else {
          this.$el.delegate(selector, eventName, method);
        }
      }
    },

    // Clears all callbacks previously bound to the view with `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      this.$el.unbind('.delegateEvents' + this.cid);
    },

    // Performs the initial configuration of a View with a set of options.
    // Keys with special meaning *(model, collection, id, className)*, are
    // attached directly to the view.
    _configure: function(options) {
      if (this.options) options = _.extend({}, this.options, options);
      for (var i = 0, l = viewOptions.length; i < l; i++) {
        var attr = viewOptions[i];
        if (options[attr]) this[attr] = options[attr];
      }
      this.options = options;
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = getValue(this, 'attributes') || {};
        if (this.id) attrs.id = this.id;
        if (this.className) attrs['class'] = this.className;
        this.setElement(this.make(this.tagName, attrs), false);
      } else {
        this.setElement(this.el, false);
      }
    }

  });

  // The self-propagating extend function that Backbone classes use.
  var extend = function (protoProps, classProps) {
    var child = inherits(this, protoProps, classProps);
    child.extend = this.extend;
    return child;
  };

  // Set up inheritance for the model, collection, and view.
  Model.extend = Collection.extend = Router.extend = View.extend = extend;

  // Backbone.sync
  // -------------

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'delete': 'DELETE',
    'read':   'GET'
  };

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    options || (options = {});

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = getValue(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (!options.data && model && (method == 'create' || method == 'update')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(model.toJSON());
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (Backbone.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (Backbone.emulateHTTP) {
      if (type === 'PUT' || type === 'DELETE') {
        if (Backbone.emulateJSON) params.data._method = type;
        params.type = 'POST';
        params.beforeSend = function(xhr) {
          xhr.setRequestHeader('X-HTTP-Method-Override', type);
        };
      }
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !Backbone.emulateJSON) {
      params.processData = false;
    }

    // Make the request, allowing the user to override any Ajax options.
    return $.ajax(_.extend(params, options));
  };

  // Wrap an optional error callback with a fallback error event.
  Backbone.wrapError = function(onError, originalModel, options) {
    return function(model, resp) {
      resp = model === originalModel ? resp : model;
      if (onError) {
        onError(originalModel, resp, options);
      } else {
        originalModel.trigger('error', originalModel, resp, options);
      }
    };
  };

  // Helpers
  // -------

  // Shared empty constructor function to aid in prototype-chain creation.
  var ctor = function(){};

  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var inherits = function(parent, protoProps, staticProps) {
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent's constructor.
    if (protoProps && protoProps.hasOwnProperty('constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ parent.apply(this, arguments); };
    }

    // Inherit class (static) properties from parent.
    _.extend(child, parent);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) _.extend(child.prototype, protoProps);

    // Add static properties to the constructor function, if supplied.
    if (staticProps) _.extend(child, staticProps);

    // Correctly set child's `prototype.constructor`.
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Helper function to get a value from a Backbone object as a property
  // or as a function.
  var getValue = function(object, prop) {
    if (!(object && object[prop])) return null;
    return _.isFunction(object[prop]) ? object[prop]() : object[prop];
  };

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

}).call(this);;

/**
 * jVectorMap version 1.0
 *
 * Copyright 2011-2012, Kirill Lebedev
 * Licensed under the MIT license.
 *
 */
(function( $ ){
  var apiParams = {
        set: {
          colors: 1,
          values: 1,
          backgroundColor: 1,
          scaleColors: 1,
          normalizeFunction: 1,
          focus: 1
        },
        get: {
          selectedRegions: 1,
          selectedMarkers: 1,
          mapObject: 1,
          regionName: 1
        }
      };

  $.fn.vectorMap = function(options) {
    var map,
        methodName,
        event;

    if (options === 'addMap') {
      jvm.WorldMap.maps[arguments[1]] = arguments[2];
    } else if ((options === 'set' || options === 'get') && apiParams[options][arguments[1]]) {
      methodName = arguments[1].charAt(0).toUpperCase()+arguments[1].substr(1);
      return this.data('mapObject')[options+methodName].apply(this.data('mapObject'), Array.prototype.slice.call(arguments, 2));
    } else {
      options = options || {};
      options.container = this;
      map = new jvm.WorldMap(options);
      this.data('mapObject', map);
    }
  };
})( jQuery );
/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
 * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
 * Thanks to: Seamus Leahy for adding deltaX and deltaY
 *
 * Version: 3.0.6
 *
 * Requires: 1.2.2+
 */

(function($) {

var types = ['DOMMouseScroll', 'mousewheel'];

if ($.event.fixHooks) {
    for ( var i=types.length; i; ) {
        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;
    }
}

$.event.special.mousewheel = {
    setup: function() {
        if ( this.addEventListener ) {
            for ( var i=types.length; i; ) {
                this.addEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = handler;
        }
    },

    teardown: function() {
        if ( this.removeEventListener ) {
            for ( var i=types.length; i; ) {
                this.removeEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = null;
        }
    }
};

$.fn.extend({
    mousewheel: function(fn) {
        return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
    },

    unmousewheel: function(fn) {
        return this.unbind("mousewheel", fn);
    }
});


function handler(event) {
    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;
    event = $.event.fix(orgEvent);
    event.type = "mousewheel";

    // Old school scrollwheel delta
    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }
    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }

    // New school multidimensional scroll (touchpads) deltas
    deltaY = delta;

    // Gecko
    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
        deltaY = 0;
        deltaX = -1*delta;
    }

    // Webkit
    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }
    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }

    // Add event and delta to the front of the arguments
    args.unshift(event, delta, deltaX, deltaY);

    return ($.event.dispatch || $.event.handle).apply(this, args);
}

})(jQuery);/**
 * @namespace jvm Holds core methods and classes used by jVectorMap.
 */
var jvm = {

  /**
   * Inherits child's prototype from the parent's one.
   * @param {Function} child
   * @param {Function} parent
   */
  inherits: function(child, parent) {
    function temp() {}
    temp.prototype = parent.prototype;
    child.prototype = new temp();
    child.prototype.constructor = child;
    child.parentClass = parent;
  },

  /**
   * Mixes in methods from the source constructor to the target one.
   * @param {Function} target
   * @param {Function} source
   */
  mixin: function(target, source){
    var prop;

    for (prop in source.prototype) {
      if (source.prototype.hasOwnProperty(prop)) {
        target.prototype[prop] = source.prototype[prop];
      }
    }
  },

  min: function(values){
    var min = Number.MAX_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    }
    return min;
  },

  max: function(values){
    var max = Number.MIN_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    }
    return max;
  },

  keys: function(object){
    var keys = [],
        key;

    for (key in object) {
      keys.push(key);
    }
    return keys;
  },

  values: function(object){
    var values = [],
        key,
        i;

    for (i = 0; i < arguments.length; i++) {
      object = arguments[i];
      for (key in object) {
        values.push(object[key]);
      }
    }
    return values;
  }
};/**
 * Basic wrapper for DOM element.
 * @constructor
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */
jvm.AbstractElement = function(name, config){
  /**
   * Underlying DOM element
   * @type {DOMElement}
   * @private
   */
  this.node = this.createElement(name);

  /**
   * Name of underlying element
   * @type {String}
   * @private
   */
  this.name = name;

  /**
   * Internal store of attributes
   * @type {Object}
   * @private
   */
  this.properties = {};
  this.set(config);
};

/**
 * Set attribute of the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Set of parameters to initialize element with
 */
jvm.AbstractElement.prototype.set = function(property, value){
  var key;

  if (typeof property === 'object') {
    for (key in property) {
      this.properties[key] = property[key];
      this.applyAttr(key, property[key]);
    }
  } else {
    this.properties[property] = value;
    this.applyAttr(property, value);
  }
};

/**
 * Returns value of attribute.
 * @param {String} name Name of attribute
 */
jvm.AbstractElement.prototype.get = function(property){
  return this.properties[property];
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.AbstractElement.prototype.applyAttr = function(property, value){
  this.node.setAttribute(property, value);
};

jvm.AbstractElement.prototype.remove = function(){
  $(this.node).remove();
};/**
 * Implements abstract vector canvas.
 * @constructor
 * @param {HTMLElement} container Container to put element to.
 * @param {Number} width Width of canvas.
 * @param {Number} height Height of canvas.
 */
jvm.AbstractCanvasElement = function(container, width, height){
  this.container = container;
  this.setSize(width, height);
  this.rootElement = new jvm[this.classPrefix+'GroupElement']();
  this.node.appendChild( this.rootElement.node );
  this.container.appendChild(this.node);
}

/**
 * Add element to the certain group inside of the canvas.
 * @param {HTMLElement} element Element to add to canvas.
 * @param {HTMLElement} group Group to add element into or into root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.add = function(element, group){
  group = group || this.rootElement;
  group.add(element);
  element.canvas = this;
}

/**
 * Create path and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add path into.
 */
jvm.AbstractCanvasElement.prototype.addPath = function(config, style, group){
  var el = new jvm[this.classPrefix+'PathElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create circle and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addCircle = function(config, style, group){
  var el = new jvm[this.classPrefix+'CircleElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Add group to the another group inside of the canvas.
 * @param {HTMLElement} group Group to add circle into or root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.addGroup = function(parentGroup){
  var el = new jvm[this.classPrefix+'GroupElement']();

  if (parentGroup) {
    parentGroup.node.appendChild(el.node);
  } else {
    this.node.appendChild(el.node);
  }
  el.canvas = this;
  return el;
};/**
 * Abstract shape element. Shape element represents some visual vector or raster object.
 * @constructor
 * @param {String} name Tag name of the element.
 * @param {Object} config Set of parameters to initialize element with.
 * @param {Object} style Object with styles to set on element initialization.
 */
jvm.AbstractShapeElement = function(name, config, style){
  this.style = style || {};
  this.style.current = {};
  this.isHovered = false;
  this.isSelected = false;
  this.updateStyle();
};

/**
 * Set hovered state to the element. Hovered state means mouse cursor is over element. Styles will be updates respectively.
 * @param {Boolean} isHovered <code>true</code> to make element hovered, <code>false</code> otherwise.
 */
jvm.AbstractShapeElement.prototype.setHovered = function(isHovered){
  if (this.isHovered !== isHovered) {
    this.isHovered = isHovered;
    this.updateStyle();
  }
};

/**
 * Set selected state to the element. Styles will be updates respectively.
 * @param {Boolean} isSelected <code>true</code> to make element selected, <code>false</code> otherwise.
 */
jvm.AbstractShapeElement.prototype.setSelected = function(isSelected){
  if (this.isSelected !== isSelected) {
    this.isSelected = isSelected;
    this.updateStyle();
    $(this.node).trigger('selected', [isSelected]);
  }
};

/**
 * Set element's style.
 * @param {Object|String} property Could be string to set only one property or object to set several style properties at once.
 * @param {String} value Value to set in case only one property should be set.
 */
jvm.AbstractShapeElement.prototype.setStyle = function(property, value){
  var styles = {};

  if (typeof property === 'object') {
    styles = property;
  } else {
    styles[property] = value;
  }
  $.extend(this.style.current, styles);
  this.updateStyle();
};


jvm.AbstractShapeElement.prototype.updateStyle = function(){
  var attrs = {};

  $.extend(attrs, this.style.initial || {});
  $.extend(attrs, this.style.current || {});
  if (this.isHovered) {
    $.extend(attrs, this.style.hover || {});
  }
  if (this.isSelected) {
    $.extend(attrs, this.style.selected || {});
    if (this.isHovered) {
      $.extend(attrs, this.style.selectedHover || {});
    }
  }
  this.set(attrs);
};/**
 * Wrapper for SVG element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.SVGElement = function(name, config){
  jvm.SVGElement.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.SVGElement, jvm.AbstractElement);

jvm.SVGElement.svgns = "http://www.w3.org/2000/svg";

/**
 * Creates DOM element.
 * @param {String} tagName Name of element
 * @private
 * @returns DOMElement
 */
jvm.SVGElement.prototype.createElement = function( tagName ){
  return document.createElementNS( jvm.SVGElement.svgns, tagName );
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.SVGElement.prototype.addClass = function( className ){
  this.node.setAttribute('class', className);
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.SVGElement.prototype.getElementCtr = function( ctr ){
  return jvm['SVG'+ctr];
};

jvm.SVGElement.prototype.getBBox = function(){
  return this.node.getBBox();
};jvm.SVGGroupElement = function(){
  jvm.SVGGroupElement.parentClass.call(this, 'g');
}

jvm.inherits(jvm.SVGGroupElement, jvm.SVGElement);

jvm.SVGGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.SVGCanvasElement = function(container, width, height){
  this.classPrefix = 'SVG';
  jvm.SVGCanvasElement.parentClass.call(this, 'svg');
  jvm.AbstractCanvasElement.apply(this, arguments);
}

jvm.inherits(jvm.SVGCanvasElement, jvm.SVGElement);
jvm.mixin(jvm.SVGCanvasElement, jvm.AbstractCanvasElement);

jvm.SVGCanvasElement.prototype.setSize = function(width, height){
  this.width = width;
  this.height = height;
  this.node.setAttribute('width', width);
  this.node.setAttribute('height', height);
};

jvm.SVGCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.setAttribute('transform', 'scale('+scale+') translate('+transX+', '+transY+')');
};jvm.SVGShapeElement = function(name, config, style){
  jvm.SVGShapeElement.parentClass.call(this, name, config);
  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.SVGShapeElement, jvm.SVGElement);
jvm.mixin(jvm.SVGShapeElement, jvm.AbstractShapeElement);jvm.SVGPathElement = function(config, style){
  jvm.SVGPathElement.parentClass.call(this, 'path', config, style);
  this.node.setAttribute('fill-rule', 'evenodd');
}

jvm.inherits(jvm.SVGPathElement, jvm.SVGShapeElement);jvm.SVGCircleElement = function(config, style){
  jvm.SVGCircleElement.parentClass.call(this, 'circle', config, style);
};

jvm.inherits(jvm.SVGCircleElement, jvm.SVGShapeElement);/**
 * Wrapper for VML element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.VMLElement = function(name, config){
  if (!jvm.VMLElement.VMLInitialized) {
    jvm.VMLElement.initializeVML();
  }

  jvm.VMLElement.parentClass.apply(this, arguments);
};

jvm.inherits(jvm.VMLElement, jvm.AbstractElement);

/**
 * Shows if VML was already initialized for the current document or not.
 * @static
 * @private
 * @type {Boolean}
 */
jvm.VMLElement.VMLInitialized = false;

/**
 * Initializes VML handling before creating the first element
 * (adds CSS class and creates namespace). Adds one of two forms
 * of createElement method depending of support by browser.
 * @static
 * @private
 */

 // The following method of VML handling is borrowed from the
 // Raphael library by Dmitry Baranovsky.

jvm.VMLElement.initializeVML = function(){
  try {
    if (!document.namespaces.rvml) {
      document.namespaces.add("rvml","urn:schemas-microsoft-com:vml");
    }
    /**
     * Creates DOM element.
     * @param {String} tagName Name of element
     * @private
     * @returns DOMElement
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<rvml:' + tagName + ' class="rvml">');
    };
  } catch (e) {
    /**
     * @private
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<' + tagName + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
    };
  }
  document.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
  jvm.VMLElement.VMLInitialized = true;
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.VMLElement.prototype.getElementCtr = function( ctr ){
  return jvm['VML'+ctr];
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.VMLElement.prototype.addClass = function( className ){
  $(this.node).addClass(className);
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.VMLElement.prototype.applyAttr = function( attr, value ){
  this.node[attr] = value;
};

/**
 * Returns boundary box for the element.
 * @returns {Object} Boundary box with numeric fields: x, y, width, height
 * @override
 */
jvm.VMLElement.prototype.getBBox = function(){
  var node = $(this.node);
  return {
    x: node.position().left / this.canvas.scale,
    y: node.position().top / this.canvas.scale,
    width: node.width() / this.canvas.scale,
    height: node.height() / this.canvas.scale
  };
};jvm.VMLGroupElement = function(){
  jvm.VMLGroupElement.parentClass.call(this, 'group');

  this.node.style.left = '0px';
  this.node.style.top = '0px';
  this.node.coordorigin = "0 0";
};

jvm.inherits(jvm.VMLGroupElement, jvm.VMLElement);

jvm.VMLGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.VMLCanvasElement = function(container, width, height){
  this.classPrefix = 'VML';
  jvm.VMLCanvasElement.parentClass.call(this, 'group');
  jvm.AbstractCanvasElement.apply(this, arguments);
  this.node.style.position = 'absolute';
};

jvm.inherits(jvm.VMLCanvasElement, jvm.VMLElement);
jvm.mixin(jvm.VMLCanvasElement, jvm.AbstractCanvasElement);

jvm.VMLCanvasElement.prototype.setSize = function(width, height){
  var paths,
      groups,
      i,
      l;

  this.width = width;
  this.height = height;
  this.node.style.width = width + "px";
  this.node.style.height = height + "px";
  this.node.coordsize = width+' '+height;
  this.node.coordorigin = "0 0";
  if (this.rootElement) {
    paths = this.rootElement.node.getElementsByTagName('shape');
    for(i = 0, l = paths.length; i < l; i++) {
      paths[i].coordsize = width+' '+height;
      paths[i].style.width = width+'px';
      paths[i].style.height = height+'px';
    }
    groups = this.node.getElementsByTagName('group');
    for(i = 0, l = groups.length; i < l; i++) {
      groups[i].coordsize = width+' '+height;
      groups[i].style.width = width+'px';
      groups[i].style.height = height+'px';
    }
  }
};

jvm.VMLCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.coordorigin = (this.width-transX-this.width/100)+','+(this.height-transY-this.height/100);
  this.rootElement.node.coordsize = this.width/scale+','+this.height/scale;
};jvm.VMLShapeElement = function(name, config){
  jvm.VMLShapeElement.parentClass.call(this, name, config);

  this.fillElement = new jvm.VMLElement('fill');
  this.strokeElement = new jvm.VMLElement('stroke');
  this.node.appendChild(this.fillElement.node);
  this.node.appendChild(this.strokeElement.node);
  this.node.stroked = false;

  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.VMLShapeElement, jvm.VMLElement);
jvm.mixin(jvm.VMLShapeElement, jvm.AbstractShapeElement);

jvm.VMLShapeElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'fill':
      this.node.fillcolor = value;
      break;
    case 'fill-opacity':
      this.fillElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke':
      if (value === 'none') {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokecolor = value;
      break;
    case 'stroke-opacity':
      this.strokeElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke-width':
      if (parseInt(value, 10) === 0) {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokeweight = value;
      break;
    case 'd':
      this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
      break;
    default:
      jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};jvm.VMLPathElement = function(config, style){
  var scale = new jvm.VMLElement('skew');

  jvm.VMLPathElement.parentClass.call(this, 'shape', config, style);

  this.node.coordorigin = "0 0";

  scale.node.on = true;
  scale.node.matrix = '0.01,0,0,0.01,0,0';
  scale.node.offset = '0,0';

  this.node.appendChild(scale.node);
};

jvm.inherits(jvm.VMLPathElement, jvm.VMLShapeElement);

jvm.VMLPathElement.prototype.applyAttr = function(attr, value){
  if (attr === 'd') {
    this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
  } else {
    jvm.VMLShapeElement.prototype.applyAttr.call(this, attr, value);
  }
};

jvm.VMLPathElement.pathSvgToVml = function(path) {
  var result = '',
      cx = 0, cy = 0, ctrlx, ctrly;

  path = path.replace(/(-?\d+)e(-?\d+)/g, '0');
  return path.replace(/([MmLlHhVvCcSs])\s*((?:-?\d*(?:\.\d+)?\s*,?\s*)+)/g, function(segment, letter, coords, index){
    coords = coords.replace(/(\d)-/g, '$1,-')
            .replace(/^\s+/g, '')
            .replace(/\s+$/g, '')
            .replace(/\s+/g, ',').split(',');
    if (!coords[0]) coords.shift();
    for (var i=0, l=coords.length; i<l; i++) {
      coords[i] = Math.round(100*coords[i]);
    }
    switch (letter) {
      case 'm':
        cx += coords[0];
        cy += coords[1];
        return 't'+coords.join(',');
      break;
      case 'M':
        cx = coords[0];
        cy = coords[1];
        return 'm'+coords.join(',');
      break;
      case 'l':
        cx += coords[0];
        cy += coords[1];
        return 'r'+coords.join(',');
      break;
      case 'L':
        cx = coords[0];
        cy = coords[1];
        return 'l'+coords.join(',');
      break;
      case 'h':
        cx += coords[0];
        return 'r'+coords[0]+',0';
      break;
      case 'H':
        cx = coords[0];
        return 'l'+cx+','+cy;
      break;
      case 'v':
        cy += coords[0];
        return 'r0,'+coords[0];
      break;
      case 'V':
        cy = coords[0];
        return 'l'+cx+','+cy;
      break;
      case 'c':
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      break;
      case 'C':
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
      break;
      case 's':
        coords.unshift(cy-ctrly);
        coords.unshift(cx-ctrlx);
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      break;
      case 'S':
        coords.unshift(cy+cy-ctrly);
        coords.unshift(cx+cx-ctrlx);
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
      break;
    }
    return '';
  }).replace(/z/g, 'e');
};jvm.VMLCircleElement = function(config, style){
  jvm.VMLCircleElement.parentClass.call(this, 'oval', config, style);
};

jvm.inherits(jvm.VMLCircleElement, jvm.VMLShapeElement);

jvm.VMLCircleElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'r':
      this.node.style.width = value*2+'px';
      this.node.style.height = value*2+'px';
      this.applyAttr('cx', this.get('cx') || 0);
      this.applyAttr('cy', this.get('cy') || 0);
      break;
    case 'cx':
      if (!value) return;
      this.node.style.left = value - (this.get('r') || 0) + 'px';
      break;
    case 'cy':
      if (!value) return;
      this.node.style.top = value - (this.get('r') || 0) + 'px';
      break;
    default:
      jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this, attr, value);
  }
};/**
 * Class for vector images manipulations.
 * @constructor
 * @param {DOMElement} container to place canvas to
 * @param {Number} width
 * @param {Number} height
 */
jvm.VectorCanvas = function(container, width, height) {
  this.mode = window.SVGAngle ? 'svg' : 'vml';
  if (this.mode == 'svg') {
    this.impl = new jvm.SVGCanvasElement(container, width, height);
  } else {
    this.impl = new jvm.VMLCanvasElement(container, width, height);
  }
  return this.impl;
};jvm.NumericScale = function(scale, normalizeFunction, minValue, maxValue) {
  this.scale = [];

  normalizeFunction = normalizeFunction || 'linear';

  if (scale) this.setScale(scale);
  if (normalizeFunction) this.setNormalizeFunction(normalizeFunction);
  if (minValue) this.setMin(minValue);
  if (maxValue) this.setMax(maxValue);
};

jvm.NumericScale.prototype = {
  setMin: function(min) {
    this.clearMinValue = min;
    if (typeof this.normalize === 'function') {
      this.minValue = this.normalize(min);
    } else {
      this.minValue = min;
    }
  },

  setMax: function(max) {
    this.clearMaxValue = max;
    if (typeof this.normalize === 'function') {
      this.maxValue = this.normalize(max);
    } else {
      this.maxValue = max;
    }
  },

  setScale: function(scale) {
    var i;

    for (i = 0; i < scale.length; i++) {
      this.scale[i] = [scale[i]];
    }
  },

  setNormalizeFunction: function(f) {
    if (f === 'polynomial') {
      this.normalize = function(value) {
        return Math.pow(value, 0.2);
      }
    } else if (f === 'linear') {
      delete this.normalize;
    } else {
      this.normalize = f;
    }
    this.setMin(this.clearMinValue);
    this.setMax(this.clearMaxValue);
  },

  getValue: function(value) {
    var lengthes = [],
        fullLength = 0,
        l,
        i = 0,
        c;

    if (typeof this.normalize === 'function') {
      value = this.normalize(value);
    }
    for (i = 0; i < this.scale.length-1; i++) {
      l = this.vectorLength(this.vectorSubtract(this.scale[i+1], this.scale[i]));
      lengthes.push(l);
      fullLength += l;
    }

    c = (this.maxValue - this.minValue) / fullLength;
    for (i=0; i<lengthes.length; i++) {
      lengthes[i] *= c;
    }

    i = 0;
    value -= this.minValue;
    while (value - lengthes[i] >= 0) {
      value -= lengthes[i];
      i++;
    }

    if (i == this.scale.length - 1) {
      value = this.vectorToNum(this.scale[i])
    } else {
      value = (
        this.vectorToNum(
          this.vectorAdd(this.scale[i],
            this.vectorMult(
              this.vectorSubtract(this.scale[i+1], this.scale[i]),
              (value) / (lengthes[i])
            )
          )
        )
      );
    }

    return value;
  },

  vectorToNum: function(vector) {
    var num = 0,
        i;

    for (i = 0; i < vector.length; i++) {
      num += Math.round(vector[i])*Math.pow(256, vector.length-i-1);
    }
    return num;
  },

  vectorSubtract: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] - vector2[i];
    }
    return vector;
  },

  vectorAdd: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] + vector2[i];
    }
    return vector;
  },

  vectorMult: function(vector, num) {
    var result = [],
        i;

    for (i = 0; i < vector.length; i++) {
      result[i] = vector[i] * num;
    }
    return result;
  },

  vectorLength: function(vector) {
    var result = 0,
        i;
    for (i = 0; i < vector.length; i++) {
      result += vector[i] * vector[i];
    }
    return Math.sqrt(result);
  }
};jvm.ColorScale = function(colors, normalizeFunction, minValue, maxValue) {
  jvm.ColorScale.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.ColorScale, jvm.NumericScale);

jvm.ColorScale.prototype.setScale = function(scale) {
  var i;

  for (i = 0; i < scale.length; i++) {
    this.scale[i] = jvm.ColorScale.rgbToArray(scale[i]);
  }
};

jvm.ColorScale.prototype.getValue = function(value) {
  return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this, value));
};

jvm.ColorScale.arrayToRgb = function(ar) {
  var rgb = '#',
      d,
      i;

  for (i = 0; i < ar.length; i++) {
    d = ar[i].toString(16);
    rgb += d.length == 1 ? '0'+d : d;
  }
  return rgb;
};

jvm.ColorScale.numToRgb = function(num) {
  num = num.toString(16);

  while (num.length < 6) {
    num = '0' + num;
  }

  return '#'+num;
};

jvm.ColorScale.rgbToArray = function(rgb) {
  rgb = rgb.substr(1);
  return [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];
};/**
 * Creates data series.
 * @constructor
 * @param {Object} params Parameters to initialize series with.
 * @param {Array} params.values The data set to visualize.
 * @param {String} params.attribute Numberic or color attribute to use for data visualization. This could be: <code>fill</code>, <code>stroke</code>, <code>fill-opacity</code>, <code>stroke-opacity</code> for markers and regions and <code>r</code> (radius) for markers only.
 * @param {Array} params.scale Values used to map a dimension of data to a visual representation. The first value sets visualization for minimum value from the data set and the last value sets visualization for the maximum value. There also could be intermidiate values. Default value is <code>['#C8EEFF', '#0071A4']</code>
 * @param {Function|String} params.normalizeFunction The function used to map input values to the provided scale. This parameter could be provided as function or one of the strings: <code>'linear'</code> or <code>'polynomial'</code>, while <code>'linear'</code> is used by default. The function provided takes value from the data set as an input and returns corresponding value from the scale.
 * @param {Number} params.min Minimum value of the data set. Could be calculated automatically if not provided.
 * @param {Number} params.min Maximum value of the data set. Could be calculated automatically if not provided.
 */
jvm.DataSeries = function(params, elements) {
  var scaleConstructor;

  params = params || {};
  params.attribute = params.attribute || 'fill';
  params.scale = params.scale || ['#C8EEFF', '#0071A4'];

  scaleConstructor = (params.attribute === 'fill' || params.attribute === 'stroke') ? jvm.ColorScale : jvm.NumericScale

  this.elements = elements;
  this.params = params;

  if (params.attributes) {
    this.setAttributes(params.attributes);
  }

  this.scale = new scaleConstructor(params.scale, params.normalizeFunction, params.min, params.max);
  if (params.values) {
    this.values = params.values;
    this.setValues(params.values);
  }
};

jvm.DataSeries.prototype = {
  setAttributes: function(key, attr){
    var attrs = key,
        code;

    if (typeof key == 'string') {
      this.elements[key].setStyle(this.params.attribute, attr);
    } else {
      for (code in attrs) {
        if (this.elements[code]) {
          this.elements[code].element.setStyle(this.params.attribute, attrs[code]);
        }
      }
    }
  },

  /**
   * Set values for the data set.
   * @param {Object} values Object which maps codes of regions or markers to values.
   */
  setValues: function(values) {
    var max = Number.MIN_VALUE,
        min = Number.MAX_VALUE,
        val,
        cc,
        attrs = {};

    if (!this.params.min || !this.params.max) {
      for (cc in values) {
        val = parseFloat(values[cc]);
        if (val > max) max = values[cc];
        if (val < min) min = val;
      }
      if (!this.params.min) {
        this.scale.setMin(min);
      }
      if (!this.params.max) {
        this.scale.setMax(max);
      }
      this.params.min = min;
      this.params.max = max;
    }

    for (cc in values) {
      val = parseFloat(values[cc]);
      if (val) {
        attrs[cc] = this.scale.getValue(val);
      } else {
        attrs[cc] = this.elements[cc].element.style.initial[this.params.attribute];
      }
    }
    this.setAttributes(attrs);
    this.values = values;
  },

  /**
   * Set scale of the data series.
   * @param {Array} scale Values representing scale.
   */
  setScale: function(scale) {
    this.scale.setScale(scale);
    if (this.values) {
      this.setValues(this.values);
    }
  },

  /**
   * Set normalize function of the data series.
   * @param {Function|String} normilizeFunction.
   */
  setNormalizeFunction: function(f) {
    this.scale.setNormalizeFunction(f);
    if (this.values) {
      this.setValues(this.values);
    }
  }
};/**
 * Contains methods for transforming point on sphere to
 * Cartesian coordinates using various projections.
 * @class
 */
jvm.Proj = {
  /**
   * Converts point on sphere to the Cartesian coordinates using Miller projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longtitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  mill: function(lat, lng, c){
    return {
      x: (lng - c) / 360 * jvm.WorldMap.circumference,
      y: - (180 / Math.PI * (5 / 4) * Math.log(Math.tan(Math.PI / 4 + (4 / 5) * lat * Math.PI / 360))) / 360 * jvm.WorldMap.circumference
    }
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Mercator projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longtitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  merc: function(lat, lng, c){
    return {
      x: (lng - c) / 360 * jvm.WorldMap.circumference,
      y: - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360 * jvm.WorldMap.circumference
    }
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Albers Equal-Area Conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/AlbersEqual-AreaConicProjection.html">Albers Equal-Area Conic projection</a>
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longtitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  aea: function(lat, lng, c){
    var fi0 = 0,
        lambda0 = c / 180 * Math.PI,
        fi1 = 45.5 / 180 * Math.PI,
        fi2 = 29.5 / 180 * Math.PI,
        fi = lat / 180 * Math.PI,
        lambda = lng / 180 * Math.PI ,
        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,
        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),
        theta = n*(lambda-lambda0),
        ro = Math.sqrt(C-2*n*Math.sin(fi))/n,
        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n;

    return {
      x: ro*Math.sin(theta) / (2 * Math.PI) * jvm.WorldMap.circumference,
      y: - (ro0 - ro * Math.cos(theta)) / (2 * Math.PI) * jvm.WorldMap.circumference
    }
  }
};/**
 * Creates map, draws paths, binds events.
 * @constructor
 * @param {Object} params Parameters to initialize map with.
 * @param {String} params.map Name of the map in the format <code>territory_proj_lang</code> where <code>territory</code> is a unique code or name of the territory which the map represents (ISO 3166 alpha 2 standard is used where possible), <code>proj</code> is a name of projection used to generate representation of the map on the plane (projections are named according to the conventions of proj4 utility) and <code>lang</code> is a code of the language, used for the names of regions.
 * @param {String} params.backgroundColor Background color of the map in CSS format.
 * @param {Boolean} params.zoomOnScroll When set to true map could be zoomed using mouse scroll. Default value is <code>true</code>.
 * @param {Number} params.zoomMax Indicates the maximum zoom ratio which could be reached zooming the map. Default value is <code>8</code>.
 * @param {Number} params.zoomMin Indicates the minimum zoom ratio which could be reached zooming the map. Default value is <code>1</code>.
 * @param {Number} params.zoomStep Indicates the multiplier used to zoom map with +/- buttons. Default value is <code>1.6</code>.
 * @param {Boolean} params.regionsSelectable When set to true regions of the map could be selected. Default value is <code>false</code>.
 * @param {Boolean} params.markersSelectable When set to true markers on the map could be selected. Default value is <code>false</code>.
 * @param {Object} params.regionStyle Set the styles for the map's regions. Each region or marker has four states: <code>initial</code> (default state), <code>hover</code> (when the mouse cursor is over the region or marker), <code>selected</code> (when region or marker is selected), <code>selectedHover</code> (when the mouse cursor is over the region or marker and it's selected simultaneously). Styles could be set for each of this states. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'white',
    "fill-opacity": 1,
    stroke: 'none',
    "stroke-width": 0,
    "stroke-opacity": 1
  },
  hover: {
    "fill-opacity": 0.8
  },
  selected: {
    fill: 'yellow'
  },
  selectedHover: {
  }
}</pre>
 * @param {Object} params.markerStyle Set the styles for the map's markers. Any parameter suitable for <code>regionStyle</code> could be used as well as numeric parameter <code>r</code> to set the marker's radius. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'grey',
    stroke: '#505050',
    "fill-opacity": 1,
    "stroke-width": 1,
    "stroke-opacity": 1,
    r: 5
  },
  hover: {
    stroke: 'black',
    "stroke-width": 2
  },
  selected: {
    fill: 'blue'
  },
  selectedHover: {
  }
}</pre>
 * @param {Object|Array} params.markers Set of markers to add to the map during initialization. In case of array is provided, codes of markers will be set as string representations of array indexes. Each marker is represented by <code>latLng</code> (array of two numeric values), <code>name</code> (string which will be show on marker's label) and any marker styles.
 * @param {Object} params.series Object with two keys: <code>markers</code> and <code>regions</code>. Each of which is an array of series configs to be applied to the respective map elements. See <a href="jvm.DataSeries.html">DataSeries</a> description for a list of parameters available.
 * @param {Object|String} params.focusOn This parameter sets the initial position and scale of the map viewport. It could be expressed as a string representing region which should be in focus or an object representing coordinates and scale to set. For example to focus on the center of the map at the double scale you can provide the following value:
<pre>{
  x: 0.5,
  y: 0.5,
  scale: 2
}</pre>
 * @param {Function} params.onRegionLabelShow <code>(Event e, Object label, String code)</code> Will be called right before the region label is going to be shown.
 * @param {Function} params.onRegionOver <code>(Event e, String code)</code> Will be called on region mouse over event.
 * @param {Function} params.onRegionOut <code>(Event e, String code)</code> Will be called on region mouse out event.
 * @param {Function} params.onRegionClick <code>(Event e, String code)</code> Will be called on region click event.
 * @param {Function} params.onRegionSelected <code>(Event e, String code, Boolean isSelected, Array selectedRegions)</code> Will be called when region is (de)selected. <code>isSelected</code> parameter of the callback indicates whether region is selected or not. <code>selectedRegions</code> contains codes of all currently selected regions.
 * @param {Function} params.onMarkerLabelShow <code>(Event e, Object label, String code)</code> Will be called right before the marker label is going to be shown.
 * @param {Function} params.onMarkerOver <code>(Event e, String code)</code> Will be called on marker mouse over event.
 * @param {Function} params.onMarkerOut <code>(Event e, String code)</code> Will be called on marker mouse out event.
 * @param {Function} params.onMarkerClick <code>(Event e, String code)</code> Will be called on marker click event.
 * @param {Function} params.onMarkerSelected <code>(Event e, String code, Boolean isSelected, Array selectedMarkers)</code> Will be called when marker is (de)selected. <code>isSelected</code> parameter of the callback indicates whether marker is selected or not. <code>selectedMarkers</code> contains codes of all currently selected markers.
 */
jvm.WorldMap = function(params) {
  var map = this,
      e;

  this.params = $.extend(true, {}, jvm.WorldMap.defaultParams, params);
  this.mapData = jvm.WorldMap.maps[this.params.map];
  this.markers = {};
  this.regions = {};
  this.regionsColors = {};
  this.regionsData = {};

  this.container = this.params.container;
  this.container.css({
    position: 'relative',
    overflow: 'hidden'
  });

  this.defaultWidth = this.mapData.width;
  this.defaultHeight = this.mapData.height;

  this.setBackgroundColor(this.params.backgroundColor);

  $(window).resize(function(){
    map.setSize();
  });

  for (e in jvm.WorldMap.apiEvents) {
    if (this.params[e]) {
      this.container.bind(jvm.WorldMap.apiEvents[e]+'.jvectormap', this.params[e]);
    }
  }

  this.canvas = new jvm.VectorCanvas(this.params.container[0], this.width, this.height);

  if ( ('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch) ) {
    this.bindContainerTouchEvents();
  } else {
    this.bindContainerEvents();
  }
  this.bindElementEvents();
  this.createLabel();
  this.bindZoomButtons();
  this.createRegions();
  this.createMarkers(this.params.markers || {});

  this.setSize();

  if (this.params.focusOn) {
    if (typeof this.params.focusOn === 'object') {
      this.setFocus.call(this, this.params.focusOn.scale, this.params.focusOn.x, this.params.focusOn.y);
    } else {
      this.setFocus.call(this, this.params.focusOn);
    }
  }

  if (this.params.series) {
    this.createSeries();
  }
};

jvm.WorldMap.prototype = {
  transX: 0,
  transY: 0,
  scale: 1,
  baseTransX: 0,
  baseTransY: 0,
  baseScale: 1,

  width: 0,
  height: 0,

  /**
   * Set background color of the map.
   * @param {String} backgroundColor Background color in CSS format.
   */
  setBackgroundColor: function(backgroundColor) {
    this.container.css('background-color', backgroundColor);
  },

  resize: function() {
    var curBaseScale = this.baseScale;
    if (this.width / this.height > this.defaultWidth / this.defaultHeight) {
      this.baseScale = this.height / this.defaultHeight;
      this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale);
    } else {
      this.baseScale = this.width / this.defaultWidth;
      this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale);
    }
    this.scale *= this.baseScale / curBaseScale;
    this.transX *= this.baseScale / curBaseScale;
    this.transY *= this.baseScale / curBaseScale;
  },

  setSize: function(){
    this.width = this.container.width();
    this.height = this.container.height();
    this.resize();
    this.canvas.setSize(this.width, this.height);
    this.applyTransform();
  },

  /**
   * Reset colors of the regions, show the map with the initial zoom.
   */
  reset: function() {
    var key;

    this.countryTitle.reset();
    for (key in this.regions) {
      this.regions[key].element.setStyle('fill', jvm.WorldMap.defaultColor);
    }
    this.scale = this.baseScale;
    this.transX = this.baseTransX;
    this.transY = this.baseTransY;
    this.applyTransform();
  },

  applyTransform: function() {
    var maxTransX, maxTransY, minTransX, minTransY;
    if (this.defaultWidth * this.scale <= this.width) {
      maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
      minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
    } else {
      maxTransX = 0;
      minTransX = (this.width - this.defaultWidth * this.scale) / this.scale;
    }

    if (this.defaultHeight * this.scale <= this.height) {
      maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
      minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
    } else {
      maxTransY = 0;
      minTransY = (this.height - this.defaultHeight * this.scale) / this.scale;
    }

    if (this.transY > maxTransY) {
      this.transY = maxTransY;
    } else if (this.transY < minTransY) {
      this.transY = minTransY;
    }
    if (this.transX > maxTransX) {
      this.transX = maxTransX;
    } else if (this.transX < minTransX) {
      this.transX = minTransX;
    }

    this.canvas.applyTransformParams(this.scale, this.transX, this.transY);

    if (this.markers) {
      this.repositionMarkers();
    }
  },

  bindContainerEvents: function(){
    var mouseDown = false,
        oldPageX,
        oldPageY,
        map = this;

    this.container.mousemove(function(e){
      if (mouseDown) {
        map.transX -= (oldPageX - e.pageX) / map.scale;
        map.transY -= (oldPageY - e.pageY) / map.scale;

        map.applyTransform();

        oldPageX = e.pageX;
        oldPageY = e.pageY;
      }
      return false;
    }).mousedown(function(e){
      mouseDown = true;
      oldPageX = e.pageX;
      oldPageY = e.pageY;
      return false;
    }).mouseup(function(){
      mouseDown = false;
      return false;
    });

    if (this.params.zoomOnScroll) {
      this.container.mousewheel(function(event, delta, deltaX, deltaY) {
        var offset = $(map.container).offset(),
            centerX = event.pageX - offset.left,
            centerY = event.pageY - offset.top,
            zoomStep = Math.pow(1.3, deltaY);

        map.label.hide();

        map.setScale(map.scale * zoomStep, centerX, centerY);
        event.preventDefault();
      });
    }
  },

  bindContainerTouchEvents: function(){
    var touchStartScale,
        touchStartTransX,
        touchStartTransY,
        map = this,
        touchX,
        touchY,
        centerTouchX,
        centerTouchY;

    $(this.container).bind('gesturestart', function(e){
      touchStartScale = map.scale;
      touchStartTransX = map.transX;
      touchStartTransY = map.transY;
      return false;
    });
    $(this.container).bind('gesturechange', function(e){
      var zoomStep = e.originalEvent.scale;

      map.setScale(
        touchStartScale * zoomStep,
        centerTouchX,
        centerTouchY
      );
      map.label.hide();
      return false;
    });
    $(this.container).bind('touchstart', function(e){
      var touches = e.originalEvent.touches;
      if (touches.length == 2) {
        if (touches[0].pageX > touches[1].pageX) {
          centerTouchX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;
        } else {
          centerTouchX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;
        }
        if (touches[0].pageY > touches[1].pageY) {
          centerTouchY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;
        } else {
          centerTouchY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;
        }
      }
      touchX = e.originalEvent.touches[0].pageX;
      touchY = e.originalEvent.touches[0].pageY;
    });
    $(this.container).bind('touchmove', function(e){
      var touch;
      if (e.originalEvent.touches.length == 1 && touchX && touchY) {
        touch = e.originalEvent.touches[0];

        map.transX -= (touchX - touch.pageX) / map.scale;
        map.transY -= (touchY - touch.pageY) / map.scale;

        map.applyTransform();

        map.label.hide();

        touchX = touch.pageX;
        touchY = touch.pageY;
      } else {
        touchX = false;
        touchY = false;
      }
      return false;
    });
  },

  bindElementEvents: function(){
    var map = this,
        mouseMoved;

    this.container.mousemove(function(){
      mouseMoved = true;
    });

    this.container.delegate('.jvectormap-region, .jvectormap-marker', 'mouseover mouseout', function(e){
      var path = this,
          type = $(this).attr('class').indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? $(this).attr('data-code') : $(this).attr('data-index'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element,
          labelText = type == 'region' ? map.mapData.paths[code].name : (map.markers[code].config.name || ''),
          labelShowEvent = $.Event(type+'LabelShow.jvectormap'),
          overEvent = $.Event(type+'Over.jvectormap');

      if (e.type == 'mouseover') {
        map.container.trigger(overEvent, [code]);
        if (!overEvent.isDefaultPrevented()) {
          element.setHovered(true);
        }

        map.label.text(labelText);
        map.container.trigger(labelShowEvent, [map.label, code]);
        if (!labelShowEvent.isDefaultPrevented()) {
          map.label.show();
          map.labelWidth = map.label.width();
          map.labelHeight = map.label.height();
        }
      } else {
        element.setHovered(false);
        map.label.hide();
        map.container.trigger(type+'Out.jvectormap', [code]);
      }
    });

    this.container.delegate('.jvectormap-region, .jvectormap-marker', 'mousedown', function(e){
      mouseMoved = false;
    });

    this.container.delegate('.jvectormap-region, .jvectormap-marker', 'mouseup', function(e){
      var path = this,
          type = $(this).attr('class').indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? $(this).attr('data-code') : $(this).attr('data-index'),
          clickEvent = $.Event(type+'Click.jvectormap'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element;

      if (!mouseMoved) {
        map.container.trigger(clickEvent, [code]);
        if ((type === 'region' && map.params.regionsSelectable) || (type === 'marker' && map.params.markersSelectable)) {
          if (!clickEvent.isDefaultPrevented()) {
            element.setSelected(!element.isSelected);
          }
        }
      }
    });
  },

  bindZoomButtons: function() {
    var map = this;

    $('<div/>').addClass('jvectormap-zoomin').text('+').appendTo(this.container);
    $('<div/>').addClass('jvectormap-zoomout').html('&#x2212;').appendTo(this.container);

    this.container.find('.jvectormap-zoomin').click(function(){
      map.setScale(map.scale * map.params.zoomStep, map.width / 2, map.height / 2);
    });
    this.container.find('.jvectormap-zoomout').click(function(){
      map.setScale(map.scale / map.params.zoomStep, map.width / 2, map.height / 2);
    });
  },

  createLabel: function(){
    var map = this;

    this.label = $('<div/>').addClass('jvectormap-label').appendTo($('body'));

    this.container.mousemove(function(e){
      if (map.label.is(':visible')) {
        map.label.css({
          left: e.pageX-15-map.labelWidth,
          top: e.pageY-15-map.labelHeight
        })
      }
    });
  },

  setScale: function(scale, anchorX, anchorY, isCentered) {
    var zoomStep;

    if (scale > this.params.zoomMax * this.baseScale) {
      scale = this.params.zoomMax * this.baseScale;
    } else if (scale < this.params.zoomMin * this.baseScale) {
      scale = this.params.zoomMin * this.baseScale;
    }

    if (typeof anchorX != 'undefined' && typeof anchorY != 'undefined') {
      zoomStep = scale / this.scale;
      if (isCentered) {
        this.transX = anchorX + this.defaultWidth * (this.width / (this.defaultWidth * scale)) / 2;
        this.transY = anchorY + this.defaultHeight * (this.height / (this.defaultHeight * scale)) / 2;
      } else {
        this.transX -= (zoomStep - 1) / scale * anchorX;
        this.transY -= (zoomStep - 1) / scale * anchorY;
      }
    }

    this.scale = scale;
    this.applyTransform();
  },

  /**
   * Set the map's viewport to the specific point and set zoom of the map to the specific level. Point and zoom level could be defined in two ways: using the code of some region to focus on or a central point and zoom level as numbers.
   * @param {Number|String} scale|regionCode If the first parameter of this method is a string and there is a region with the same code, the viewport will be set to show the whole region. Otherwise if the first parameter is a number, the viewport will be to show the map with provided scale.
   * @param {Number} centerX Number from 0 to 1 specifying the horizontal coordinate of the central point of the viewport.
   * @param {Number} centerY Number from 0 to 1 specifying the vertical coordinate of the central point of the viewport.
   */
  setFocus: function(scale, centerX, centerY){
    var bbox;

    if (typeof scale === 'string' && this.regions[scale]) {
      bbox = this.regions[scale].element.getBBox();
      this.setScale(
        Math.min(this.width / bbox.width, this.height / bbox.height),
        - (bbox.x + bbox.width / 2),
        - (bbox.y + bbox.height / 2),
        true
      );
    } else {
      this.setScale(scale, - centerX * this.defaultWidth, - centerY * this.defaultHeight, true);
    }
  },

  /**
   * Return the codes of currently selected regions.
   * @returns {Array}
   */
  getSelectedRegions: function(){
    var key,
        selected = [];

    for (key in this.regions) {
      if (this.regions[key].element.isSelected) {
        selected.push(key);
      }
    }
    return selected;
  },

  /**
   * Return the codes of currently selected markers.
   * @returns {Array}
   */
  getSelectedMarkers: function(){
    var i,
        selected = [];

    for (i in this.markers) {
      if (this.markers[i].element.isSelected) {
        selected.push(i);
      }
    }
    return selected;
  },

  /**
   * Return the instance of WorldMap. Useful when instantiated as a jQuery plug-in.
   * @returns {WorldMap}
   */
  getMapObject: function(){
    return this;
  },

  /**
   * Return the name of the region by region code.
   * @returns {String}
   */
  getRegionName: function(code){
    return this.mapData.paths[code].name;
  },

  createRegions: function(){
    var key,
        region,
        map = this;

    for (key in this.mapData.paths) {
      region = this.canvas.addPath({
        d: this.mapData.paths[key].path,
        "data-code": key
      }, $.extend({}, this.params.regionStyle));
      $(region.node).bind('selected', function(e, isSelected){
        map.container.trigger('regionSelected.jvectormap', [$(this).attr('data-code'), isSelected, map.getSelectedRegions()]);
      });
      region.addClass('jvectormap-region');
      this.regions[key] = {
        element: region,
        config: this.mapData.paths[key]
      };
    }
  },

  createMarkers: function(markers) {
    var group = this.canvas.addGroup(),
        i,
        marker,
        point,
        markerConfig,
        markersArray,
        map = this;

    if ($.isArray(markers)) {
      markersArray = markers.slice();
      markers = {};
      for (i = 0; i < markersArray.length; i++) {
        markers[i] = markersArray[i];
      }
    }

    for (i in markers) {
      markerConfig = markers[i] instanceof Array ? {latLng: markers[i]} : markers[i];
      point = this.latLngToPoint.apply(this, markerConfig.latLng || [0, 0]);

      marker = this.canvas.addCircle({
        "data-index": i,
        cx: point.x,
        cy: point.y
      }, $.extend(true, {}, this.params.markerStyle, {initial: markerConfig.style || {}}), group);
      marker.addClass('jvectormap-marker');
      $(marker.node).bind('selected', function(e, isSelected){
        map.container.trigger('markerSelected.jvectormap', [$(this).attr('data-index'), isSelected, map.getSelectedMarkers()]);
      });
      if (this.markers[i]) {
        this.removeMarkers([i]);
      }
      this.markers[i] = {element: marker, config: markerConfig};
    }
  },

  repositionMarkers: function() {
    var i,
        point;

    for (i in this.markers) {
      point = this.latLngToPoint.apply(this, this.markers[i].config.latLng);
      this.markers[i].element.setStyle({cx: point.x, cy: point.y});
    }
  },

  /**
   * Add one marker to the map.
   * @param {String} key Marker unique code.
   * @param {Object} marker Marker configuration parameters.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarker: function(key, marker, seriesData){
    var markers = {},
        data = [],
        values,
        i;

    markers[key] = marker;

    for (i = 0; i < seriesData.length; i++) {
      values = {};
      values[key] = seriesData[i];
      data.push(values);
    }
    this.addMarkers(markers, data);
  },

  /**
   * Add set of marker to the map.
   * @param {Object|Array} markers Markers to add to the map. In case of array is provided, codes of markers will be set as string representations of array indexes.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarkers: function(markers, seriesData){
    var i;

    this.createMarkers(markers);
    for (i = 0; i < seriesData.length; i++) {
      this.series.markers[i].setValues(seriesData[i] || {});
    };
  },

  /**
   * Remove some markers from the map.
   * @param {Array} markers Array of marker codes to be removed.
   */
  removeMarkers: function(markers){
    var i;

    for (i = 0; i < markers.length; i++) {
      this.markers[ markers[i] ].element.remove();
      delete this.markers[ markers[i] ];
    };
  },

  /**
   * Remove all markers from the map.
   */
  clearMarkers: function(){
    var i,
        markers = [];

    for (i in this.markers) {
      markers.push(i);
    }
    this.removeMarkers(markers)
  },

  /**
   * Converts coordinates expressed as latitude and longtitude to the coordinates in pixels on the map.
   * @param {Number} lat Latitide of point in degrees.
   * @param {Number} lng Longtitude of point in degrees.
   */
  latLngToPoint: function(lat, lng) {
    var point,
        proj = jvm.WorldMap.maps[this.params.map].projection,
        centralMeridian = proj.centralMeridian,
        width = this.width - this.baseTransX * 2 * this.baseScale,
        height = this.height - this.baseTransY * 2 * this.baseScale,
        inset,
        bbox,
        scaleFactor = this.scale / this.baseScale;

    if (lng < (-180 + centralMeridian)) {
      lng += 360;
    }

    point = jvm.Proj[proj.type](lat, lng, centralMeridian);

    inset = this.getInsetForPoint(point.x, point.y);
    if (inset) {
      bbox = inset.bbox;

      point.x = (point.x - bbox[0].x) / (bbox[1].x - bbox[0].x) * inset.width * this.scale;
      point.y = (point.y - bbox[0].y) / (bbox[1].y - bbox[0].y) * inset.height * this.scale;

      return {
        x: point.x + this.transX*this.scale + inset.left*this.scale,
        y: point.y + this.transY*this.scale + inset.top*this.scale
      };
     } else {
       return {x: 0, y: 0};
     }
  },

  getInsetForPoint: function(x, y){
    var insets = jvm.WorldMap.maps[this.params.map].insets,
        i,
        bbox;

    for (i = 0; i < insets.length; i++) {
      bbox = insets[i].bbox;
      if (x > bbox[0].x && x < bbox[1].x && y > bbox[0].y && y < bbox[1].y) {
        return insets[i];
      }
    }
  },

  createSeries: function(){
    var i,
        key;

    this.series = {
      markers: [],
      regions: []
    };

    for (key in this.params.series) {
      for (i = 0; i < this.params.series[key].length; i++) {
        this.series[key][i] = new jvm.DataSeries(
          this.params.series[key][i],
          this[key]
        );
      }
    }
  }
};

jvm.WorldMap.maps = {};
jvm.WorldMap.circumference = 40075017;
jvm.WorldMap.defaultParams = {
  map: 'world_mill_en',
  backgroundColor: '#505050',
  zoomOnScroll: true,
  zoomMax: 8,
  zoomMin: 1,
  zoomStep: 1.6,
  regionsSelectable: false,
  markersSelectable: false,
  regionStyle: {
    initial: {
      fill: 'white',
      "fill-opacity": 1,
      stroke: 'none',
      "stroke-width": 0,
      "stroke-opacity": 1
    },
    hover: {
      "fill-opacity": 0.8
    },
    selected: {
      fill: 'yellow'
    },
    selectedHover: {
    }
  },
  markerStyle: {
    initial: {
      fill: 'grey',
      stroke: '#505050',
      "fill-opacity": 1,
      "stroke-width": 1,
      "stroke-opacity": 1,
      r: 5
    },
    hover: {
      stroke: 'black',
      "stroke-width": 2
    },
    selected: {
      fill: 'blue'
    },
    selectedHover: {
    }
  }
};
jvm.WorldMap.apiEvents = {
  onRegionLabelShow: 'regionLabelShow',
  onRegionOver: 'regionOver',
  onRegionOut: 'regionOut',
  onRegionClick: 'regionClick',
  onRegionSelected: 'regionSelected',
  onMarkerLabelShow: 'markerLabelShow',
  onMarkerOver: 'markerOver',
  onMarkerOut: 'markerOut',
  onMarkerClick: 'markerClick',
  onMarkerSelected: 'markerSelected'
};
;

window._EXPLORER_DATASET = {"country": [{"alpha2": "AF", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 24.2727, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 50, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 6.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 1, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 67, "106": 100, "59l": "c", "104": -1, "105": -1, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 71, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 1, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "b", "obi": 8.33696, "roundobi_iyr": 50, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Afghanistan", "region": "South Asia", "48l": "d", "roundobi": 8, "roundobi_yer": 10, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "AFG", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 24, "104l": "e", "23l": "d", "q99bl": "e", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 0, "65": 67, "33l": "d", "q58b": 67, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 7, "obi_yer": 10, "105l": "c", "106l": "a"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 33, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 47.1667, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.4286, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 67, "12l": "b", "111l": null, "86": 0, "obi_iyr": 87.5, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "d", "q58bl": "a", "39l": "d", "58": 67, "q56bl": "d", "81l": "a", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 26.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 100, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 1, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "a", "q63bl": "e", "8l": "d", "82l": "b", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 72, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "b", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 1, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 2, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 21.0326, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 92, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Afghanistan", "region": "South Asia", "48l": "d", "roundobi": 21, "roundobi_yer": 27, "myr": "HC", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 67, "55l": "d", "ar": "HC", "61l": "d", "77l": "a", "14l": "d", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "d", "63": 100, "countrylet": "AFG", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 47, "104l": "e", "23l": "b", "q99bl": "e", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 67, "74": 100, "73": 100, "72": 100, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "d", "79": 0, "78": 0, "q59bl": "b", "51": 0, "q60b": 0, "q57b": 0, "65": 33, "33l": "d", "q58b": 100, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 27, "obi_yer": 26.7, "105l": "a", "106l": "a"}, "name": "Afghanistan", "db_2012": {"35l": "e", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 48.4545, "26l": "a", "67l": "a", "115l": "c", "30l": "a", "71l": "d", "47l": "b", "90": 0, "109l": "a", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 67, "20": 33, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 67, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 0, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": -1, "obi_iyr": 87.5, "13l": "b", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 67, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "c", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "b", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 100, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 58, "117l": "d", "43l": "d", "100l": "b", "51l": "a", "roundobi_ebp": 67, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "c", "11l": "c", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "a", "19l": "c", "108": 0, "109": 100, "112l": "c", "98l": "c", "31l": "b", "102": 33, "103": 0, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": -1, "42l": "c", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 100, "36": -1, "35": -1, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "a", "22l": "d", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 58.25, "97l": "b", "year": 2012, "rank": 26, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "a", "114l": "c", "107": 100, "118l": "d", "2": 33, "50l": "a", "86l": "e", "6": 33, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 66.6727, "q97bl": null, "17l": "c", "countryid": 1, "25l": "a", "112": 33, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "e", "comp1012": 1, "99": 33, "98": 33, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "a", "11": 33, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "d", "16": 33, "19": 33, "18": 100, "65l": "a", "obi": 58.6154, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Afghanistan", "region": "South Asia", "48l": "b", "roundobi": 59, "roundobi_yer": 37, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "c", "ar": "IU", "61l": "a", "77l": "a", "14l": "b", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "a", "28l": "b", "63": 100, "countrylet": "AFG", "48": 67, "49": 33, "46": 100, "47": 67, "44": 33, "45": 0, "42": 33, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 48, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 100, "116l": "c", "60l": "a", "74l": "d", "15l": "b", "79": 67, "78": 0, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 37.1111, "105l": "a", "106l": "d"}}, {"alpha2": "AL", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 29, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 41.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 67, "20": 33, "21": 0, "22": 33, "23": 100, "41l": "c", "q56b": 33, "53l": "d", "28": 67, "29": 67, "5l": "b", "obi_ar": 28.7143, "4": 0, "8": 33, "96": 67, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.625, "13l": "c", "120": 67, "121": 33, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "c", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "c", "sai_obi": 66.8, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "c", "roundobi_ebp": 40, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "c", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "b", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 0, "31": 100, "30": 100, "37": 33, "36": 67, "35": 100, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 49, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 33, "96l": "b", "102l": "d", "88l": "b", "1l": "c", "q79bl": "a", "obi_ebp": 40.0556, "q97bl": "c", "17l": "c", "countryid": 2, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 100, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 37.3297, "roundobi_iyr": 92, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Albania", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 37, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "d", "14l": "c", "87l": "b", "89l": "d", "20l": "c", "87": 67, "68l": "a", "28l": "b", "63": 100, "countrylet": "ALB", "48": 33, "49": 33, "46": -1, "47": 0, "44": 0, "45": 0, "42": 33, "43": 33, "40": 0, "41": 33, "1": 33, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 0, "q57b": 0, "65": 33, "33l": "c", "q58b": 33, "80l": "d", "7l": "b", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 67, "obi_yer": 0, "105l": "a", "106l": "d"}, "name": "Albania", "db_2012": {"35l": "b", "72l": "b", "roundobi_ar": 53, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 51.5455, "26l": "b", "67l": "a", "115l": "d", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 67, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 33, "29": 100, "5l": "a", "obi_ar": 52.5714, "4": 100, "8": 67, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 95.875, "13l": "a", "120": 67, "121": 33, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "b", "24l": "c", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 50, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 67, "109": 0, "112l": "d", "98l": "b", "31l": "b", "102": 33, "103": 33, "100": 100, "101": 100, "106": 0, "59l": "b", "104": 100, "105": 0, "101l": "a", "91l": "b", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 67, "30": 100, "37": 67, "36": 100, "35": 67, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 52, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 33, "96l": "a", "102l": "c", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 50.0172, "q97bl": null, "17l": "d", "countryid": 2, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "a", "comp1012": 1, "99": 67, "98": 67, "45l": "d", "57l": "a", "91": 67, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 0, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "c", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 46.6947, "roundobi_iyr": 96, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Albania", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 47, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "d", "14l": "a", "87l": "b", "89l": "b", "20l": "b", "87": 67, "68l": "a", "28l": "c", "63": 100, "countrylet": "ALB", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 52, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 24, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 44.5, "26l": "b", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 67, "27": 67, "20": 67, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 33, "29": 0, "5l": "a", "obi_ar": 23.8571, "4": 67, "8": 33, "96": 33, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": 67, "12l": "b", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "c", "120": 67, "121": 33, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "b", "q99b": 33, "108l": "d", "2l": "c", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "d", "sai_obi": 50, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "c", "83": 33, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 31, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "c", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "d", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 33, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 33, "30": 0, "37": 0, "36": 67, "35": 100, "34": 0, "q64bl": "c", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 64, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 33, "50l": "b", "86l": "d", "6": 100, "96l": "c", "102l": "c", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 30.8909, "q97bl": "c", "17l": "c", "countryid": 2, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 0, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 33, "18": 33, "65l": "c", "obi": 32.9674, "roundobi_iyr": 79, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Albania", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 33, "roundobi_yer": 17, "myr": "IU", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "d", "ar": "HC", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "b", "20l": "b", "87": 67, "68l": "a", "28l": "c", "63": 67, "countrylet": "ALB", "48": 33, "49": 67, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 45, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": "b", "51": 33, "q60b": 0, "q57b": 67, "65": 33, "33l": "c", "q58b": 67, "80l": "d", "7l": "b", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 50, "obi_yer": 16.6, "105l": "a", "106l": "d"}, "db_2006": {"35l": "a", "72l": "b", "roundobi_ar": 34, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 47.1667, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "c", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.5, "4": 33, "8": 33, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 75, "13l": "c", "120": 67, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "c", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 62.625, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 17, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "c", "82l": "d", "11l": "a", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "c", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 67, "35": 100, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 67, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 49, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "d", "86l": "c", "6": 0, "96l": "b", "102l": "c", "88l": "b", "1l": "c", "q79bl": "b", "obi_ebp": 17.2407, "q97bl": "c", "17l": "d", "countryid": 2, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 67, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 24.8901, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Albania", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 25, "roundobi_yer": 20, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "d", "20l": "d", "87": 67, "68l": "b", "28l": "d", "63": 67, "countrylet": "ALB", "48": 33, "49": 0, "46": -1, "47": 0, "44": 0, "45": 0, "42": 33, "43": 33, "40": 0, "41": 33, "1": 33, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 33, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 33, "80l": "c", "7l": "b", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 63, "obi_yer": 19.9, "105l": "a", "106l": "d"}}, {"alpha2": "DZ", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.5, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 16.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 79, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 3, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.81522, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Algeria", "region": "Middle East & North Africa", "48l": "d", "roundobi": 2, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "DZA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 67, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 17, "obi_yer": 0, "105l": "a", "106l": "d"}, "name": "Algeria", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 21.1818, "26l": "d", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 33, "26": 0, "27": 100, "20": 33, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.5, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 67, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 20, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 0, "103": 0, "100": 33, "101": 100, "106": 100, "59l": "d", "104": 0, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 67, "31": 100, "30": 100, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 83, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 0, "118l": "b", "2": 33, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "c", "q79bl": null, "obi_ebp": 20.1034, "q97bl": null, "17l": "d", "countryid": 3, "25l": "c", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 67, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 13.3263, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Algeria", "region": "Middle East & North Africa", "48l": "d", "roundobi": 13, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "DZA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 33, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 21, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "b", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 34, "obi_yer": 0, "105l": "b", "106l": "a"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 13.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 89, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 3, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.728261, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Algeria", "region": "Middle East & North Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "DZA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 0, "105l": "b", "106l": "a"}, "db_2006": {"35l": "b", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 38.8333, "26l": "c", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 33, "27": 33, "20": 33, "21": 33, "22": 33, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 33, "29": 33, "5l": "a", "obi_ar": 0, "4": 33, "8": 33, "96": 0, "reg_mena": 1, "49l": "b", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "c", "39l": "c", "58": 0, "q56bl": "b", "81l": "c", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "c", "24l": "c", "sai_obi": 12.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 41, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "b", "q63b": 0, "92": 33, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "c", "82l": "c", "11l": "c", "comp0608": 0, "27l": "c", "29l": "c", "92l": "c", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "a", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 33, "30": 100, "37": 33, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 33, "88": 0, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 47, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "d", "86l": "c", "6": 33, "96l": "d", "102l": "d", "88l": "d", "1l": "b", "q79bl": "b", "obi_ebp": 40.5273, "q97bl": "c", "17l": "c", "countryid": 3, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 67, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 33, "10": 33, "13": 0, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 33, "19": 33, "18": 67, "65l": "e", "obi": 28.1957, "roundobi_iyr": 0, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "c", "111": -1, "q80bl": null, "country": "Algeria", "region": "Middle East & North Africa", "48l": "b", "roundobi": 28, "roundobi_yer": 30, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "c", "ar": "IU", "61l": "d", "77l": "c", "14l": "b", "87l": "d", "89l": "d", "20l": "c", "87": 0, "68l": "d", "28l": "c", "63": 0, "countrylet": "DZA", "48": 67, "49": 67, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 67, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 67, "65": -1, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 29.8, "105l": "a", "106l": "d"}}, {"alpha2": "AO", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "c", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "c", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 10, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 33, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 33, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 33, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "c", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 1, "53": 0, "cb": "HC", "obi_cb": 33, "97l": "e", "year": 2008, "rank": 76, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 4, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 3.97826, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Angola", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 4, "roundobi_yer": 13, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "ANG", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 10, "obi_yer": 13.3, "105l": "a", "106l": "d"}, "name": "Angola", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 18.1818, "26l": "d", "67l": "b", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 100, "26": 0, "27": 33, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "c", "q56b": null, "53l": "d", "28": 0, "29": 67, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 79.25, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "c", "sai_obi": 25, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 30, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "c", "29l": "b", "92l": "b", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "c", "102": 0, "103": 0, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 0, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 100, "31": 33, "30": 100, "37": 0, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 73, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 0, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 29.8448, "q97bl": null, "17l": "c", "countryid": 4, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": 33, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 67, "103l": "d", "16": 0, "19": 33, "18": 0, "65l": "d", "obi": 27.6947, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Angola", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 28, "roundobi_yer": 17, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "ANG", "48": 33, "49": 0, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 18, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 16.6, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 22.25, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 67, "20": 33, "21": 0, "22": 0, "23": 100, "41l": "c", "q56b": 67, "53l": "d", "28": 67, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "c", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "b", "sai_obi": 10, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 67, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 35, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "b", "29l": "d", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 0, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 100, "31": 67, "30": 100, "37": 33, "36": 33, "35": 0, "34": 33, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 70, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 35.1091, "q97bl": "c", "17l": "d", "countryid": 4, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 33, "18": 0, "65l": "d", "obi": 26.0652, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Angola", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 26, "roundobi_yer": 27, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 33, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "c", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "d", "28l": "b", "63": 0, "countrylet": "ANG", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 33, "41": 33, "1": 100, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 22, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 33, "65": 0, "33l": "c", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 10, "obi_yer": 26.7, "105l": "a", "106l": "d"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 22.25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "c", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 12.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 33, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "d", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 33, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": 0, "88": 0, "q60bl": "d", "79l": "c", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 33, "97l": "e", "year": 2006, "rank": 58, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 4, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 4.69565, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": null, "country": "Angola", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 5, "roundobi_yer": 23, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "d", "ar": "NP", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "ANG", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 22, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 23.2, "105l": "a", "106l": "d"}}, {"alpha2": "AR", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 24, "pub_pbs": 0, "113l": "c", "54l": "b", "leg_obi": 41.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 23.8571, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 33, "obi_iyr": 87.625, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "c", "58": 100, "q56bl": "a", "81l": "b", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "b", "sai_obi": 46.7, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "c", "83": 67, "80": 100, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 61, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 0, "30": 0, "37": 33, "36": 67, "35": 33, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 25, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 67, "96l": "b", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 61.0556, "q97bl": "c", "17l": "d", "countryid": 5, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "b", "obi": 56.022, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Argentina", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 56, "roundobi_yer": 53, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "ARG", "48": 33, "49": 0, "46": 0, "47": 100, "44": -1, "45": 100, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 33, "q59bl": "e", "51": 33, "q60b": 67, "q57b": 67, "65": 67, "33l": "c", "q58b": 0, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 47, "obi_yer": 53.3, "105l": "b", "106l": "a"}, "name": "Argentina", "db_2012": {"35l": "b", "72l": "a", "roundobi_ar": 33, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 29.9, "26l": "a", "67l": "a", "115l": "d", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 100, "27": 100, "20": 100, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 33.4286, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 95.875, "13l": "b", "120": 33, "121": 33, "122": 67, "123": 67, "124": 100, "125": 33, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "a", "24l": "c", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 33, "44l": "e", "123l": "b", "83": 67, "80": 100, "81": 67, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 54, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 0, "103": 0, "100": 67, "101": 100, "106": -1, "59l": "c", "104": 33, "105": 0, "101l": "a", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 100, "36": 67, "35": 67, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "b", "q97b": null, "83l": "b", "grade_leg": "Weak", "16l": "b", "37l": "a", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 40, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "c", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "a", "86l": "b", "6": 33, "96l": "b", "102l": "d", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 54.386, "q97bl": null, "17l": "d", "countryid": 5, "25l": "d", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": 33, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "d", "16": 67, "19": 100, "18": 100, "65l": "a", "obi": 50.0213, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "Argentina", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 50, "roundobi_yer": 50, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "ARG", "48": 100, "49": 0, "46": 0, "47": 100, "44": -1, "45": 100, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 30, "104l": "c", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "d", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 50.1, "105l": "b", "106l": "e"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 24, "pub_pbs": 0, "113l": "c", "54l": "b", "leg_obi": 41.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 0, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 23.8571, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 33, "obi_iyr": 95.875, "13l": "b", "120": 67, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "c", "58": 100, "q56bl": "a", "81l": "b", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 46.7, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "c", "83": 67, "80": 100, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 60, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 0, "30": 0, "37": 33, "36": 33, "35": 67, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 30, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 67, "96l": "b", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 60.4444, "q97bl": "c", "17l": "d", "countryid": 5, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "b", "obi": 56.3846, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Argentina", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 56, "roundobi_yer": 53, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "ARG", "48": 33, "49": 0, "46": 0, "47": 100, "44": -1, "45": 100, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 33, "q59bl": "e", "51": 33, "q60b": 100, "q57b": 67, "65": 67, "33l": "b", "q58b": 0, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 47, "obi_yer": 53.3, "105l": "b", "106l": "a"}, "db_2006": {"35l": "b", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "b", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 67, "27": 100, "20": 67, "21": 33, "22": 67, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 66.75, "13l": "c", "120": 67, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "c", "q58bl": "d", "39l": "c", "58": 100, "q56bl": "a", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "c", "sai_obi": 33.375, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 33, "80": 0, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 45, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": 33, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "b", "92l": "b", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 67, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 0, "88": 0, "q60bl": "c", "79l": "c", "q97b": 67, "83l": "c", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 37, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "b", "86l": "c", "6": 100, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 44.8, "q97bl": "b", "17l": "d", "countryid": 5, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "b", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 33, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "e", "obi": 39.8261, "roundobi_iyr": 67, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Argentina", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 40, "roundobi_yer": 27, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "ARG", "48": 33, "49": 33, "46": 33, "47": 100, "44": 0, "45": 33, "42": 33, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 33, "78": 33, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": -1, "33l": "d", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "b", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 26.5, "105l": "b", "106l": "d"}}, {"alpha2": "AZ", "db_2008": {"35l": "b", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 24.9167, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 24.75, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "c", "39l": "c", "58": 33, "q56bl": "a", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "c", "54": 0, "57": 33, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 10, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "c", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 50, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 0, "84l": "c", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "c", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "d", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 33, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "c", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 67, "34": 33, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 50, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "c", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 49.6364, "q97bl": "c", "17l": "c", "countryid": 6, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 67, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 36.5109, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 25, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "c", "111": -1, "q80bl": "e", "country": "Azerbaijan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 37, "roundobi_yer": 33, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 33, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "AZE", "48": 33, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "c", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 33, "74": 33, "73": 33, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "c", "15l": "c", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 10, "obi_yer": 33.1, "105l": "a", "106l": "d"}, "name": "Azerbaijan", "db_2012": {"35l": "b", "72l": "a", "roundobi_ar": 29, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 39.3636, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 16.5, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 28.5714, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 45.875, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 33, "76l": "c", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 67, "q56bl": null, "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "c", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "b", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "c", "sai_obi": 33.25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "c", "123l": "c", "83": 0, "80": 67, "81": 33, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 53, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "a", "64l": "c", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "d", "19l": "b", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 0, "103": 67, "100": 33, "101": 33, "106": 0, "59l": "c", "104": 67, "105": 100, "101l": "c", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "b", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 67, "34": 33, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 58, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 33, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": null, "125l": "c", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 67, "50l": "c", "86l": "c", "6": 33, "96l": "d", "102l": "d", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 53.4138, "q97bl": null, "17l": "c", "countryid": 6, "25l": "a", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 67, "98": 33, "45l": "d", "57l": "b", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 67, "10": 33, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 42.4211, "roundobi_iyr": 46, "18l": "a", "roundobi_myr": 17, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Azerbaijan", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 42, "roundobi_yer": 27, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "AZE", "48": 67, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 33, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "c", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 33, "obi_yer": 26.6, "105l": "a", "106l": "d"}, "db_2010": {"35l": "b", "72l": "b", "roundobi_ar": 33, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 33.25, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 33, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 33.4286, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 54.125, "13l": "c", "120": 33, "121": 0, "122": 33, "123": 33, "124": -1, "125": -1, "76l": "c", "15": 33, "21l": "d", "q58bl": "c", "39l": "c", "58": 33, "q56bl": "a", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "c", "54": 0, "57": 33, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "b", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 20, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 67, "44l": "c", "123l": "c", "83": 0, "80": 33, "81": 33, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 51, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "c", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 33, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "c", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 67, "34": 33, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 52, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 33, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 50.8545, "q97bl": "c", "17l": "c", "countryid": 6, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 0, "122l": "c", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 67, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 43.413, "roundobi_iyr": 54, "18l": "a", "roundobi_myr": 33, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Azerbaijan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 43, "roundobi_yer": 20, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "b", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "AZE", "48": 33, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 33, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "c", "75": 33, "74": 33, "73": 33, "72": 67, "71": 33, "70": 33, "116l": "e", "60l": "d", "74l": "c", "15l": "c", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "c", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 20, "obi_yer": 19.9, "105l": "a", "106l": "d"}, "db_2006": {"35l": "c", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 22.1667, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 0, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 48, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": 0, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "d", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 33, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 33, "88": 0, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 45, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 47.8545, "q97bl": "d", "17l": "c", "countryid": 6, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "e", "obi": 30.0543, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Azerbaijan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 30, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "AZE", "48": 33, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 22, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": -1, "33l": "d", "q58b": 67, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "a", "106l": "d"}}, {"alpha2": "BD", "db_2008": {"35l": "c", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 8.33333, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75.25, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "d", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 100, "10l": "d", "24l": "a", "sai_obi": 26.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 58, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 44, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 67, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 58.1273, "q97bl": "d", "17l": "c", "countryid": 7, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "c", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 67, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 41.6522, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 67, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bangladesh", "region": "South Asia", "48l": "b", "roundobi": 42, "roundobi_yer": 0, "myr": "NP", "q70bl": "b", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "BGD", "48": 67, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 8, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 0, "65": 67, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "b", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Bangladesh", "db_2012": {"35l": "c", "72l": "c", "roundobi_ar": 10, "pub_pbs": 0, "113l": "c", "54l": "a", "leg_obi": 57.5455, "26l": "a", "67l": "a", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 66.75, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 9.57143, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 87.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "b", "15": 33, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "d", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "c", "q99b": null, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "a", "24l": "b", "sai_obi": 66.75, "q63cl": null, "eb": "HC", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 0, "113": 33, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 76, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 100, "103": 100, "100": 67, "101": 67, "106": 67, "59l": "a", "104": 0, "105": 0, "101l": "b", "91l": "d", "39": 67, "38": 67, "42l": "a", "58l": "a", "76": 67, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 28, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 33, "118l": "d", "2": 100, "50l": "b", "86l": "d", "6": 67, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 75.8966, "q97bl": null, "17l": "a", "countryid": 7, "25l": "a", "112": 0, "38l": "b", "reg_eap": 0, "pub_yer": 0, "6l": "b", "36l": "c", "comp1012": 1, "99": 33, "98": 33, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 0, "97": 100, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "a", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 57.9263, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 67, "52l": "b", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Bangladesh", "region": "South Asia", "48l": "a", "roundobi": 58, "roundobi_yer": 0, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "a", "ar": "NP", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "BGD", "48": 100, "49": 100, "46": 0, "47": 0, "44": 67, "45": 0, "42": 100, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 58, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 33, "74": 67, "73": 100, "72": 33, "71": 0, "70": 100, "116l": "c", "60l": "d", "74l": "b", "15l": "c", "79": 0, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 67, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 27.75, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "a", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "b", "24l": "b", "sai_obi": 30, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 63, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 0, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 33, "42l": "b", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 46, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 67, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": "a", "obi_ebp": 63.0182, "q97bl": "c", "17l": "c", "countryid": 7, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "b", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 100, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 47.8261, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 67, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bangladesh", "region": "South Asia", "48l": "b", "roundobi": 48, "roundobi_yer": 0, "myr": "NP", "q70bl": "b", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "BGD", "48": 67, "49": 67, "46": 0, "47": 0, "44": 33, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 28, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 67, "33l": "b", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "b", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 30, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2006": {"35l": "c", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 24.9167, "26l": "a", "67l": "c", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 58.375, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "d", "24l": "a", "sai_obi": 37.375, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 56, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "c", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 67, "101": 33, "106": 67, "59l": "c", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 0, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 38, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 33, "66": 67, "67": 33, "68": 67, "69": 100, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 55.6909, "q97bl": "c", "17l": "c", "countryid": 7, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 33, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 67, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 39.4457, "roundobi_iyr": 58, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 67, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Bangladesh", "region": "South Asia", "48l": "b", "roundobi": 39, "roundobi_yer": 0, "myr": "IU", "q70bl": "b", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "b", "28l": "a", "63": 33, "countrylet": "BGD", "48": 67, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 33, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "b", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 37, "obi_yer": 0, "105l": "b", "106l": "b"}}, {"alpha2": "BJ", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 45.4545, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 41.5, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 100, "103": 0, "100": 33, "101": 33, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 96, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 8, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 0, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.4, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Benin", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "BEN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 45, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 0, "105l": "a", "106l": "d"}, "name": "Benin"}, {"alpha2": "BO", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 9, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 9.42857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 20.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 39.9, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 74, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 67, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 9, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 6.52174, "roundobi_iyr": 21, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bolivia", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 7, "roundobi_yer": 17, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 0, "countrylet": "BOL", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 67, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 40, "obi_yer": 16.7, "105l": "b", "106l": "a"}, "name": "Bolivia", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 24, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 45.4545, "26l": "d", "67l": "b", "115l": "d", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 23.7143, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 79.375, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 33, "119": 33, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 33, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 84, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 67, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "d", "88l": "c", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 9, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 100, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "c", "16": 0, "19": 0, "18": 0, "65l": "b", "obi": 11.9368, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Bolivia", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 12, "roundobi_yer": 13, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "a", "89l": "b", "20l": "d", "87": 100, "68l": "b", "28l": "d", "63": 100, "countrylet": "BOL", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 45, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 67, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "b", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 13.3, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 29, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 41.6667, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 28.5714, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "b", "111l": null, "86": 0, "obi_iyr": 91.75, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 36.6, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 78, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "d", "q79bl": "a", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 9, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 100, "93": 0, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 13.413, "roundobi_iyr": 92, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bolivia", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 13, "roundobi_yer": 10, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "b", "28l": "d", "63": 100, "countrylet": "BOL", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 33, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": 33, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 37, "obi_yer": 10, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 25, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 50, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 25, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "c", "120": 67, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "c", "81l": "a", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "c", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "d", "sai_obi": 41.625, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 0, "80": 100, "81": 100, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 22, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 100, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "d", "79l": "a", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 50, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 21.8, "q97bl": "b", "17l": "d", "countryid": 9, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "d", "91": 0, "q79b": 33, "93": 67, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 20.6413, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Bolivia", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 21, "roundobi_yer": 40, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "a", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "BOL", "48": 0, "49": 0, "46": 100, "47": 100, "44": 100, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 33, "65": -1, "33l": "d", "q58b": 33, "80l": "a", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 42, "obi_yer": 40, "105l": "a", "106l": "a"}}, {"alpha2": "BA", "db_2008": {"35l": "e", "72l": "b", "roundobi_ar": 89, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 44.4167, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 0, "26": 0, "27": 100, "20": 100, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 88.8333, "4": 0, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "d", "111l": null, "86": -1, "obi_iyr": 66.75, "13l": "a", "120": 0, "121": 0, "122": 33, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "b", "17": 0, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "a", "24l": "b", "sai_obi": 90, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "c", "123l": "b", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 33, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "e", "39": 0, "38": -1, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": -1, "36": -1, "35": -1, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "e", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 40, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "e", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 33.3333, "q97bl": "c", "17l": "d", "countryid": 10, "25l": "d", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "e", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": -1, "q79b": 0, "93": 100, "122l": "c", "95": 33, "94": 100, "97": -1, "62l": "a", "11": 33, "10": 100, "13": 100, "12": 0, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "b", "obi": 44.2093, "roundobi_iyr": 67, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bosnia and Herzegovina", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 44, "roundobi_yer": 48, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "BIH", "48": 0, "49": 0, "46": 100, "47": 100, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 44, "104l": "e", "23l": "d", "q99bl": "e", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "b", "79": 67, "78": 100, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": 67, "33l": "d", "q58b": 33, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "a", "119l": "c", "q64b": 0, "95l": "c", "roundsai_obi": 90, "obi_yer": 48.2222, "105l": "a", "106l": "d"}, "db_2010": {"35l": "e", "72l": "b", "roundobi_ar": 95, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 33.25, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 100, "20": 100, "21": 0, "22": 100, "23": 0, "41l": "e", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 94.5, "4": 0, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": -1, "obi_iyr": 75.125, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 93.4, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "b", "83": 0, "80": 67, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 31, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 33, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "e", "39": 0, "38": -1, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": -1, "36": -1, "35": -1, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "e", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 51, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "e", "6": 0, "96l": "a", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 31.32, "q97bl": "b", "17l": "d", "countryid": 10, "25l": "d", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "e", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": -1, "q79b": 100, "93": 100, "122l": "d", "95": 67, "94": 100, "97": -1, "62l": "a", "11": 33, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 67, "19": 0, "18": 100, "65l": "c", "obi": 44.3294, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Bosnia and Herzegovina", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 44, "roundobi_yer": 48, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "c", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "BIH", "48": 33, "49": 0, "46": 100, "47": 100, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "b", "q99bl": "e", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "d", "q58b": 33, "80l": "b", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "b", "roundsai_obi": 93, "obi_yer": 48.2222, "105l": "a", "106l": "d"}, "name": "Bosnia and Herzegovina", "db_2012": {"35l": "e", "72l": "b", "roundobi_ar": 89, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 42.3636, "26l": "a", "67l": "b", "115l": "d", "30l": "b", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 0, "41l": "e", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 89, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": -1, "obi_iyr": 70.875, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "d", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 67, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "c", "123l": "c", "83": 0, "80": 67, "81": 100, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 48, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "d", "108": 100, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 0, "103": 0, "100": 100, "101": 33, "106": 0, "59l": "c", "104": 100, "105": 100, "101l": "c", "91l": "e", "39": 0, "38": -1, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": -1, "36": 0, "35": -1, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "e", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 43, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 100, "118l": "d", "2": 0, "50l": "b", "86l": "e", "6": 0, "96l": "a", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 47.5185, "q97bl": null, "17l": "a", "countryid": 10, "25l": "d", "112": 0, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": 33, "45l": "c", "57l": "a", "91": -1, "q79b": null, "93": 100, "122l": "d", "95": 67, "94": 100, "97": 0, "62l": "a", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "d", "16": 67, "19": 0, "18": 100, "65l": "c", "obi": 49.8202, "roundobi_iyr": 71, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "HC", "85l": "d", "111": 0, "q80bl": null, "country": "Bosnia and Herzegovina", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 50, "roundobi_yer": 48, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 100, "55l": "d", "ar": "PW", "61l": "a", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "BIH", "48": 67, "49": 0, "46": 100, "47": 100, "44": 33, "45": 33, "42": 0, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 0, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 33, "33l": "d", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "b", "roundsai_obi": 100, "obi_yer": 48.2222, "105l": "a", "106l": "d"}}, {"alpha2": "BW", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 57, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 55.5833, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 57.1429, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75.125, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "b", "81l": "b", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 56.7, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 70, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "b", "q97b": 100, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 15, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 69.7273, "q97bl": "a", "17l": "c", "countryid": 11, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 67, "122l": "d", "95": 33, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "a", "obi": 62, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Botswana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 62, "roundobi_yer": 47, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 67, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "BWA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 67, "40": 0, "41": 67, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 33, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 100, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 100, "33l": "a", "q58b": 0, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 57, "obi_yer": 46.8, "105l": "a", "106l": "a"}, "name": "Botswana", "db_2012": {"35l": "b", "72l": "d", "roundobi_ar": 52, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 57.6364, "26l": "a", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 52.4286, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "b", "86": 33, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "a", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "HC", "115": 33, "114": 67, "117": 0, "116": 67, "ebp": "PW", "110": 67, "113": 33, "44l": "a", "123l": "c", "83": 0, "80": 67, "81": 0, "119": 0, "118": 33, "obi_cat": "Some", "roundobi_cb": 59, "117l": "d", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 61, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 100, "109": 67, "112l": "c", "98l": "d", "31l": "a", "102": 100, "103": 0, "100": 67, "101": 67, "106": 100, "59l": "d", "104": 67, "105": 100, "101l": "b", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 58.5, "97l": "c", "year": 2012, "rank": 45, "60": 67, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "b", "114l": "b", "107": 100, "118l": "c", "2": 100, "50l": "d", "86l": "c", "6": 0, "96l": "c", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 60.9483, "q97bl": null, "17l": "c", "countryid": 11, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 100, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 33, "62l": "b", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "d", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 49.5158, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 67, "q80bl": null, "country": "Botswana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 50, "roundobi_yer": 27, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "HC", "61l": "a", "77l": "b", "14l": "c", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "BWA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 67, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "b", "60l": "b", "74l": "d", "15l": "c", "79": 33, "78": 67, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 26.7, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "d", "roundobi_ar": 57, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 55.5833, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 57.1429, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 100, "108l": "a", "2l": "a", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 73.3, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "a", "123l": "c", "83": 0, "80": 67, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 65, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "b", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 39, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 64.8545, "q97bl": "c", "17l": "c", "countryid": 11, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 50.75, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Botswana", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 51, "roundobi_yer": 34, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 67, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "BWA", "48": 33, "49": 33, "46": 100, "47": 0, "44": 100, "45": 0, "42": 67, "43": 67, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 67, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "a", "q58b": 0, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 73, "obi_yer": 33.5, "105l": "a", "106l": "a"}, "db_2006": {"35l": "b", "72l": "a", "roundobi_ar": 67, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 50.0833, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.75, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "a", "81l": "b", "17": 67, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "c", "q99b": 100, "108l": "b", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 58.375, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "a", "123l": "e", "83": 0, "80": 100, "81": 67, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "c", "roundobi_ebp": 75, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 0, "92": 0, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "b", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 67, "38": 67, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": 100, "88": 100, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 14, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 74.7407, "q97bl": "b", "17l": "b", "countryid": 11, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 67, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 65.2637, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Botswana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 65, "roundobi_yer": 47, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 67, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "BWA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 100, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "a", "q58b": 0, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 58, "obi_yer": 46.8, "105l": "a", "106l": "a"}}, {"alpha2": "BR", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 56, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 56.7, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": -1, "23": 100, "41l": "a", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 55.6667, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "d", "q59b": 67, "12l": "a", "111l": null, "86": 67, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 33, "122": 67, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "a", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "b", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "b", "sai_obi": 53.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "a", "83": 67, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "b", "51l": "c", "roundobi_ebp": 78, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "e", "q63b": null, "92": 100, "84l": "c", "90l": "d", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": -1, "59l": "a", "104": -1, "105": -1, "101l": "a", "91l": "b", "39": 0, "38": 33, "42l": "b", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 0, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": -1, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "e", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 8, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "b", "6": 100, "96l": "d", "102l": "d", "88l": "e", "1l": "a", "q79bl": "b", "obi_ebp": 77.7963, "q97bl": "b", "17l": "b", "countryid": 12, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "d", "91": 67, "q79b": 0, "93": 0, "122l": "b", "95": 67, "94": 67, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 74.191, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Brazil", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 74, "roundobi_yer": 85, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "BRA", "48": 67, "49": 100, "46": 100, "47": 100, "44": 0, "45": 67, "42": 67, "43": 100, "40": 0, "41": 100, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 33, "9": 0, "85": 100, "73l": "d", "roundleg_obi": 57, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 100, "78": -1, "q59bl": "b", "51": 33, "q60b": 100, "q57b": 100, "65": 67, "33l": "a", "q58b": 67, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "b", "119l": "b", "q64b": 100, "95l": "b", "roundsai_obi": 53, "obi_yer": 85.2222, "105l": "c", "106l": "e"}, "name": "Brazil", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 71, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 60.6364, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.2857, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 79.25, "13l": "a", "120": 33, "121": 33, "122": 0, "123": 100, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 33, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "d", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 67, "117": 0, "116": 67, "ebp": "PW", "110": 100, "113": 100, "44l": "d", "123l": "a", "83": 100, "80": 67, "81": 100, "119": 33, "118": 0, "obi_cat": "Significant", "roundobi_cb": 58, "117l": "d", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 78, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 100, "109": 100, "112l": "c", "98l": "a", "31l": "a", "102": 0, "103": 67, "100": 33, "101": 100, "106": 0, "59l": "a", "104": 67, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 33, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "b", "q97b": null, "83l": "a", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "b", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 58.25, "97l": "a", "year": 2012, "rank": 12, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "a", "114l": "b", "107": 100, "118l": "d", "2": 67, "50l": "a", "86l": "d", "6": 100, "96l": "c", "102l": "d", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 78.2241, "q97bl": null, "17l": "b", "countryid": 12, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 100, "98": 100, "45l": "b", "57l": "c", "91": 33, "q79b": null, "93": 100, "122l": "d", "95": 100, "94": 100, "97": 100, "62l": "b", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "b", "16": 67, "19": 67, "18": 100, "65l": "a", "obi": 73.021, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "a", "111": 0, "q80bl": null, "country": "Brazil", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 73, "roundobi_yer": 67, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "BRA", "48": 100, "49": 100, "46": 100, "47": 100, "44": 0, "45": 67, "42": 67, "43": 100, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 61, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "b", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 66.7, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 57, "pub_pbs": 1, "113l": "b", "54l": "a", "leg_obi": 48.3636, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 57, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 100, "13l": "d", "120": 33, "121": 33, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "a", "q58bl": "e", "39l": "d", "58": 67, "q56bl": "b", "81l": "b", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 33, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "d", "24l": "a", "sai_obi": 83.3, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "a", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "c", "51l": "c", "roundobi_ebp": 76, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 100, "106": -1, "59l": "a", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 9, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "d", "6": 100, "96l": "c", "102l": "d", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 76.4, "q97bl": "b", "17l": "b", "countryid": 12, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "c", "91": 33, "q79b": 0, "93": 100, "122l": "a", "95": 67, "94": 100, "97": -1, "62l": "a", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 100, "65l": "b", "obi": 71.3913, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Brazil", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 71, "roundobi_yer": 57, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "BRA", "48": 100, "49": 100, "46": 100, "47": 100, "44": 100, "45": 67, "42": 67, "43": 100, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 33, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 48, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 67, "78": 0, "q59bl": "c", "51": 33, "q60b": 67, "q57b": 100, "65": 67, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "b", "roundsai_obi": 83, "obi_yer": 56.7, "105l": "b", "106l": "e"}, "db_2006": {"35l": "d", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "d", "54l": "a", "leg_obi": 77.75, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "a", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.75, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "b", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 95.875, "13l": "a", "120": 33, "121": 67, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "a", "q58bl": "b", "39l": "d", "58": 0, "q56bl": "b", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 67, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "b", "sai_obi": 66.75, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 67, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "c", "51l": "c", "roundobi_ebp": 80, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 100, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "b", "39": 0, "38": 33, "42l": "a", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "b", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 67, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "b", "grade_leg": "Strong", "16l": "b", "37l": "b", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 9, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "c", "6": 100, "96l": "d", "102l": "a", "88l": "b", "1l": "a", "q79bl": "a", "obi_ebp": 80.0182, "q97bl": "c", "17l": "b", "countryid": 12, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "d", "91": 67, "q79b": 100, "93": 67, "122l": "c", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 73.9348, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 33, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "Brazil", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 74, "roundobi_yer": 83, "myr": "NP", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "c", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "BRA", "48": 33, "49": 100, "46": 100, "47": 100, "44": 0, "45": 67, "42": 100, "43": 100, "40": 0, "41": 100, "1": 100, "94l": "e", "q63c": 33, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 78, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 100, "78": 100, "q59bl": "b", "51": 33, "q60b": 100, "q57b": 33, "65": -1, "33l": "a", "q58b": 67, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "b", "q64b": 67, "95l": "d", "roundsai_obi": 67, "obi_yer": 83.3, "105l": "a", "106l": "a"}}, {"alpha2": "BG", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 14, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 25.0833, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 33, "27": 33, "20": 67, "21": 67, "22": 100, "23": 100, "41l": "e", "q56b": 67, "53l": "c", "28": 33, "29": 100, "5l": "b", "obi_ar": 14.1429, "4": 100, "8": 33, "96": 33, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "a", "39l": "c", "58": 67, "q56bl": "b", "81l": "a", "17": 67, "pbs": "NP", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "c", "q99b": 100, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 29.9, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 54, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 33, "3l": "b", "78l": "a", "q63b": null, "92": 33, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "c", "82l": "a", "11l": "a", "comp0608": 1, "27l": "c", "29l": "a", "92l": "c", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 67, "30": 100, "37": 33, "36": 67, "35": 67, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "b", "q97b": 33, "83l": "a", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 24, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "b", "86l": "c", "6": 0, "96l": "c", "102l": "d", "88l": "c", "1l": "b", "q79bl": "b", "obi_ebp": 53.7037, "q97bl": "c", "17l": "b", "countryid": 13, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 56.7692, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Bulgaria", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 57, "roundobi_yer": 73, "myr": "IU", "q70bl": "c", "q65bl": "b", "obi_eb": 67, "82": 100, "55l": "c", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "a", "28l": "c", "63": 100, "countrylet": "BGR", "48": 33, "49": 33, "46": 0, "47": 0, "44": 67, "45": 0, "42": 33, "43": 0, "40": 0, "41": -1, "1": 67, "94l": "d", "q63c": 67, "5": 0, "84": 33, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 67, "78": 100, "q59bl": "a", "51": 33, "q60b": 0, "q57b": 0, "65": 0, "33l": "a", "q58b": 100, "80l": "b", "7l": "c", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "d", "roundsai_obi": 30, "obi_yer": 73.3, "105l": "b", "106l": "d"}, "name": "Bulgaria", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 57, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 30.2727, "26l": "c", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 50, "9l": "b", "24": 100, "25": 0, "26": 33, "27": 67, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "b", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 57.1429, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 100, "13l": "a", "120": 67, "121": 33, "122": 67, "123": 0, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 67, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 100, "comp0812": 1, "107l": "c", "q99b": null, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "a", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 67, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "a", "123l": "d", "83": 67, "80": 67, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 63, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "b", "29l": "a", "92l": "b", "70l": "a", "19l": "b", "108": 100, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 67, "101": 67, "106": 0, "59l": "c", "104": 33, "105": 100, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 100, "32": 0, "31": 0, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "b", "q97b": null, "83l": "b", "grade_leg": "Weak", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 17, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 33, "118l": "d", "2": 67, "50l": "b", "86l": "b", "6": 67, "96l": "c", "102l": "d", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 63.2586, "q97bl": null, "17l": "a", "countryid": 13, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 0, "97": 0, "62l": "a", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "d", "16": 100, "19": 67, "18": 100, "65l": "b", "obi": 65.3053, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 50, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "Bulgaria", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 65, "roundobi_yer": 77, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "BGR", "48": 67, "49": 33, "46": 0, "47": 0, "44": 100, "45": 0, "42": 33, "43": 0, "40": 0, "41": 67, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 33, "9": 0, "85": 67, "73l": "a", "roundleg_obi": 30, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 100, "74": 0, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "a", "q58b": null, "80l": "b", "7l": "b", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 76.8, "105l": "a", "106l": "d"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 14, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 44.5, "26l": "c", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 33, "27": 67, "20": 100, "21": 67, "22": 100, "23": 0, "41l": "e", "q56b": 67, "53l": "c", "28": 33, "29": 100, "5l": "a", "obi_ar": 14.1429, "4": 67, "8": 33, "96": 33, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 67, "121": 33, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "a", "39l": "c", "58": 67, "q56bl": "b", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "b", "24l": "d", "sai_obi": 33.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 33, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "c", "roundobi_ebp": 54, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "c", "82l": "a", "11l": "a", "comp0608": 1, "27l": "b", "29l": "a", "92l": "b", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 33, "36": 67, "35": 67, "34": 100, "q64bl": "a", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 31, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "b", "86l": "c", "6": 67, "96l": "c", "102l": "d", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 54.3519, "q97bl": "c", "17l": "a", "countryid": 13, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": 0, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 55.6923, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Bulgaria", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 56, "roundobi_yer": 60, "myr": "IU", "q70bl": "c", "q65bl": "a", "obi_eb": 67, "82": 100, "55l": "c", "ar": "IU", "61l": "a", "77l": "b", "14l": "a", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "c", "63": 100, "countrylet": "BGR", "48": 33, "49": 33, "46": 0, "47": 0, "44": 100, "45": 0, "42": 33, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "d", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 45, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "a", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 100, "80l": "b", "7l": "b", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "b", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 33, "obi_yer": 60, "105l": "a", "106l": "d"}, "db_2006": {"35l": "b", "72l": "a", "roundobi_ar": 17, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 36.1667, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 33, "27": 33, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "e", "q56b": 33, "53l": "d", "28": 33, "29": 100, "5l": "b", "obi_ar": 16.5, "4": 33, "8": 33, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "a", "39l": "c", "58": 67, "q56bl": "c", "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 100, "108l": "c", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 37.375, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "e", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 33, "3l": "b", "78l": "a", "q63b": 0, "92": 33, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "c", "82l": "a", "11l": "a", "comp0608": 1, "27l": "c", "29l": "a", "92l": "c", "70l": "a", "19l": "c", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 67, "30": 100, "37": 33, "36": 67, "35": 67, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 33, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "a", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 28, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "c", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "b", "q79bl": "b", "obi_ebp": 45.0185, "q97bl": "c", "17l": "b", "countryid": 13, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 33, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 33, "18": 67, "65l": "e", "obi": 47.2198, "roundobi_iyr": 100, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Bulgaria", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 47, "roundobi_yer": 63, "myr": "IU", "q70bl": "c", "q65bl": "b", "obi_eb": 67, "82": 100, "55l": "c", "ar": "HC", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "a", "28l": "c", "63": 100, "countrylet": "BGR", "48": 33, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 33, "43": 0, "40": 0, "41": -1, "1": 67, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 33, "78": 100, "q59bl": "c", "51": 33, "q60b": 0, "q57b": 0, "65": -1, "33l": "a", "q58b": 100, "80l": "b", "7l": "c", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "b", "q64b": 67, "95l": "d", "roundsai_obi": 37, "obi_yer": 63.3, "105l": "b", "106l": "a"}}, {"alpha2": "BF", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 33, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 44.5, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 41.5, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.2857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 67, "12l": "d", "111l": null, "86": 0, "obi_iyr": 50, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 0, "69l": "c", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 26.6, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 67, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "d", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 33, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 63, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 33, "67": 67, "68": 100, "69": 33, "63l": "b", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "a", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 14, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 14.4783, "roundobi_iyr": 50, "18l": "d", "roundobi_myr": 42, "52l": "d", "q70b": 0, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": "e", "country": "Burkina Faso", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 14, "roundobi_yer": 37, "myr": "HC", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "d", "ar": "HC", "61l": "d", "77l": "a", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "BFA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "c", "roundleg_obi": 45, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 33, "74": 67, "73": 33, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 33, "78": 100, "q59bl": "b", "51": 0, "q60b": 67, "q57b": 0, "65": 33, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "c", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 27, "obi_yer": 36.6, "105l": "a", "106l": "a"}, "name": "Burkina Faso", "db_2012": {"35l": "c", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 75.8182, "26l": "a", "67l": "d", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 33, "21": 0, "22": 33, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 100, "121": 0, "122": 67, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "b", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 33, "81": 67, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 29, "124l": "b", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "c", "102": 67, "103": 67, "100": 67, "101": 33, "106": 67, "59l": "a", "104": 100, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 33, "30": 100, "37": 33, "36": 33, "35": 33, "34": 0, "q64bl": null, "59": 100, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 74, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 28.6897, "q97bl": null, "17l": "d", "countryid": 14, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": 33, "45l": "c", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "b", "95": 0, "94": 67, "97": 33, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "b", "16": 0, "19": 0, "18": 100, "65l": "d", "obi": 22.7895, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Burkina Faso", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 23, "roundobi_yer": 23, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "d", "ar": "NP", "61l": "b", "77l": "b", "14l": "c", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "BFA", "48": 0, "49": 0, "46": 100, "47": 0, "44": 33, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 76, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 23.4, "105l": "a", "106l": "b"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 63.9167, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 67, "12l": "b", "111l": null, "86": 0, "obi_iyr": 50.125, "13l": "d", "120": 100, "121": 0, "122": 67, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "a", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 0, "107l": "a", "q99b": 67, "108l": "d", "2l": "d", "64": 67, "comp0810": 0, "69l": "c", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 23.3, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 84, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 67, "67": 67, "68": 100, "69": 33, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 14, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "b", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 5.44565, "roundobi_iyr": 50, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "HC", "85l": "d", "111": -1, "q80bl": "e", "country": "Burkina Faso", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 5, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "BFA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "b", "51": 0, "q60b": 100, "q57b": 67, "65": 33, "33l": "d", "q58b": 100, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "b", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 23, "obi_yer": 0, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 44.5, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 41.75, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 45.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 67, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 20.75, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "a", "q63b": 0, "92": 33, "84l": "d", "90l": "d", "64l": "b", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "c", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 67, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": 100, "88": 0, "q60bl": "d", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 56, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 33, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 14, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 67, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 11.2391, "roundobi_iyr": 46, "18l": "d", "roundobi_myr": 42, "52l": "d", "q70b": 0, "89": 0, "iyr": "HC", "85l": "d", "111": -1, "q80bl": null, "country": "Burkina Faso", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 11, "roundobi_yer": 30, "myr": "HC", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "BFA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 45, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 33, "74": 67, "73": 0, "72": 33, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 33, "78": 100, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 21, "obi_yer": 29.9, "105l": "a", "106l": "a"}}, {"alpha2": "KH", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 11.0833, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 71, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "c", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 30, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 68, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 15, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 10.8804, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Cambodia", "region": "East Asia & Pacific", "48l": "d", "roundobi": 11, "roundobi_yer": 13, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "KMH", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 11, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 13.3, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 30.5833, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "b", "111l": null, "86": 0, "obi_iyr": 66.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "c", "81l": "b", "17": 0, "pbs": "HC", "61": 33, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "c", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 75, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 15, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 14.5217, "roundobi_iyr": 67, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Cambodia", "region": "East Asia & Pacific", "48l": "d", "roundobi": 15, "roundobi_yer": 27, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "c", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "KMH", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "b", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "b", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 26.7, "105l": "a", "106l": "d"}, "name": "Cambodia", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 39.3636, "26l": "d", "67l": "b", "115l": "d", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 71, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "b", "17": 0, "pbs": "PW", "61": 33, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 58.25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 5, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 100, "103": 67, "100": 33, "101": 67, "106": 0, "59l": "d", "104": 33, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 81, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 5.17241, "q97bl": null, "17l": "d", "countryid": 15, "25l": "d", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 33, "97": 33, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "b", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 14.7579, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Cambodia", "region": "East Asia & Pacific", "48l": "d", "roundobi": 15, "roundobi_yer": 27, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "c", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "KMH", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "c", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 33, "33l": "d", "q58b": null, "80l": "b", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 58, "obi_yer": 26.7, "105l": "b", "106l": "d"}}, {"alpha2": "CM", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 27.1818, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 50, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "HC", "61": 67, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 100, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 9.9, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 33, "59l": "c", "104": -1, "105": -1, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 67, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 75, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "b", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 16, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 5.44565, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 50, "52l": "d", "q70b": 33, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Cameroon", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 5, "roundobi_yer": 0, "myr": "HC", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "NP", "61l": "b", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "CMR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "c", "roundleg_obi": 27, "104l": "e", "23l": "d", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 67, "74": 33, "73": 33, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "c", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 67, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 10, "obi_yer": 0, "105l": "c", "106l": "c"}, "name": "Cameroon", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 9, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 21.0909, "26l": "d", "67l": "b", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 9.42857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 75.125, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 8.25, "q63cl": null, "eb": "HC", "115": 0, "114": 67, "117": 33, "116": 33, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 0, "103": 0, "100": 33, "101": 33, "106": 0, "59l": "c", "104": 0, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 56, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 88, "60": 67, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 33, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 16, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": 67, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "c", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 10.1789, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "HC", "85l": "d", "111": 0, "q80bl": null, "country": "Cameroon", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 10, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "b", "77l": "d", "14l": "d", "87l": "c", "89l": "b", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "CMR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 21, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 67, "116l": "c", "60l": "b", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 8, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 13.75, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "HC", "61": 33, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 55.6667, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 3.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 33, "101": 33, "106": 33, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 56, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 87, "60": 67, "46l": "d", "62": 67, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 16, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 2.17391, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Cameroon", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 2, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "IU", "61l": "c", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "CMR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 14, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "b", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 3, "obi_yer": 0, "105l": "b", "106l": "c"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 11, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 24.75, "9l": "d", "24": 33, "25": 100, "26": 100, "27": 67, "20": 33, "21": 0, "22": 33, "23": 100, "41l": "b", "q56b": 100, "53l": "d", "28": 67, "29": 33, "5l": "b", "obi_ar": 0, "4": 67, "8": 33, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "c", "15": 67, "21l": "d", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "a", "81l": "d", "17": 100, "pbs": "HC", "61": 67, "34l": "a", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 67, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 0, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 41, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": 0, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "c", "82l": "d", "11l": "a", "comp0608": 0, "27l": "b", "29l": "c", "92l": "d", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 0, "103": -1, "100": 33, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "d", "76": 33, "33": 67, "32": 100, "31": 33, "30": 100, "37": 0, "36": 0, "35": 0, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 67, "reg_ssa": 1, "pub_myr": 1, "q80b": 33, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "d", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 46, "60": 67, "46l": "b", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "b", "q79bl": "b", "obi_ebp": 41.2, "q97bl": "c", "17l": "a", "countryid": 16, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 67, "19": 33, "18": 33, "65l": "e", "obi": 29.337, "roundobi_iyr": 0, "18l": "c", "roundobi_myr": 25, "52l": "d", "q70b": 33, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Cameroon", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 29, "roundobi_yer": 0, "myr": "HC", "q70bl": "c", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "NP", "61l": "b", "77l": "d", "14l": "b", "87l": "d", "89l": "d", "20l": "c", "87": 0, "68l": "d", "28l": "b", "63": 0, "countrylet": "CMR", "48": 67, "49": 0, "46": 67, "47": 0, "44": 0, "45": 0, "42": 33, "43": 0, "40": 33, "41": 67, "1": 67, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "c", "roundleg_obi": 11, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 33, "73": 33, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "b", "74l": "c", "15l": "b", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "b", "q58b": 67, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "TD", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 19, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 47.25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 19, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "b", "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 13.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "c", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "b", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 73, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 17, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "c", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 7.97826, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "NP", "85l": "b", "111": -1, "q80bl": "e", "country": "Chad", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 8, "roundobi_yer": 50, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 67, "55l": "d", "ar": "HC", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "a", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "TCD", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": 0, "5": 0, "84": 33, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "b", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 13, "obi_yer": 50.1, "105l": "a", "106l": "a"}, "name": "Chad", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 45.6364, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "d", "24l": "d", "sai_obi": 41.5, "q63cl": null, "eb": "HC", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 3, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 67, "103": 67, "100": 67, "101": 67, "106": 0, "59l": "b", "104": 100, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 95, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 3.44828, "q97bl": null, "17l": "d", "countryid": 17, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "b", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 2.81053, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Chad", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 3, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "TCD", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 46, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 16.5833, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 6.7, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 90, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 17, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "c", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.358696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Chad", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "TCD", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 7, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 19.4167, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 33, "80": 67, "81": 33, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": 0, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "d", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": 0, "88": 0, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "c", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 57, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 17, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "c", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 5.42391, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "c", "111": -1, "q80bl": null, "country": "Chad", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 5, "roundobi_yer": 33, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "TCD", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 33, "80l": "b", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 0, "obi_yer": 33.2, "105l": "b", "106l": "d"}}, {"alpha2": "CL", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 62, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 66.6364, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "c", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 58.25, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 33, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "c", "q56b": null, "53l": "a", "28": 67, "29": 100, "5l": "a", "obi_ar": 61.8571, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "c", "86": 67, "obi_iyr": 71, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": 100, "125": 0, "76l": "a", "15": 0, "21l": "a", "q58bl": null, "39l": "b", "58": 67, "q56bl": null, "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 33, "40l": "b", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 0, "107l": "d", "q99b": null, "108l": "a", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "b", "24l": "d", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 67, "113": 100, "44l": "d", "123l": "c", "83": 67, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Significant", "roundobi_cb": 42, "117l": "d", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 74, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "d", "comp0608": 0, "27l": "c", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 100, "109": 33, "112l": "c", "98l": "b", "31l": "b", "102": 100, "103": 67, "100": 33, "101": 100, "106": 100, "59l": "c", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 67, "38": 100, "42l": "a", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 67, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "c", "q97b": null, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 41.5, "97l": "c", "year": 2012, "rank": 16, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "b", "86l": "b", "6": 0, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 73.7193, "q97bl": null, "17l": "d", "countryid": 18, "25l": "a", "112": 33, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": 67, "45l": "a", "57l": "c", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 33, "62l": "d", "11": 0, "10": 67, "13": 0, "12": 100, "order_cat": 4, "14": 100, "103l": "b", "16": 100, "19": 0, "18": 100, "65l": "a", "obi": 66.3298, "roundobi_iyr": 71, "18l": "a", "roundobi_myr": 58, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 33, "q80bl": null, "country": "Chile", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 66, "roundobi_yer": 53, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "b", "63": 67, "countrylet": "CHL", "48": 100, "49": 0, "46": -1, "47": 100, "44": 0, "45": 100, "42": 100, "43": 100, "40": 67, "41": 33, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 67, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 33, "73": 100, "72": 100, "71": 67, "70": 67, "116l": "d", "60l": "d", "74l": "c", "15l": "d", "79": 33, "78": 100, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 100, "33l": "a", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 53.3, "105l": "a", "106l": "a"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 57, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 30.5, "26l": "a", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "a", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 66.75, "9l": "a", "24": 100, "25": 33, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 100, "53l": "a", "28": 100, "29": 100, "5l": "a", "obi_ar": 57.1429, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 75.125, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "a", "39l": "a", "58": 67, "q56bl": "a", "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 33, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 100, "comp0812": 0, "107l": "d", "q99b": 100, "108l": "a", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "a", "sai_obi": 80, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 67, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 67, "117l": "e", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 82, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 100, "38": 100, "42l": "a", "58l": "b", "76": 100, "33": 67, "32": 100, "31": 0, "30": 0, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "d", "79l": "c", "q97b": 67, "83l": "b", "grade_leg": "Weak", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 8, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "b", "86l": "b", "6": 33, "96l": "a", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 81.8364, "q97bl": "b", "17l": "d", "countryid": 18, "25l": "c", "112": -1, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "c", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "a", "obi": 72.1304, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 67, "52l": "a", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Chile", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 72, "roundobi_yer": 50, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "b", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "CHL", "48": 100, "49": 100, "46": 100, "47": 100, "44": 0, "45": 100, "42": 100, "43": 100, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 67, "73": 100, "72": 67, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 33, "78": 100, "q59bl": "d", "51": 100, "q60b": 0, "q57b": 0, "65": 100, "33l": "b", "q58b": 100, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 80, "obi_yer": 50, "105l": "a", "106l": "d"}, "name": "Chile"}, {"alpha2": "CN", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 38, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 19.4167, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 38, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "d", "111l": null, "86": 67, "obi_iyr": 54.25, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "a", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "a", "2l": "d", "64": 0, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 63.4, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 100, "44l": "d", "123l": "b", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "b", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "a", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 0, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "a", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 64, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 67, "68": 67, "69": 100, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "b", "6": 0, "96l": "c", "102l": "d", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 19, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 33, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 13.7717, "roundobi_iyr": 54, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "China", "region": "East Asia & Pacific", "48l": "d", "roundobi": 14, "roundobi_yer": 37, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 67, "55l": "d", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "b", "89l": "d", "20l": "d", "87": 67, "68l": "b", "28l": "d", "63": 0, "countrylet": "CHN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 33, "65": 0, "33l": "d", "q58b": 33, "80l": "c", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 63, "obi_yer": 36.7, "105l": "a", "106l": "d"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 48, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 2.75, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 47.5714, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "b", "111l": null, "86": 33, "obi_iyr": 75.125, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "a", "2l": "d", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 56.7, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "a", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 79, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 33, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "c", "102l": "d", "88l": "a", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 19, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 13.0435, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "China", "region": "East Asia & Pacific", "48l": "d", "roundobi": 13, "roundobi_yer": 27, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "a", "89l": "b", "20l": "d", "87": 100, "68l": "b", "28l": "d", "63": 100, "countrylet": "CHN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 3, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 33, "65": 0, "33l": "d", "q58b": 33, "80l": "c", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 57, "obi_yer": 26.6, "105l": "b", "106l": "d"}, "name": "China", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 33, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 12.0909, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.4286, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 75.125, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "b", "2l": "d", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 25, "q63cl": null, "eb": "IU", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 33, "44l": "d", "123l": "b", "83": 0, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "a", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "b", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "a", "19l": "d", "108": 67, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 0, "106": 0, "59l": "c", "104": 0, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 86, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 33, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "d", "q79bl": null, "obi_ebp": 0, "q97bl": null, "17l": "d", "countryid": 19, "25l": "d", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 10.8947, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "China", "region": "East Asia & Pacific", "48l": "d", "roundobi": 11, "roundobi_yer": 20, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "a", "89l": "b", "20l": "d", "87": 100, "68l": "b", "28l": "d", "63": 100, "countrylet": "CHN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 12, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "c", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "c", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 20, "105l": "b", "106l": "d"}}, {"alpha2": "CO", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 72, "pub_pbs": 1, "113l": "b", "54l": "b", "leg_obi": 55.5, "26l": "a", "67l": "c", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "c", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 100, "25": 0, "26": 100, "27": 100, "20": 33, "21": 67, "22": 0, "23": 100, "41l": "b", "q56b": 33, "53l": "b", "28": 0, "29": 0, "5l": "a", "obi_ar": 71.5714, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 58.375, "13l": "a", "120": 33, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "b", "39l": "b", "58": 100, "q56bl": "c", "81l": "b", "17": 33, "pbs": "PW", "61": 67, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "b", "24l": "a", "sai_obi": 80.1, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "c", "123l": "a", "83": 0, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 33, "117l": "e", "43l": "c", "100l": "b", "51l": "b", "roundobi_ebp": 64, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "c", "108": 67, "109": 33, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "b", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 0, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 33, "97l": "e", "year": 2008, "rank": 19, "60": 100, "46l": "b", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 33, "68": 100, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "c", "6": 33, "96l": "b", "102l": "a", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 63.7091, "q97bl": "b", "17l": "c", "countryid": 20, "25l": "d", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "c", "95": 33, "94": 100, "97": -1, "62l": "b", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 33, "18": 33, "65l": "a", "obi": 60.5652, "roundobi_iyr": 58, "18l": "c", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Colombia", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 61, "roundobi_yer": 43, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "a", "28l": "d", "63": 100, "countrylet": "COL", "48": 67, "49": 67, "46": 67, "47": 0, "44": 33, "45": 67, "42": 67, "43": 33, "40": 33, "41": 67, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 100, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 0, "65": 100, "33l": "b", "q58b": 67, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "c", "q64b": 100, "95l": "c", "roundsai_obi": 80, "obi_yer": 43.3, "105l": "a", "106l": "a"}, "name": "Colombia", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 38, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 70, "26l": "c", "67l": "b", "115l": "d", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 33, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 83.5, "13l": "a", "120": 33, "121": 0, "122": 100, "123": 100, "124": 100, "125": 100, "76l": "d", "15": 0, "21l": "c", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 33.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "d", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "b", "100l": "c", "51l": "c", "roundobi_ebp": 70, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "a", "31l": "a", "102": 100, "103": 67, "100": 33, "101": 100, "106": 100, "59l": "d", "104": 0, "105": -1, "101l": "a", "91l": "d", "39": 33, "38": 33, "42l": "a", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 33, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 33, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 27, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "a", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "c", "6": 0, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 69.5517, "q97bl": null, "17l": "b", "countryid": 20, "25l": "a", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": 100, "45l": "a", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "b", "16": 100, "19": 100, "18": 67, "65l": "a", "obi": 58.2737, "roundobi_iyr": 84, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Colombia", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 58, "roundobi_yer": 37, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "a", "89l": "b", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "COL", "48": 100, "49": 67, "46": 100, "47": 0, "44": 0, "45": 100, "42": 100, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 67, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 36.7, "105l": "c", "106l": "a"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 10, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 52.75, "26l": "b", "67l": "b", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 67, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 9.57143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "c", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "b", "81l": "c", "17": 33, "pbs": "PW", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 67, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 33.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "d", "24l": "c", "sai_obi": 66.7, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "a", "83": 0, "80": 67, "81": 33, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "c", "roundobi_ebp": 73, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 67, "42l": "a", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 33, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 20, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 33, "96l": "b", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 72.7455, "q97bl": "c", "17l": "c", "countryid": 20, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 100, "65l": "a", "obi": 60.5326, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Colombia", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 61, "roundobi_yer": 30, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "COL", "48": 67, "49": 67, "46": 100, "47": 0, "44": 0, "45": 100, "42": 100, "43": 67, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 53, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 33, "78": 67, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 67, "65": 100, "33l": "b", "q58b": 33, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 67, "obi_yer": 30, "105l": "a", "106l": "a"}, "db_2006": {"35l": "c", "72l": "b", "roundobi_ar": 84, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 69.5, "26l": "b", "67l": "c", "115l": "e", "30l": "a", "71l": "d", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 33, "25": 100, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "a", "q56b": 33, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 83.5, "4": 100, "8": 67, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 37.5, "13l": "b", "120": 67, "121": 67, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "d", "q58bl": "b", "39l": "a", "58": 100, "q56bl": "c", "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "b", "2l": "a", "64": 67, "comp0810": 1, "69l": "c", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "b", "24l": "c", "sai_obi": 83.375, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "d", "roundobi_ebp": 67, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": 67, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "b", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "c", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 100, "103": -1, "100": 33, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "b", "39": 100, "38": 100, "42l": "b", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 33, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 67, "q60bl": "c", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 16, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 33, "68": 67, "69": 33, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 100, "96l": "b", "102l": "a", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 66.7273, "q97bl": "b", "17l": "b", "countryid": 20, "25l": "a", "112": -1, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 67, "q79b": 33, "93": 100, "122l": "a", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "e", "obi": 56.913, "roundobi_iyr": 38, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": null, "country": "Colombia", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 57, "roundobi_yer": 37, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "b", "28l": "b", "63": 100, "countrylet": "COL", "48": 67, "49": 67, "46": 33, "47": 67, "44": 0, "45": 67, "42": 67, "43": 67, "40": 0, "41": 100, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 0, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 70, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 33, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 67, "78": 33, "q59bl": "b", "51": 0, "q60b": 33, "q57b": 0, "65": -1, "33l": "b", "q58b": 67, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": 67, "95l": "c", "roundsai_obi": 83, "obi_yer": 36.5, "105l": "a", "106l": "a"}}, {"alpha2": "CR", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 39, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 54.5455, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 38.8333, "4": 100, "8": 100, "96": -1, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 37.5, "13l": "c", "120": 67, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "a", "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 70.3333, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "a", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 49, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 67, "31": 0, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 39, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "e", "102l": "d", "88l": "a", "1l": "a", "q79bl": "c", "obi_ebp": 48.7593, "q97bl": "c", "17l": "b", "countryid": 21, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "c", "95": 33, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 67, "65l": "d", "obi": 45.1889, "roundobi_iyr": 38, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Costa Rica", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 45, "roundobi_yer": 50, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "d", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 0, "countrylet": "CRI", "48": 33, "49": 0, "46": 67, "47": -1, "44": 67, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 0, "84": 67, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 55, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "c", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "a", "q58b": 0, "80l": "b", "7l": "a", "yearid": 2, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": 67, "95l": "c", "roundsai_obi": 70, "obi_yer": 50.1, "105l": "a", "106l": "a"}, "name": "Costa Rica", "db_2012": {"35l": "e", "72l": "d", "roundobi_ar": 53, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 69.7273, "26l": "a", "67l": "d", "115l": "d", "30l": "a", "71l": "d", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 53.2, "4": 100, "8": 100, "96": -1, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": -1, "obi_iyr": 0, "13l": "c", "120": 67, "121": 0, "122": 33, "123": 67, "124": 0, "125": 33, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 33, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "b", "24l": "b", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "b", "83": 0, "80": 67, "81": 100, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 65, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 100, "103": 67, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "e", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": -1, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 41, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "c", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "b", "86l": "e", "6": 33, "96l": "e", "102l": "a", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 64.8571, "q97bl": null, "17l": "b", "countryid": 21, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": -1, "q79b": null, "93": 100, "122l": "c", "95": 33, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "b", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 49.9778, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Costa Rica", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 50, "roundobi_yer": 56, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "CRI", "48": 33, "49": 0, "46": 100, "47": -1, "44": 0, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": null, "95l": "c", "roundsai_obi": 100, "obi_yer": 55.5556, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 44, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 54.5455, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 0, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 44.3333, "4": 100, "8": 100, "96": -1, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "c", "120": 67, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "a", "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 70.3333, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "a", "83": 33, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 59, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 48, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 33, "96l": "e", "102l": "d", "88l": "c", "1l": "a", "q79bl": "c", "obi_ebp": 58.6111, "q97bl": "c", "17l": "b", "countryid": 21, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "c", "95": 33, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 46.6222, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Costa Rica", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 47, "roundobi_yer": 37, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "CRI", "48": 33, "49": 0, "46": 0, "47": -1, "44": 67, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 33, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 55, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 100, "q59bl": "c", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "a", "q58b": 0, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": 67, "95l": "c", "roundsai_obi": 70, "obi_yer": 36.5, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 50, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 54.5455, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 100, "27": 100, "20": 33, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 33, "5l": "b", "obi_ar": 50, "4": 100, "8": 100, "96": -1, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "a", "120": 67, "121": 0, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "b", "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "b", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "b", "sai_obi": 71.4286, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 54, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 0, "92": 100, "84l": "b", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "c", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 67, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 67, "31": 0, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 33, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 30, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "e", "102l": "d", "88l": "c", "1l": "b", "q79bl": "c", "obi_ebp": 53.7407, "q97bl": "c", "17l": "b", "countryid": 21, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "c", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 67, "10": 33, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 33, "18": 67, "65l": "e", "obi": 44.8444, "roundobi_iyr": 0, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 67, "iyr": "NP", "85l": "d", "111": -1, "q80bl": null, "country": "Costa Rica", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 45, "roundobi_yer": 50, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "b", "20l": "c", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "CRI", "48": 33, "49": 0, "46": 67, "47": -1, "44": 67, "45": 0, "42": 0, "43": 33, "40": 67, "41": 0, "1": 67, "94l": "e", "q63c": 67, "5": 0, "84": 67, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 55, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 67, "65": -1, "33l": "a", "q58b": 0, "80l": "b", "7l": "a", "yearid": 1, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": 67, "95l": "c", "roundsai_obi": 71, "obi_yer": 50.1, "105l": "a", "106l": "a"}}, {"alpha2": "HR", "db_2008": {"35l": "b", "72l": "c", "roundobi_ar": 57, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 55.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "a", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 57, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 67, "obi_iyr": 75, "13l": "c", "120": 33, "121": 0, "122": 67, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "b", "81l": "a", "17": -1, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "c", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "a", "sai_obi": 53.2, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "c", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 59, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "d", "108": 33, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "c", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "b", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 21, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "b", "6": 100, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 58.6667, "q97bl": "c", "17l": "e", "countryid": 22, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 100, "122l": "b", "95": 0, "94": 0, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "a", "obi": 59.3517, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Croatia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 59, "roundobi_yer": 43, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 33, "countrylet": "HRV", "48": 33, "49": 0, "46": 100, "47": 100, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "b", "51": 0, "q60b": 33, "q57b": 0, "65": 100, "33l": "b", "q58b": 67, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 53, "obi_yer": 43.4, "105l": "a", "106l": "a"}, "name": "Croatia", "db_2012": {"35l": "a", "72l": "c", "roundobi_ar": 57, "pub_pbs": 1, "113l": "b", "54l": "a", "leg_obi": 66.7273, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 57.1429, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 91.625, "13l": "d", "120": 67, "121": 67, "122": 67, "123": 33, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "c", "58": 33, "q56bl": null, "81l": "a", "17": 33, "pbs": "PW", "61": 100, "34l": "d", "54": 100, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "b", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "b", "123l": "c", "83": 0, "80": 67, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 64, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 67, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 100, "103": 100, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "c", "39": 33, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 100, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 22, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 0, "50l": "c", "86l": "b", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 64.3276, "q97bl": null, "17l": "c", "countryid": 22, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 0, "97": 0, "62l": "a", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 4, "14": 33, "103l": "a", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 61.3789, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "Croatia", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 61, "roundobi_yer": 57, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "a", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "HRV", "48": 100, "49": 100, "46": 67, "47": 100, "44": 67, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 67, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 56.7, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "c", "roundobi_ar": 71, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 61.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 67, "obi_iyr": 95.875, "13l": "d", "120": 33, "121": 0, "122": 67, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "c", "58": 67, "q56bl": "b", "81l": "a", "17": -1, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "a", "sai_obi": 73.4, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "b", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 52, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "d", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 33, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 27, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 51.8704, "q97bl": "c", "17l": "e", "countryid": 22, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 100, "93": 100, "122l": "b", "95": 0, "94": 0, "97": -1, "62l": "a", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "a", "obi": 56.8022, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Croatia", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 57, "roundobi_yer": 43, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "d", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "HRV", "48": 0, "49": 0, "46": 100, "47": 100, "44": 0, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 61, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "b", "51": 0, "q60b": 67, "q57b": 0, "65": 100, "33l": "d", "q58b": 67, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 73, "obi_yer": 43.4, "105l": "a", "106l": "a"}, "db_2006": {"35l": "b", "72l": "c", "roundobi_ar": 92, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 41.5833, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 100, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 100, "5l": "b", "obi_ar": 91.75, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 87.5, "13l": "d", "120": 33, "121": 33, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "a", "81l": "c", "17": 0, "pbs": "HC", "61": 67, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "c", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 70.875, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 32, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 67, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 100, "q60bl": "d", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 33, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "b", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 32.1273, "q97bl": "b", "17l": "d", "countryid": 22, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 100, "q79b": 33, "93": 100, "122l": "c", "95": 0, "94": -1, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 42.4022, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Croatia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 42, "roundobi_yer": 33, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "d", "63": 100, "countrylet": "HRV", "48": 67, "49": 0, "46": 0, "47": 100, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "d", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 67, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 71, "obi_yer": 33.3, "105l": "b", "106l": "a"}}, {"alpha2": "CZ", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 52, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 72.25, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 67, "22": 0, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 52.2857, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.75, "13l": "b", "120": 67, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "b", "q58bl": "b", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "c", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "c", "sai_obi": 73.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "a", "83": 0, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "d", "roundobi_ebp": 64, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "c", "39": 67, "38": 33, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 0, "30": 100, "37": 0, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 16, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "a", "6": 67, "96l": "b", "102l": "a", "88l": "c", "1l": "a", "q79bl": "a", "obi_ebp": 64.2222, "q97bl": "c", "17l": "a", "countryid": 23, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 100, "93": 100, "122l": "a", "95": 33, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 61.9231, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Czech Republic", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 62, "roundobi_yer": 70, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 100, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "b", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "CZE", "48": 33, "49": 33, "46": 33, "47": 0, "44": 100, "45": 0, "42": 100, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 72, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 100, "78": 67, "q59bl": "b", "51": 0, "q60b": 67, "q57b": 33, "65": 67, "33l": "a", "q58b": 67, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "c", "q64b": 67, "95l": "c", "roundsai_obi": 73, "obi_yer": 70, "105l": "a", "106l": "b"}, "name": "Czech Republic", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 75.8182, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 95.875, "13l": "b", "120": 67, "121": 33, "122": 67, "123": 0, "124": 100, "125": 0, "76l": "a", "15": 67, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 67, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "a", "123l": "d", "83": 33, "80": 100, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "a", "100l": "a", "51l": "d", "roundobi_ebp": 79, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 100, "103": 67, "100": 100, "101": 67, "106": 67, "59l": "c", "104": 100, "105": 100, "101l": "b", "91l": "c", "39": 67, "38": 67, "42l": "a", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "a", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 9, "60": 100, "46l": "e", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "a", "6": 33, "96l": "a", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 78.5893, "q97bl": null, "17l": "a", "countryid": 23, "25l": "a", "112": 0, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "c", "57l": "a", "91": 33, "q79b": null, "93": 100, "122l": "b", "95": 67, "94": 67, "97": 67, "62l": "c", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "b", "16": 67, "19": 67, "18": 100, "65l": "c", "obi": 74.9247, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 100, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "Czech Republic", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 75, "roundobi_yer": 67, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 100, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "CZE", "48": 33, "49": 67, "46": -1, "47": 100, "44": 100, "45": 33, "42": 100, "43": 100, "40": 0, "41": -1, "1": 100, "94l": "b", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 76, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 100, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "d", "60l": "a", "74l": "a", "15l": "b", "79": 100, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 33, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "b", "q64b": null, "95l": "b", "roundsai_obi": 92, "obi_yer": 66.6, "105l": "a", "106l": "b"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 62, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 80.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 61.8571, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "b", "120": 67, "121": 67, "122": 100, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "a", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "d", "sai_obi": 66.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "c", "83": 0, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 63, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 67, "38": 67, "42l": "a", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 0, "30": 0, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 18, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "d", "86l": "a", "6": 67, "96l": "b", "102l": "a", "88l": "c", "1l": "a", "q79bl": "a", "obi_ebp": 62.9815, "q97bl": "c", "17l": "a", "countryid": 23, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 33, "94": 67, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 62.2857, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Czech Republic", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 62, "roundobi_yer": 70, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 100, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "CZE", "48": 33, "49": 0, "46": 33, "47": 0, "44": 100, "45": 0, "42": 100, "43": 33, "40": 0, "41": -1, "1": 100, "94l": "b", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 100, "78": 33, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 67, "33l": "b", "q58b": 0, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "b", "q64b": 67, "95l": "c", "roundsai_obi": 67, "obi_yer": 70, "105l": "a", "106l": "b"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 67, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 72.7273, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 0, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 66.5, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.75, "13l": "a", "120": 67, "121": 0, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "b", "q58bl": "a", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "d", "sai_obi": 62.5, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 67, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "d", "roundobi_ebp": 64, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": 67, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "c", "39": 33, "38": 33, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 0, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 33, "q60bl": "b", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "b", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 15, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "a", "6": 67, "96l": "d", "102l": "a", "88l": "c", "1l": "a", "q79bl": "c", "obi_ebp": 63.5926, "q97bl": "b", "17l": "a", "countryid": 23, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 60.8242, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Czech Republic", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 61, "roundobi_yer": 77, "myr": "IU", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 100, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "CZE", "48": 33, "49": 33, "46": 0, "47": 0, "44": 100, "45": 0, "42": 100, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 73, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 100, "78": 33, "q59bl": "a", "51": 0, "q60b": 67, "q57b": 33, "65": -1, "33l": "a", "q58b": 100, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 63, "obi_yer": 76.7, "105l": "a", "106l": "a"}}, {"alpha2": "CD", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 8.33333, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 82, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 24, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": -1, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.736264, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Dem. Rep. of Congo", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "DRC", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 8, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "e", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 16.75, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 20.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "c", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "d", "24l": "d", "sai_obi": 20, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 67, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 83, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 24, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 5.81522, "roundobi_iyr": 21, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Dem. Rep. of Congo", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 6, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 67, "countrylet": "DRC", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 33, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 20, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Dem. Rep. of Congo", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 45.4545, "26l": "d", "67l": "d", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 100, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 25, "13l": "d", "120": 0, "121": 33, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 41.5, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 26, "124l": "b", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 33, "103": 0, "100": 67, "101": 0, "106": 100, "59l": "d", "104": 100, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 67, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 0, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 78, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 26.3333, "q97bl": null, "17l": "d", "countryid": 24, "25l": "d", "112": 0, "38l": "b", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 100, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 1, "14": 67, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "b", "obi": 18.0957, "roundobi_iyr": 25, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Dem. Rep. of Congo", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 18, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "a", "63": 100, "countrylet": "DRC", "48": 0, "49": 0, "46": -1, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 45, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 67, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 0, "105l": "b", "106l": "a"}}, {"alpha2": "DO", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 28, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 15.0909, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 27.6667, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 62.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 53.2, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "c", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "d", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "e", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 66, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "d", "88l": "c", "1l": "d", "q79bl": "c", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 25, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "c", "91": -1, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 11.7033, "roundobi_iyr": 63, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Dominican Republic", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 12, "roundobi_yer": 27, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 33, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "a", "89l": "d", "20l": "d", "87": 100, "68l": "b", "28l": "d", "63": 100, "countrylet": "DR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 15, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 67, "65": 33, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 26.5, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 28, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 21.1818, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 27.6667, "4": 0, "8": 0, "96": -1, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "b", "111l": null, "86": 67, "obi_iyr": 66.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.2222, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "b", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 76, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "b", "6": 0, "96l": "e", "102l": "b", "88l": "c", "1l": "d", "q79bl": "c", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 25, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 14.3187, "roundobi_iyr": 67, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Dominican Republic", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 14, "roundobi_yer": 50, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "b", "28l": "d", "63": 67, "countrylet": "DR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 21, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 67, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 67, "65": 33, "33l": "d", "q58b": 0, "80l": "b", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 50.2, "105l": "b", "106l": "d"}, "name": "Dominican Republic", "db_2012": {"35l": "b", "72l": "b", "roundobi_ar": 28, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 63.6364, "26l": "a", "67l": "d", "115l": "d", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 0, "20": 100, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 100, "5l": "b", "obi_ar": 28.4286, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 41.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 67, "124": 0, "125": 67, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 66.5, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 67, "116": 0, "ebp": "PW", "110": 0, "113": 33, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 33, "119": 67, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "b", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 33, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 0, "27l": "d", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 100, "103": 67, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 67, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 71, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "b", "110l": "d", "114l": "c", "107": 33, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "c", "102l": "a", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 33.2931, "q97bl": null, "17l": "d", "countryid": 25, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": 33, "45l": "a", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": 100, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "b", "16": 0, "19": 100, "18": 100, "65l": "a", "obi": 29.0842, "roundobi_iyr": 42, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Dominican Republic", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 29, "roundobi_yer": 20, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "d", "63": 100, "countrylet": "DR", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 100, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 100, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 19.9, "105l": "a", "106l": "d"}}, {"alpha2": "EC", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 27.1818, "26l": "b", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 67, "27": 100, "20": 100, "21": 100, "22": 67, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 91.625, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "c", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 0, "107l": "d", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 33.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 0, "80": 67, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 41, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 100, "35": 100, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 46, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "b", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "c", "obi_ebp": 40.6, "q97bl": "b", "17l": "d", "countryid": 26, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "a", "obi": 39.1304, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Ecuador", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 39, "roundobi_yer": 23, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "ECU", "48": 67, "49": 0, "46": 100, "47": 100, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 27, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 33, "65": 100, "33l": "c", "q58b": 67, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 33, "obi_yer": 23.4, "105l": "b", "106l": "d"}, "name": "Ecuador", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 40.6667, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 70.875, "13l": "c", "120": 33, "121": 33, "122": 0, "123": 67, "124": 100, "125": 33, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 33, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "d", "sai_obi": 58.25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 100, "44l": "d", "123l": "b", "83": 0, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 29, "124l": "a", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 33, "103": 33, "100": 67, "101": 100, "106": -1, "59l": "c", "104": 0, "105": -1, "101l": "a", "91l": "d", "39": 0, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 70, "60": 100, "46l": "c", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "c", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 29.2586, "q97bl": null, "17l": "c", "countryid": 26, "25l": "d", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 100, "62l": "b", "11": 33, "10": 67, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "c", "16": 33, "19": 0, "18": 0, "65l": "a", "obi": 30.5158, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Ecuador", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 31, "roundobi_yer": 30, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "b", "77l": "a", "14l": "b", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "ECU", "48": 33, "49": 33, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 41, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 100, "33l": "d", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 58, "obi_yer": 30.1, "105l": "c", "106l": "e"}, "db_2010": {"35l": "b", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 21.1818, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 100, "20": 0, "21": 0, "22": 67, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 67, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 79.125, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "c", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "b", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 0, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 39.9, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 0, "80": 33, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 30, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 33, "30": 0, "37": 67, "36": 0, "35": 67, "34": 67, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "b", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 67, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "c", "obi_ebp": 30.2407, "q97bl": "b", "17l": "d", "countryid": 26, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "c", "obi": 31.1209, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Ecuador", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 31, "roundobi_yer": 17, "myr": "IU", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "ECU", "48": 33, "49": 0, "46": 100, "47": -1, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 21, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 33, "65": 33, "33l": "c", "q58b": 67, "80l": "c", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 40, "obi_yer": 16.6, "105l": "b", "106l": "d"}, "db_2006": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 19.4167, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 67, "22": 67, "23": 0, "41l": "c", "q56b": 100, "53l": "d", "28": 67, "29": 67, "5l": "b", "obi_ar": 0, "4": 67, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 87.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "c", "39l": "c", "58": 0, "q56bl": "a", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "d", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 25, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 36, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 33, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 0, "36": 100, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 44, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 35.7636, "q97bl": "c", "17l": "d", "countryid": 26, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "e", "obi": 31.5326, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Ecuador", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 32, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "b", "63": 67, "countrylet": "ECU", "48": 0, "49": 0, "46": 100, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 33, "80l": "d", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "b", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 25, "obi_yer": 6.7, "105l": "b", "106l": "d"}}, {"alpha2": "EG", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 5, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 38.9167, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 33, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 4.71429, "4": 33, "8": 100, "96": 33, "reg_mena": 1, "49l": "c", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 87.5, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "a", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "b", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "a", "sai_obi": 33.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 53, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 67, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 67, "35": 33, "34": 67, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 43, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 33, "96l": "c", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 52.6727, "q97bl": "b", "17l": "d", "countryid": 27, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 33, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "b", "obi": 43.4457, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Egypt", "region": "Middle East & North Africa", "48l": "c", "roundobi": 43, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "EGY", "48": 33, "49": 33, "46": 0, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": 67, "33l": "a", "q58b": 33, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "a", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 0, "105l": "a", "106l": "a"}, "name": "Egypt", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 57.5455, "26l": "d", "67l": "a", "115l": "c", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "a", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 87.5, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "IU", "110": 0, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 33, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 100, "103": 0, "100": 67, "101": 67, "106": 0, "59l": "d", "104": 33, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 82, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 2.2931, "q97bl": null, "17l": "d", "countryid": 27, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": 33, "45l": "d", "57l": "c", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 0, "97": 100, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 13.3368, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Egypt", "region": "Middle East & North Africa", "48l": "d", "roundobi": 13, "roundobi_yer": 37, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "EGY", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "c", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 36.7, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 41.75, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 41.75, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 67, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.75, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "c", "q58bl": "d", "39l": "c", "58": 100, "q56bl": "b", "81l": "a", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "b", "sai_obi": 30, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 52, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "a", "76": 67, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 33, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "a", "79l": "a", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 44, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 51.5455, "q97bl": "d", "17l": "d", "countryid": 27, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "d", "obi": 48.587, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 42, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Egypt", "region": "Middle East & North Africa", "48l": "b", "roundobi": 49, "roundobi_yer": 47, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "b", "ar": "IU", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "EGY", "48": 67, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "b", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 33, "73": 67, "72": 100, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "c", "15l": "d", "79": 100, "78": 100, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 46.7, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.5833, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 16.75, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 67, "reg_mena": 1, "49l": "d", "93l": "a", "q59b": 33, "12l": "d", "111l": null, "86": 33, "obi_iyr": 70.875, "13l": "d", "120": 33, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 54.25, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 67, "81": 100, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "a", "q63b": 67, "92": 100, "84l": "d", "90l": "d", "64l": "a", "q63bl": null, "8l": "d", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 0, "q60bl": "d", "79l": "a", "q97b": 100, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 54, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "b", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "a", "17l": "d", "countryid": 27, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 67, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 18.5109, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 17, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Egypt", "region": "Middle East & North Africa", "48l": "d", "roundobi": 19, "roundobi_yer": 57, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "EGY", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 67, "73l": "b", "roundleg_obi": 31, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 0, "73": 67, "72": 33, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 33, "80l": "b", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "b", "roundsai_obi": 54, "obi_yer": 56.7, "105l": "a", "106l": "d"}}, {"alpha2": "SV", "db_2008": {"35l": "c", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 61.1667, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 33, "27": 100, "20": 100, "21": 0, "22": 0, "23": 0, "41l": "e", "q56b": 67, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 67, "obi_iyr": 79.125, "13l": "d", "120": 67, "121": 33, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "b", "81l": "b", "17": 33, "pbs": "PW", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 53.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 0, "80": 67, "81": 67, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 32, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 100, "37": 67, "36": 67, "35": 33, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 48, "60": 100, "46l": "b", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "d", "86l": "b", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 32.0926, "q97bl": "b", "17l": "c", "countryid": 28, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 33, "65l": "b", "obi": 37.3736, "roundobi_iyr": 79, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "El Salvador", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 37, "roundobi_yer": 37, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "HC", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "SLV", "48": 67, "49": 0, "46": 67, "47": 0, "44": 0, "45": 33, "42": 0, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 61, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "a", "51": 0, "q60b": 100, "q57b": 33, "65": 67, "33l": "d", "q58b": 100, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 36.8, "105l": "a", "106l": "a"}, "name": "El Salvador", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 54.5455, "26l": "d", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 0, "27": 100, "20": 100, "21": 0, "22": 33, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 0, "29": 33, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 79.125, "13l": "c", "120": 67, "121": 33, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "b", "17": 67, "pbs": "IU", "61": 0, "34l": "d", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "c", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 33, "113": 100, "44l": "b", "123l": "c", "83": 0, "80": 67, "81": 67, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 33, "117l": "d", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 48, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "c", "92l": "a", "70l": "a", "19l": "c", "108": 0, "109": 67, "112l": "c", "98l": "c", "31l": "d", "102": 100, "103": 33, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 67, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 100, "31": 0, "30": 100, "37": 33, "36": 67, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "c", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 33.25, "97l": "a", "year": 2012, "rank": 55, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "d", "107": 0, "118l": "d", "2": 67, "50l": "c", "86l": "a", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 48.2586, "q97bl": null, "17l": "b", "countryid": 28, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": 33, "45l": "c", "57l": "d", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "c", "16": 33, "19": 33, "18": 100, "65l": "c", "obi": 43.4947, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 0, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "El Salvador", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 43, "roundobi_yer": 47, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "b", "ar": "IU", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "SLV", "48": 100, "49": 0, "46": 67, "47": 0, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 55, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 33, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 46.7, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 41.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 67, "21": 0, "22": 0, "23": 0, "41l": "e", "q56b": 33, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 79.125, "13l": "d", "120": 67, "121": 33, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "c", "81l": "a", "17": 33, "pbs": "PW", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 53.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 31, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 67, "35": 33, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 44, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 58, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "d", "86l": "a", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 30.8519, "q97bl": "b", "17l": "c", "countryid": 28, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "c", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 0, "18": 67, "65l": "c", "obi": 36.989, "roundobi_iyr": 79, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "El Salvador", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 37, "roundobi_yer": 43, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "SLV", "48": 67, "49": 0, "46": 100, "47": 0, "44": 100, "45": 33, "42": 0, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "a", "51": 0, "q60b": 67, "q57b": 33, "65": 33, "33l": "d", "q58b": 100, "80l": "b", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 43.4, "105l": "a", "106l": "d"}, "db_2006": {"35l": "b", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 61.0833, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 100, "20": 67, "21": 0, "22": 0, "23": 0, "41l": "c", "q56b": 67, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 41.75, "13l": "d", "120": 67, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "a", "39l": "c", "58": 0, "q56bl": "b", "81l": "b", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 41.625, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "e", "83": 0, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "a", "51l": "d", "roundobi_ebp": 29, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 33, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 33, "42l": "c", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 67, "34": 0, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "a", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 48, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 67, "69": 0, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 29.0364, "q97bl": "b", "17l": "c", "countryid": 28, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 0, "18": 33, "65l": "e", "obi": 27.8696, "roundobi_iyr": 42, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "El Salvador", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 28, "roundobi_yer": 30, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "b", "28l": "a", "63": 100, "countrylet": "SLV", "48": 33, "49": 0, "46": 67, "47": 0, "44": 100, "45": 33, "42": 33, "43": 67, "40": 0, "41": 33, "1": 100, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 61, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "b", "51": 0, "q60b": 100, "q57b": 0, "65": -1, "33l": "d", "q58b": 100, "80l": "b", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 42, "obi_yer": 30, "105l": "a", "106l": "c"}}, {"alpha2": "GQ", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 2.75, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 85, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 29, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Equatorial Guinea", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "GNQ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 3, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 13.9167, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 92, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 29, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Equatorial Guinea", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "GNQ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 14, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Equatorial Guinea", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 9.09091, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": null, "eb": "IU", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 0, "106": 0, "59l": "d", "104": 0, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 98, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 0, "q97bl": null, "17l": "d", "countryid": 29, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Equatorial Guinea", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "GNQ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 9, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "FJ", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 38, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 57.6364, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 38.1429, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "c", "81l": "c", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 89, "comp0610": 0, "comp0612": 0, "56": 33, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.4, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "c", "83": 0, "80": 100, "81": 33, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": -1, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 65, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "a", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 30, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "a", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 12.6957, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Fiji", "region": "East Asia & Pacific", "48l": "d", "roundobi": 13, "roundobi_yer": 37, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "HC", "61l": "b", "77l": "b", "14l": "d", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "d", "28l": "d", "63": 0, "countrylet": "FJI", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 67, "65": 0, "33l": "d", "q58b": 33, "80l": "a", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 36.7, "105l": "a", "106l": "e"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 6.6, "q63cl": "c", "eb": "NP", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 93, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 30, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Fiji", "region": "East Asia & Pacific", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": "b", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "FJI", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 33, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 7, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Fiji", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "c", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "d", "24l": "d", "sai_obi": 8.25, "q63cl": null, "eb": "HC", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 3, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 100, "106": 0, "59l": "d", "104": 0, "105": -1, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 91, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 3.46552, "q97bl": null, "17l": "d", "countryid": 30, "25l": "d", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": 0, "45l": "d", "57l": "b", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 5.63158, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Fiji", "region": "East Asia & Pacific", "48l": "d", "roundobi": 6, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "IU", "61l": "b", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "FJI", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 8, "obi_yer": 0, "105l": "c", "106l": "d"}}, {"alpha2": "FR", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 76, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 75.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 76.2857, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "a", "120": 67, "121": 0, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "e", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "c", "24l": "a", "sai_obi": 70.1, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "d", "83": 100, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "b", "51l": "b", "roundobi_ebp": 88, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "c", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 3, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "a", "6": 67, "96l": "b", "102l": "b", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 88.3333, "q97bl": "b", "17l": "a", "countryid": 31, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 33, "94": 67, "97": -1, "62l": "a", "11": 100, "10": 33, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 67, "65l": "c", "obi": 86.8571, "roundobi_iyr": 100, "18l": "b", "roundobi_myr": 0, "52l": "a", "q70b": 100, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "France", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 87, "roundobi_yer": 100, "myr": "NP", "q70bl": "a", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "FRA", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 100, "42": 33, "43": 67, "40": 67, "41": 67, "1": 100, "94l": "b", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 75, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 100, "65": 33, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "c", "roundsai_obi": 70, "obi_yer": 100, "105l": "a", "106l": "b"}, "name": "France", "db_2012": {"35l": "a", "72l": "b", "roundobi_ar": 81, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 85, "26l": "a", "67l": "a", "115l": "c", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "c", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 66.75, "9l": "b", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "a", "q56b": null, "53l": "b", "28": 100, "29": 67, "5l": "b", "obi_ar": 81, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 100, "13l": "c", "120": 100, "121": 33, "122": 100, "123": 0, "124": 100, "125": 0, "76l": "b", "15": 33, "21l": "a", "q58bl": null, "39l": "a", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 67, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "d", "24l": "c", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 33, "113": 100, "44l": "a", "123l": "d", "83": 100, "80": 100, "81": 100, "119": 33, "118": 0, "obi_cat": "Extensive", "roundobi_cb": 25, "117l": "c", "43l": "a", "100l": "b", "51l": "a", "roundobi_ebp": 83, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "b", "70l": "a", "19l": "b", "108": 100, "109": 33, "112l": "c", "98l": "b", "31l": "a", "102": 67, "103": 67, "100": 67, "101": 100, "106": 67, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": 100, "42l": "a", "58l": "a", "76": 67, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "c", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 24.75, "97l": "a", "year": 2012, "rank": 6, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "c", "107": 100, "118l": "d", "2": 67, "50l": "a", "86l": "a", "6": 0, "96l": "b", "102l": "b", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 83.3448, "q97bl": null, "17l": "a", "countryid": 31, "25l": "a", "112": 33, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": 67, "45l": "a", "57l": "b", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 100, "97": 100, "62l": "a", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 5, "14": 100, "103l": "b", "16": 100, "19": 67, "18": 100, "65l": "d", "obi": 82.8105, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 67, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "a", "111": 0, "q80bl": null, "country": "France", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 83, "roundobi_yer": 90, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "FRA", "48": 100, "49": 67, "46": 100, "47": 100, "44": 100, "45": 100, "42": 100, "43": 100, "40": 0, "41": 100, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 100, "9": 0, "85": 100, "73l": "a", "roundleg_obi": 85, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 0, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "c", "60l": "a", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 90, "105l": "a", "106l": "b"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 81, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 72.3333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 33.25, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 67, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 81, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "c", "120": 67, "121": 0, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "a", "q58bl": "e", "39l": "b", "58": 100, "q56bl": "b", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "c", "24l": "c", "sai_obi": 76.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "d", "83": 100, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "b", "51l": "a", "roundobi_ebp": 86, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "b", "58l": "a", "76": 33, "33": 33, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 4, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 33, "96l": "b", "102l": "b", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 85.8148, "q97bl": "b", "17l": "a", "countryid": 31, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 33, "13": 33, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 86.8242, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 33, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "France", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 87, "roundobi_yer": 100, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "FRA", "48": 100, "49": 100, "46": 100, "47": 100, "44": -1, "45": 100, "42": 67, "43": 67, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 72, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 100, "72": 67, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 33, "65": 0, "33l": "c", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 77, "obi_yer": 100, "105l": "a", "106l": "b"}, "db_2006": {"35l": "a", "72l": "b", "roundobi_ar": 92, "pub_pbs": 1, "113l": "c", "54l": "a", "leg_obi": 66.75, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 91.75, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "a", "120": 33, "121": 0, "122": 67, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "a", "q58bl": "e", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "c", "24l": "a", "sai_obi": 70.875, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "e", "83": 100, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "c", "100l": "b", "51l": "b", "roundobi_ebp": 86, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 33, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "c", "58l": "a", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 100, "34": 100, "q64bl": "b", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 1, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "a", "6": 67, "96l": "b", "102l": "b", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 86.4815, "q97bl": "b", "17l": "a", "countryid": 31, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 67, "93": 100, "122l": "b", "95": 33, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 33, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 67, "65l": "e", "obi": 88.6923, "roundobi_iyr": 96, "18l": "b", "roundobi_myr": 92, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "France", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 89, "roundobi_yer": 97, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "FRA", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 100, "42": 33, "43": 33, "40": 67, "41": 67, "1": 100, "94l": "e", "q63c": 67, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 67, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 67, "120l": "c", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 67, "65": -1, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 67, "95l": "c", "roundsai_obi": 71, "obi_yer": 96.7, "105l": "a", "106l": "b"}}, {"alpha2": "GE", "db_2008": {"35l": "e", "72l": "a", "roundobi_ar": 28, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 44.4167, "26l": "a", "67l": "a", "115l": "e", "30l": "c", "71l": "b", "47l": "d", "90": 100, "109l": "c", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 66.5, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 67, "20": 33, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 67, "29": 67, "5l": "a", "obi_ar": 27.8333, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": -1, "obi_iyr": 58.5, "13l": "c", "120": 33, "121": 67, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "b", "q58bl": "c", "39l": "c", "58": 0, "q56bl": "b", "81l": "c", "17": 67, "pbs": "PW", "61": 33, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "d", "obi_pbs": 66.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 50, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "b", "123l": "a", "83": 33, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 33, "117l": "e", "43l": "b", "100l": "d", "51l": "d", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "c", "11l": "c", "comp0608": 1, "27l": "b", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 33, "112l": null, "98l": "e", "31l": "c", "102": 100, "103": -1, "100": 0, "101": 67, "106": 33, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "e", "39": 33, "38": 0, "42l": "c", "58l": "d", "76": 33, "33": 33, "32": 100, "31": 33, "30": -1, "37": 67, "36": 33, "35": -1, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 1, "53": 0, "cb": "HC", "obi_cb": 33, "97l": "e", "year": 2008, "rank": 30, "60": 100, "46l": "e", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 67, "69": 0, "63l": "b", "121l": "b", "75l": "c", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "e", "6": 33, "96l": "b", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 56.3846, "q97bl": "c", "17l": "b", "countryid": 32, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "d", "91": -1, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "b", "11": 33, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "c", "obi": 52.8506, "roundobi_iyr": 59, "18l": "a", "roundobi_myr": 67, "52l": "d", "q70b": 0, "89": 0, "iyr": "HC", "85l": "b", "111": -1, "q80bl": "e", "country": "Georgia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 53, "roundobi_yer": 41, "myr": "HC", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "b", "89l": "d", "20l": "c", "87": 67, "68l": "b", "28l": "b", "63": 67, "countrylet": "GEO", "48": 33, "49": 33, "46": -1, "47": 0, "44": 67, "45": 33, "42": 33, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 44, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 33, "74": 100, "73": 100, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "d", "79": 33, "78": 33, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 33, "33l": "c", "q58b": 33, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 50, "obi_yer": 40.5556, "105l": "a", "106l": "c"}, "name": "Georgia", "db_2012": {"35l": "e", "72l": "d", "roundobi_ar": 72, "pub_pbs": 1, "113l": "b", "54l": "a", "leg_obi": 81.9091, "26l": "a", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 72.1667, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "c", "120": 100, "121": 67, "122": 67, "123": 67, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 67, "comp0812": 1, "107l": "b", "q99b": null, "108l": "c", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "b", "24l": "a", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 67, "44l": "a", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 76, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "a", "108": 33, "109": 0, "112l": "d", "98l": "a", "31l": "a", "102": 100, "103": 67, "100": 0, "101": 100, "106": 67, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "e", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": 100, "35": -1, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "e", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 33, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "b", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 67, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 76.3818, "q97bl": null, "17l": "d", "countryid": 32, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": 100, "45l": "d", "57l": "a", "91": -1, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 100, "97": 100, "62l": "a", "11": 100, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 55.3187, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Georgia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 55, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "d", "14l": "b", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "GEO", "48": 67, "49": 67, "46": 100, "47": 67, "44": 100, "45": 0, "42": 33, "43": 0, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 82, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 0, "105l": "a", "106l": "b"}, "db_2010": {"35l": "e", "72l": "a", "roundobi_ar": 39, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 47.1667, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 38.8333, "4": 67, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": -1, "obi_iyr": 79.25, "13l": "c", "120": 33, "121": 67, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "b", "81l": "c", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "a", "sai_obi": 53.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 67, "44l": "b", "123l": "b", "83": 0, "80": 0, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "d", "51l": "d", "roundobi_ebp": 60, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 0, "101": 67, "106": 33, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "e", "39": 33, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": -1, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 34, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "e", "6": 0, "96l": "a", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 59.9074, "q97bl": "c", "17l": "c", "countryid": 32, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": -1, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "a", "obi": 54.6966, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Georgia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 55, "roundobi_yer": 26, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 33, "55l": "b", "ar": "HC", "61l": "a", "77l": "a", "14l": "c", "87l": "a", "89l": "b", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "GEO", "48": 67, "49": 67, "46": 100, "47": 0, "44": 67, "45": 0, "42": 67, "43": 67, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": "b", "51": 0, "q60b": 67, "q57b": 0, "65": 100, "33l": "b", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 53, "obi_yer": 25.7778, "105l": "a", "106l": "c"}, "db_2006": {"35l": "e", "72l": "a", "roundobi_ar": 50, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 48.4545, "26l": "c", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "c", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 66.75, "9l": "d", "24": 0, "25": 0, "26": 33, "27": 67, "20": 33, "21": 33, "22": 33, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 33, "29": 33, "5l": "b", "obi_ar": 50, "4": 33, "8": 100, "96": -1, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 49.875, "13l": "a", "120": 33, "121": 67, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 33, "21l": "c", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "c", "17": 0, "pbs": "HC", "61": 33, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "c", "2l": "b", "64": 33, "comp0810": 1, "69l": "c", "obi_pbs": 55.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "d", "sai_obi": 71.2857, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 33, "44l": "b", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "d", "roundobi_ebp": 28, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": 67, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": null, "8l": "a", "82l": "b", "11l": "c", "comp0608": 1, "27l": "b", "29l": "c", "92l": "a", "70l": "b", "19l": "c", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 67, "106": 33, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 33, "42l": "c", "58l": "d", "76": 67, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 33, "35": -1, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 55, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 33, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 42, "60": 100, "46l": "b", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 33, "67": 67, "68": 33, "69": 33, "63l": "b", "121l": "b", "75l": "c", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "d", "86l": "d", "6": 0, "96l": "e", "102l": "a", "88l": "c", "1l": "b", "q79bl": "c", "obi_ebp": 28.3519, "q97bl": "c", "17l": "d", "countryid": 32, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "c", "11": 33, "10": 0, "13": 100, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 33, "18": 67, "65l": "e", "obi": 33.6556, "roundobi_iyr": 50, "18l": "b", "roundobi_myr": 67, "52l": "d", "q70b": 0, "89": 67, "iyr": "HC", "85l": "d", "111": -1, "q80bl": null, "country": "Georgia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 34, "roundobi_yer": 27, "myr": "HC", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 67, "55l": "b", "ar": "PW", "61l": "c", "77l": "a", "14l": "c", "87l": "a", "89l": "b", "20l": "c", "87": 100, "68l": "c", "28l": "c", "63": 67, "countrylet": "GEO", "48": 33, "49": 0, "46": 67, "47": 33, "44": 67, "45": 0, "42": 33, "43": 67, "40": 0, "41": 0, "1": 67, "94l": "e", "q63c": 100, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 48, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 33, "74": 67, "73": 100, "72": 100, "71": 33, "70": 67, "116l": "e", "60l": "a", "74l": "b", "15l": "c", "79": 33, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 33, "65": -1, "33l": "d", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "c", "66l": "c", "119l": "b", "q64b": 33, "95l": "c", "roundsai_obi": 71, "obi_yer": 26.6, "105l": "a", "106l": "c"}}, {"alpha2": "DE", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 71, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 91.6667, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 25, "9l": "a", "24": 100, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 33, "obi_iyr": 91.625, "13l": "b", "120": 100, "121": 100, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "a", "24l": "a", "sai_obi": 83.4, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 69, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 33, "38": 33, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 67, "83l": "d", "grade_leg": "Strong", "16l": "a", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 14, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 69.1698, "q97bl": "b", "17l": "a", "countryid": 33, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 33, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 64.0667, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 25, "52l": "d", "q70b": 100, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Germany", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 64, "roundobi_yer": 40, "myr": "PW", "q70bl": "a", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "GER", "48": 67, "49": 67, "46": 100, "47": 100, "44": -1, "45": 67, "42": 33, "43": 33, "40": 33, "41": -1, "1": 100, "94l": "b", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 92, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 0, "73": 33, "72": 100, "71": 33, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "e", "51": 0, "q60b": 67, "q57b": 33, "65": 67, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "d", "roundsai_obi": 83, "obi_yer": 40, "105l": "a", "106l": "a"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 77.75, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 58.5, "9l": "a", "24": 100, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": 33, "53l": "d", "28": 100, "29": 0, "5l": "a", "obi_ar": 76.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 67, "obi_iyr": 95.875, "13l": "b", "120": 0, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "c", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "a", "24l": "a", "sai_obi": 86.7, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "a", "51l": "d", "roundobi_ebp": 72, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "b", "39": 33, "38": 33, "42l": "a", "58l": "a", "76": 67, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 100, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 12, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "b", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 71.6981, "q97bl": "a", "17l": "a", "countryid": 33, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 67, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "b", "obi": 68.1778, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 59, "52l": "d", "q70b": 100, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Germany", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 68, "roundobi_yer": 43, "myr": "PW", "q70bl": "a", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "GER", "48": 67, "49": 67, "46": 100, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 78, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "d", "75": 67, "74": 67, "73": 33, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 100, "78": 0, "q59bl": "e", "51": 0, "q60b": 67, "q57b": 67, "65": 67, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 87, "obi_yer": 43.4, "105l": "a", "106l": "a"}, "name": "Germany", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 62, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 81.8182, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 33.25, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 61.8571, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 95.875, "13l": "d", "120": 0, "121": 0, "122": 100, "123": 67, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "b", "17": 67, "pbs": "PW", "61": 67, "34l": "a", "54": 0, "57": 100, "40l": "b", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 100, "44l": "e", "123l": "b", "83": 0, "80": 100, "81": 67, "119": 100, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "a", "100l": "a", "51l": "d", "roundobi_ebp": 79, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 33, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 67, "103": 100, "100": 100, "101": 100, "106": 100, "59l": "a", "104": 67, "105": 100, "101l": "a", "91l": "c", "39": 67, "38": 33, "42l": "a", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 13, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "a", "6": 67, "96l": "a", "102l": "b", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 79.1964, "q97bl": null, "17l": "b", "countryid": 33, "25l": "a", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 33, "45l": "b", "57l": "a", "91": 33, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 100, "97": 33, "62l": "a", "11": 100, "10": 67, "13": 0, "12": 100, "order_cat": 4, "14": 100, "103l": "a", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 71.3441, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 33, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Germany", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 71, "roundobi_yer": 50, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "GER", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 67, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 82, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "d", "75": 67, "74": 33, "73": 33, "72": 100, "71": 67, "70": 100, "116l": "d", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 50, "105l": "a", "106l": "a"}}, {"alpha2": "GH", "db_2008": {"35l": "c", "72l": "b", "roundobi_ar": 10, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 47.3333, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 0, "109l": "b", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 33, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "c", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 9.57143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 67, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.375, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "a", "24l": "d", "sai_obi": 36.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "a", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 67, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 67, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2008, "rank": 33, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 67, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 100, "96l": "b", "102l": "b", "88l": "d", "1l": "a", "q79bl": "a", "obi_ebp": 67.2364, "q97bl": "c", "17l": "c", "countryid": 34, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "d", "91": 0, "q79b": 100, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 33, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 0, "65l": "b", "obi": 49.6413, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Ghana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 50, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "b", "28l": "a", "63": 100, "countrylet": "GHA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 100, "45": 67, "42": 0, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "b", "51": 33, "q60b": 0, "q57b": 0, "65": 67, "33l": "a", "q58b": 67, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "b", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 37, "obi_yer": 0, "105l": "a", "106l": "b"}, "name": "Ghana", "db_2012": {"35l": "b", "72l": "b", "roundobi_ar": 71, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 78.9091, "26l": "c", "67l": "b", "115l": "c", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 50, "9l": "a", "24": 67, "25": 100, "26": 33, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "a", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 83.375, "13l": "c", "120": 100, "121": 33, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "a", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "b", "24l": "b", "sai_obi": 91.75, "q63cl": null, "eb": "HC", "115": 33, "114": 67, "117": 67, "116": 67, "ebp": "PW", "110": 0, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "b", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 57, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 100, "103": 67, "100": 67, "101": 33, "106": 100, "59l": "b", "104": 100, "105": 100, "101l": "c", "91l": "a", "39": 33, "38": 33, "42l": "d", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 44, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 100, "118l": "d", "2": 0, "50l": "c", "86l": "d", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 57.431, "q97bl": null, "17l": "c", "countryid": 34, "25l": "a", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "b", "36l": "b", "comp1012": 1, "99": 67, "98": 33, "45l": "c", "57l": "a", "91": 100, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "d", "11": 33, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 33, "19": 0, "18": 0, "65l": "d", "obi": 49.8, "roundobi_iyr": 83, "18l": "d", "roundobi_myr": 50, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Ghana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 50, "roundobi_yer": 0, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "a", "ar": "PW", "61l": "d", "77l": "d", "14l": "b", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "GHA", "48": 67, "49": 33, "46": 33, "47": 0, "44": 100, "45": 33, "42": 0, "43": 33, "40": 0, "41": 100, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 79, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 33, "73": 67, "72": 67, "71": 33, "70": 100, "116l": "b", "60l": "d", "74l": "c", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "b", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "c", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 0, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "d", "roundobi_ar": 67, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 61.1667, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 83.5, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "b", "q56b": 67, "53l": "b", "28": 67, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 67, "8": 67, "96": 100, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "b", "120": 67, "121": 33, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "d", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "b", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "a", "24l": "b", "sai_obi": 63.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "a", "123l": "b", "83": 67, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "b", "roundobi_ebp": 68, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "d", "q63bl": "e", "8l": "b", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "d", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "b", "59": 67, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "c", "q97b": 67, "83l": "b", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 67, "cb": "IU", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 35, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "c", "75l": "b", "pub_iyr": 0, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "c", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 67.9455, "q97bl": "b", "17l": "c", "countryid": 34, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "d", "91": 100, "q79b": 100, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 67, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 0, "18": 0, "65l": "d", "obi": 54.3913, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 84, "52l": "b", "q70b": 67, "89": 100, "iyr": "NP", "85l": "b", "111": -1, "q80bl": "e", "country": "Ghana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 54, "roundobi_yer": 37, "myr": "PW", "q70bl": "b", "q65bl": "b", "obi_eb": 67, "82": 0, "55l": "a", "ar": "HC", "61l": "d", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "d", "28l": "b", "63": 0, "countrylet": "GHA", "48": 67, "49": 33, "46": 100, "47": 0, "44": 100, "45": 33, "42": 33, "43": 33, "40": 0, "41": 67, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 33, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 61, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 67, "74": 67, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "b", "15l": "c", "79": 33, "78": 0, "q59bl": "b", "51": 67, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 67, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 63, "obi_yer": 36.6, "105l": "a", "106l": "a"}, "db_2006": {"35l": "c", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 44.4167, "26l": "c", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "NP", "reg_lac": 0, "obi_myr": 41.75, "9l": "a", "24": 0, "25": 100, "26": 33, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "c", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 100, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "c", "58": 0, "q56bl": "a", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 100, "10l": "a", "24l": "d", "sai_obi": 54.125, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 64, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 100, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 0, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": 100, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 32, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "c", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 100, "96l": "a", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 64.2, "q97bl": "c", "17l": "d", "countryid": 34, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "a", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 67, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 33, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 67, "18": 0, "65l": "e", "obi": 42.3696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 42, "52l": "a", "q70b": 33, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Ghana", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 42, "roundobi_yer": 0, "myr": "HC", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "a", "ar": "IU", "61l": "d", "77l": "d", "14l": "a", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "GHA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 44, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 67, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 0, "q57b": 0, "65": -1, "33l": "a", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 54, "obi_yer": 0, "105l": "a", "106l": "b"}}, {"alpha2": "GT", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 10, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 50, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 0, "5l": "a", "obi_ar": 9.57143, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.125, "13l": "b", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "c", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 40, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 53, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 37, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "d", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 53.3273, "q97bl": "c", "17l": "d", "countryid": 35, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 0, "103l": "e", "16": 0, "19": 67, "18": 100, "65l": "a", "obi": 46, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Guatemala", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 46, "roundobi_yer": 20, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "HC", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 33, "countrylet": "GTM", "48": 67, "49": 0, "46": 33, "47": 67, "44": 100, "45": 67, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "b", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "b", "51": 0, "q60b": 33, "q57b": 0, "65": 100, "33l": "b", "q58b": 67, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 40, "obi_yer": 19.9, "105l": "a", "106l": "a"}, "name": "Guatemala", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 38, "pub_pbs": 1, "113l": "a", "54l": "c", "leg_obi": 42.4545, "26l": "d", "67l": "b", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 0, "27": 67, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 67, "29": 0, "5l": "a", "obi_ar": 38.1429, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "c", "86": 0, "obi_iyr": 79.25, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "PW", "61": 33, "34l": "a", "54": 33, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "b", "24l": "b", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 67, "113": 100, "44l": "a", "123l": "c", "83": 0, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 50, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 55, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "d", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 67, "112l": "c", "98l": "d", "31l": "a", "102": 0, "103": 0, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 100, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 55, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 50, "97l": "d", "year": 2012, "rank": 39, "60": 100, "46l": "c", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "d", "107": 0, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 54.5862, "q97bl": null, "17l": "d", "countryid": 35, "25l": "a", "112": 33, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": 0, "45l": "c", "57l": "d", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 0, "62l": "c", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "d", "16": 0, "19": 100, "18": 100, "65l": "a", "obi": 50.5158, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 33, "q80bl": null, "country": "Guatemala", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 51, "roundobi_yer": 27, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "c", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "b", "63": 67, "countrylet": "GTM", "48": 67, "49": 0, "46": 33, "47": 0, "44": 100, "45": 33, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 67, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "c", "7l": "b", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 26.6, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 43, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 49.9167, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 0, "27": 67, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 67, "29": 0, "5l": "a", "obi_ar": 42.8571, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.125, "13l": "c", "120": 33, "121": 33, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "a", "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "d", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "b", "24l": "b", "sai_obi": 53.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 55, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 42, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "c", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 67, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 55.1818, "q97bl": "c", "17l": "d", "countryid": 35, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "b", "obi": 50, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Guatemala", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 50, "roundobi_yer": 23, "myr": "NP", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "b", "63": 33, "countrylet": "GTM", "48": 33, "49": 0, "46": 33, "47": 100, "44": 100, "45": 100, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 67, "65": 67, "33l": "a", "q58b": 67, "80l": "c", "7l": "b", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 53, "obi_yer": 23.2, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "a", "roundobi_ar": 75, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 55.5833, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 33, "27": 67, "20": 100, "21": 33, "22": 0, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 67, "29": 0, "5l": "a", "obi_ar": 75, "4": 67, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 83.375, "13l": "b", "120": 67, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 54.125, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 50, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": 67, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 67, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "a", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 67, "q60bl": "b", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 29, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "d", "102l": "d", "88l": "b", "1l": "c", "q79bl": "b", "obi_ebp": 50.2182, "q97bl": "b", "17l": "c", "countryid": 35, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 33, "65l": "e", "obi": 46.3152, "roundobi_iyr": 83, "18l": "c", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Guatemala", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 46, "roundobi_yer": 23, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "HC", "61l": "d", "77l": "a", "14l": "c", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "b", "28l": "b", "63": 33, "countrylet": "GTM", "48": 33, "49": 0, "46": 33, "47": 100, "44": 100, "45": 33, "42": 0, "43": 0, "40": 0, "41": 33, "1": 33, "94l": "e", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "b", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "d", "q58b": 67, "80l": "c", "7l": "b", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 54, "obi_yer": 23.2, "105l": "a", "106l": "a"}}, {"alpha2": "HN", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 9, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 41.6667, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 9.42857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 66.75, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "c", "81l": "b", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 43.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "a", "83": 0, "80": 100, "81": 67, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "b", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "d", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 67, "101": 33, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 67, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 33, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 36, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "a", "obi": 11.5978, "roundobi_iyr": 67, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Honduras", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 12, "roundobi_yer": 43, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 33, "82": 33, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "d", "87l": "c", "89l": "d", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "HND", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 42, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 67, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 33, "65": 100, "33l": "d", "q58b": 33, "80l": "a", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "c", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 43, "obi_yer": 43.4, "105l": "a", "106l": "a"}, "name": "Honduras", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 29, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 66.7273, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 24.75, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 33, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "a", "28": 0, "29": 100, "5l": "a", "obi_ar": 28.7143, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "c", "86": 0, "obi_iyr": 75.125, "13l": "b", "120": 33, "121": 33, "122": 0, "123": 33, "124": 100, "125": 67, "76l": "c", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "b", "17": 0, "pbs": "PW", "61": 67, "34l": "a", "54": 100, "57": 0, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 33, "comp0812": 1, "107l": "b", "q99b": null, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "a", "24l": "c", "sai_obi": 66.5, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 33, "113": 100, "44l": "a", "123l": "c", "83": 0, "80": 33, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 42, "117l": "d", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 60, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "c", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 67, "109": 67, "112l": "c", "98l": "b", "31l": "b", "102": 33, "103": 33, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 100, "42l": "d", "58l": "d", "76": 33, "33": 33, "32": 100, "31": 67, "30": 100, "37": 100, "36": 100, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "a", "22l": "d", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 41.5, "97l": "b", "year": 2012, "rank": 36, "60": 100, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "b", "110l": "c", "114l": "d", "107": 67, "118l": "d", "2": 100, "50l": "a", "86l": "d", "6": 67, "96l": "d", "102l": "c", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 59.7586, "q97bl": null, "17l": "d", "countryid": 36, "25l": "a", "112": 33, "38l": "a", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 67, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": 67, "62l": "c", "11": 33, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "c", "16": 0, "19": 0, "18": 100, "65l": "a", "obi": 53.3263, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 25, "52l": "c", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 33, "q80bl": null, "country": "Honduras", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 53, "roundobi_yer": 23, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "b", "77l": "a", "14l": "c", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "d", "63": 67, "countrylet": "HND", "48": 100, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 67, "41": 0, "1": 100, "94l": "c", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 67, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 33, "73": 33, "72": 67, "71": 100, "70": 67, "116l": "d", "60l": "a", "74l": "c", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "c", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 23.3, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 5, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 36.1667, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "c", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 39.9, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 0, "80": 33, "81": 67, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "d", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "b", "19l": "d", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 80, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 36, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "b", "obi": 10.8696, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Honduras", "region": "Latin America & Caribbean", "48l": "d", "roundobi": 11, "roundobi_yer": 27, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "HND", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "c", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 67, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 40, "obi_yer": 26.6, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 17, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 52.75, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 16.5, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 45.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 67, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "a", "24l": "c", "sai_obi": 41.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 0, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "c", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 0, "31": 0, "30": 100, "37": 67, "36": 67, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 0, "88": 33, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 39, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 100, "69": 67, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 33, "96l": "c", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 44.8545, "q97bl": "c", "17l": "b", "countryid": 36, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 33, "10": 100, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 0, "18": 100, "65l": "e", "obi": 38.0543, "roundobi_iyr": 46, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Honduras", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 38, "roundobi_yer": 40, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "c", "89l": "d", "20l": "a", "87": 33, "68l": "a", "28l": "b", "63": 33, "countrylet": "HND", "48": 33, "49": 67, "46": 0, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 53, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 0, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 33, "80l": "b", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 42, "obi_yer": 40.1, "105l": "a", "106l": "a"}}, {"alpha2": "IN", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 62, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 44.5, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 25, "9l": "d", "24": 100, "25": 100, "26": 0, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 33, "5l": "b", "obi_ar": 61.8571, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 67, "12l": "a", "111l": null, "86": 0, "obi_iyr": 95.875, "13l": "a", "120": 0, "121": 0, "122": 67, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "a", "39l": "a", "58": 100, "q56bl": "a", "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "a", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "a", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 67, "55": 33, "10l": "d", "24l": "a", "sai_obi": 63.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "c", "83": 0, "80": 100, "81": 67, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 67, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 62, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 1, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "c", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": 0, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "c", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2008, "rank": 20, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 62.3818, "q97bl": "c", "17l": "b", "countryid": 37, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "b", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "c", "obi": 60.4891, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 25, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "India", "region": "South Asia", "48l": "c", "roundobi": 60, "roundobi_yer": 40, "myr": "PW", "q70bl": "c", "q65bl": "a", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "c", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "IND", "48": 33, "49": 33, "46": 100, "47": 0, "44": 100, "45": 100, "42": 100, "43": 0, "40": 100, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 45, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 100, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "b", "51": 33, "q60b": 100, "q57b": 0, "65": 33, "33l": "a", "q58b": 100, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "d", "q64b": 100, "95l": "d", "roundsai_obi": 63, "obi_yer": 40, "105l": "a", "106l": "b"}, "name": "India", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 71, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 75.7273, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 83.5, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "b", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 91.625, "13l": "a", "120": 100, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "b", "15": 33, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "b", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 67, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 67, "81": 100, "119": 0, "118": 0, "obi_cat": "Significant", "roundobi_cb": 42, "117l": "c", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 72, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 1, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": "c", "98l": "c", "31l": "a", "102": 67, "103": 67, "100": 100, "101": 100, "106": 100, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "b", "58l": "a", "76": 67, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 41.75, "97l": "c", "year": 2012, "rank": 14, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "c", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 72.4483, "q97bl": null, "17l": "b", "countryid": 37, "25l": "a", "112": 33, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": 33, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "d", "95": 67, "94": 100, "97": 33, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 67, "103l": "b", "16": 67, "19": 100, "18": 100, "65l": "c", "obi": 67.7579, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 84, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "India", "region": "South Asia", "48l": "c", "roundobi": 68, "roundobi_yer": 40, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "b", "14l": "b", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "IND", "48": 33, "49": 33, "46": 100, "47": 0, "44": 100, "45": 100, "42": 67, "43": 0, "40": 67, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 76, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 100, "71": 33, "70": 100, "116l": "c", "60l": "d", "74l": "a", "15l": "c", "79": 67, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 33, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "b", "roundsai_obi": 100, "obi_yer": 40.1, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "c", "roundobi_ar": 71, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 50, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 75.25, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 95.875, "13l": "a", "120": 100, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "b", "15": 33, "21l": "a", "q58bl": "a", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "b", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "a", "sai_obi": 66.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 67, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 67, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 1, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 33, "42l": "b", "58l": "a", "76": 67, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 14, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 67.2963, "q97bl": "c", "17l": "b", "countryid": 37, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 67, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "c", "obi": 66.6923, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 75, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "India", "region": "South Asia", "48l": "b", "roundobi": 67, "roundobi_yer": 40, "myr": "PW", "q70bl": "c", "q65bl": "a", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "c", "14l": "b", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "IND", "48": 67, "49": 33, "46": 100, "47": 0, "44": 100, "45": 67, "42": 67, "43": 33, "40": 67, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "a", "75": 67, "74": 67, "73": 100, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "b", "15l": "c", "79": 67, "78": 100, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 0, "65": 33, "33l": "a", "q58b": 100, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "b", "roundsai_obi": 67, "obi_yer": 40, "105l": "a", "106l": "b"}, "db_2006": {"35l": "b", "72l": "c", "roundobi_ar": 83, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 22.1667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 50, "9l": "d", "24": 0, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 67, "5l": "b", "obi_ar": 83.25, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.125, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "a", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "b", "81l": "b", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "c", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 67, "55": 33, "10l": "d", "24l": "d", "sai_obi": 54.125, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "a", "123l": "e", "83": 0, "80": 100, "81": 67, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 67, "117l": "e", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 55, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 1, "7": 100, "3l": "d", "78l": "a", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 33, "109": 67, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 0, "101": 100, "106": 67, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "d", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 100, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "b", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2006, "rank": 17, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 54.5273, "q97bl": "c", "17l": "c", "countryid": 37, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "d", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "e", "obi": 52.8913, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 50, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "India", "region": "South Asia", "48l": "b", "roundobi": 53, "roundobi_yer": 37, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "c", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "IND", "48": 67, "49": 0, "46": 100, "47": 0, "44": 100, "45": 33, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "b", "roundleg_obi": 22, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 67, "74": 33, "73": 67, "72": 33, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "c", "15l": "d", "79": 67, "78": 100, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 67, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 54, "obi_yer": 36.7, "105l": "b", "106l": "b"}}, {"alpha2": "ID", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 66.6667, "26l": "b", "67l": "c", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "d", "24": 33, "25": 0, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 66.5714, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 62.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "a", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 63.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "c", "123l": "c", "83": 100, "80": 100, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 47, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "c", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "c", "79l": "b", "q97b": 37, "83l": "a", "grade_leg": "Strong", "16l": "d", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 29, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 33, "68": 100, "69": 100, "63l": "c", "121l": "d", "75l": "a", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "a", "102l": "a", "88l": "c", "1l": "a", "q79bl": "a", "obi_ebp": 46.6364, "q97bl": null, "17l": "d", "countryid": 38, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 100, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "c", "obi": 54.3261, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 100, "52l": "d", "q70b": 33, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": "e", "country": "Indonesia", "region": "East Asia & Pacific", "48l": "d", "roundobi": 54, "roundobi_yer": 60, "myr": "PW", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 100, "55l": "c", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 33, "countrylet": "IDN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 67, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 100, "74": 100, "73": 100, "72": 100, "71": 67, "70": 33, "116l": "e", "60l": "a", "74l": "a", "15l": "d", "79": 67, "78": 33, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 33, "33l": "a", "q58b": 0, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "b", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 63, "obi_yer": 60, "105l": "a", "106l": "a"}, "name": "Indonesia", "db_2012": {"35l": "c", "72l": "d", "roundobi_ar": 71, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 84.8182, "26l": "a", "67l": "d", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 0, "13l": "c", "120": 33, "121": 33, "122": 33, "123": 33, "124": 100, "125": 0, "76l": "a", "15": 67, "21l": "c", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "b", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "b", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 67, "113": 0, "44l": "c", "123l": "c", "83": 0, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Significant", "roundobi_cb": 42, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 67, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "a", "108": 100, "109": 67, "112l": "c", "98l": "a", "31l": "a", "102": 100, "103": 100, "100": 67, "101": 100, "106": 100, "59l": "a", "104": 33, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 33, "42l": "a", "58l": "a", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 33, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 41.75, "97l": "c", "year": 2012, "rank": 20, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "c", "75l": "b", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "b", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 67.1552, "q97bl": null, "17l": "c", "countryid": 38, "25l": "a", "112": 33, "38l": "c", "reg_eap": 1, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": 100, "45l": "c", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "c", "95": 0, "94": 67, "97": 33, "62l": "b", "11": 100, "10": 33, "13": 33, "12": 100, "order_cat": 4, "14": 67, "103l": "a", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 61.7158, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": null, "89": 100, "iyr": "IU", "85l": "c", "111": 0, "q80bl": null, "country": "Indonesia", "region": "East Asia & Pacific", "48l": "b", "roundobi": 62, "roundobi_yer": 57, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "c", "ar": "HC", "61l": "a", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "IDN", "48": 67, "49": 33, "46": 0, "47": 0, "44": 33, "45": 33, "42": 100, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 85, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 67, "74": 100, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "a", "74l": "a", "15l": "b", "79": 67, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "c", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 56.7, "105l": "a", "106l": "a"}, "db_2010": {"35l": "c", "72l": "d", "roundobi_ar": 67, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 55.5833, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "c", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 33, "25": 33, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.5714, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "a", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 77.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 59.9, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "c", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "d", "roundobi_ebp": 59, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 100, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 40, "60": 100, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "a", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "a", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 59.3455, "q97bl": "c", "17l": "a", "countryid": 38, "25l": "c", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "c", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "c", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 50.6848, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 100, "52l": "d", "q70b": 33, "89": 100, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Indonesia", "region": "East Asia & Pacific", "48l": "c", "roundobi": 51, "roundobi_yer": 0, "myr": "PW", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "a", "77l": "d", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "IDN", "48": 33, "49": 33, "46": 0, "47": 33, "44": 33, "45": 33, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 100, "74": 100, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "a", "15l": "a", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "a", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "d", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 60, "obi_yer": 0, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 58, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 55.5833, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 83.25, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 100, "20": 100, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 67, "29": 100, "5l": "b", "obi_ar": 58.25, "4": 100, "8": 67, "96": 33, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "d", "81l": "a", "17": 67, "pbs": "IU", "61": 0, "34l": "b", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "c", "24l": "d", "sai_obi": 33.25, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "e", "83": 67, "80": 100, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "b", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "c", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 100, "33": 33, "32": 67, "31": 100, "30": 0, "37": 100, "36": 100, "35": 0, "34": 67, "q64bl": "d", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 33, "q60bl": "c", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 36, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "c", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "c", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 45.4545, "q97bl": "c", "17l": "b", "countryid": 38, "25l": "d", "112": -1, "38l": "c", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 33, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 41.663, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 83, "52l": "d", "q70b": 0, "89": 100, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Indonesia", "region": "East Asia & Pacific", "48l": "c", "roundobi": 42, "roundobi_yer": 53, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 100, "55l": "d", "ar": "HC", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "d", "28l": "b", "63": 0, "countrylet": "IDN", "48": 33, "49": 33, "46": 0, "47": 67, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 56, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 33, "74": 100, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "a", "15l": "b", "79": 67, "78": 0, "q59bl": "d", "51": 33, "q60b": 33, "q57b": 0, "65": -1, "33l": "c", "q58b": 33, "80l": "a", "7l": "a", "yearid": 1, "32l": "b", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 53.4, "105l": "a", "106l": "b"}}, {"alpha2": "IQ", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 14, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 51.4545, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 0, "96": 100, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 0, "103": 33, "100": 100, "101": 67, "106": 0, "59l": "c", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 93, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "a", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 39, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 33, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 100, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "c", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 3.86316, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Iraq", "region": "Middle East & North Africa", "48l": "d", "roundobi": 4, "roundobi_yer": 10, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "IRQ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 51, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 10, "105l": "a", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.5833, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 33, "reg_mena": 1, "49l": "d", "93l": "a", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 46.6, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 0, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 91, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "a", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 39, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.358696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Iraq", "region": "Middle East & North Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "IRQ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 47, "obi_yer": 0, "105l": "b", "106l": "a"}, "name": "Iraq"}, {"alpha2": "IT", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 71, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 69.7273, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 50, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "b", "q56b": null, "53l": "c", "28": 0, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 83.375, "13l": "d", "120": 67, "121": 0, "122": 100, "123": 0, "124": 0, "125": 0, "76l": "c", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "d", "54": 100, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 100, "comp0812": 0, "107l": "a", "q99b": null, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "a", "24l": "d", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 33, "113": 100, "44l": "e", "123l": "d", "83": 33, "80": 100, "81": 100, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 33, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 57, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "b", "108": 67, "109": 67, "112l": "c", "98l": "a", "31l": "d", "102": 0, "103": 0, "100": 67, "101": 100, "106": 100, "59l": "c", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 33, "33": 0, "32": 100, "31": 0, "30": 100, "37": 0, "36": 67, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "d", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 33.25, "97l": "a", "year": 2012, "rank": 24, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 67, "63l": "a", "121l": "d", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "c", "107": 100, "118l": "d", "2": 67, "50l": "d", "86l": "b", "6": 100, "96l": "c", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 57.3333, "q97bl": null, "17l": "b", "countryid": 40, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 67, "98": 100, "45l": "a", "57l": "c", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 0, "97": 100, "62l": "a", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "d", "16": 100, "19": 67, "18": 100, "65l": "d", "obi": 60.2979, "roundobi_iyr": 83, "18l": "a", "roundobi_myr": 50, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Italy", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 60, "roundobi_yer": 50, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "c", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "ITA", "48": 67, "49": 67, "46": 0, "47": 0, "44": -1, "45": 100, "42": 0, "43": 0, "40": 0, "41": 67, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 100, "74": 67, "73": 0, "72": 100, "71": 0, "70": 100, "116l": "c", "60l": "a", "74l": "b", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 50, "105l": "a", "106l": "a"}, "db_2010": {"35l": "c", "72l": "c", "roundobi_ar": 67, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 72.3333, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 66.75, "9l": "a", "24": 0, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 0, "obi_iyr": 62.625, "13l": "d", "120": 67, "121": 0, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "e", "39l": "d", "58": 100, "q56bl": "c", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 0, "comp0812": 0, "107l": "a", "q99b": 100, "108l": "a", "2l": "a", "64": 0, "comp0810": 0, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "b", "24l": "d", "sai_obi": 73.4, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "d", "83": 0, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 53, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "b", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 100, "33": 33, "32": 100, "31": 0, "30": 100, "37": 0, "36": 33, "35": 33, "34": 0, "q64bl": "c", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 24, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "a", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 53.0741, "q97bl": "c", "17l": "a", "countryid": 40, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "b", "91": 0, "q79b": 0, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 67, "10": 67, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 57.8901, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 67, "52l": "d", "q70b": 67, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": "e", "country": "Italy", "region": "Western Europe & the U.S.", "48l": "c", "roundobi": 58, "roundobi_yer": 50, "myr": "PW", "q70bl": "b", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 67, "countrylet": "ITA", "48": 33, "49": 33, "46": 0, "47": 0, "44": -1, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 72, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 100, "74": 67, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "a", "74l": "b", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 0, "q60b": 67, "q57b": 33, "65": 0, "33l": "c", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": 33, "95l": "d", "roundsai_obi": 73, "obi_yer": 50, "105l": "a", "106l": "a"}, "name": "Italy"}, {"alpha2": "JO", "db_2008": {"35l": "c", "72l": "b", "roundobi_ar": 24, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 33.3333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 23.8571, "4": 67, "8": 100, "96": 0, "reg_mena": 1, "49l": "c", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 91.75, "13l": "b", "120": 67, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 33, "pbs": "PW", "61": 33, "34l": "a", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "b", "q99b": 33, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 23.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 58, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": null, "92": 100, "84l": "c", "90l": "d", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "b", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 0, "35": 33, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "b", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 31, "60": 67, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 58.1273, "q97bl": "b", "17l": "c", "countryid": 41, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "b", "91": 67, "q79b": 0, "93": 0, "122l": "c", "95": 0, "94": 33, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "c", "obi": 52.5109, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Jordan", "region": "Middle East & North Africa", "48l": "b", "roundobi": 53, "roundobi_yer": 27, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "c", "ar": "HC", "61l": "c", "77l": "c", "14l": "c", "87l": "c", "89l": "d", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "JOR", "48": 67, "49": 33, "46": 100, "47": 0, "44": 67, "45": 33, "42": 67, "43": 33, "40": 0, "41": 33, "1": 67, "94l": "c", "q63c": 0, "5": 0, "84": 33, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 100, "116l": "e", "60l": "b", "74l": "d", "15l": "c", "79": 33, "78": 67, "q59bl": "c", "51": 33, "q60b": 67, "q57b": 0, "65": 33, "33l": "c", "q58b": 33, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "a", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 26.5, "105l": "b", "106l": "b"}, "name": "Jordan", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 43, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 63.7273, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 0, "reg_mena": 1, "49l": "c", "93l": "d", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 87.5, "13l": "c", "120": 33, "121": 0, "122": 33, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "c", "17": 33, "pbs": "PW", "61": 67, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "b", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 67, "81": 33, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 66, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": "d", "98l": "b", "31l": "a", "102": 100, "103": 67, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 0, "36": 0, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 44, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 30, "60": 33, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "a", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 66.069, "q97bl": null, "17l": "c", "countryid": 41, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "d", "comp1012": 1, "99": 33, "98": 67, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 0, "122l": "c", "95": 0, "94": 0, "97": 67, "62l": "c", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "b", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 57.1789, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Jordan", "region": "Middle East & North Africa", "48l": "c", "roundobi": 57, "roundobi_yer": 37, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "JOR", "48": 33, "49": 33, "46": 0, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "d", "60l": "c", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 36.7, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "b", "roundobi_ar": 24, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 36.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 0, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 23.7143, "4": 67, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 87.625, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "c", "81l": "b", "17": 0, "pbs": "PW", "61": 33, "34l": "a", "54": 33, "57": 33, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 26.7, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 54, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 44, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 41, "60": 67, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "d", "86l": "b", "6": 67, "96l": "d", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 53.9091, "q97bl": "b", "17l": "d", "countryid": 41, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "c", "91": 33, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "c", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "c", "obi": 50, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Jordan", "region": "Middle East & North Africa", "48l": "c", "roundobi": 50, "roundobi_yer": 37, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "HC", "61l": "c", "77l": "a", "14l": "c", "87l": "a", "89l": "b", "20l": "d", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "JOR", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 33, "43": 67, "40": 33, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "e", "60l": "b", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 33, "33l": "c", "q58b": 0, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "b", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 36.8, "105l": "b", "106l": "a"}, "db_2006": {"35l": "b", "72l": "b", "roundobi_ar": 59, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 19.4167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "e", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 58.5, "4": 67, "8": 100, "96": 33, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 79.375, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 67, "pbs": "IU", "61": 0, "34l": "d", "54": 33, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "c", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 45.75, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "b", "q63b": 33, "92": 100, "84l": "d", "90l": "d", "64l": "b", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "b", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 0, "35": 67, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 67, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 21, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 0, "96l": "c", "102l": "d", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 55.5556, "q97bl": "c", "17l": "b", "countryid": 41, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "c", "91": 67, "q79b": 33, "93": 0, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 67, "65l": "e", "obi": 50.1868, "roundobi_iyr": 79, "18l": "b", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 33, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Jordan", "region": "Middle East & North Africa", "48l": "b", "roundobi": 50, "roundobi_yer": 30, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "c", "ar": "HC", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "c", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "JOR", "48": 67, "49": 0, "46": 100, "47": 0, "44": 67, "45": 0, "42": 67, "43": 0, "40": 0, "41": -1, "1": 67, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 33, "78": 67, "q59bl": "c", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "b", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 46, "obi_yer": 29.9, "105l": "b", "106l": "b"}}, {"alpha2": "KZ", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 38, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 58.3333, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "c", "28": 0, "29": 0, "5l": "a", "obi_ar": 38.1429, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 87.5, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "c", "81l": "d", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "b", "24l": "d", "sai_obi": 23.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 30, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 33, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "a", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 67, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 100, "35": 0, "34": 0, "q64bl": "a", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 55, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "b", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 30.2727, "q97bl": "d", "17l": "b", "countryid": 42, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 67, "10": 67, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "a", "obi": 34.7717, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Kazakhstan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 35, "roundobi_yer": 20, "myr": "NP", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "d", "20l": "d", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "KAZ", "48": 33, "49": 33, "46": 0, "47": 0, "44": 0, "45": 0, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 100, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 100, "33l": "c", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 23, "obi_yer": 20, "105l": "a", "106l": "a"}, "name": "Kazakhstan", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 52, "pub_pbs": 1, "113l": "a", "54l": "c", "leg_obi": 66.7273, "26l": "d", "67l": "a", "115l": "c", "30l": "b", "71l": "d", "47l": "b", "90": 0, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 33, "22": 100, "23": 0, "41l": "d", "q56b": null, "53l": "c", "28": 0, "29": 100, "5l": "a", "obi_ar": 52.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": null, "12l": "a", "111l": "b", "86": 100, "obi_iyr": 83.375, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "c", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "b", "17": 67, "pbs": "PW", "61": 33, "34l": "d", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "b", "q99b": null, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "a", "24l": "d", "sai_obi": 33.25, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 33, "113": 100, "44l": "d", "123l": "c", "83": 33, "80": 33, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 59, "117l": "d", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 43, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "c", "q63b": null, "92": 33, "84l": "c", "90l": "b", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 0, "27l": "d", "29l": "a", "92l": "c", "70l": "b", "19l": "d", "108": 33, "109": 67, "112l": "b", "98l": "d", "31l": "d", "102": 100, "103": 67, "100": 100, "101": 100, "106": 0, "59l": "c", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 100, "35": 33, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "c", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 58.5, "97l": "b", "year": 2012, "rank": 48, "60": 100, "46l": "e", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "c", "107": 67, "118l": "d", "2": 100, "50l": "c", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 43.2456, "q97bl": null, "17l": "b", "countryid": 42, "25l": "d", "112": 67, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "b", "11": 67, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 0, "19": 0, "18": 0, "65l": "a", "obi": 47.8404, "roundobi_iyr": 83, "18l": "d", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "c", "111": 67, "q80bl": null, "country": "Kazakhstan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 48, "roundobi_yer": 47, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "c", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "KAZ", "48": 33, "49": 67, "46": -1, "47": 67, "44": 0, "45": 0, "42": 33, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 67, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "c", "60l": "a", "74l": "d", "15l": "c", "79": 33, "78": 33, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 100, "33l": "d", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 33, "obi_yer": 46.5, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "a", "roundobi_ar": 48, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 58.25, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "b", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 100, "22": 100, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "a", "obi_ar": 47.5714, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "b", "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "c", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 43.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 36, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "c", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 100, "35": 33, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 57, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 33, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 100, "96l": "a", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 36.4074, "q97bl": "c", "17l": "b", "countryid": 42, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 67, "10": 100, "13": 0, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 0, "18": 67, "65l": "a", "obi": 38.0769, "roundobi_iyr": 75, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Kazakhstan", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 38, "roundobi_yer": 17, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "KAZ", "48": 33, "49": 33, "46": -1, "47": 67, "44": 0, "45": 33, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 33, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 100, "33l": "d", "q58b": 33, "80l": "d", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 43, "obi_yer": 16.6, "105l": "a", "106l": "a"}, "db_2006": {"35l": "c", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 55.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 0, "20": 0, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 100, "5l": "a", "obi_ar": 66.75, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 87.5, "13l": "c", "120": 67, "121": 67, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "c", "58": 67, "q56bl": "b", "81l": "d", "17": 33, "pbs": "PW", "61": 0, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "c", "24l": "b", "sai_obi": 33.375, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 43, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "c", "q63b": 67, "92": 67, "84l": "d", "90l": "d", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 0, "27l": "d", "29l": "a", "92l": "b", "70l": "b", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 67, "101": 67, "106": 33, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 0, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 44, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 100, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 31, "60": 100, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "d", "102l": "b", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 42.9818, "q97bl": "d", "17l": "c", "countryid": 42, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "c", "11": 67, "10": 33, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 0, "65l": "e", "obi": 43.087, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 67, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Kazakhstan", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 43, "roundobi_yer": 17, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "b", "20l": "d", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "KAZ", "48": 67, "49": 33, "46": 0, "47": 0, "44": 100, "45": 0, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 33, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 67, "65": -1, "33l": "d", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "a", "119l": "b", "q64b": 33, "95l": "d", "roundsai_obi": 33, "obi_yer": 16.6, "105l": "a", "106l": "c"}}, {"alpha2": "KE", "db_2008": {"35l": "b", "72l": "b", "roundobi_ar": 33, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 36, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "c", "q56b": 100, "53l": "c", "28": 100, "29": 67, "5l": "a", "obi_ar": 33.2857, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 83.5, "13l": "b", "120": 33, "121": 33, "122": 67, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 33, "108l": "d", "2l": "c", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "d", "24l": "d", "sai_obi": 49.9, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 62, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 33, "101": 100, "106": 67, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 23, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "d", "86l": "d", "6": 100, "96l": "d", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 61.8909, "q97bl": "c", "17l": "b", "countryid": 43, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "a", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "b", "95": 33, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 33, "18": 100, "65l": "c", "obi": 57.663, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Kenya", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 58, "roundobi_yer": 40, "myr": "NP", "q70bl": "b", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "KEN", "48": 67, "49": 67, "46": 67, "47": 0, "44": 100, "45": 100, "42": 67, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "a", "q63c": 33, "5": 100, "84": 33, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "b", "79": 67, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "b", "q58b": 0, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "c", "q64b": 33, "95l": "c", "roundsai_obi": 50, "obi_yer": 40, "105l": "b", "106l": "b"}, "name": "Kenya", "db_2012": {"35l": "c", "72l": "b", "roundobi_ar": 48, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 63.6364, "26l": "a", "67l": "b", "115l": "c", "30l": "a", "71l": "b", "47l": "c", "90": 100, "109l": "b", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 47.5714, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 83.5, "13l": "b", "120": 100, "121": 33, "122": 67, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "c", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "d", "24l": "d", "sai_obi": 83.25, "q63cl": null, "eb": "HC", "115": 33, "114": 67, "117": 0, "116": 33, "ebp": "PW", "110": 33, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 100, "118": 33, "obi_cat": "Some", "roundobi_cb": 33, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 55, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 67, "112l": "c", "98l": "a", "31l": "a", "102": 33, "103": 67, "100": 100, "101": 33, "106": 67, "59l": "c", "104": 100, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 33.25, "97l": "b", "year": 2012, "rank": 46, "60": 100, "46l": "c", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "b", "107": 100, "118l": "c", "2": 33, "50l": "c", "86l": "d", "6": 100, "96l": "b", "102l": "c", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 55.1724, "q97bl": null, "17l": "d", "countryid": 43, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "c", "comp1012": 1, "99": 33, "98": 100, "45l": "c", "57l": "b", "91": 0, "q79b": null, "93": 33, "122l": "b", "95": 33, "94": 100, "97": 67, "62l": "a", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "b", "16": 33, "19": 33, "18": 100, "65l": "c", "obi": 49.1263, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Kenya", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 49, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "d", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "KEN", "48": 67, "49": 0, "46": 33, "47": 33, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 33, "33l": "a", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "a", "q64b": null, "95l": "c", "roundsai_obi": 83, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2010": {"35l": "b", "72l": "b", "roundobi_ar": 48, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 58.3333, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "c", "90": 100, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 67, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 47.5714, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75.125, "13l": "b", "120": 100, "121": 67, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "a", "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 100, "108l": "d", "2l": "c", "64": 33, "comp0810": 0, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "d", "24l": "d", "sai_obi": 56.6, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 100, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 55, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 67, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 43, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "c", "86l": "d", "6": 100, "96l": "b", "102l": "c", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 55.1636, "q97bl": "c", "17l": "d", "countryid": 43, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 100, "93": 33, "122l": "a", "95": 33, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 33, "18": 100, "65l": "c", "obi": 49.2935, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Kenya", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 49, "roundobi_yer": 0, "myr": "IU", "q70bl": "b", "q65bl": "b", "obi_eb": 67, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "d", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "KEN", "48": 67, "49": 67, "46": 67, "47": 33, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 33, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 33, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "a", "q64b": 67, "95l": "c", "roundsai_obi": 57, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2006": {"35l": "d", "72l": "b", "roundobi_ar": 50, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 33, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 67, "5l": "a", "obi_ar": 50, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 87.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "c", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "a", "81l": "b", "17": 33, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 0, "108l": "b", "2l": "c", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "a", "24l": "d", "sai_obi": 45.75, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "c", "123l": "e", "83": 33, "80": 100, "81": 67, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 42, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 100, "92": 0, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "b", "92l": "d", "70l": "b", "19l": "c", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "a", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 0, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 0, "q80b": 100, "88": 67, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "c", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 24, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "d", "86l": "d", "6": 67, "96l": "d", "102l": "c", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 42.4, "q97bl": "c", "17l": "c", "countryid": 43, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "a", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 33, "18": 100, "65l": "e", "obi": 48.1848, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": null, "country": "Kenya", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 48, "roundobi_yer": 53, "myr": "NP", "q70bl": "b", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "b", "ar": "HC", "61l": "a", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "KEN", "48": 33, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "b", "79": 100, "78": 100, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": -1, "33l": "d", "q58b": 33, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "b", "q64b": 0, "95l": "c", "roundsai_obi": 46, "obi_yer": 53.3, "105l": "b", "106l": "b"}}, {"alpha2": "KG", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 5, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 13.9167, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 70.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 36.7, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 0, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 72, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 67, "67": 100, "68": 100, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 44, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 33, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 8.33696, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Kyrgyz Republic", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 8, "roundobi_yer": 10, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "KGZ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 14, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "b", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 37, "obi_yer": 10, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 44.4167, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 33, "12l": "b", "111l": null, "86": 0, "obi_iyr": 71, "13l": "d", "120": 0, "121": 0, "122": 33, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "c", "81l": "b", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 46.7, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "b", "83": 33, "80": 67, "81": 67, "119": 67, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": "e", "8l": "d", "82l": "b", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "c", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "b", "q97b": 0, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 74, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 67, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 44, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 15.2609, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Kyrgyz Republic", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 15, "roundobi_yer": 50, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 67, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "KGZ", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 67, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 44, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 33, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "b", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 47, "obi_yer": 50.2, "105l": "a", "106l": "d"}, "name": "Kyrgyz Republic", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 46.6, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "c", "28": 0, "29": 0, "5l": "a", "obi_ar": 0, "4": 0, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 58.375, "13l": "c", "120": 0, "121": 0, "122": 33, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "b", "64": 67, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "b", "24l": "d", "sai_obi": 58.25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 33, "44l": "a", "123l": "c", "83": 0, "80": 67, "81": 33, "119": 67, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 19, "124l": "b", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "b", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 33, "103": 67, "100": 100, "101": 67, "106": -1, "59l": "c", "104": 33, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 76, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 67, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 18.9483, "q97bl": null, "17l": "d", "countryid": 44, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 0, "98": 67, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "c", "95": 0, "94": 0, "97": 33, "62l": "d", "11": 0, "10": 67, "13": 33, "12": 100, "order_cat": 1, "14": 67, "103l": "b", "16": 33, "19": 0, "18": 0, "65l": "d", "obi": 20, "roundobi_iyr": 58, "18l": "d", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Kyrgyz Republic", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 20, "roundobi_yer": 27, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "KGZ", "48": 33, "49": 0, "46": 33, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "c", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "b", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 58, "obi_yer": 26.7, "105l": "b", "106l": "e"}}, {"alpha2": "LB", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 29, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 38.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 100, "27": 100, "20": 33, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 28.5714, "4": 0, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 100, "12l": "a", "111l": null, "86": 33, "obi_iyr": 95.875, "13l": "c", "120": 100, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "a", "39l": "c", "58": 0, "q56bl": "b", "81l": "b", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 16.6, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "b", "51l": "d", "roundobi_ebp": 27, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 33, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 33, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "d", "79l": "b", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 57, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 27.2, "q97bl": "d", "17l": "c", "countryid": 45, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 0, "18": 0, "65l": "d", "obi": 32.2065, "roundobi_iyr": 96, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Lebanon", "region": "Middle East & North Africa", "48l": "c", "roundobi": 32, "roundobi_yer": 33, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "d", "89l": "a", "20l": "c", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "LBN", "48": 33, "49": 0, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 100, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "a", "51": 0, "q60b": 0, "q57b": 67, "65": 0, "33l": "b", "q58b": 100, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 17, "obi_yer": 33.4, "105l": "a", "106l": "b"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.75, "13l": "b", "120": 100, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "b", "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 13.3, "q63cl": "d", "eb": "NP", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 100, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 28, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 0, "106": 67, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 66, "60": 0, "46l": "e", "62": 0, "pub_eb": 0, "56l": "a", "roundobi_eb": 0, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "c", "q79bl": "b", "obi_ebp": 28.3889, "q97bl": "c", "17l": "b", "countryid": 45, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 100, "103l": "e", "16": 67, "19": 0, "18": 33, "65l": "d", "obi": 31.8681, "roundobi_iyr": 92, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Lebanon", "region": "Middle East & North Africa", "48l": "d", "roundobi": 32, "roundobi_yer": 33, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "LBN", "48": 0, "49": 0, "46": -1, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 33, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "c", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "c", "q58b": 33, "80l": "c", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 13, "obi_yer": 33.3, "105l": "b", "106l": "b"}, "name": "Lebanon", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 36.3636, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "a", "47l": "b", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 100, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 1, "49l": "c", "93l": "d", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 91.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "d", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "d", "sai_obi": 41.75, "q63cl": null, "eb": "NP", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 39, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 33, "103": 0, "100": 67, "101": 0, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "c", "58l": "c", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 69, "60": 0, "46l": "e", "62": 0, "pub_eb": 0, "56l": "a", "roundobi_eb": 0, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "b", "q79bl": null, "obi_ebp": 39.1754, "q97bl": null, "17l": "b", "countryid": 45, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": 33, "45l": "b", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 100, "10": 67, "13": 33, "12": 100, "order_cat": 2, "14": 100, "103l": "d", "16": 67, "19": 0, "18": 67, "65l": "d", "obi": 32.6277, "roundobi_iyr": 92, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Lebanon", "region": "Middle East & North Africa", "48l": "c", "roundobi": 33, "roundobi_yer": 10, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "LBN", "48": 33, "49": 33, "46": -1, "47": 67, "44": 0, "45": 67, "42": 33, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 100, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 10, "105l": "a", "106l": "d"}}, {"alpha2": "LR", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "d", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 23.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "NP", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 77, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 46, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 2.8913, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Liberia", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 3, "roundobi_yer": 10, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "NP", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "LBR", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 10, "105l": "a", "106l": "d"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 47.1667, "26l": "a", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 83.25, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 0, "41l": "c", "q56b": 0, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 38.1429, "4": 100, "8": 67, "96": 67, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 83.5, "13l": "d", "120": 33, "121": 33, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "d", "81l": "b", "17": 67, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 50.1, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 67, "81": 67, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 37, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "c", "11l": "c", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 0, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 100, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 67, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "d", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 54, "60": 0, "46l": "a", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "c", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "b", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 36.9636, "q97bl": "c", "17l": "b", "countryid": 46, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 0, "12": 0, "order_cat": 2, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 39.5109, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 83, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Liberia", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 40, "roundobi_yer": 33, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "LBR", "48": 33, "49": 0, "46": 100, "47": 100, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 47, "104l": "e", "23l": "b", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 33, "74": 100, "73": 100, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "a", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 33, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "b", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 50, "obi_yer": 33.4, "105l": "a", "106l": "b"}, "name": "Liberia", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 51.4545, "26l": "a", "67l": "b", "115l": "d", "30l": "b", "71l": "b", "47l": "b", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 33, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 67, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 67, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 79.375, "13l": "c", "120": 33, "121": 33, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "c", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 0, "pbs": "PW", "61": 33, "34l": "d", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "a", "sai_obi": 75, "q63cl": null, "eb": "HC", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "HC", "110": 0, "113": 0, "44l": "b", "123l": "c", "83": 0, "80": 33, "81": 100, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 47, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "b", "82l": "c", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 67, "103": 33, "100": 100, "101": 67, "106": 0, "59l": "c", "104": 33, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 33, "33": 67, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 44, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 56, "60": 67, "46l": "c", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "c", "75l": "c", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 67, "50l": "b", "86l": "d", "6": 0, "96l": "d", "102l": "b", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 46.5862, "q97bl": null, "17l": "d", "countryid": 46, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": 33, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "c", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 0, "103l": "c", "16": 0, "19": 67, "18": 100, "65l": "c", "obi": 42.8211, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 33, "52l": "b", "q70b": null, "89": 0, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "Liberia", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 43, "roundobi_yer": 40, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "d", "ar": "NP", "61l": "c", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "b", "28l": "b", "63": 67, "countrylet": "LBR", "48": 67, "49": 0, "46": 33, "47": 67, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 33, "73l": "c", "roundleg_obi": 51, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 33, "74": 33, "73": 33, "72": 33, "71": 67, "70": 67, "116l": "d", "60l": "b", "74l": "c", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 33, "33l": "b", "q58b": null, "80l": "c", "7l": "b", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 39.9, "105l": "a", "106l": "d"}}, {"alpha2": "MK", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 86, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 66.75, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 75, "9l": "d", "24": 0, "25": 0, "26": 100, "27": 33, "20": 67, "21": 100, "22": 100, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 85.7143, "4": 0, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 67, "12l": "a", "111l": null, "86": 100, "obi_iyr": 62.5, "13l": "a", "120": 100, "121": 0, "122": 67, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 86.7, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 46, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "d", "comp0608": 0, "27l": "c", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 0, "38": 67, "42l": "c", "58l": "b", "76": 100, "33": 0, "32": 0, "31": 0, "30": 0, "37": 100, "36": 100, "35": 100, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "IU", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 28, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "a", "6": 0, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 46.0727, "q97bl": "b", "17l": "a", "countryid": 47, "25l": "d", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 67, "122l": "b", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 0, "18": 100, "65l": "d", "obi": 54.3696, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 75, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Macedonia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 54, "roundobi_yer": 73, "myr": "PW", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 100, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "b", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "MKD", "48": 67, "49": 0, "46": 100, "47": 0, "44": 67, "45": 0, "42": 33, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 67, "73l": "a", "roundleg_obi": 67, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 100, "73": 100, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "a", "79": 100, "78": 100, "q59bl": "b", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "d", "q58b": 67, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 87, "obi_yer": 73.4, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 86, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 61.25, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 16.5, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 85.7143, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 67, "obi_iyr": 66.75, "13l": "d", "120": 100, "121": 67, "122": 67, "123": 100, "124": -1, "125": -1, "76l": "c", "15": 67, "21l": "d", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "a", "81l": "d", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "c", "52": 33, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 80, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "d", "roundobi_ebp": 47, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "b", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 33, "33": 100, "32": 0, "31": 0, "30": 0, "37": 100, "36": 100, "35": 67, "34": 0, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 45, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "b", "6": 33, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 46.6727, "q97bl": "b", "17l": "b", "countryid": 47, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "b", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 48.5652, "roundobi_iyr": 67, "18l": "a", "roundobi_myr": 17, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Macedonia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 49, "roundobi_yer": 37, "myr": "PW", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 67, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "b", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "MKD", "48": 67, "49": 0, "46": 100, "47": 0, "44": 67, "45": 0, "42": 33, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 61, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 33, "73": 0, "72": 100, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "c", "15l": "b", "79": 0, "78": 100, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 33, "65": 0, "33l": "a", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Strong", "4l": "c", "66l": "d", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 80, "obi_yer": 36.7, "105l": "a", "106l": "a"}, "name": "Macedonia", "db_2012": {"35l": "a", "72l": "b", "roundobi_ar": 57, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 54.6364, "26l": "a", "67l": "a", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 67, "20": 100, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 57.2857, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 50, "13l": "c", "120": 0, "121": 33, "122": 67, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 33, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "a", "51l": "b", "roundobi_ebp": 40, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "c", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "d", "19l": "d", "108": 67, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 100, "103": 67, "100": 100, "101": 100, "106": 0, "59l": "d", "104": 67, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 100, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 68, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "d", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 39.6207, "q97bl": null, "17l": "c", "countryid": 47, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 67, "98": 67, "45l": "d", "57l": "b", "91": 100, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 100, "97": 0, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "b", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 35.4211, "roundobi_iyr": 50, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Macedonia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 35, "roundobi_yer": 17, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 100, "countrylet": "MKD", "48": 33, "49": 100, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 33, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 55, "104l": "b", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "b", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 16.6, "105l": "a", "106l": "d"}}, {"alpha2": "MW", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 16.5833, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 100, "20": 33, "21": 33, "22": 100, "23": 0, "41l": "c", "q56b": 0, "53l": "c", "28": 0, "29": 100, "5l": "a", "obi_ar": 4.71429, "4": 67, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "c", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 67, "10l": "c", "24l": "d", "sai_obi": 26.6, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "c", "roundobi_ebp": 44, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 67, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 58, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "d", "88l": "d", "1l": "b", "q79bl": "b", "obi_ebp": 43.6364, "q97bl": "c", "17l": "c", "countryid": 48, "25l": "d", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 33, "94": 33, "97": -1, "62l": "d", "11": 100, "10": 33, "13": 0, "12": 100, "order_cat": 2, "14": 100, "103l": "e", "16": 67, "19": 33, "18": 67, "65l": "d", "obi": 27.5326, "roundobi_iyr": 0, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Malawi", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 28, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "b", "ar": "IU", "61l": "d", "77l": "d", "14l": "a", "87l": "d", "89l": "d", "20l": "c", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "MWI", "48": 67, "49": 33, "46": 100, "47": 0, "44": 67, "45": 0, "42": 0, "43": 67, "40": 33, "41": 33, "1": 67, "94l": "c", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 33, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "b", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 27, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Malawi", "db_2012": {"35l": "b", "72l": "c", "roundobi_ar": 33, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 57.4545, "26l": "c", "67l": "b", "115l": "b", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 50.25, "9l": "a", "24": 100, "25": 100, "26": 33, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 67, "29": 100, "5l": "a", "obi_ar": 33.4286, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 83.5, "13l": "d", "120": 0, "121": 33, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "b", "15": 33, "21l": "a", "q58bl": null, "39l": "c", "58": 33, "q56bl": null, "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 67, "57": 67, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 100, "10l": "a", "24l": "a", "sai_obi": 41.5, "q63cl": null, "eb": "HC", "115": 67, "114": 33, "117": 0, "116": 100, "ebp": "PW", "110": 0, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 65, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "b", "102": 100, "103": 33, "100": 33, "101": 100, "106": 100, "59l": "b", "104": 100, "105": 0, "101l": "a", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "c", "76": 67, "33": 33, "32": 100, "31": 67, "30": 100, "37": 67, "36": 100, "35": 67, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 37, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 67, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 64.9655, "q97bl": null, "17l": "c", "countryid": 48, "25l": "a", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": 33, "45l": "d", "57l": "b", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": 33, "62l": "d", "11": 33, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "c", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 52.3263, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 50, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Malawi", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 52, "roundobi_yer": 0, "myr": "HC", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "HC", "61l": "d", "77l": "d", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 67, "countrylet": "MWI", "48": 67, "49": 67, "46": 67, "47": 0, "44": 100, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 57, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 67, "73": 67, "72": 33, "71": 67, "70": 67, "116l": "a", "60l": "d", "74l": "b", "15l": "c", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 0, "105l": "b", "106l": "a"}, "db_2010": {"35l": "b", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 16.5833, "26l": "c", "67l": "c", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 0, "109l": "b", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 33, "27": 67, "20": 33, "21": 100, "22": 100, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 33, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 33, "96": 0, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75, "13l": "d", "120": 0, "121": 33, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 100, "10l": "b", "24l": "d", "sai_obi": 23.3, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 67, "80": 67, "81": 67, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 67, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 58, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "b", "64l": "b", "q63bl": "e", "8l": "c", "82l": "b", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "b", "102": 33, "103": -1, "100": 33, "101": 0, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 33, "42l": "c", "58l": "d", "76": 0, "33": 0, "32": 100, "31": 67, "30": 100, "37": 33, "36": 100, "35": 67, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 1, "53": 33, "cb": "HC", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 47, "60": 0, "46l": "b", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 100, "67": 33, "68": 100, "69": 100, "63l": "c", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 33, "96l": "d", "102l": "c", "88l": "d", "1l": "b", "q79bl": "b", "obi_ebp": 57.5818, "q97bl": "c", "17l": "b", "countryid": 48, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 100, "10": 67, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 67, "65l": "d", "obi": 47.1196, "roundobi_iyr": 75, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Malawi", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 47, "roundobi_yer": 50, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 0, "82": 67, "55l": "a", "ar": "IU", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "a", "28l": "c", "63": 33, "countrylet": "MWI", "48": 67, "49": 67, "46": 67, "47": 0, "44": 100, "45": 0, "42": 33, "43": 33, "40": 0, "41": 33, "1": 67, "94l": "c", "q63c": 33, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "b", "7l": "b", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 50.1, "105l": "b", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 33.1667, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 67, "21": 100, "22": 0, "23": 100, "41l": "c", "q56b": 0, "53l": "c", "28": 100, "29": 0, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 12.375, "13l": "d", "120": 0, "121": 0, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 67, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "b", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 67, "10l": "a", "24l": "a", "sai_obi": 41.75, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 64, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "d", "64l": "c", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 33, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": 67, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 34, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 33, "67": 0, "68": 0, "69": 0, "63l": "c", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 100, "96l": "b", "102l": "c", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 64.1852, "q97bl": "c", "17l": "c", "countryid": 48, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "a", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 33, "93": 0, "122l": "c", "95": 67, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "e", "obi": 41.7473, "roundobi_iyr": 12, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Malawi", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 42, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "b", "ar": "IU", "61l": "d", "77l": "d", "14l": "a", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 33, "countrylet": "MWI", "48": 67, "49": 33, "46": -1, "47": 0, "44": 100, "45": 0, "42": 33, "43": 67, "40": 33, "41": 33, "1": 100, "94l": "e", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 33, "q57b": 33, "65": -1, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "c", "q64b": 0, "95l": "b", "roundsai_obi": 42, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "MY", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 48, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 24.2727, "26l": "a", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 100, "26": 100, "27": 100, "20": 33, "21": 100, "22": 33, "23": 100, "41l": "e", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 47.7143, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 0, "12l": "d", "111l": null, "86": 33, "obi_iyr": 58.5, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "c", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "d", "sai_obi": 53.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "d", "51l": "d", "roundobi_ebp": 41, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": -1, "103": -1, "100": 0, "101": 33, "106": 67, "59l": "b", "104": -1, "105": 0, "101l": "c", "91l": "a", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 0, "30": 0, "37": 33, "36": 67, "35": 0, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "b", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 54, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 33, "66": 33, "67": 67, "68": 67, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "a", "86l": "c", "6": 0, "96l": "d", "102l": "e", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 40.9423, "q97bl": "d", "17l": "c", "countryid": 49, "25l": "a", "112": -1, "38l": "c", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "d", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 0, "12": 0, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 33, "18": 100, "65l": "d", "obi": 34.7889, "roundobi_iyr": 59, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Malaysia", "region": "East Asia & Pacific", "48l": "c", "roundobi": 35, "roundobi_yer": 10, "myr": "NP", "q70bl": "b", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "a", "63": 67, "countrylet": "MYS", "48": 33, "49": 0, "46": -1, "47": 0, "44": 0, "45": 33, "42": 0, "43": 33, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 24, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 10, "105l": "b", "106l": "b"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 48, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.3636, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 100, "26": 100, "27": 100, "20": 33, "21": 67, "22": 33, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 47.7143, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 58.5, "13l": "a", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "c", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "c", "sai_obi": 53.4, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 46, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": -1, "103": -1, "100": 67, "101": 33, "106": 67, "59l": "b", "104": -1, "105": 0, "101l": "c", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 55, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 33, "66": 33, "67": 67, "68": 67, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "e", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 45.6296, "q97bl": "d", "17l": "b", "countryid": 49, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "c", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 100, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 67, "19": 33, "18": 100, "65l": "d", "obi": 38.8242, "roundobi_iyr": 59, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Malaysia", "region": "East Asia & Pacific", "48l": "b", "roundobi": 39, "roundobi_yer": 7, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "a", "63": 67, "countrylet": "MYS", "48": 67, "49": 0, "46": -1, "47": 0, "44": 33, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 30, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 6.7, "105l": "b", "106l": "b"}, "name": "Malaysia", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 67, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 51.6364, "26l": "b", "67l": "b", "115l": "c", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 100, "26": 67, "27": 100, "20": 33, "21": 67, "22": 33, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "b", "obi_ar": 66.7143, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 33.5, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 67, "76l": "d", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 67, "q56bl": null, "81l": "d", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "b", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "c", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 47, "124l": "b", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "c", "108": 67, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 67, "103": 0, "100": 67, "101": 33, "106": 67, "59l": "b", "104": 100, "105": 0, "101l": "c", "91l": "a", "39": 33, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 62, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 33, "66": 0, "67": 67, "68": 67, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "b", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "c", "102l": "b", "88l": "b", "1l": "b", "q79bl": null, "obi_ebp": 47.1379, "q97bl": null, "17l": "b", "countryid": 49, "25l": "a", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": 0, "45l": "b", "57l": "c", "91": 100, "q79b": null, "93": 100, "122l": "d", "95": 33, "94": 100, "97": 33, "62l": "d", "11": 0, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 33, "103l": "d", "16": 33, "19": 33, "18": 67, "65l": "d", "obi": 38.6211, "roundobi_iyr": 34, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Malaysia", "region": "East Asia & Pacific", "48l": "c", "roundobi": 39, "roundobi_yer": 17, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "a", "63": 0, "countrylet": "MYS", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 67, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 52, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "b", "66l": "d", "119l": "d", "q64b": null, "95l": "c", "roundsai_obi": 100, "obi_yer": 16.7, "105l": "b", "106l": "b"}}, {"alpha2": "ML", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 69.7273, "26l": "a", "67l": "b", "115l": "c", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 0, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 4.71429, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "a", "86": 0, "obi_iyr": 50.125, "13l": "a", "120": 67, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 83.25, "q63cl": null, "eb": "PW", "115": 33, "114": 0, "117": 0, "116": 0, "ebp": "HC", "110": 100, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 75, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 56, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 67, "112l": "c", "98l": "a", "31l": "d", "102": 33, "103": 0, "100": 67, "101": 100, "106": 67, "59l": "a", "104": 100, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 75, "97l": "a", "year": 2012, "rank": 57, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "a", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 55.7241, "q97bl": null, "17l": "c", "countryid": 50, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": 100, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 33, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 67, "103l": "d", "16": 100, "19": 100, "18": 100, "65l": "a", "obi": 42.8, "roundobi_iyr": 50, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 100, "q80bl": null, "country": "Mali", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 43, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "MLI", "48": 33, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 100, "33l": "a", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "c", "q64b": null, "95l": "c", "roundsai_obi": 83, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 14, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 66.75, "26l": "a", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 50.25, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 14.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "b", "15": 33, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 0, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "d", "24l": "a", "sai_obi": 53.3, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 33, "81": 0, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 49, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 67, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 61, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "b", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "a", "102l": "a", "88l": "d", "1l": "a", "q79bl": "a", "obi_ebp": 49.0727, "q97bl": "c", "17l": "c", "countryid": 50, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 100, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 35.1413, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 50, "52l": "c", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Mali", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 35, "roundobi_yer": 13, "myr": "HC", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "MLI", "48": 67, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 0, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 67, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 67, "74": 67, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "b", "15l": "c", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 0, "q57b": 67, "65": 0, "33l": "d", "q58b": 0, "80l": "c", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 13.3, "105l": "a", "106l": "a"}, "name": "Mali"}, {"alpha2": "MX", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 52, "pub_pbs": 1, "113l": "c", "54l": "b", "leg_obi": 42.3636, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 66.75, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 0, "20": 100, "21": 33, "22": 67, "23": 100, "41l": "b", "q56b": 67, "53l": "c", "28": 0, "29": 0, "5l": "b", "obi_ar": 52.2857, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "d", "120": 33, "121": 33, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "c", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "b", "81l": "b", "17": 33, "pbs": "PW", "61": 67, "34l": "d", "54": 67, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "c", "24l": "b", "sai_obi": 46.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 33, "80": 67, "81": 67, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 33, "3l": "a", "78l": "c", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "c", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "a", "39": 0, "38": 33, "42l": "c", "58l": "a", "76": 33, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 33, "34": 0, "q64bl": "a", "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "b", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 27, "60": 100, "46l": "c", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "c", "86l": "b", "6": 67, "96l": "d", "102l": "d", "88l": "c", "1l": "a", "q79bl": "c", "obi_ebp": 44.8182, "q97bl": "c", "17l": "c", "countryid": 51, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 100, "q79b": null, "93": 33, "122l": "d", "95": 33, "94": 67, "97": -1, "62l": "c", "11": 33, "10": 33, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "a", "obi": 54.6957, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 67, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Mexico", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 55, "roundobi_yer": 57, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "b", "77l": "a", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "MEX", "48": 33, "49": 0, "46": 33, "47": 100, "44": 0, "45": 0, "42": 33, "43": 33, "40": 0, "41": 67, "1": 100, "94l": "b", "q63c": 100, "5": 0, "84": 33, "9": 100, "85": 67, "73l": "b", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 100, "74": 67, "73": 67, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "b", "15l": "d", "79": 67, "78": 33, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 100, "65": 100, "33l": "d", "q58b": 0, "80l": "b", "7l": "c", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "b", "q64b": 100, "95l": "c", "roundsai_obi": 47, "obi_yer": 56.7, "105l": "b", "106l": "a"}, "name": "Mexico", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 43, "pub_pbs": 1, "113l": "c", "54l": "a", "leg_obi": 51.5455, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "b", "47l": "e", "90": 100, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 67, "22": 33, "23": 100, "41l": "c", "q56b": null, "53l": "c", "28": 100, "29": 33, "5l": "a", "obi_ar": 42.7143, "4": 100, "8": 67, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "c", "86": 0, "obi_iyr": 95.875, "13l": "a", "120": 33, "121": 33, "122": 33, "123": 100, "124": 100, "125": 0, "76l": "d", "15": 100, "21l": "b", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 67, "34l": "d", "54": 100, "57": 67, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "c", "24l": "c", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 67, "113": 33, "44l": "d", "123l": "a", "83": 33, "80": 67, "81": 100, "119": 0, "118": 0, "obi_cat": "Significant", "roundobi_cb": 50, "117l": "d", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 65, "124l": "a", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "c", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 67, "112l": "c", "98l": "c", "31l": "a", "102": 0, "103": 0, "100": 67, "101": 67, "106": 100, "59l": "d", "104": 67, "105": 0, "101l": "b", "91l": "c", "39": 0, "38": 33, "42l": "c", "58l": "a", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "c", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 50, "97l": "a", "year": 2012, "rank": 23, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 67, "96l": "a", "102l": "d", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 64.8947, "q97bl": null, "17l": "b", "countryid": 51, "25l": "a", "112": 33, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 33, "45l": "c", "57l": "b", "91": 33, "q79b": null, "93": 100, "122l": "c", "95": 0, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 33, "13": 100, "12": 100, "order_cat": 4, "14": 67, "103l": "d", "16": 33, "19": 100, "18": 100, "65l": "b", "obi": 61.3404, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 33, "q80bl": null, "country": "Mexico", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 61, "roundobi_yer": 57, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "b", "77l": "a", "14l": "b", "87l": "c", "89l": "a", "20l": "b", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "MEX", "48": 67, "49": 0, "46": 100, "47": -1, "44": 0, "45": 33, "42": 33, "43": 33, "40": 33, "41": 33, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 52, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "a", "79": 67, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "d", "q58b": null, "80l": "b", "7l": "b", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 56.7, "105l": "b", "106l": "a"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 38, "pub_pbs": 1, "113l": "c", "54l": "a", "leg_obi": 45.4545, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "b", "47l": "e", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 67, "20": 100, "21": 33, "22": 33, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 0, "29": 33, "5l": "a", "obi_ar": 38, "4": 100, "8": 67, "96": 33, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": null, "86": 0, "obi_iyr": 95.875, "13l": "c", "120": 67, "121": 33, "122": 33, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "b", "17": 33, "pbs": "PW", "61": 67, "34l": "d", "54": 100, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 33, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "c", "24l": "c", "sai_obi": 50, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "d", "123l": "b", "83": 33, "80": 67, "81": 67, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 52, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "c", "11l": "a", "comp0608": 1, "27l": "b", "29l": "c", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 0, "103": -1, "100": 33, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 0, "31": 33, "30": 0, "37": 67, "36": 67, "35": 0, "34": 0, "q64bl": "a", "59": 0, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 38, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 67, "96l": "c", "102l": "d", "88l": "b", "1l": "a", "q79bl": "c", "obi_ebp": 51.7963, "q97bl": "c", "17l": "c", "countryid": 51, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "c", "91": 33, "q79b": null, "93": 33, "122l": "c", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 100, "10": 33, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "b", "obi": 51.989, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Mexico", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 52, "roundobi_yer": 47, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "b", "77l": "a", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "MEX", "48": 33, "49": 0, "46": 100, "47": -1, "44": 0, "45": 33, "42": 0, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "b", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 45, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "e", "51": 33, "q60b": 100, "q57b": 33, "65": 67, "33l": "b", "q58b": 0, "80l": "b", "7l": "b", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 50, "obi_yer": 46.7, "105l": "b", "106l": "a"}, "db_2006": {"35l": "c", "72l": "b", "roundobi_ar": 67, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 36.0833, "26l": "b", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 66.75, "9l": "d", "24": 67, "25": 0, "26": 67, "27": 0, "20": 100, "21": 33, "22": 100, "23": 0, "41l": "b", "q56b": 33, "53l": "c", "28": 0, "29": 0, "5l": "b", "obi_ar": 66.5, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 67, "obi_iyr": 95.875, "13l": "d", "120": 33, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "c", "15": 33, "21l": "c", "q58bl": "b", "39l": "c", "58": 100, "q56bl": "c", "81l": "b", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 67, "57": 33, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "b", "q99b": 33, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "b", "sai_obi": 50, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 33, "80": 100, "81": 67, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 41, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": 0, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "a", "76": 33, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 33, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 33, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 22, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "c", "86l": "b", "6": 67, "96l": "d", "102l": "d", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 41.1636, "q97bl": "c", "17l": "c", "countryid": 51, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "c", "91": 100, "q79b": 0, "93": 33, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 100, "18": 100, "65l": "e", "obi": 49.9674, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 67, "52l": "b", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Mexico", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 50, "roundobi_yer": 60, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "MEX", "48": 33, "49": 0, "46": 33, "47": 100, "44": 0, "45": 0, "42": 33, "43": 33, "40": 33, "41": 67, "1": 100, "94l": "e", "q63c": 67, "5": 0, "84": 33, "9": 0, "85": 67, "73l": "b", "roundleg_obi": 36, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 100, "74": 67, "73": 67, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "b", "15l": "c", "79": 67, "78": 33, "q59bl": "b", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "d", "q58b": 67, "80l": "a", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "b", "q64b": 67, "95l": "c", "roundsai_obi": 50, "obi_yer": 60, "105l": "b", "106l": "a"}}, {"alpha2": "MN", "db_2008": {"35l": "b", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 36.0833, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 33, "25": 100, "26": 33, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 87.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "c", "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "d", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 0, "55": 0, "10l": "d", "24l": "c", "sai_obi": 46.8, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 39, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 33, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 67, "31": 100, "30": 100, "37": 0, "36": 33, "35": 67, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 51, "60": 100, "46l": "c", "62": 67, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 0, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 39.3273, "q97bl": "b", "17l": "d", "countryid": 52, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "d", "obi": 35.8261, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Mongolia", "region": "East Asia & Pacific", "48l": "c", "roundobi": 36, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 33, "82": 0, "55l": "d", "ar": "IU", "61l": "a", "77l": "d", "14l": "a", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "MNG", "48": 33, "49": 33, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "b", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 47, "obi_yer": 0, "105l": "a", "106l": "d"}, "name": "Mongolia", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 43, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 66.6364, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 87.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 67, "pbs": "PW", "61": 100, "34l": "d", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 77.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "a", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "b", "123l": "c", "83": 0, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 53, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "a", "31l": "a", "102": 100, "103": 33, "100": 100, "101": 67, "106": 0, "59l": "b", "104": 33, "105": 100, "101l": "b", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 0, "36": 67, "35": 100, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "d", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 38, "60": 100, "46l": "b", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 33, "118l": "d", "2": 0, "50l": "c", "86l": "c", "6": 0, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 52.8621, "q97bl": null, "17l": "b", "countryid": 52, "25l": "a", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": 100, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 67, "97": 67, "62l": "c", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "c", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 50.5263, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Mongolia", "region": "East Asia & Pacific", "48l": "b", "roundobi": 51, "roundobi_yer": 43, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "d", "ar": "PW", "61l": "a", "77l": "b", "14l": "b", "87l": "a", "89l": "b", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "MNG", "48": 67, "49": 0, "46": 67, "47": 100, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 67, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 100, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 43.4, "105l": "a", "106l": "d"}, "db_2010": {"35l": "b", "72l": "b", "roundobi_ar": 48, "pub_pbs": 1, "113l": "d", "54l": "a", "leg_obi": 55.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 67, "29": 100, "5l": "a", "obi_ar": 47.7143, "4": 100, "8": 67, "96": 67, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 87.5, "13l": "c", "120": 67, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "c", "58": 67, "q56bl": "b", "81l": "a", "17": 33, "pbs": "PW", "61": 100, "34l": "d", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "a", "24l": "b", "sai_obi": 56.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "a", "83": 0, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 63, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "c", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 0, "36": 67, "35": 67, "34": 0, "q64bl": "c", "59": 67, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "c", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 22, "60": 100, "46l": "b", "62": 67, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 63.0364, "q97bl": "c", "17l": "c", "countryid": 52, "25l": "a", "112": -1, "38l": "c", "reg_eap": 1, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "c", "95": 0, "94": 67, "97": -1, "62l": "b", "11": 0, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 33, "18": 100, "65l": "d", "obi": 59.8043, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Mongolia", "region": "East Asia & Pacific", "48l": "b", "roundobi": 60, "roundobi_yer": 50, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 33, "55l": "c", "ar": "HC", "61l": "a", "77l": "b", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 100, "countrylet": "MNG", "48": 67, "49": 67, "46": 67, "47": 100, "44": 67, "45": 0, "42": 0, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "c", "51": 33, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 57, "obi_yer": 50, "105l": "a", "106l": "d"}, "db_2006": {"35l": "d", "72l": "a", "roundobi_ar": 84, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 38.9167, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 83.5, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 91.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 0, "pbs": "HC", "61": 100, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 54.125, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 33, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "c", "91l": "b", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 67, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 55, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 52, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 67, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 18.1196, "roundobi_iyr": 92, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": null, "country": "Mongolia", "region": "East Asia & Pacific", "48l": "d", "roundobi": 18, "roundobi_yer": 10, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "a", "77l": "a", "14l": "d", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "a", "28l": "d", "63": 100, "countrylet": "MNG", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 54, "obi_yer": 10, "105l": "a", "106l": "a"}}, {"alpha2": "MA", "db_2008": {"35l": "c", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 25, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 33, "27": 67, "20": 33, "21": 0, "22": 0, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 33, "8": 67, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 66.75, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "c", "58": 67, "q56bl": "b", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "b", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "c", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 3.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 31, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "d", "64l": "b", "q63bl": "e", "8l": "b", "82l": "d", "11l": "d", "comp0608": 1, "27l": "b", "29l": "d", "92l": "c", "70l": "c", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 33, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 67, "31": 67, "30": 100, "37": 33, "36": 33, "35": 33, "34": 67, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 59, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 67, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "c", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 31.4364, "q97bl": "c", "17l": "d", "countryid": 53, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 33, "18": 100, "65l": "d", "obi": 27.5, "roundobi_iyr": 67, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Morocco", "region": "Middle East & North Africa", "48l": "c", "roundobi": 28, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "c", "87": 0, "68l": "b", "28l": "d", "63": 100, "countrylet": "MAR", "48": 33, "49": 0, "46": 100, "47": 0, "44": 0, "45": 67, "42": 33, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 33, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "c", "q58b": 0, "80l": "c", "7l": "b", "yearid": 2, "32l": "b", "grade_sai": "Weak", "4l": "c", "66l": "b", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 3, "obi_yer": 6.6, "105l": "a", "106l": "d"}, "name": "Morocco", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 14, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 33.3, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "b", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "c", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 100, "96": 0, "reg_mena": 1, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 87.5, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "d", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "b", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "c", "sai_obi": 25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 67, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 42, "117l": "d", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 44, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "d", "108": 67, "109": 67, "112l": "c", "98l": "d", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 67, "106": 33, "59l": "d", "104": 67, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 0, "36": 0, "35": 33, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 41.75, "97l": "d", "year": 2012, "rank": 64, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "d", "107": 33, "118l": "d", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 43.6552, "q97bl": null, "17l": "a", "countryid": 53, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "c", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 100, "103l": "e", "16": 33, "19": 0, "18": 0, "65l": "d", "obi": 37.5368, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Morocco", "region": "Middle East & North Africa", "48l": "b", "roundobi": 38, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "d", "14l": "a", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "MAR", "48": 67, "49": 33, "46": 67, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 0, "105l": "b", "106l": "c"}, "db_2010": {"35l": "c", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 33.3333, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 67, "21": 0, "22": 100, "23": 0, "41l": "c", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 0, "4": 33, "8": 100, "96": 0, "reg_mena": 1, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 20.875, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "c", "58": 67, "q56bl": "b", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "d", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 13.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 40, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 33, "42l": "c", "58l": "b", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 69, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 39.8909, "q97bl": "c", "17l": "c", "countryid": 53, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "a", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 28.2065, "roundobi_iyr": 21, "18l": "d", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Morocco", "region": "Middle East & North Africa", "48l": "c", "roundobi": 28, "roundobi_yer": 3, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "c", "14l": "b", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "MAR", "48": 33, "49": 33, "46": 100, "47": 0, "44": 0, "45": 100, "42": 33, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 3.3, "105l": "a", "106l": "a"}, "db_2006": {"35l": "c", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 11.0833, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 33, "29": 0, "5l": "b", "obi_ar": 0, "4": 33, "8": 33, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 70.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "c", "58": 33, "q56bl": "b", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "c", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 17, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 0, "3l": "c", "78l": "d", "q63b": 0, "92": 0, "84l": "d", "90l": "d", "64l": "a", "q63bl": null, "8l": "c", "82l": "d", "11l": "c", "comp0608": 1, "27l": "d", "29l": "d", "92l": "d", "70l": "a", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 33, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 53, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 67, "67": 100, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "d", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 16.8909, "q97bl": "c", "17l": "d", "countryid": 53, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 0, "12": 100, "order_cat": 1, "14": 33, "103l": "e", "16": 0, "19": 33, "18": 100, "65l": "e", "obi": 19.1522, "roundobi_iyr": 71, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Morocco", "region": "Middle East & North Africa", "48l": "d", "roundobi": 19, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "c", "14l": "c", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "c", "63": 67, "countrylet": "MAR", "48": 0, "49": 0, "46": 100, "47": 0, "44": 0, "45": 67, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 11, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 33, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "c", "q58b": 0, "80l": "d", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "c", "66l": "b", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 6.6, "105l": "b", "106l": "d"}}, {"alpha2": "MZ", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 24, "pub_pbs": 1, "113l": "d", "54l": "a", "leg_obi": 36.2727, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "d", "47l": "a", "90": 0, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 33, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 67, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 0, "29": 0, "5l": "b", "obi_ar": 23.7143, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 75.125, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "c", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 67, "34l": "d", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "b", "24l": "d", "sai_obi": 25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 100, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 50, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "d", "comp0608": 0, "27l": "b", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "b", "102": 0, "103": 33, "100": 33, "101": 100, "106": 0, "59l": "d", "104": 67, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 33, "33": 0, "32": 100, "31": 67, "30": 100, "37": 33, "36": 67, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 67, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 50, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "a", "86l": "c", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 49.7368, "q97bl": null, "17l": "b", "countryid": 54, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "c", "11": 0, "10": 67, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "c", "16": 33, "19": 0, "18": 0, "65l": "b", "obi": 46.7979, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 33, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "c", "111": 0, "q80bl": null, "country": "Mozambique", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 47, "roundobi_yer": 37, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "b", "77l": "c", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "MOZ", "48": 33, "49": 0, "46": 100, "47": 100, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 100, "85": 33, "73l": "c", "roundleg_obi": 36, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 33, "74": 33, "73": 33, "72": 67, "71": 0, "70": 67, "116l": "d", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "d", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 36.5, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "d", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 47.25, "26l": "d", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 0, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 67, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 100, "5l": "b", "obi_ar": 4.71429, "4": 33, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "c", "120": 67, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "d", "sai_obi": 26.6, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 41, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 0, "101": 100, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 68, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "a", "obi_ebp": 40.5818, "q97bl": "c", "17l": "d", "countryid": 54, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 100, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 67, "13": 33, "12": 0, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 33, "18": 33, "65l": "d", "obi": 28.2391, "roundobi_iyr": 0, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Mozambique", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 28, "roundobi_yer": 3, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "c", "14l": "b", "87l": "c", "89l": "b", "20l": "a", "87": 33, "68l": "d", "28l": "d", "63": 0, "countrylet": "MOZ", "48": 0, "49": 33, "46": 33, "47": 100, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "b", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 3.3, "105l": "a", "106l": "b"}, "name": "Mozambique"}, {"alpha2": "MM", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 12.0909, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 8.25, "q63cl": null, "eb": "IU", "115": 0, "114": 33, "117": 0, "116": 33, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 0, "106": 0, "59l": "c", "104": 0, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 99, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 0, "q97bl": null, "17l": "d", "countryid": 55, "25l": "d", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 0, "99": 0, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Myanmar", "region": "East Asia & Pacific", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "MYA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 12, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 8, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Myanmar"}, {"alpha2": "NA", "db_2008": {"35l": "b", "72l": "c", "roundobi_ar": 38, "pub_pbs": 0, "113l": "b", "54l": "b", "leg_obi": 30.5, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 38, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 16.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "a", "24l": "a", "sai_obi": 39.9, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 69, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "c", "q97b": 100, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "a", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 36, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "b", "86l": "d", "6": 100, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 68.5091, "q97bl": "a", "17l": "c", "countryid": 56, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 46.3804, "roundobi_iyr": 17, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Namibia", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 46, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "HC", "61l": "d", "77l": "c", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "a", "63": 0, "countrylet": "NAM", "48": 33, "49": 67, "46": 0, "47": 100, "44": 67, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 40, "obi_yer": 6.6, "105l": "a", "106l": "d"}, "name": "Namibia", "db_2012": {"35l": "b", "72l": "d", "roundobi_ar": 38, "pub_pbs": 0, "113l": "b", "54l": "b", "leg_obi": 29.9, "26l": "a", "67l": "d", "115l": "d", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 38, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 16.75, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "a", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "a", "24l": "a", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "b", "123l": "c", "83": 67, "80": 100, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "a", "51l": "c", "roundobi_ebp": 75, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "b", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 33, "103": 0, "100": 100, "101": 33, "106": 0, "59l": "d", "104": 0, "105": -1, "101l": "c", "91l": "c", "39": 0, "38": -1, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "b", "grade_leg": "Weak", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 34, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 67, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 74.6182, "q97bl": null, "17l": "b", "countryid": 56, "25l": "a", "112": 0, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": 0, "45l": "d", "57l": "d", "91": 33, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "d", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 54.7609, "roundobi_iyr": 17, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "IU", "85l": "c", "111": 0, "q80bl": null, "country": "Namibia", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 55, "roundobi_yer": 50, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "a", "63": 0, "countrylet": "NAM", "48": 67, "49": 67, "46": -1, "47": 100, "44": 67, "45": 0, "42": 33, "43": 33, "40": 0, "41": -1, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 30, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 67, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "c", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 50.1, "105l": "c", "106l": "d"}, "db_2010": {"35l": "b", "72l": "d", "roundobi_ar": 43, "pub_pbs": 0, "113l": "b", "54l": "b", "leg_obi": 30.5, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "b", "47l": "b", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 42.7143, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 16.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "b", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "a", "24l": "a", "sai_obi": 49.9, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "b", "123l": "c", "83": 33, "80": 100, "81": 67, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "c", "roundobi_ebp": 72, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 33, "84l": "b", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "c", "39": 0, "38": 67, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "c", "grade_leg": "Weak", "16l": "b", "37l": "a", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 37, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "b", "86l": "d", "6": 100, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 72.2778, "q97bl": "b", "17l": "b", "countryid": 56, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 33, "18": 100, "65l": "d", "obi": 52.7802, "roundobi_iyr": 17, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Namibia", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 53, "roundobi_yer": 43, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "a", "63": 0, "countrylet": "NAM", "48": 67, "49": 67, "46": 0, "47": 67, "44": 67, "45": 0, "42": 67, "43": 33, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 0, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 50, "obi_yer": 43.4, "105l": "a", "106l": "d"}, "db_2006": {"35l": "b", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "c", "leg_obi": 38.8333, "26l": "b", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 67, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 41.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "c", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "b", "q99b": 100, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "a", "24l": "a", "sai_obi": 37.5, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "b", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 68, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 33, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "d", "76": 67, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 1, "q80b": 33, "88": 0, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "a", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 23, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 67.9091, "q97bl": "c", "17l": "c", "countryid": 56, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "e", "obi": 50.0326, "roundobi_iyr": 42, "18l": "a", "roundobi_myr": 67, "52l": "b", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Namibia", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 50, "roundobi_yer": 20, "myr": "HC", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 33, "55l": "c", "ar": "IU", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "NAM", "48": 67, "49": 67, "46": 0, "47": 100, "44": 67, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 67, "74": 67, "73": 67, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "b", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "b", "q58b": 0, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 38, "obi_yer": 19.9, "105l": "a", "106l": "a"}}, {"alpha2": "NP", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 48, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 50, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 83.25, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 47.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 54.125, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "a", "sai_obi": 46.7, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 50, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 41, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "c", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "a", "102l": "d", "88l": "b", "1l": "a", "q79bl": "a", "obi_ebp": 49.6909, "q97bl": "c", "17l": "c", "countryid": 57, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 100, "93": 0, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 0, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "c", "obi": 43.4783, "roundobi_iyr": 54, "18l": "a", "roundobi_myr": 83, "52l": "d", "q70b": 33, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": "e", "country": "Nepal", "region": "South Asia", "48l": "b", "roundobi": 43, "roundobi_yer": 7, "myr": "HC", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "a", "63": 33, "countrylet": "NPL", "48": 67, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 33, "74": 100, "73": 100, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "a", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "b", "q58b": 33, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 47, "obi_yer": 6.7, "105l": "a", "106l": "a"}, "name": "Nepal", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 39.2727, "26l": "b", "67l": "b", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 75.25, "9l": "b", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 33, "8": 100, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 46, "13l": "b", "120": 33, "121": 33, "122": 0, "123": 0, "124": 100, "125": 0, "76l": "b", "15": 0, "21l": "c", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "d", "24l": "b", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 52, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "b", "31l": "a", "102": 0, "103": 33, "100": 33, "101": 67, "106": 33, "59l": "c", "104": 0, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 67, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": -1, "35": 0, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 54, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 67, "68": 67, "69": 0, "63l": "b", "121l": "c", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "d", "86l": "d", "6": 67, "96l": "c", "102l": "d", "88l": "b", "1l": "b", "q79bl": null, "obi_ebp": 52.0702, "q97bl": null, "17l": "c", "countryid": 57, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "e", "comp1012": 1, "99": 33, "98": 67, "45l": "c", "57l": "b", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 0, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "c", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 44.3723, "roundobi_iyr": 46, "18l": "a", "roundobi_myr": 75, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Nepal", "region": "South Asia", "48l": "c", "roundobi": 44, "roundobi_yer": 20, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "b", "28l": "a", "63": 67, "countrylet": "NPL", "48": 33, "49": 0, "46": 0, "47": 0, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 39, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 67, "74": 67, "73": 100, "72": 33, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "b", "15l": "d", "79": 0, "78": 100, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "c", "66l": "d", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 20, "105l": "a", "106l": "c"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 30.5, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 66.75, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 67, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 58.5, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "b", "15": 33, "21l": "b", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "d", "24l": "b", "sai_obi": 56.7, "q63cl": "a", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 67, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 49, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 1, "7": 100, "3l": "b", "78l": "b", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 0, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 67, "33": 33, "32": 100, "31": 100, "30": 100, "37": 0, "36": 0, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 49, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 67, "68": 67, "69": 0, "63l": "b", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "d", "86l": "d", "6": 100, "96l": "c", "102l": "d", "88l": "b", "1l": "a", "q79bl": "a", "obi_ebp": 48.5091, "q97bl": "b", "17l": "c", "countryid": 57, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 100, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 67, "65l": "d", "obi": 44.9783, "roundobi_iyr": 59, "18l": "b", "roundobi_myr": 67, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Nepal", "region": "South Asia", "48l": "b", "roundobi": 45, "roundobi_yer": 30, "myr": "PW", "q70bl": "c", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "b", "28l": "a", "63": 67, "countrylet": "NPL", "48": 67, "49": 33, "46": 0, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 67, "74": 33, "73": 100, "72": 100, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "c", "15l": "c", "79": 67, "78": 67, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "c", "q58b": 0, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 57, "obi_yer": 30.1, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 59, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 8.25, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 58.5, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 50, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "a", "sai_obi": 20.875, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 47, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 0, "88": 67, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 41, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 46.6545, "q97bl": "c", "17l": "c", "countryid": 57, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 0, "103l": "e", "16": 33, "19": 0, "18": 100, "65l": "e", "obi": 35.8696, "roundobi_iyr": 50, "18l": "a", "roundobi_myr": 8, "52l": "d", "q70b": 33, "89": 100, "iyr": "HC", "85l": "d", "111": -1, "q80bl": null, "country": "Nepal", "region": "South Asia", "48l": "c", "roundobi": 36, "roundobi_yer": 7, "myr": "PW", "q70bl": "c", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "a", "63": 0, "countrylet": "NPL", "48": 33, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "c", "roundleg_obi": 0, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 33, "72": 0, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 33, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 21, "obi_yer": 6.7, "105l": "b", "106l": "d"}}, {"alpha2": "NZ", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 71, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 61.1667, "26l": "b", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "b", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "c", "120": 67, "121": 0, "122": 67, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "a", "58": 0, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "b", "sai_obi": 76.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 67, "117l": "e", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 89, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": -1, "42l": "a", "58l": "d", "76": 100, "33": 67, "32": 100, "31": 0, "30": 0, "37": -1, "36": -1, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "b", "grade_leg": "Moderate", "16l": "a", "37l": "e", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2008, "rank": 4, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 89.38, "q97bl": "b", "17l": "a", "countryid": 58, "25l": "a", "112": -1, "38l": "e", "reg_eap": 1, "pub_yer": 1, "6l": "a", "36l": "e", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 0, "93": 100, "122l": "b", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 85.8851, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 100, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "New Zealand", "region": "East Asia & Pacific", "48l": "a", "roundobi": 86, "roundobi_yer": 80, "myr": "PW", "q70bl": "a", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "NZ", "48": 100, "49": 100, "46": 67, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 61, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "a", "79": 67, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 33, "65": 0, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 77, "obi_yer": 80.2, "105l": "a", "106l": "b"}, "name": "New Zealand", "db_2012": {"35l": "a", "72l": "b", "roundobi_ar": 95, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 60.7273, "26l": "a", "67l": "a", "115l": "b", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "b", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 67, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "c", "86": 100, "obi_iyr": 95.875, "13l": "c", "120": 67, "121": 0, "122": 67, "123": 33, "124": 100, "125": 33, "76l": "a", "15": 100, "21l": "a", "q58bl": null, "39l": "a", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 67, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "b", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 67, "10l": "a", "24l": "b", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 67, "114": 67, "117": 100, "116": 67, "ebp": "PW", "110": 100, "113": 100, "44l": "e", "123l": "c", "83": 100, "80": 100, "81": 100, "119": 33, "118": 67, "obi_cat": "Extensive", "roundobi_cb": 67, "117l": "a", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 93, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": "b", "98l": "b", "31l": "a", "102": 100, "103": 67, "100": 33, "101": 100, "106": 67, "59l": "a", "104": 67, "105": 0, "101l": "a", "91l": "a", "39": 100, "38": -1, "42l": "a", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 66.75, "97l": "c", "year": 2012, "rank": 1, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "c", "110l": "a", "114l": "b", "107": 67, "118l": "b", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 93.3818, "q97bl": null, "17l": "a", "countryid": 58, "25l": "a", "112": 67, "38l": "e", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 67, "98": 67, "45l": "a", "57l": "b", "91": 100, "q79b": null, "93": 100, "122l": "b", "95": 67, "94": 100, "97": 33, "62l": "a", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 5, "14": 100, "103l": "b", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 93.163, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 33, "q80bl": null, "country": "New Zealand", "region": "East Asia & Pacific", "48l": "a", "roundobi": 93, "roundobi_yer": 97, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "b", "63": 100, "countrylet": "NZ", "48": 100, "49": 100, "46": 100, "47": 100, "44": -1, "45": 100, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 61, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 67, "71": 67, "70": 100, "116l": "b", "60l": "a", "74l": "a", "15l": "a", "79": 100, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "b", "roundsai_obi": 100, "obi_yer": 96.7, "105l": "b", "106l": "b"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 95, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 66.6667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 67, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.625, "13l": "c", "120": 67, "121": 0, "122": 67, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "a", "58": 100, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 67, "10l": "a", "24l": "b", "sai_obi": 93.4, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 33, "81": 67, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 67, "117l": "e", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 91, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 67, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": -1, "42l": "a", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": -1, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "e", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 2, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 91.4, "q97bl": "b", "17l": "a", "countryid": 58, "25l": "a", "112": -1, "38l": "e", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "e", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "b", "95": 67, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 90.1034, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 100, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "New Zealand", "region": "East Asia & Pacific", "48l": "a", "roundobi": 90, "roundobi_yer": 77, "myr": "PW", "q70bl": "a", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "b", "63": 100, "countrylet": "NZ", "48": 100, "49": 100, "46": 67, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 67, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "a", "79": 67, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 33, "65": 0, "33l": "b", "q58b": null, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "b", "roundsai_obi": 93, "obi_yer": 76.8, "105l": "a", "106l": "b"}, "db_2006": {"35l": "a", "72l": "b", "roundobi_ar": 100, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 69.5, "26l": "b", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "b", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 100, "4": 100, "8": 67, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "b", "120": 67, "121": 0, "122": 67, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "a", "58": 0, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "b", "sai_obi": 79.25, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "e", "83": 67, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 67, "117l": "e", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 89, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 100, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": -1, "42l": "a", "58l": "d", "76": 100, "33": 33, "32": 100, "31": 0, "30": 0, "37": -1, "36": -1, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "e", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2006, "rank": 3, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 88.72, "q97bl": "b", "17l": "a", "countryid": 58, "25l": "a", "112": -1, "38l": "e", "reg_eap": 1, "pub_yer": 1, "6l": "a", "36l": "e", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 67, "93": 100, "122l": "b", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "e", "obi": 86.2759, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 100, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "New Zealand", "region": "East Asia & Pacific", "48l": "a", "roundobi": 86, "roundobi_yer": 80, "myr": "PW", "q70bl": "a", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "NZ", "48": 100, "49": 100, "46": 67, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 70, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "a", "79": 67, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 33, "65": -1, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 79, "obi_yer": 80.2, "105l": "a", "106l": "a"}}, {"alpha2": "NI", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 25.0833, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 33, "5l": "b", "obi_ar": 0, "4": 33, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 66.75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 0, "107l": "d", "q99b": 67, "108l": "d", "2l": "c", "64": 33, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 23.3, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "c", "123l": "c", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 16, "124l": "e", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "b", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "c", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 62, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 33, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "c", "q79bl": "b", "obi_ebp": 16.2727, "q97bl": "c", "17l": "c", "countryid": 59, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "a", "obi": 18.7826, "roundobi_iyr": 67, "18l": "d", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Nicaragua", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 19, "roundobi_yer": 13, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "c", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "NIC", "48": 33, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 33, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 100, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 33, "q60b": 0, "q57b": 0, "65": 100, "33l": "b", "q58b": 0, "80l": "c", "7l": "b", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "c", "66l": "a", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 23, "obi_yer": 13.2, "105l": "a", "106l": "d"}, "name": "Nicaragua", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 14, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 45.5455, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 33, "20": 33, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 33, "29": 100, "5l": "a", "obi_ar": 14.1429, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 62.625, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "c", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 0, "107l": "d", "q99b": null, "108l": "c", "2l": "b", "64": 100, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "c", "24l": "b", "sai_obi": 50, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "c", "123l": "c", "83": 33, "80": 67, "81": 33, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 52, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "c", "29l": "a", "92l": "b", "70l": "b", "19l": "c", "108": 33, "109": 0, "112l": "d", "98l": "d", "31l": "c", "102": 67, "103": 33, "100": 67, "101": 67, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 33, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "c", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 59, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 33, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 67, "50l": "b", "86l": "d", "6": 67, "96l": "d", "102l": "b", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 52.2931, "q97bl": null, "17l": "c", "countryid": 59, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 33, "10": 33, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "c", "16": 33, "19": 33, "18": 67, "65l": "c", "obi": 41.7474, "roundobi_iyr": 63, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Nicaragua", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 42, "roundobi_yer": 27, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "c", "89l": "b", "20l": "c", "87": 33, "68l": "a", "28l": "c", "63": 67, "countrylet": "NIC", "48": 67, "49": 67, "46": 0, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 46, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 33, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "c", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 26.6, "105l": "a", "106l": "d"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 24, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 27.8333, "26l": "d", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 0, "27": 33, "20": 33, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 33, "29": 100, "5l": "a", "obi_ar": 23.7143, "4": 67, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 66.875, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "c", "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 0, "107l": "d", "q99b": 67, "108l": "d", "2l": "b", "64": 67, "comp0810": 0, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "b", "sai_obi": 23.3, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 42, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 33, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "b", "82l": "c", "11l": "d", "comp0608": 1, "27l": "c", "29l": "a", "92l": "b", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 67, "103": -1, "100": 67, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 0, "30": 100, "37": 33, "36": 33, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 59, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 67, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "b", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 41.7636, "q97bl": "c", "17l": "d", "countryid": 59, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 67, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 100, "18": 67, "65l": "c", "obi": 36.5543, "roundobi_iyr": 67, "18l": "b", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Nicaragua", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 37, "roundobi_yer": 23, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "c", "87": 33, "68l": "b", "28l": "c", "63": 67, "countrylet": "NIC", "48": 33, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 28, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 33, "q60b": 0, "q57b": 0, "65": 33, "33l": "b", "q58b": 33, "80l": "c", "7l": "c", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 23.2, "105l": "a", "106l": "d"}, "db_2006": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 22.1667, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 71, "13l": "c", "120": 33, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "a", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 33.25, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 17, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": 33, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 33, "35": 0, "34": 0, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 33, "88": 0, "q60bl": "c", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 51, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 16.9455, "q97bl": "c", "17l": "d", "countryid": 59, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 20.6413, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Nicaragua", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 21, "roundobi_yer": 20, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "b", "28l": "d", "63": 67, "countrylet": "NIC", "48": 33, "49": 0, "46": 33, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 22, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": -1, "33l": "d", "q58b": 33, "80l": "c", "7l": "b", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 33, "obi_yer": 19.9, "105l": "b", "106l": "d"}}, {"alpha2": "NE", "db_2008": {"35l": "b", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 63.8333, "26l": "b", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 67, "27": 0, "20": 33, "21": 33, "22": 33, "23": 0, "41l": "c", "q56b": 33, "53l": "d", "28": 0, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "c", "120": 33, "121": 33, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "c", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "c", "81l": "a", "17": 67, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 33.3, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 67, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 32, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "d", "29l": "a", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 67, "34": 0, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 60, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "c", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "b", "q79bl": "b", "obi_ebp": 32.1091, "q97bl": "c", "17l": "b", "countryid": 60, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 33, "122l": "c", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 33, "19": 33, "18": 33, "65l": "d", "obi": 26.0978, "roundobi_iyr": 0, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Niger", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 26, "roundobi_yer": 33, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "c", "14l": "b", "87l": "d", "89l": "d", "20l": "c", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "NER", "48": 67, "49": 0, "46": 0, "47": 0, "44": 67, "45": 0, "42": 0, "43": 33, "40": 0, "41": 33, "1": 67, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "c", "q58b": 0, "80l": "b", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 33.4, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 55.5833, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 67, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 23.3, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 85, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 60, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 33, "122l": "b", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 3.27174, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Niger", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 3, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "NER", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 56, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 0, "105l": "a", "106l": "a"}, "name": "Niger", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 63.7273, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "b", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": null, "eb": "HC", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 5, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 100, "100": 67, "101": 67, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 94, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 67, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 4.60345, "q97bl": null, "17l": "d", "countryid": 60, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "a", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 3.51579, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Niger", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 4, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "NER", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 64, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 0, "105l": "a", "106l": "a"}}, {"alpha2": "NG", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 39, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 100, "21": 100, "22": 100, "23": 0, "41l": "b", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "a", "q58bl": "b", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 10, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "d", "roundobi_ebp": 31, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 67, "101": 67, "106": 67, "59l": "a", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 61, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 30.9091, "q97bl": "c", "17l": "c", "countryid": 61, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 67, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 19.2065, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Nigeria", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 19, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "NGA", "48": 33, "49": 0, "46": 100, "47": 0, "44": 0, "45": 0, "42": 0, "43": 67, "40": 0, "41": 67, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 67, "65": 0, "33l": "d", "q58b": 67, "80l": "d", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 10, "obi_yer": 0, "105l": "b", "106l": "b"}, "name": "Nigeria", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 75.7273, "26l": "d", "67l": "c", "115l": "c", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "c", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 33, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 62.375, "13l": "d", "120": 100, "121": 67, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 67, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 67, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 9, "124l": "b", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 0, "3l": "b", "78l": "c", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "d", "82l": "c", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "c", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 100, "103": 100, "100": 100, "101": 67, "106": 100, "59l": "a", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 100, "roundobi_pbs": 56, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 80, "60": 67, "46l": "d", "62": 33, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 100, "67": 33, "68": 100, "69": 100, "63l": "c", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 8.60345, "q97bl": null, "17l": "d", "countryid": 61, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 33, "98": 67, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "c", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 1, "14": 33, "103l": "a", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 15.7579, "roundobi_iyr": 62, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Nigeria", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 16, "roundobi_yer": 27, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "d", "ar": "IU", "61l": "b", "77l": "a", "14l": "c", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 33, "countrylet": "NGA", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 76, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 33, "116l": "b", "60l": "b", "74l": "d", "15l": "d", "79": 33, "78": 33, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 33, "33l": "d", "q58b": null, "80l": "c", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "c", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 26.5, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 58.4167, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "c", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 62.5, "13l": "d", "120": 67, "121": 33, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "d", "64": 33, "comp0810": 1, "69l": "a", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "d", "24l": "d", "sai_obi": 16.6, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 67, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 13, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 0, "3l": "b", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "b", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "c", "70l": "c", "19l": "d", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 100, "106": 67, "59l": "b", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 67, "36": 33, "35": 0, "34": 0, "q64bl": "d", "59": 67, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 100, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 73, "60": 100, "46l": "c", "62": 67, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 67, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 13.3455, "q97bl": "a", "17l": "d", "countryid": 61, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 67, "103l": "e", "16": 33, "19": 0, "18": 0, "65l": "c", "obi": 17.7717, "roundobi_iyr": 63, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Nigeria", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 18, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "b", "ar": "IU", "61l": "b", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "NGA", "48": 67, "49": 0, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 33, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 67, "65": 33, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "b", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 17, "obi_yer": 0, "105l": "b", "106l": "b"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 47.25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "b", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "c", "81l": "d", "17": 67, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 33, "10l": "d", "24l": "d", "sai_obi": 12.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 23, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 100, "92": 100, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 67, "106": 67, "59l": "a", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 67, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "c", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 52, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 23.0364, "q97bl": "b", "17l": "b", "countryid": 61, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 33, "10": 0, "13": 0, "12": 100, "order_cat": 1, "14": 33, "103l": "e", "16": 67, "19": 0, "18": 0, "65l": "e", "obi": 20.3043, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": null, "country": "Nigeria", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 20, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "IU", "61l": "a", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "NGA", "48": 67, "49": 0, "46": 67, "47": 0, "44": 0, "45": 0, "42": 0, "43": 33, "40": 0, "41": 67, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": -1, "33l": "c", "q58b": 67, "80l": "d", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 0, "105l": "b", "106l": "b"}}, {"alpha2": "NO", "db_2008": {"35l": "a", "72l": "c", "roundobi_ar": 86, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 86.1667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "a", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 67, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 85.8571, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 79.375, "13l": "b", "120": 67, "121": 100, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 67, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "a", "sai_obi": 90.1, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 33, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "a", "100l": "a", "51l": "b", "roundobi_ebp": 83, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "b", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": -1, "42l": "b", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 6, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 67, "63l": "b", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "a", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 82.75, "q97bl": "b", "17l": "a", "countryid": 62, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 100, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 67, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 100, "65l": "a", "obi": 79.8315, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": 33, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Norway", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 80, "roundobi_yer": 70, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "NOR", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 100, "42": 67, "43": 100, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 86, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "a", "15l": "b", "79": 100, "78": 67, "q59bl": "e", "51": 67, "q60b": 67, "q57b": 100, "65": 100, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "a", "q64b": 100, "95l": "a", "roundsai_obi": 90, "obi_yer": 69.9, "105l": "a", "106l": "a"}, "name": "Norway", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 95, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 87.9091, "26l": "b", "67l": "a", "115l": "c", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 67, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": "b", "86": 100, "obi_iyr": 87.625, "13l": "a", "120": 33, "121": 67, "122": 0, "123": 67, "124": 100, "125": 67, "76l": "a", "15": 67, "21l": "a", "q58bl": null, "39l": "a", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 67, "116": 100, "ebp": "PW", "110": 100, "113": 100, "44l": "e", "123l": "b", "83": 33, "80": 67, "81": 100, "119": 67, "118": 0, "obi_cat": "Extensive", "roundobi_cb": 75, "117l": "b", "43l": "b", "100l": "a", "51l": "b", "roundobi_ebp": 89, "124l": "a", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 100, "109": 100, "112l": "c", "98l": "d", "31l": "a", "102": 100, "103": 100, "100": 100, "101": 100, "106": 100, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": 33, "42l": "a", "58l": "a", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 75, "97l": "b", "year": 2012, "rank": 5, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "b", "110l": "a", "114l": "c", "107": 100, "118l": "d", "2": 67, "50l": "b", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 89.3393, "q97bl": null, "17l": "a", "countryid": 62, "25l": "a", "112": 33, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "d", "95": 100, "94": 100, "97": 67, "62l": "d", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "a", "16": 100, "19": 67, "18": 100, "65l": "a", "obi": 82.8495, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 100, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 67, "q80bl": null, "country": "Norway", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 83, "roundobi_yer": 53, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "NOR", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 100, "42": 100, "43": 67, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 88, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 100, "74": 100, "73": 100, "72": 100, "71": 67, "70": 67, "116l": "a", "60l": "d", "74l": "a", "15l": "b", "79": 67, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "b", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 53.4, "105l": "a", "106l": "a"}, "db_2010": {"35l": "a", "72l": "c", "roundobi_ar": 95, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 88.9167, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 67, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 83.5, "13l": "b", "120": 67, "121": 100, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 67, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "a", "sai_obi": 96.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 33, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "a", "51l": "b", "roundobi_ebp": 85, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "b", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 100, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": -1, "42l": "a", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 5, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 67, "63l": "b", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 85.3462, "q97bl": "b", "17l": "a", "countryid": 62, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 100, "94": 100, "97": -1, "62l": "d", "11": 67, "10": 67, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 100, "65l": "a", "obi": 83.2135, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": 67, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Norway", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 83, "roundobi_yer": 77, "myr": "PW", "q70bl": "b", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "NOR", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 100, "42": 100, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 89, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 33, "71": 100, "70": 67, "116l": "e", "60l": "d", "74l": "a", "15l": "b", "79": 100, "78": 67, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 100, "65": 100, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "a", "q64b": 100, "95l": "a", "roundsai_obi": 97, "obi_yer": 76.6, "105l": "a", "106l": "a"}, "db_2006": {"35l": "a", "72l": "c", "roundobi_ar": 92, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 80.6667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "d", "24": 100, "25": 100, "26": 67, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 91.75, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 33, "obi_iyr": 62.5, "13l": "b", "120": 100, "121": 67, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 67, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "b", "2l": "c", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "c", "24l": "a", "sai_obi": 87.625, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "e", "83": 67, "80": 67, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 74, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": 100, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 67, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 67, "42l": "b", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "b", "79l": "a", "q97b": 100, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 12, "60": 0, "46l": "e", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "b", "121l": "b", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "b", "86l": "c", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 74.3846, "q97bl": "a", "17l": "a", "countryid": 62, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 100, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 33, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 100, "65l": "e", "obi": 72.3258, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Norway", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 72, "roundobi_yer": 70, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "NOR", "48": 67, "49": 67, "46": -1, "47": 100, "44": -1, "45": 0, "42": 67, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 33, "9": 0, "85": 0, "73l": "a", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "b", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 67, "q57b": 67, "65": -1, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "a", "q64b": 100, "95l": "a", "roundsai_obi": 88, "obi_yer": 70, "105l": "a", "106l": "b"}}, {"alpha2": "PK", "db_2008": {"35l": "c", "72l": "d", "roundobi_ar": 52, "pub_pbs": 0, "113l": "b", "54l": "c", "leg_obi": 24.9167, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 33, "26": 67, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 52.4286, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "b", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "d", "24l": "d", "sai_obi": 56.7, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 67, "44l": "a", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 53, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "c", "102": 33, "103": -1, "100": 67, "101": 67, "106": 33, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 100, "32": 67, "31": 33, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 47, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 52.6909, "q97bl": "c", "17l": "c", "countryid": 63, "25l": "c", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 100, "94": 0, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 38.0217, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Pakistan", "region": "South Asia", "48l": "b", "roundobi": 38, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "b", "ar": "HC", "61l": "d", "77l": "d", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "PAK", "48": 67, "49": 0, "46": 67, "47": 0, "44": 100, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "a", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "b", "grade_sai": "Moderate", "4l": "c", "66l": "d", "119l": "c", "q64b": 33, "95l": "a", "roundsai_obi": 57, "obi_yer": 0, "105l": "b", "106l": "c"}, "name": "Pakistan", "db_2012": {"35l": "b", "72l": "c", "roundobi_ar": 52, "pub_pbs": 0, "113l": "c", "54l": "c", "leg_obi": 51.4545, "26l": "a", "67l": "b", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "a", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 52.4286, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 50.125, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "a", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 100, "10l": "b", "24l": "a", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 33, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 76, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 33, "103": 100, "100": 67, "101": 100, "106": 33, "59l": "b", "104": 33, "105": 0, "101l": "a", "91l": "b", "39": 33, "38": 67, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 29, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "d", "6": 100, "96l": "b", "102l": "c", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 75.8621, "q97bl": null, "17l": "c", "countryid": 63, "25l": "a", "112": 0, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": 33, "45l": "d", "57l": "a", "91": 67, "q79b": null, "93": 67, "122l": "d", "95": 67, "94": 100, "97": 67, "62l": "d", "11": 33, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "a", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 57.9158, "roundobi_iyr": 50, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Pakistan", "region": "South Asia", "48l": "b", "roundobi": 58, "roundobi_yer": 23, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "HC", "61l": "d", "77l": "b", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "PAK", "48": 67, "49": 100, "46": 67, "47": 0, "44": 100, "45": 0, "42": 100, "43": 0, "40": 33, "41": 100, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 51, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "c", "79": 67, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": null, "95l": "b", "roundsai_obi": 92, "obi_yer": 23.4, "105l": "b", "106l": "c"}, "db_2010": {"35l": "b", "72l": "d", "roundobi_ar": 14, "pub_pbs": 0, "113l": "b", "54l": "c", "leg_obi": 27.6667, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 67, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 14.2857, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "b", "39l": "c", "58": 0, "q56bl": "c", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "d", "24l": "d", "sai_obi": 43.4, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 60, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 33, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 33, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 67, "31": 67, "30": 100, "37": 67, "36": 100, "35": 67, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 56, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 60.0364, "q97bl": "c", "17l": "c", "countryid": 63, "25l": "b", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "c", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 100, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 38.4239, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Pakistan", "region": "South Asia", "48l": "b", "roundobi": 38, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "b", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "PAK", "48": 67, "49": 67, "46": 67, "47": 0, "44": 100, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 28, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "b", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": 33, "95l": "a", "roundsai_obi": 43, "obi_yer": 0, "105l": "b", "106l": "c"}, "db_2006": {"35l": "b", "72l": "c", "roundobi_ar": 58, "pub_pbs": 0, "113l": "b", "54l": "c", "leg_obi": 24.9167, "26l": "d", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 33.5, "9l": "a", "24": 33, "25": 67, "26": 0, "27": 100, "20": 33, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 58.25, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 50.125, "13l": "a", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "c", "q58bl": "c", "39l": "b", "58": 0, "q56bl": "b", "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "d", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 33, "55": 67, "10l": "d", "24l": "c", "sai_obi": 62.5, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "e", "83": 67, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 59, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 1, "7": 100, "3l": "c", "78l": "d", "q63b": 0, "92": 100, "84l": "b", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 67, "106": 33, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 67, "38": 33, "42l": "a", "58l": "d", "76": 67, "33": 100, "32": 67, "31": 0, "30": 100, "37": 67, "36": 100, "35": 67, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 100, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "b", "grade_leg": "Weak", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 20, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 67, "68": 100, "69": 67, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 59.4, "q97bl": "c", "17l": "b", "countryid": 63, "25l": "b", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 100, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 67, "65l": "e", "obi": 51.4674, "roundobi_iyr": 50, "18l": "b", "roundobi_myr": 34, "52l": "c", "q70b": 67, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Pakistan", "region": "South Asia", "48l": "b", "roundobi": 51, "roundobi_yer": 53, "myr": "PW", "q70bl": "b", "q65bl": "d", "obi_eb": 67, "82": 100, "55l": "b", "ar": "HC", "61l": "d", "77l": "a", "14l": "a", "87l": "c", "89l": "a", "20l": "c", "87": 33, "68l": "a", "28l": "a", "63": 0, "countrylet": "PAK", "48": 67, "49": 67, "46": 0, "47": 0, "44": 100, "45": 67, "42": 100, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 67, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "b", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 67, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "a", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "b", "grade_sai": "Moderate", "4l": "c", "66l": "d", "119l": "c", "q64b": 0, "95l": "a", "roundsai_obi": 63, "obi_yer": 53.3, "105l": "b", "106l": "c"}}, {"alpha2": "PG", "db_2008": {"35l": "c", "72l": "c", "roundobi_ar": 38, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 25, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 33, "21": 0, "22": 33, "23": 100, "41l": "c", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "a", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "c", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 67, "10l": "b", "24l": "a", "sai_obi": 39.9, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 33, "81": 100, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "d", "51l": "d", "roundobi_ebp": 61, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "c", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 100, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "b", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 18, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "d", "86l": "d", "6": 0, "96l": "b", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 61.2182, "q97bl": "c", "17l": "b", "countryid": 64, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "a", "91": 67, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 33, "18": 67, "65l": "c", "obi": 60.5326, "roundobi_iyr": 79, "18l": "b", "roundobi_myr": 92, "52l": "d", "q70b": 67, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Papua New Guinea", "region": "East Asia & Pacific", "48l": "b", "roundobi": 61, "roundobi_yer": 30, "myr": "PW", "q70bl": "b", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "b", "ar": "HC", "61l": "a", "77l": "a", "14l": "a", "87l": "c", "89l": "d", "20l": "c", "87": 33, "68l": "b", "28l": "a", "63": 100, "countrylet": "PNG", "48": 67, "49": 67, "46": 0, "47": 100, "44": 100, "45": 33, "42": 0, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 67, "74": 100, "73": 100, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "a", "74l": "a", "15l": "c", "79": 67, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "a", "q58b": 0, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 40, "obi_yer": 30, "105l": "a", "106l": "b"}, "name": "Papua New Guinea", "db_2012": {"35l": "c", "72l": "d", "roundobi_ar": 24, "pub_pbs": 1, "113l": "b", "54l": "c", "leg_obi": 48.2727, "26l": "a", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 67, "21": 67, "22": 33, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 23.7143, "4": 67, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "a", "15": 33, "21l": "b", "q58bl": null, "39l": "b", "58": 67, "q56bl": null, "81l": "b", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 67, "comp0812": 1, "107l": "c", "q99b": null, "108l": "c", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 67, "10l": "b", "24l": "a", "sai_obi": 41.75, "q63cl": null, "eb": "IU", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 0, "113": 67, "44l": "a", "123l": "d", "83": 0, "80": 33, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "c", "43l": "c", "100l": "c", "51l": "d", "roundobi_ebp": 71, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "a", "108": 33, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 33, "103": 33, "100": 33, "101": 0, "106": 67, "59l": "c", "104": 100, "105": 100, "101l": "d", "91l": "d", "39": 67, "38": 0, "42l": "c", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 32, "60": 100, "46l": "b", "62": 100, "pub_eb": 0, "56l": "b", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "b", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 33, "118l": "d", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "a", "102l": "c", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 71.2931, "q97bl": null, "17l": "b", "countryid": 64, "25l": "a", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 33, "98": 33, "45l": "c", "57l": "a", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "a", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "c", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 55.8, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": null, "89": 0, "iyr": "NP", "85l": "d", "111": 0, "q80bl": null, "country": "Papua New Guinea", "region": "East Asia & Pacific", "48l": "b", "roundobi": 56, "roundobi_yer": 33, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 33, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "PNG", "48": 67, "49": 67, "46": 67, "47": 100, "44": 100, "45": 33, "42": 33, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 48, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 67, "74": 100, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "a", "74l": "a", "15l": "c", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 33.3, "105l": "a", "106l": "b"}, "db_2010": {"35l": "c", "72l": "d", "roundobi_ar": 14, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 25, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 67, "21": 67, "22": 33, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 14.2857, "4": 67, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "b", "q58bl": "c", "39l": "b", "58": 67, "q56bl": "b", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 67, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "c", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 67, "10l": "b", "24l": "a", "sai_obi": 33.3, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 67, "80": 33, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "d", "roundobi_ebp": 69, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "d", "19l": "b", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 0, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 67, "38": 0, "42l": "c", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "b", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 26, "60": 100, "46l": "c", "62": 100, "pub_eb": 0, "56l": "b", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "b", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "c", "86l": "c", "6": 33, "96l": "b", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 69.1091, "q97bl": "c", "17l": "b", "countryid": 64, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 56.9022, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": 67, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Papua New Guinea", "region": "East Asia & Pacific", "48l": "b", "roundobi": 57, "roundobi_yer": 43, "myr": "PW", "q70bl": "b", "q65bl": "d", "obi_eb": 0, "82": 33, "55l": "b", "ar": "NP", "61l": "a", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "PNG", "48": 67, "49": 67, "46": 33, "47": 100, "44": 100, "45": 33, "42": 33, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 67, "74": 100, "73": 100, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "a", "15l": "c", "79": 67, "78": 0, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 33, "65": 0, "33l": "a", "q58b": 33, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 43.3, "105l": "a", "106l": "b"}, "db_2006": {"35l": "c", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 30.5, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "c", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 0, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 54.25, "13l": "b", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 33, "55": 33, "10l": "b", "24l": "a", "sai_obi": 37.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "d", "51l": "d", "roundobi_ebp": 70, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 67, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": 33, "88": 0, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 18, "60": 100, "46l": "d", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 100, "67": 67, "68": 67, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 69.7091, "q97bl": "c", "17l": "b", "countryid": 64, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "a", "57l": "d", "91": 0, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 51.8261, "roundobi_iyr": 54, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Papua New Guinea", "region": "East Asia & Pacific", "48l": "b", "roundobi": 52, "roundobi_yer": 3, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "IU", "61l": "a", "77l": "c", "14l": "a", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "b", "28l": "a", "63": 67, "countrylet": "PNG", "48": 67, "49": 100, "46": 0, "47": 100, "44": 100, "45": 100, "42": 0, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": -1, "33l": "a", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 38, "obi_yer": 3.3, "105l": "a", "106l": "a"}}, {"alpha2": "PE", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 43, "pub_pbs": 1, "113l": "a", "54l": "c", "leg_obi": 55.5, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 33.25, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "a", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 33, "121": 67, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "c", "15": 67, "21l": "c", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "b", "81l": "a", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 49.9, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "c", "123l": "c", "83": 33, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "d", "roundobi_ebp": 66, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": 100, "35": 33, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "e", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 11, "60": 0, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "c", "86l": "c", "6": 33, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 66.0185, "q97bl": "b", "17l": "c", "countryid": 65, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 67, "103l": "e", "16": 0, "19": 67, "18": 0, "65l": "a", "obi": 66.6374, "roundobi_iyr": 100, "18l": "d", "roundobi_myr": 33, "52l": "c", "q70b": 33, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Peru", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 67, "roundobi_yer": 67, "myr": "PW", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 100, "55l": "c", "ar": "PW", "61l": "a", "77l": "b", "14l": "b", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PER", "48": 100, "49": 100, "46": 100, "47": 0, "44": 33, "45": 100, "42": 33, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "b", "roundleg_obi": 56, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 33, "73": 67, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "c", "15l": "b", "79": 100, "78": 100, "q59bl": "c", "51": 0, "q60b": 100, "q57b": 67, "65": 100, "33l": "b", "q58b": 33, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 50, "obi_yer": 66.6, "105l": "a", "106l": "a"}, "name": "Peru", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 38, "pub_pbs": 0, "113l": "a", "54l": "a", "leg_obi": 60.5455, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 41.5, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 33, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 0, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 87.5, "13l": "b", "120": 33, "121": 33, "122": 0, "123": 100, "124": 0, "125": 0, "76l": "c", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "b", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "a", "24l": "c", "sai_obi": 83.25, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 100, "44l": "c", "123l": "a", "83": 33, "80": 67, "81": 67, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "c", "51l": "b", "roundobi_ebp": 65, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "b", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 100, "103": 67, "100": 33, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "d", "58l": "a", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": 100, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "e", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 31, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "c", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "b", "86l": "d", "6": 33, "96l": "c", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 65.4912, "q97bl": null, "17l": "c", "countryid": 65, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "c", "57l": "a", "91": 100, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 100, "97": 33, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 33, "19": 0, "18": 0, "65l": "a", "obi": 56.734, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 42, "52l": "b", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Peru", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 57, "roundobi_yer": 37, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "d", "77l": "b", "14l": "b", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "d", "63": 100, "countrylet": "PER", "48": 100, "49": 67, "46": 100, "47": 0, "44": 33, "45": 33, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 61, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 33, "74": 33, "73": 67, "72": 100, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "c", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 83, "obi_yer": 36.7, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 43, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 63.8333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 41.5, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 33, "23": 100, "41l": "d", "q56b": 67, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "a", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 67, "121": 33, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "c", "15": 67, "21l": "c", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "b", "81l": "b", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "a", "24l": "c", "sai_obi": 56.6, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "c", "123l": "a", "83": 33, "80": 100, "81": 67, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "c", "roundobi_ebp": 67, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "d", "58l": "a", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": 100, "35": 0, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "e", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 15, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "c", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 33, "96l": "c", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 66.6481, "q97bl": "b", "17l": "c", "countryid": 65, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 67, "103l": "e", "16": 67, "19": 0, "18": 0, "65l": "d", "obi": 64.8022, "roundobi_iyr": 100, "18l": "d", "roundobi_myr": 42, "52l": "c", "q70b": 33, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Peru", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 65, "roundobi_yer": 63, "myr": "PW", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "d", "77l": "c", "14l": "b", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PER", "48": 100, "49": 100, "46": 100, "47": 0, "44": 33, "45": 33, "42": 0, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "b", "roundleg_obi": 64, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "b", "75": 33, "74": 33, "73": 67, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "c", "15l": "b", "79": 100, "78": 100, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 67, "65": 0, "33l": "b", "q58b": 33, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 57, "obi_yer": 63.2, "105l": "a", "106l": "a"}, "db_2006": {"35l": "c", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 58.25, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 1, "obi_myr": 83.25, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.75, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 100, "13l": "b", "120": 33, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "d", "q58bl": "b", "39l": "c", "58": 100, "q56bl": "b", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 100, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 54.25, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "e", "83": 33, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "c", "51l": "b", "roundobi_ebp": 75, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 100, "92": 67, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 33, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "c", "58l": "a", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 33, "34": 100, "q64bl": "a", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 7, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "b", "86l": "c", "6": 33, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 75.1636, "q97bl": "b", "17l": "b", "countryid": 65, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 67, "93": 33, "122l": "d", "95": 33, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 0, "18": 100, "65l": "e", "obi": 76.8261, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 83, "52l": "a", "q70b": 67, "89": 0, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Peru", "region": "Latin America & Caribbean", "48l": "a", "roundobi": 77, "roundobi_yer": 73, "myr": "PW", "q70bl": "b", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "c", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PER", "48": 100, "49": 100, "46": 100, "47": 0, "44": 67, "45": 100, "42": 33, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 58, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 33, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "b", "79": 100, "78": 100, "q59bl": "b", "51": 67, "q60b": 100, "q57b": 67, "65": -1, "33l": "b", "q58b": 67, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": 100, "95l": "c", "roundsai_obi": 54, "obi_yer": 73.4, "105l": "a", "106l": "a"}}, {"alpha2": "PH", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 48, "pub_pbs": 0, "113l": "b", "54l": "b", "leg_obi": 41.6667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 33.25, "9l": "d", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 0, "22": 67, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 67, "5l": "b", "obi_ar": 47.7143, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75, "13l": "b", "120": 100, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "b", "q99b": 33, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "c", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 33, "10l": "d", "24l": "b", "sai_obi": 63.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "b", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 52, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "b", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "b", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 34, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 33, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "b", "q79bl": "b", "obi_ebp": 52.2182, "q97bl": "c", "17l": "d", "countryid": 66, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 67, "65l": "d", "obi": 48.2391, "roundobi_iyr": 75, "18l": "b", "roundobi_myr": 33, "52l": "b", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Philippines", "region": "East Asia & Pacific", "48l": "b", "roundobi": 48, "roundobi_yer": 23, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PHL", "48": 67, "49": 0, "46": 67, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "b", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 33, "73": 67, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "c", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 67, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 63, "obi_yer": 23.2, "105l": "a", "106l": "d"}, "name": "Philippines", "db_2012": {"35l": "b", "72l": "a", "roundobi_ar": 52, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 36.3636, "26l": "a", "67l": "a", "115l": "a", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 67, "21": 33, "22": 67, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 67, "5l": "b", "obi_ar": 52.4286, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 95.875, "13l": "b", "120": 100, "121": 33, "122": 0, "123": 67, "124": 0, "125": 33, "76l": "d", "15": 0, "21l": "c", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "b", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 100, "114": 67, "117": 67, "116": 67, "ebp": "PW", "110": 0, "113": 100, "44l": "b", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 67, "118": 33, "obi_cat": "Some", "roundobi_cb": 0, "117l": "b", "43l": "c", "100l": "b", "51l": "d", "roundobi_ebp": 58, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "b", "108": 67, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 0, "103": 0, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 33, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 47, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "c", "110l": "d", "114l": "b", "107": 33, "118l": "c", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 58.1034, "q97bl": null, "17l": "c", "countryid": 66, "25l": "a", "112": 0, "38l": "c", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "c", "57l": "a", "91": 33, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "d", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 48.4632, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Philippines", "region": "East Asia & Pacific", "48l": "c", "roundobi": 48, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "d", "14l": "b", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PHL", "48": 33, "49": 33, "46": 67, "47": 100, "44": 67, "45": 33, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "b", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 0, "105l": "a", "106l": "d"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 48, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 50.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 67, "21": 0, "22": 67, "23": 100, "41l": "d", "q56b": 100, "53l": "b", "28": 100, "29": 67, "5l": "b", "obi_ar": 47.7143, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.75, "13l": "b", "120": 100, "121": 67, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "a", "81l": "c", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "d", "52": 100, "comp0812": 1, "107l": "c", "q99b": 100, "108l": "b", "2l": "b", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "d", "24l": "b", "sai_obi": 60, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "a", "roundobi_ebp": 62, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "b", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "b", "22l": "b", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 33, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 67, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "a", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 61.9273, "q97bl": "c", "17l": "c", "countryid": 66, "25l": "a", "112": -1, "38l": "c", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 67, "18": 67, "65l": "d", "obi": 55.1413, "roundobi_iyr": 92, "18l": "b", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Philippines", "region": "East Asia & Pacific", "48l": "b", "roundobi": 55, "roundobi_yer": 23, "myr": "IU", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PHL", "48": 67, "49": 0, "46": 67, "47": 100, "44": 67, "45": 33, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 100, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "a", "119l": "b", "q64b": 67, "95l": "d", "roundsai_obi": 60, "obi_yer": 23.2, "105l": "a", "106l": "d"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 100, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 50, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 24.75, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 67, "5l": "b", "obi_ar": 100, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 62.5, "13l": "b", "120": 100, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "a", "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "d", "24l": "a", "sai_obi": 62.5, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 100, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 57, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 67, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 33, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "b", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 19, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 57, "q97bl": "c", "17l": "c", "countryid": 66, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 33, "93": 67, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "e", "obi": 51.4457, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 25, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Philippines", "region": "East Asia & Pacific", "48l": "b", "roundobi": 51, "roundobi_yer": 23, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "PHL", "48": 67, "49": 0, "46": 100, "47": 0, "44": 67, "45": 0, "42": 33, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "c", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 33, "73": 33, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "c", "15l": "d", "79": 33, "78": 0, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 33, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "a", "q64b": 100, "95l": "d", "roundsai_obi": 63, "obi_yer": 23.2, "105l": "a", "106l": "d"}}, {"alpha2": "PL", "db_2008": {"35l": "a", "72l": "b", "roundobi_ar": 86, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 72.25, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 41.5, "9l": "d", "24": 33, "25": 0, "26": 0, "27": 100, "20": 100, "21": 33, "22": 33, "23": 0, "41l": "a", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "b", "obi_ar": 85.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "a", "120": 100, "121": 33, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 33, "pbs": "PW", "61": 67, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "c", "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "c", "sai_obi": 90, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "a", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "c", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": null, "92": 100, "84l": "e", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "d", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "c", "37l": "c", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 10, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "a", "6": 33, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 55.7091, "q97bl": "b", "17l": "c", "countryid": 67, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "c", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 0, "65l": "b", "obi": 67, "roundobi_iyr": 100, "18l": "d", "roundobi_myr": 42, "52l": "b", "q70b": 67, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Poland", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 67, "roundobi_yer": 96, "myr": "HC", "q70bl": "b", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "POL", "48": 0, "49": 0, "46": 100, "47": 0, "44": 100, "45": 0, "42": 33, "43": 33, "40": 0, "41": 100, "1": 100, "94l": "a", "q63c": 67, "5": 0, "84": -1, "9": 0, "85": 100, "73l": "c", "roundleg_obi": 72, "104l": "e", "23l": "d", "q99bl": "e", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 33, "73": 33, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 100, "q59bl": "a", "51": 33, "q60b": 0, "q57b": 33, "65": 67, "33l": "a", "q58b": 100, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 90, "obi_yer": 96.3333, "105l": "a", "106l": "d"}, "name": "Poland", "db_2012": {"35l": "a", "72l": "b", "roundobi_ar": 71, "pub_pbs": 1, "113l": "d", "54l": "a", "leg_obi": 48.4545, "26l": "d", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 41.5, "9l": "b", "24": 33, "25": 0, "26": 0, "27": 100, "20": 33, "21": 33, "22": 67, "23": 0, "41l": "b", "q56b": null, "53l": "a", "28": 100, "29": 100, "5l": "b", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 75, "13l": "a", "120": 100, "121": 33, "122": 100, "123": 67, "124": 100, "125": 67, "76l": "c", "15": 0, "21l": "c", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 33, "pbs": "PW", "61": 33, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "d", "obi_pbs": 55.3333, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "e", "123l": "b", "83": 33, "80": 67, "81": 100, "119": 67, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 57, "124l": "a", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 100, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 100, "103": 33, "100": 67, "101": 100, "106": 0, "59l": "d", "104": 0, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 33, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 55, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "b", "pub_cb": 0, "53": 100, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 25, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 0, "63l": "a", "121l": "c", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "b", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 67, "50l": "a", "86l": "a", "6": 33, "96l": "d", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 57.2807, "q97bl": null, "17l": "c", "countryid": 67, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 100, "97": 33, "62l": "c", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "c", "16": 67, "19": 0, "18": 0, "65l": "b", "obi": 58.8298, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 42, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "a", "111": 0, "q80bl": null, "country": "Poland", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 59, "roundobi_yer": 73, "myr": "HC", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "POL", "48": 33, "49": 33, "46": 100, "47": 0, "44": -1, "45": 0, "42": 67, "43": 0, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 33, "9": 0, "85": 100, "73l": "c", "roundleg_obi": 48, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 67, "74": 33, "73": 33, "72": 67, "71": 100, "70": 100, "116l": "d", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 73.3, "105l": "a", "106l": "d"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 71, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 72.25, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 41.5, "9l": "b", "24": 33, "25": 0, "26": 0, "27": 100, "20": 33, "21": 33, "22": 33, "23": 0, "41l": "b", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "b", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "a", "120": 100, "121": 33, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "c", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 67, "pbs": "HC", "61": 33, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "a", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 44.3333, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "c", "sai_obi": 80, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "e", "123l": "a", "83": 33, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 33, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 44, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "d", "79l": "a", "q97b": 67, "83l": "c", "grade_leg": "Strong", "16l": "b", "37l": "c", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 16, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "a", "86l": "a", "6": 33, "96l": "d", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 55.9623, "q97bl": "b", "17l": "b", "countryid": 67, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 0, "65l": "b", "obi": 64.4505, "roundobi_iyr": 100, "18l": "d", "roundobi_myr": 42, "52l": "a", "q70b": 67, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Poland", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 64, "roundobi_yer": 90, "myr": "HC", "q70bl": "b", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "POL", "48": 0, "49": 0, "46": 100, "47": 0, "44": -1, "45": 0, "42": 33, "43": 0, "40": 0, "41": 67, "1": 100, "94l": "a", "q63c": 67, "5": 0, "84": 100, "9": 0, "85": 100, "73l": "c", "roundleg_obi": 72, "104l": "e", "23l": "b", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 67, "74": 33, "73": 33, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 100, "q59bl": "a", "51": 33, "q60b": 0, "q57b": 33, "65": 67, "33l": "a", "q58b": 100, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 80, "obi_yer": 90, "105l": "a", "106l": "d"}, "db_2006": {"35l": "a", "72l": "b", "roundobi_ar": 100, "pub_pbs": 1, "113l": "c", "54l": "c", "leg_obi": 80.5833, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 33.25, "9l": "d", "24": 33, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "a", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "a", "120": 100, "121": 100, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 33, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "c", "sai_obi": 87.5, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "a", "123l": "e", "83": 67, "80": 67, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 66, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 0, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "d", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 10, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "a", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "a", "6": 0, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 66.0364, "q97bl": "b", "17l": "b", "countryid": 67, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 0, "65l": "e", "obi": 73.5435, "roundobi_iyr": 96, "18l": "d", "roundobi_myr": 33, "52l": "c", "q70b": 67, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "Poland", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 74, "roundobi_yer": 90, "myr": "HC", "q70bl": "b", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "POL", "48": 67, "49": 0, "46": 100, "47": 0, "44": 100, "45": 0, "42": 100, "43": 0, "40": 0, "41": 100, "1": 100, "94l": "e", "q63c": 100, "5": 0, "84": 67, "9": 0, "85": 100, "73l": "c", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 0, "73": 33, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "a", "51": 33, "q60b": 0, "q57b": 33, "65": -1, "33l": "a", "q58b": 100, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "d", "roundsai_obi": 88, "obi_yer": 90.1, "105l": "a", "106l": "d"}}, {"alpha2": "PT", "db_2012": {"35l": "e", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 57.6364, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 67, "29": 100, "5l": "b", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": -1, "obi_iyr": 100, "13l": "b", "120": 67, "121": 0, "122": 100, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "c", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 0, "107l": "c", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "e", "123l": "d", "83": 0, "80": 67, "81": 100, "119": 0, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "a", "100l": "a", "51l": "c", "roundobi_ebp": 65, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": "d", "98l": "c", "31l": "b", "102": 67, "103": 67, "100": 100, "101": 67, "106": 100, "59l": "d", "104": 0, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 67, "30": 100, "37": 67, "36": 100, "35": -1, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 21, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "c", "86l": "e", "6": 33, "96l": "a", "102l": "b", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 65.4821, "q97bl": null, "17l": "a", "countryid": 68, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 67, "98": 33, "45l": "a", "57l": "d", "91": 0, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 0, "97": 67, "62l": "a", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "b", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 61.6087, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Portugal", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 62, "roundobi_yer": 41, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 100, "countrylet": "PRT", "48": 67, "49": 33, "46": 67, "47": 100, "44": -1, "45": 100, "42": 67, "43": 100, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 58, "104l": "d", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "c", "79": 100, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 40.7778, "105l": "a", "106l": "a"}, "db_2010": {"35l": "e", "72l": "a", "roundobi_ar": 45, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 69.5, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 100, "26": 0, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 44.5, "4": 33, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": null, "86": -1, "obi_iyr": 100, "13l": "a", "120": 67, "121": 67, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "e", "39l": "d", "58": 33, "q56bl": "a", "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 0, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 53.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "e", "123l": "d", "83": 0, "80": 100, "81": 100, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "d", "roundobi_ebp": 62, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "e", "39": 0, "38": 67, "42l": "a", "58l": "c", "76": 0, "33": 100, "32": 100, "31": 67, "30": 100, "37": 33, "36": 67, "35": -1, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "d", "79l": "a", "q97b": 67, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 25, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "e", "6": 33, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 62.2642, "q97bl": "b", "17l": "b", "countryid": 68, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "c", "91": -1, "q79b": 100, "93": 33, "122l": "c", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "b", "obi": 57.5682, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Portugal", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 58, "roundobi_yer": 48, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "PRT", "48": 67, "49": 33, "46": 67, "47": 100, "44": -1, "45": 67, "42": 100, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 0, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 70, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "e", "51": 0, "q60b": 0, "q57b": 0, "65": 67, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 53, "obi_yer": 48.1111, "105l": "a", "106l": "a"}, "name": "Portugal"}, {"alpha2": "QA", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 0, "q63cl": null, "eb": "IU", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 0, "106": 0, "59l": "d", "104": 0, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 100, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 0, "q97bl": null, "17l": "d", "countryid": 69, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 0, "99": 0, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 0, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Qatar", "region": "Middle East & North Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "QAT", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 0, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Qatar"}, {"alpha2": "RO", "db_2008": {"35l": "a", "72l": "d", "roundobi_ar": 14, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 52.8333, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 14.2857, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 12.5, "13l": "a", "120": 0, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "a", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 60, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 76, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 67, "101": 67, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 0, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "a", "q97b": 33, "83l": "a", "grade_leg": "Moderate", "16l": "b", "37l": "d", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 17, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "a", "6": 100, "96l": "d", "102l": "b", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 76.3818, "q97bl": "c", "17l": "a", "countryid": 70, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 61.6087, "roundobi_iyr": 13, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "IU", "85l": "a", "111": -1, "q80bl": "e", "country": "Romania", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 62, "roundobi_yer": 90, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 100, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "a", "20l": "a", "87": 0, "68l": "d", "28l": "a", "63": 0, "countrylet": "ROM", "48": 100, "49": 100, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 53, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 100, "78": 0, "q59bl": "a", "51": 67, "q60b": 0, "q57b": 0, "65": 0, "33l": "a", "q58b": 100, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 60, "obi_yer": 90, "105l": "a", "106l": "a"}, "name": "Romania", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 28, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 57.5455, "26l": "a", "67l": "a", "115l": "c", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 8.25, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 0, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 0, "29": 0, "5l": "a", "obi_ar": 28.4286, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 95.875, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "d", "17": 33, "pbs": "PW", "61": 33, "34l": "d", "54": 67, "57": 67, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "b", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 33, "114": 100, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 100, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 55, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 33, "103": 67, "100": 100, "101": 67, "106": 67, "59l": "b", "104": 33, "105": 0, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 67, "36": 100, "35": 100, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 55, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 49, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "a", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 100, "96l": "d", "102l": "c", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 54.569, "q97bl": null, "17l": "c", "countryid": 70, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": 33, "45l": "d", "57l": "b", "91": 33, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 100, "97": 100, "62l": "c", "11": 0, "10": 67, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 46.9895, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 8, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Romania", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 47, "roundobi_yer": 7, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "c", "77l": "b", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "ROM", "48": 33, "49": 33, "46": 100, "47": 0, "44": 100, "45": 0, "42": 33, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 58, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 33, "72": 100, "71": 67, "70": 100, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 6.7, "105l": "b", "106l": "b"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 28, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 33.3333, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 28.4286, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 100, "obi_iyr": 20.875, "13l": "c", "120": 0, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "a", "39l": "c", "58": 0, "q56bl": "a", "81l": "a", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 63.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "a", "83": 67, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 72, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 100, "101": 67, "106": 67, "59l": "b", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "a", "q97b": 33, "83l": "b", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 23, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "a", "6": 100, "96l": "d", "102l": "c", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 72.0909, "q97bl": "c", "17l": "c", "countryid": 70, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 58.6848, "roundobi_iyr": 21, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Romania", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 59, "roundobi_yer": 80, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 67, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "a", "63": 0, "countrylet": "ROM", "48": 100, "49": 100, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 33, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": "a", "51": 33, "q60b": 0, "q57b": 0, "65": 0, "33l": "a", "q58b": 100, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 63, "obi_yer": 80.1, "105l": "b", "106l": "b"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 50, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 58.3333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 50, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 100, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "a", "120": 0, "121": 0, "122": 33, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "c", "q58bl": "a", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 50, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "a", "123l": "e", "83": 67, "80": 67, "81": 100, "119": 33, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 73, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 100, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 67, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 0, "36": 100, "35": 100, "34": 100, "q64bl": "c", "59": 100, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "b", "grade_leg": "Moderate", "16l": "b", "37l": "d", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 13, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "b", "6": 100, "96l": "d", "102l": "b", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 72.7273, "q97bl": "c", "17l": "b", "countryid": 70, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 100, "122l": "c", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 66.3261, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Romania", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 66, "roundobi_yer": 74, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 67, "82": 100, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "a", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "ROM", "48": 100, "49": 100, "46": 100, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 58, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 100, "78": 0, "q59bl": "a", "51": 33, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 100, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 50, "obi_yer": 73.5, "105l": "a", "106l": "a"}}, {"alpha2": "RU", "db_2008": {"35l": "c", "72l": "b", "roundobi_ar": 62, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 69.5, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 100, "27": 0, "20": 0, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": 67, "53l": "a", "28": 0, "29": 0, "5l": "a", "obi_ar": 61.8571, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 95.875, "13l": "b", "120": 0, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 100, "pbs": "PW", "61": 67, "34l": "d", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 73.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "b", "51l": "a", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "b", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 100, "36": 100, "35": 33, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "d", "pub_cb": 1, "53": 100, "cb": "HC", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 22, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "c", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 56.3455, "q97bl": "c", "17l": "a", "countryid": 71, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 57.9674, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Russia", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 58, "roundobi_yer": 27, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "RUS", "48": 100, "49": 100, "46": 100, "47": 0, "44": 67, "45": 33, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 0, "78": 100, "q59bl": "d", "51": 100, "q60b": 100, "q57b": 0, "65": 0, "33l": "c", "q58b": 67, "80l": "d", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 73, "obi_yer": 26.7, "105l": "a", "106l": "d"}, "name": "Russia", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "c", "54l": "b", "leg_obi": 84.8182, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 95.875, "13l": "a", "120": 0, "121": 0, "122": 100, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 100, "21l": "a", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "d", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 77.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "d", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 100, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 33, "44l": "a", "123l": "d", "83": 33, "80": 100, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 82, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "a", "31l": "a", "102": 100, "103": 100, "100": 33, "101": 100, "106": 33, "59l": "a", "104": 67, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "a", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 100, "34": 0, "q64bl": null, "59": 100, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 10, "60": 100, "46l": "a", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "a", "107": 100, "118l": "d", "2": 100, "50l": "c", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 82.2069, "q97bl": null, "17l": "a", "countryid": 71, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": 100, "45l": "b", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 100, "97": 100, "62l": "c", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "a", "16": 100, "19": 100, "18": 100, "65l": "a", "obi": 74.0526, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Russia", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 74, "roundobi_yer": 70, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "RUS", "48": 100, "49": 100, "46": 100, "47": 0, "44": 100, "45": 67, "42": 100, "43": 100, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 85, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "c", "60l": "a", "74l": "d", "15l": "a", "79": 100, "78": 100, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 70, "105l": "a", "106l": "c"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 69.5, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 0, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 67, "obi_iyr": 95.875, "13l": "b", "120": 0, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 100, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "b", "81l": "a", "17": 100, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 76.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "b", "123l": "a", "83": 33, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "b", "58l": "a", "76": 0, "33": 33, "32": 0, "31": 0, "30": 100, "37": 100, "36": 100, "35": 67, "34": 0, "q64bl": "d", "59": 67, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "d", "79l": "a", "q97b": 33, "83l": "c", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 21, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "c", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 55.7636, "q97bl": "c", "17l": "a", "countryid": 71, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 100, "65l": "a", "obi": 60.163, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Russia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 60, "roundobi_yer": 57, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 67, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "d", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "RUS", "48": 33, "49": 33, "46": 100, "47": 0, "44": 67, "45": 67, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "a", "79": 100, "78": 0, "q59bl": "e", "51": 33, "q60b": 0, "q57b": 33, "65": 100, "33l": "c", "q58b": 67, "80l": "a", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 77, "obi_yer": 56.7, "105l": "a", "106l": "c"}, "db_2006": {"35l": "c", "72l": "b", "roundobi_ar": 83, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 75.0833, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 67, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "e", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "a", "obi_ar": 83.25, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 87.5, "13l": "b", "120": 67, "121": 0, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 100, "21l": "d", "q58bl": "b", "39l": "d", "58": 100, "q56bl": "a", "81l": "b", "17": 67, "pbs": "PW", "61": 33, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 58.25, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 67, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 34, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": 100, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "c", "11l": "b", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 0, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 67, "33": 33, "32": 0, "31": 0, "30": 0, "37": 0, "36": 100, "35": 33, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "b", "79l": "b", "q97b": 0, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 27, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "d", "86l": "b", "6": 100, "96l": "d", "102l": "a", "88l": "a", "1l": "b", "q79bl": "a", "obi_ebp": 33.9444, "q97bl": "d", "17l": "b", "countryid": 71, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 33, "94": -1, "97": -1, "62l": "b", "11": 67, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 33, "19": 0, "18": 0, "65l": "e", "obi": 47.2527, "roundobi_iyr": 88, "18l": "d", "roundobi_myr": 67, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": null, "country": "Russia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 47, "roundobi_yer": 50, "myr": "PW", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "RUS", "48": 67, "49": 33, "46": 100, "47": 0, "44": 0, "45": 33, "42": 33, "43": 0, "40": 0, "41": -1, "1": 67, "94l": "e", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "b", "roundleg_obi": 75, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 67, "73": 67, "72": 67, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "b", "15l": "a", "79": 67, "78": 100, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 67, "80l": "c", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "b", "q64b": 0, "95l": "c", "roundsai_obi": 58, "obi_yer": 50, "105l": "a", "106l": "d"}}, {"alpha2": "RW", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 50, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 49.9, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 80, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "a", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 72, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.44565, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Rwanda", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "RWA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 50, "obi_yer": 0, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 33, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 52.75, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "a", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.2857, "4": 0, "8": 0, "96": 67, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "b", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 67, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 53.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 67, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 100, "101": 100, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 67, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 81, "60": 67, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "b", "102l": "a", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 72, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 10.8696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Rwanda", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 11, "roundobi_yer": 27, "myr": "IU", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 33, "55l": "d", "ar": "PW", "61l": "b", "77l": "a", "14l": "d", "87l": "c", "89l": "b", "20l": "d", "87": 33, "68l": "d", "28l": "d", "63": 0, "countrylet": "RWA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 53, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "b", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "c", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 53, "obi_yer": 26.6, "105l": "a", "106l": "b"}, "name": "Rwanda", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 14, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 72.8182, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 0, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 67, "122": 67, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "c", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 0, "10l": "d", "24l": "d", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 0, "114": 67, "117": 0, "116": 33, "ebp": "IU", "110": 0, "113": 67, "44l": "d", "123l": "c", "83": 0, "80": 67, "81": 67, "119": 67, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 4, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 33, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 100, "103": 67, "100": 67, "101": 100, "106": 67, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 100, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 90, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "b", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "b", "102l": "a", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 4.03448, "q97bl": null, "17l": "d", "countryid": 72, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": 67, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "b", "95": 0, "94": 67, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "b", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 7.73684, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Rwanda", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 8, "roundobi_yer": 30, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "RWA", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 73, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 30.1, "105l": "a", "106l": "b"}}, {"alpha2": "SA", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "e", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "b", "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 26.7, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 83, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "a", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 74, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.08696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Saudi Arabia", "region": "Middle East & North Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "SAU", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "e", "23l": "d", "q99bl": "e", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "e", "51": 0, "q60b": 33, "q57b": 67, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "e", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 23.4, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 88, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "a", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 74, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.08696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Saudi Arabia", "region": "Middle East & North Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "SAU", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "e", "51": 0, "q60b": 33, "q57b": 33, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Saudi Arabia", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 0, "26l": "d", "67l": "d", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "d", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 58.5, "q63cl": null, "eb": "IU", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 0, "101": 0, "106": 0, "59l": "d", "104": 0, "105": -1, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 97, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "a", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 74, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 1.05263, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "NP", "85l": "d", "111": 0, "q80bl": null, "country": "Saudi Arabia", "region": "Middle East & North Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "SAU", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 0, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 59, "obi_yer": 0, "105l": "c", "106l": "d"}}, {"alpha2": "SN", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 14, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 38.8333, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 33, "12l": "d", "111l": null, "86": 0, "obi_iyr": 16.625, "13l": "d", "120": 0, "121": 0, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 20, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 33, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 78, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 75, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "a", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 2.8913, "roundobi_iyr": 17, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Senegal", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 3, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "a", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 100, "countrylet": "SEN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 0, "q57b": 33, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 20, "obi_yer": 0, "105l": "a", "106l": "b"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 9, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 9.42857, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 20.75, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 23.3, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 33, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 86, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 33, "67": 0, "68": 0, "69": 0, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 75, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 2.88043, "roundobi_iyr": 21, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Senegal", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 3, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "d", "14l": "d", "87l": "c", "89l": "b", "20l": "d", "87": 33, "68l": "d", "28l": "d", "63": 100, "countrylet": "SEN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 33, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 23, "obi_yer": 0, "105l": "a", "106l": "b"}, "name": "Senegal", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 1, "113l": "b", "54l": "d", "leg_obi": 30.3636, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 95.875, "13l": "d", "120": 100, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "HC", "61": 33, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 58.25, "q63cl": null, "eb": "IU", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 67, "44l": "d", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 0, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 0, "103": 0, "100": 33, "101": 0, "106": 67, "59l": "b", "104": 0, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 67, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 89, "60": 100, "46l": "d", "62": 67, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 0, "q97bl": null, "17l": "d", "countryid": 75, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 0, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 10.1789, "roundobi_iyr": 96, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Senegal", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 10, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "d", "ar": "NP", "61l": "c", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "SEN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 30, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 67, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 33, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 58, "obi_yer": 0, "105l": "a", "106l": "b"}}, {"alpha2": "RS", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "a", "54l": "d", "leg_obi": 30.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 67, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 0, "4": 33, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 83.5, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "c", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "b", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "a", "24l": "c", "sai_obi": 23.3, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "c", "123l": "d", "83": 0, "80": 0, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "d", "roundobi_ebp": 56, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "a", "58l": "b", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 67, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 38, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 56.3636, "q97bl": "b", "17l": "a", "countryid": 76, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "a", "comp1012": 1, "99": 0, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 0, "65l": "d", "obi": 45.6739, "roundobi_iyr": 84, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Serbia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 46, "roundobi_yer": 10, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 0, "55l": "b", "ar": "NP", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "d", "20l": "b", "87": 0, "68l": "b", "28l": "b", "63": 100, "countrylet": "SER", "48": 33, "49": 33, "46": 0, "47": 0, "44": 33, "45": 33, "42": 100, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "a", "q58b": 33, "80l": "d", "7l": "b", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 23, "obi_yer": 10, "105l": "a", "106l": "d"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 0, "pub_pbs": 1, "113l": "a", "54l": "c", "leg_obi": 38.9167, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 67, "27": 67, "20": 67, "21": 0, "22": 100, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 67, "29": 100, "5l": "a", "obi_ar": 0, "4": 33, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 33, "12l": "a", "111l": null, "86": 33, "obi_iyr": 79.375, "13l": "a", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "d", "q58bl": "b", "39l": "c", "58": 33, "q56bl": "b", "81l": "c", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "d", "q99b": 33, "108l": "d", "2l": "b", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 77.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 30, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 0, "80": 67, "81": 33, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "b", "51l": "b", "roundobi_ebp": 64, "124l": "e", "pub_ar": 0, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 67, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "a", "58l": "c", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "c", "q97b": 67, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 36, "60": 100, "46l": "c", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 67, "50l": "c", "86l": "c", "6": 67, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 64.2182, "q97bl": "b", "17l": "a", "countryid": 76, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 100, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "c", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 53.6196, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Serbia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 54, "roundobi_yer": 23, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "a", "77l": "b", "14l": "a", "87l": "d", "89l": "b", "20l": "b", "87": 0, "68l": "b", "28l": "b", "63": 100, "countrylet": "SER", "48": 33, "49": 33, "46": 33, "47": 0, "44": 0, "45": 33, "42": 100, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "d", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 33, "78": 0, "q59bl": "c", "51": 67, "q60b": 0, "q57b": 0, "65": 0, "33l": "a", "q58b": 67, "80l": "b", "7l": "b", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "c", "66l": "a", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 30, "obi_yer": 23.3, "105l": "a", "106l": "b"}, "name": "Serbia", "db_2012": {"35l": "b", "72l": "c", "roundobi_ar": 48, "pub_pbs": 0, "113l": "b", "54l": "c", "leg_obi": 48.5455, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 16.75, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 67, "20": 67, "21": 0, "22": 33, "23": 0, "41l": "d", "q56b": null, "53l": "c", "28": 0, "29": 100, "5l": "b", "obi_ar": 47.7143, "4": 33, "8": 33, "96": 67, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 87.625, "13l": "a", "120": 33, "121": 0, "122": 33, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 33, "comp0812": 1, "107l": "b", "q99b": null, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 83.5, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "b", "123l": "d", "83": 0, "80": 67, "81": 33, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 40, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "c", "82l": "d", "11l": "a", "comp0608": 0, "27l": "b", "29l": "a", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 100, "103": 67, "100": 67, "101": 67, "106": 0, "59l": "d", "104": 100, "105": 100, "101l": "b", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 100, "32": 0, "31": 0, "30": 0, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "c", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 61, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 67, "118l": "d", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "b", "102l": "a", "88l": "b", "1l": "b", "q79bl": null, "obi_ebp": 40.2241, "q97bl": null, "17l": "b", "countryid": 76, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": 0, "45l": "b", "57l": "a", "91": 33, "q79b": null, "93": 67, "122l": "c", "95": 0, "94": 67, "97": 0, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 2, "14": 33, "103l": "b", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 38.9579, "roundobi_iyr": 88, "18l": "a", "roundobi_myr": 17, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Serbia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 39, "roundobi_yer": 20, "myr": "HC", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "c", "14l": "c", "87l": "b", "89l": "a", "20l": "b", "87": 67, "68l": "b", "28l": "d", "63": 100, "countrylet": "SER", "48": 33, "49": 33, "46": 67, "47": 0, "44": 67, "45": 67, "42": 67, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 49, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 33, "120l": "c", "75": 67, "74": 0, "73": 0, "72": 33, "71": 67, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "c", "79": 33, "78": 33, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "b", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "c", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 84, "obi_yer": 19.9, "105l": "a", "106l": "d"}}, {"alpha2": "SL", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 43, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 26.6, "26l": "a", "67l": "b", "115l": "b", "30l": "a", "71l": "d", "47l": "e", "90": 100, "109l": "d", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 33, "22": 100, "23": 100, "41l": "b", "q56b": null, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 33, "8": 67, "96": 33, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 41.75, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "c", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "c", "64": 33, "comp0810": 0, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 67, "10l": "a", "24l": "d", "sai_obi": 75, "q63cl": null, "eb": "HC", "115": 67, "114": 67, "117": 33, "116": 33, "ebp": "PW", "110": 0, "113": 33, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 52, "124l": "b", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": null, "8l": "b", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "c", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": -1, "103": 0, "100": 0, "101": 33, "106": 67, "59l": "d", "104": 33, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": -1, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 33, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 60, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 33, "67": 67, "68": 67, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 100, "118l": "d", "2": 33, "50l": "d", "86l": "d", "6": 67, "96l": "c", "102l": "e", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 51.7679, "q97bl": null, "17l": "d", "countryid": 77, "25l": "a", "112": 0, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 0, "99": 33, "98": 0, "45l": "d", "57l": "b", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 33, "97": 33, "62l": "d", "11": 0, "10": 100, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "d", "16": 0, "19": 33, "18": 33, "65l": "d", "obi": 39.4194, "roundobi_iyr": 42, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Sierra Leone", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 39, "roundobi_yer": 10, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "b", "28l": "b", "63": 67, "countrylet": "SLE", "48": 33, "49": 33, "46": 100, "47": -1, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 67, "1": 100, "94l": "c", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 27, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "c", "66l": "c", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 10, "105l": "b", "106l": "b"}, "name": "Sierra Leone"}, {"alpha2": "SK", "db_2012": {"35l": "b", "72l": "a", "roundobi_ar": 43, "pub_pbs": 1, "113l": "c", "54l": "b", "leg_obi": 36.6, "26l": "b", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "b", "90": 100, "109l": "a", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 50, "9l": "a", "24": 100, "25": 67, "26": 67, "27": 100, "20": 100, "21": 67, "22": 0, "23": 100, "41l": "e", "q56b": null, "53l": "c", "28": 67, "29": 67, "5l": "a", "obi_ar": 42.8571, "4": 67, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 91.625, "13l": "a", "120": 67, "121": 0, "122": 33, "123": 100, "124": 100, "125": 0, "76l": "b", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 67, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 67, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 100, "comp0812": 0, "107l": "b", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 33, "113": 33, "44l": "a", "123l": "a", "83": 0, "80": 100, "81": 100, "119": 33, "118": 0, "obi_cat": "Significant", "roundobi_cb": 42, "117l": "d", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 71, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": "c", "98l": "c", "31l": "b", "102": 0, "103": 0, "100": 100, "101": 67, "106": 0, "59l": "c", "104": 33, "105": -1, "101l": "b", "91l": "a", "39": 33, "38": 33, "42l": "b", "58l": "b", "76": 67, "33": 100, "32": 100, "31": 67, "30": 100, "37": 33, "36": 100, "35": 67, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 33, "q60bl": null, "79l": "a", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 41.5, "97l": "c", "year": 2012, "rank": 15, "60": 100, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "d", "107": 67, "118l": "d", "2": 100, "50l": "c", "86l": "a", "6": 100, "96l": "a", "102l": "d", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 70.7719, "q97bl": null, "17l": "b", "countryid": 78, "25l": "b", "112": 33, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": 33, "45l": "c", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "c", "95": 0, "94": 100, "97": 33, "62l": "d", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "d", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 67.0213, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 50, "52l": "a", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Slovakia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 67, "roundobi_yer": 63, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 100, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 100, "countrylet": "SVK", "48": 33, "49": 33, "46": 0, "47": 67, "44": 100, "45": 33, "42": 67, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 37, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 33, "73": 100, "72": 100, "71": 33, "70": 100, "116l": "d", "60l": "a", "74l": "c", "15l": "d", "79": 100, "78": 33, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 63.3, "105l": "c", "106l": "d"}, "db_2010": {"35l": "b", "72l": "a", "roundobi_ar": 29, "pub_pbs": 1, "113l": "c", "54l": "b", "leg_obi": 45.4545, "26l": "b", "67l": "a", "115l": "e", "30l": "b", "71l": "c", "47l": "b", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 41.75, "9l": "a", "24": 0, "25": 0, "26": 67, "27": 100, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "e", "q56b": 33, "53l": "c", "28": 33, "29": 67, "5l": "a", "obi_ar": 28.5714, "4": 67, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.625, "13l": "a", "120": 67, "121": 0, "122": 33, "123": 100, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "d", "q58bl": "e", "39l": "b", "58": 67, "q56bl": "c", "81l": "a", "17": 100, "pbs": "PW", "61": 67, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 100, "comp0812": 0, "107l": "b", "q99b": null, "108l": "d", "2l": "b", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 44.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 66.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "a", "123l": "a", "83": 0, "80": 100, "81": 100, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 55, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "c", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "c", "104": -1, "105": -1, "101l": "b", "91l": "a", "39": 67, "38": 33, "42l": "b", "58l": "b", "76": 67, "33": 100, "32": 0, "31": 67, "30": 0, "37": 33, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 33, "roundobi_pbs": 45, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 0, "q60bl": "d", "79l": "a", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 28, "60": 67, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "c", "86l": "a", "6": 100, "96l": "a", "102l": "d", "88l": "d", "1l": "a", "q79bl": "a", "obi_ebp": 54.9444, "q97bl": "c", "17l": "a", "countryid": 78, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "c", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "d", "obi": 56.7912, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 42, "52l": "a", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Slovakia", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 57, "roundobi_yer": 63, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 100, "55l": "c", "ar": "NP", "61l": "b", "77l": "a", "14l": "a", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "c", "63": 100, "countrylet": "SVK", "48": 33, "49": 33, "46": 0, "47": 67, "44": 100, "45": 33, "42": 67, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 45, "104l": "e", "23l": "b", "q99bl": "e", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 33, "73": 67, "72": 100, "71": 33, "70": 100, "116l": "e", "60l": "b", "74l": "c", "15l": "d", "79": 100, "78": 33, "q59bl": "e", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Strong", "4l": "b", "66l": "a", "119l": "c", "q64b": 100, "95l": "d", "roundsai_obi": 67, "obi_yer": 63.3, "105l": "c", "106l": "d"}, "name": "Slovakia"}, {"alpha2": "SI", "db_2008": {"35l": "b", "72l": "b", "roundobi_ar": 95, "pub_pbs": 1, "113l": "b", "54l": "c", "leg_obi": 75.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "d", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 0, "obi_iyr": 100, "13l": "a", "120": 100, "121": 100, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "a", "q58bl": "e", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 96.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "c", "roundobi_ebp": 65, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 100, "32": 0, "31": 0, "30": 100, "37": 100, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 9, "60": 0, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 64.8545, "q97bl": "b", "17l": "d", "countryid": 79, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 73.5652, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Slovenia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 74, "roundobi_yer": 80, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "SVN", "48": 67, "49": 67, "46": 67, "47": 100, "44": 100, "45": 0, "42": 0, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 0, "85": 100, "73l": "a", "roundleg_obi": 75, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 100, "q57b": 67, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "a", "roundsai_obi": 97, "obi_yer": 80, "105l": "a", "106l": "a"}, "name": "Slovenia", "db_2012": {"35l": "b", "72l": "b", "roundobi_ar": 95, "pub_pbs": 1, "113l": "b", "54l": "b", "leg_obi": 78.8182, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 100, "13l": "d", "120": 100, "121": 100, "122": 100, "123": 100, "124": 100, "125": 100, "76l": "a", "15": 33, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 77.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 67, "44l": "a", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 70, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": "d", "98l": "d", "31l": "b", "102": 100, "103": 100, "100": 67, "101": 100, "106": 100, "59l": "d", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 67, "32": 100, "31": 67, "30": 100, "37": 100, "36": 100, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Strong", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 11, "60": 33, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "a", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 100, "50l": "a", "86l": "d", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 70.1379, "q97bl": null, "17l": "d", "countryid": 79, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 100, "94": 100, "97": 100, "62l": "a", "11": 100, "10": 0, "13": 0, "12": 100, "order_cat": 4, "14": 100, "103l": "a", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 74.0526, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "a", "111": 0, "q80bl": null, "country": "Slovenia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 74, "roundobi_yer": 80, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "SVN", "48": 67, "49": 33, "46": 67, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 79, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 67, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "d", "60l": "c", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 80, "105l": "a", "106l": "a"}, "db_2010": {"35l": "b", "72l": "b", "roundobi_ar": 95, "pub_pbs": 0, "113l": "b", "54l": "c", "leg_obi": 75.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "b", "obi_ar": 95.2857, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 0, "obi_iyr": 100, "13l": "a", "120": 100, "121": 100, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 33, "21l": "a", "q58bl": "e", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 96.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "a", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "b", "51l": "c", "roundobi_ebp": 63, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 100, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "c", "58l": "b", "76": 100, "33": 100, "32": 0, "31": 0, "30": 100, "37": 100, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "c", "37l": "a", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 11, "60": 0, "46l": "b", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 63.0182, "q97bl": "b", "17l": "d", "countryid": 79, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 100, "q79b": 0, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 69.5652, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Slovenia", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 70, "roundobi_yer": 77, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "d", "77l": "c", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "SVN", "48": 67, "49": 33, "46": 67, "47": 100, "44": 100, "45": 0, "42": 33, "43": 67, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 100, "5": 0, "84": 33, "9": 0, "85": 100, "73l": "a", "roundleg_obi": 75, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 33, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 100, "q57b": 67, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "a", "roundsai_obi": 97, "obi_yer": 76.6, "105l": "a", "106l": "a"}, "db_2006": {"35l": "a", "72l": "b", "roundobi_ar": 100, "pub_pbs": 1, "113l": "c", "54l": "b", "leg_obi": 75.1667, "26l": "a", "67l": "a", "115l": "e", "30l": "b", "71l": "a", "47l": "a", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 0, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 95.875, "13l": "a", "120": 67, "121": 67, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "d", "58": 67, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "b", "52": 100, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "d", "24l": "d", "sai_obi": 100, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "a", "123l": "e", "83": 100, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "b", "51l": "a", "roundobi_ebp": 72, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 0, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 67, "101": 100, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 100, "33": 100, "32": 0, "31": 0, "30": 0, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 0, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 5, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "a", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 71.6481, "q97bl": "b", "17l": "d", "countryid": 79, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 67, "93": 100, "122l": "a", "95": 100, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 81.7143, "roundobi_iyr": 96, "18l": "a", "roundobi_myr": 100, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "Slovenia", "region": "Eastern Europe & Central Asia", "48l": "a", "roundobi": 82, "roundobi_yer": 100, "myr": "PW", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "SVN", "48": 100, "49": 67, "46": 67, "47": 100, "44": 100, "45": 0, "42": 0, "43": 100, "40": 0, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 75, "104l": "e", "23l": "d", "q99bl": "b", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "b", "75": 100, "74": 100, "73": 100, "72": 67, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "b", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 67, "65": -1, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "a", "roundsai_obi": 100, "obi_yer": 100, "105l": "a", "106l": "b"}}, {"alpha2": "ZA", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 66.6667, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "a", "90": 100, "109l": "a", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 76.1429, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 91.75, "13l": "b", "120": 100, "121": 33, "122": 67, "123": 0, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "d", "39l": "b", "58": 67, "q56bl": "a", "81l": "b", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 67, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "a", "24l": "a", "sai_obi": 73.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 100, "80": 100, "81": 67, "119": 100, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "d", "51l": "b", "roundobi_ebp": 88, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 0, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": -1, "42l": "b", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 2, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 88.0943, "q97bl": "b", "17l": "b", "countryid": 80, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "b", "91": 100, "q79b": 0, "93": 100, "122l": "b", "95": 33, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "c", "obi": 87.4556, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 100, "52l": "a", "q70b": 100, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "South Africa", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 87, "roundobi_yer": 80, "myr": "PW", "q70bl": "a", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "ZAF", "48": 100, "49": 100, "46": 100, "47": 100, "44": 0, "45": 67, "42": 67, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 67, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 100, "73": 100, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "d", "79": 100, "78": 100, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 100, "65": 33, "33l": "a", "q58b": 0, "80l": "a", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "b", "119l": "a", "q64b": 100, "95l": "c", "roundsai_obi": 73, "obi_yer": 80.1, "105l": "a", "106l": "b"}, "name": "South Africa", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 87.9091, "26l": "a", "67l": "a", "115l": "b", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "c", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 76.1429, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "b", "86": 67, "obi_iyr": 100, "13l": "a", "120": 100, "121": 100, "122": 100, "123": 0, "124": 100, "125": 0, "76l": "a", "15": 33, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "a", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 67, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 100, "113": 100, "44l": "a", "123l": "d", "83": 100, "80": 100, "81": 100, "119": 100, "118": 33, "obi_cat": "Extensive", "roundobi_cb": 58, "117l": "c", "43l": "b", "100l": "a", "51l": "b", "roundobi_ebp": 92, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 33, "109": 33, "112l": "c", "98l": "a", "31l": "a", "102": 100, "103": 100, "100": 100, "101": 100, "106": 67, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 67, "42l": "a", "58l": "a", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 58.25, "97l": "b", "year": 2012, "rank": 2, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "a", "114l": "c", "107": 100, "118l": "c", "2": 100, "50l": "a", "86l": "b", "6": 100, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 92.4211, "q97bl": null, "17l": "a", "countryid": 80, "25l": "a", "112": 33, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": 100, "45l": "c", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 33, "94": 0, "97": 67, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "a", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 90.0851, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 100, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 67, "q80bl": null, "country": "South Africa", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 90, "roundobi_yer": 83, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "ZAF", "48": 100, "49": 100, "46": 100, "47": 100, "44": 100, "45": 33, "42": 100, "43": 67, "40": 67, "41": -1, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 88, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "c", "60l": "a", "74l": "a", "15l": "c", "79": 100, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 67, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": null, "95l": "c", "roundsai_obi": 75, "obi_yer": 83.4, "105l": "a", "106l": "b"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 71, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 86.1667, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "a", "120": 100, "121": 67, "122": 33, "123": 33, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "d", "39l": "b", "58": 100, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "a", "24l": "a", "sai_obi": 73.3, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "c", "83": 100, "80": 100, "81": 67, "119": 100, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "b", "100l": "a", "51l": "b", "roundobi_ebp": 93, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 67, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 33, "42l": "a", "58l": "a", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 1, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "a", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 92.6296, "q97bl": "c", "17l": "a", "countryid": 80, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "c", "95": 33, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "c", "obi": 92.3407, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 100, "52l": "a", "q70b": 67, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "South Africa", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 92, "roundobi_yer": 90, "myr": "PW", "q70bl": "b", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "ZAF", "48": 100, "49": 100, "46": 100, "47": 100, "44": 67, "45": 67, "42": 100, "43": 67, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 86, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "b", "79": 100, "78": 100, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 100, "65": 33, "33l": "a", "q58b": 0, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "c", "roundsai_obi": 73, "obi_yer": 90.1, "105l": "a", "106l": "b"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 80.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 100, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": 0, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "a", "120": 100, "121": 67, "122": 67, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 83.375, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "b", "123l": "e", "83": 100, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 83, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 0, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 0, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "b", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "a", "q97b": 33, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 1, "53": 33, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 4, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "a", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "b", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 83.0545, "q97bl": "c", "17l": "b", "countryid": 80, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 100, "93": 100, "122l": "b", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 85.5326, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 100, "52l": "a", "q70b": 67, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "South Africa", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 86, "roundobi_yer": 93, "myr": "PW", "q70bl": "b", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "ZAF", "48": 100, "49": 100, "46": 100, "47": 100, "44": 67, "45": 67, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 67, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 100, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "d", "79": 100, "78": 100, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 33, "65": -1, "33l": "a", "q58b": 0, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "d", "roundsai_obi": 83, "obi_yer": 93.4, "105l": "a", "106l": "a"}}, {"alpha2": "KR", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 69.4167, "26l": "b", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "a", "90": 0, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 67, "27": 100, "20": 33, "21": 100, "22": 0, "23": 0, "41l": "b", "q56b": 100, "53l": "a", "28": 100, "29": 0, "5l": "a", "obi_ar": 76.2857, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "b", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 20.75, "13l": "a", "120": 100, "121": 33, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "b", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 100, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "a", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "b", "24l": "c", "sai_obi": 70.1, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 100, "80": 100, "81": 67, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "c", "51l": "a", "roundobi_ebp": 65, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "d", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "a", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 0, "31": 0, "30": 0, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "d", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 12, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 33, "67": 0, "68": 33, "69": 0, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 65.463, "q97bl": "b", "17l": "d", "countryid": 81, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "a", "95": 0, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 65.956, "roundobi_iyr": 21, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 33, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "South Korea", "region": "East Asia & Pacific", "48l": "a", "roundobi": 66, "roundobi_yer": 87, "myr": "NP", "q70bl": "c", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "c", "28l": "a", "63": 67, "countrylet": "KOR", "48": 100, "49": 100, "46": 100, "47": 100, "44": -1, "45": 0, "42": 0, "43": 0, "40": 67, "41": 67, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 69, "104l": "e", "23l": "d", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 33, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Strong", "4l": "a", "66l": "c", "119l": "b", "q64b": 67, "95l": "d", "roundsai_obi": 70, "obi_yer": 86.7, "105l": "a", "106l": "c"}, "name": "South Korea", "db_2012": {"35l": "a", "72l": "b", "roundobi_ar": 91, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 78.8182, "26l": "a", "67l": "d", "115l": "a", "30l": "a", "71l": "d", "47l": "a", "90": 0, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": null, "53l": "a", "28": 100, "29": 0, "5l": "a", "obi_ar": 90.5714, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 20.75, "13l": "b", "120": 100, "121": 67, "122": 100, "123": 100, "124": 100, "125": 100, "76l": "d", "15": 33, "21l": "a", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "a", "17": 67, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "b", "q99b": null, "108l": "b", "2l": "a", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "b", "24l": "d", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 100, "114": 100, "117": 100, "116": 67, "ebp": "PW", "110": 100, "113": 100, "44l": "e", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 100, "118": 67, "obi_cat": "Significant", "roundobi_cb": 50, "117l": "a", "43l": "d", "100l": "c", "51l": "a", "roundobi_ebp": 83, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "b", "64l": "c", "q63bl": null, "8l": "a", "82l": "b", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "a", "108": 67, "109": 67, "112l": "c", "98l": "b", "31l": "d", "102": 100, "103": 67, "100": 33, "101": 100, "106": 33, "59l": "a", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 100, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 0, "30": 100, "37": 67, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "d", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 50, "97l": "a", "year": 2012, "rank": 8, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 33, "69": 0, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "a", "110l": "a", "114l": "a", "107": 67, "118l": "b", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 83.3571, "q97bl": null, "17l": "b", "countryid": 81, "25l": "a", "112": 33, "38l": "a", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 67, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 67, "122l": "a", "95": 67, "94": 100, "97": 100, "62l": "a", "11": 100, "10": 67, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "b", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 75.2903, "roundobi_iyr": 21, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "South Korea", "region": "East Asia & Pacific", "48l": "a", "roundobi": 75, "roundobi_yer": 93, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "c", "28l": "a", "63": 100, "countrylet": "KOR", "48": 100, "49": 100, "46": 100, "47": 100, "44": -1, "45": 100, "42": 0, "43": 0, "40": 67, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 79, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "b", "60l": "a", "74l": "d", "15l": "c", "79": 100, "78": 100, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "a", "q64b": null, "95l": "b", "roundsai_obi": 67, "obi_yer": 93.4, "105l": "a", "106l": "c"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 91, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 72.1667, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 0, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 67, "21": 100, "22": 0, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 0, "5l": "a", "obi_ar": 90.5714, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "b", "q59b": null, "12l": "b", "111l": null, "86": 100, "obi_iyr": 25, "13l": "b", "120": 100, "121": 67, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "b", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "a", "24l": "d", "sai_obi": 76.8, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 100, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "c", "51l": "a", "roundobi_ebp": 74, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "b", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "a", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "d", "102": 100, "103": -1, "100": 33, "101": 100, "106": 33, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 67, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 0, "30": 100, "37": 67, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 100, "83l": "a", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "d", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 10, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 100, "69": 0, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 74.2642, "q97bl": "a", "17l": "d", "countryid": 81, "25l": "a", "112": -1, "38l": "b", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 0, "93": 67, "122l": "a", "95": 67, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 67, "12": 0, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 71.1444, "roundobi_iyr": 25, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "South Korea", "region": "East Asia & Pacific", "48l": "a", "roundobi": 71, "roundobi_yer": 83, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "b", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "KOR", "48": 100, "49": 67, "46": 100, "47": 100, "44": -1, "45": 0, "42": 0, "43": 0, "40": 67, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 72, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 100, "65": 0, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "a", "q64b": 67, "95l": "b", "roundsai_obi": 77, "obi_yer": 83.3, "105l": "a", "106l": "c"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 92, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 77.8333, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": -1, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 67, "9l": "a", "24": 33, "25": 100, "26": 67, "27": 100, "20": 33, "21": 100, "22": 0, "23": 100, "41l": "a", "q56b": 100, "53l": "b", "28": 100, "29": 0, "5l": "a", "obi_ar": 91.75, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 20.75, "13l": "a", "120": 100, "121": 67, "122": 67, "123": -1, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "a", "q58bl": "e", "39l": "a", "58": 100, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 67, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "c", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "b", "2l": "a", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 100, "10l": "b", "24l": "c", "sai_obi": 71.5714, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "e", "83": 100, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "d", "51l": "a", "roundobi_ebp": 76, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": 100, "92": 100, "84l": "d", "90l": null, "64l": "c", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "a", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "c", "102": 100, "103": -1, "100": 0, "101": 100, "106": 33, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": 0, "42l": "c", "58l": "a", "76": 67, "33": 100, "32": 100, "31": 33, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 100, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "a", "22l": "d", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 11, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 33, "67": 0, "68": 0, "69": 0, "63l": "b", "121l": "b", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 75.9259, "q97bl": "b", "17l": "d", "countryid": 81, "25l": "a", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "b", "91": 100, "q79b": 67, "93": 100, "122l": "b", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 67, "13": 100, "12": 100, "order_cat": 4, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "e", "obi": 72.9231, "roundobi_iyr": 21, "18l": "a", "roundobi_myr": 67, "52l": "c", "q70b": 100, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "South Korea", "region": "East Asia & Pacific", "48l": "a", "roundobi": 73, "roundobi_yer": 87, "myr": "PW", "q70bl": "a", "q65bl": "b", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "b", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "d", "28l": "a", "63": 67, "countrylet": "KOR", "48": 100, "49": 100, "46": 100, "47": 100, "44": -1, "45": 0, "42": 33, "43": 0, "40": 100, "41": 100, "1": 100, "94l": "e", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 100, "73l": "b", "roundleg_obi": 78, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "a", "75": 67, "74": 67, "73": 67, "72": 100, "71": 0, "70": 0, "116l": "e", "60l": "a", "74l": "b", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 33, "65": -1, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "a", "q64b": 67, "95l": "d", "roundsai_obi": 72, "obi_yer": 86.7, "105l": "a", "106l": "c"}}, {"alpha2": "ES", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 33, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 40, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 67, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 33.2857, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 67, "obi_iyr": 83.25, "13l": "b", "120": 0, "121": 0, "122": 100, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "b", "58": 100, "q56bl": null, "81l": "c", "17": 67, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 67, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 33, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "a", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "e", "123l": "d", "83": 33, "80": 100, "81": 33, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "d", "43l": "b", "100l": "c", "51l": "b", "roundobi_ebp": 79, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "b", "31l": "a", "102": 0, "103": 0, "100": 33, "101": 100, "106": 0, "59l": "c", "104": 67, "105": -1, "101l": "a", "91l": "a", "39": 67, "38": 0, "42l": "b", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "b", "37l": "a", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 19, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 100, "50l": "a", "86l": "b", "6": 67, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 79.25, "q97bl": null, "17l": "b", "countryid": 82, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 67, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 100, "10": 0, "13": 67, "12": 100, "order_cat": 4, "14": 67, "103l": "d", "16": 67, "19": 100, "18": 100, "65l": "a", "obi": 63.4839, "roundobi_iyr": 83, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Spain", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 63, "roundobi_yer": 47, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "b", "87l": "c", "89l": "b", "20l": "b", "87": 33, "68l": "a", "28l": "a", "63": 100, "countrylet": "ESP", "48": 100, "49": 0, "46": 0, "47": 100, "44": -1, "45": 100, "42": 67, "43": 67, "40": 67, "41": -1, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 40, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 46.7, "105l": "c", "106l": "d"}, "db_2010": {"35l": "a", "72l": "b", "roundobi_ar": 43, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 44.4167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "a", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 67, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "b", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 67, "obi_iyr": 54, "13l": "a", "120": 0, "121": 0, "122": 100, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "e", "39l": "b", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "IU", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 67, "comp0812": 0, "107l": "a", "q99b": 67, "108l": "b", "2l": "a", "64": 33, "comp0810": 0, "69l": "c", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "e", "123l": "d", "83": 33, "80": 67, "81": 100, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "a", "100l": "c", "51l": "b", "roundobi_ebp": 77, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 0, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 0, "42l": "a", "58l": "a", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "d", "79l": "b", "q97b": 67, "83l": "c", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 17, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 33, "67": 100, "68": 33, "69": 33, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "b", "6": 67, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 77.3962, "q97bl": "b", "17l": "a", "countryid": 82, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "c", "obi": 62.9778, "roundobi_iyr": 54, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Spain", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 63, "roundobi_yer": 43, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "a", "87l": "c", "89l": "b", "20l": "b", "87": 33, "68l": "c", "28l": "a", "63": 100, "countrylet": "ESP", "48": 100, "49": 0, "46": 0, "47": 100, "44": -1, "45": 33, "42": 100, "43": 100, "40": 67, "41": -1, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 44, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "e", "51": 67, "q60b": 0, "q57b": 100, "65": 33, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 50, "obi_yer": 43.4, "105l": "a", "106l": "d"}, "name": "Spain"}, {"alpha2": "LK", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 48, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 41.6667, "26l": "b", "67l": "c", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 50, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 100, "21": 100, "22": 33, "23": 100, "41l": "d", "q56b": 100, "53l": "b", "28": 100, "29": 33, "5l": "a", "obi_ar": 47.7143, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "a", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 45.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "b", "58": 67, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 67, "34l": "a", "54": 67, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "b", "52": 100, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "a", "64": 33, "comp0810": 1, "69l": "c", "obi_pbs": 55.6667, "comp0610": 1, "comp0612": 1, "56": 33, "55": 67, "10l": "a", "24l": "a", "sai_obi": 43.4, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "c", "83": 0, "80": 33, "81": 67, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "b", "roundobi_ebp": 75, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "c", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 67, "38": 0, "42l": "a", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 56, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "a", "37l": "c", "22l": "c", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 13, "60": 100, "46l": "a", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 33, "67": 33, "68": 33, "69": 33, "63l": "c", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 74.5636, "q97bl": "c", "17l": "a", "countryid": 83, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 0, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "c", "obi": 64.1304, "roundobi_iyr": 46, "18l": "a", "roundobi_myr": 50, "52l": "a", "q70b": 33, "89": 100, "iyr": "HC", "85l": "c", "111": -1, "q80bl": "e", "country": "Sri Lanka", "region": "South Asia", "48l": "a", "roundobi": 64, "roundobi_yer": 43, "myr": "PW", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 67, "55l": "b", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "c", "28l": "a", "63": 33, "countrylet": "LKA", "48": 100, "49": 100, "46": 100, "47": 0, "44": 67, "45": 33, "42": 100, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 42, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 67, "74": 33, "73": 100, "72": 33, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "c", "15l": "d", "79": 33, "78": 100, "q59bl": "d", "51": 67, "q60b": 67, "q57b": 67, "65": 33, "33l": "b", "q58b": 0, "80l": "c", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 43, "obi_yer": 43.3, "105l": "a", "106l": "d"}, "name": "Sri Lanka", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 46.7, "26l": "a", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "c", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "b", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 67, "10l": "d", "24l": "a", "sai_obi": 50, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 62, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 0, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "d", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 33, "103": 0, "100": 100, "101": 67, "106": 67, "59l": "c", "104": 100, "105": -1, "101l": "b", "91l": "a", "39": 33, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 100, "35": 0, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "b", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 53, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 67, "118l": "d", "2": 0, "50l": "c", "86l": "d", "6": 100, "96l": "c", "102l": "c", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 62.0517, "q97bl": null, "17l": "c", "countryid": 83, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": 0, "45l": "b", "57l": "d", "91": 100, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 67, "97": 0, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "d", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 45.9474, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "IU", "85l": "b", "111": 0, "q80bl": null, "country": "Sri Lanka", "region": "South Asia", "48l": "b", "roundobi": 46, "roundobi_yer": 43, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "a", "89l": "b", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "LKA", "48": 67, "49": 33, "46": 100, "47": 0, "44": 100, "45": 67, "42": 67, "43": 67, "40": 33, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 47, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 43.3, "105l": "c", "106l": "b"}, "db_2010": {"35l": "d", "72l": "b", "roundobi_ar": 52, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 80.6667, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "b", "47l": "d", "90": 100, "109l": "a", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 66.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 52.4286, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 62.75, "13l": "b", "120": 67, "121": 67, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "b", "15": 0, "21l": "a", "q58bl": "d", "39l": "a", "58": 100, "q56bl": "a", "81l": "a", "17": 0, "pbs": "PW", "61": 67, "34l": "a", "54": 0, "57": 100, "40l": "b", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "d", "64": 67, "comp0810": 1, "69l": "c", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "a", "sai_obi": 56.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "a", "83": 0, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "a", "100l": "a", "51l": "d", "roundobi_ebp": 66, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "b", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "a", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 100, "38": 0, "42l": "d", "58l": "a", "76": 67, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 0, "34": 100, "q64bl": "a", "59": 100, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "a", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 13, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 67, "67": 67, "68": 67, "69": 33, "63l": "b", "121l": "b", "75l": "c", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 66.0909, "q97bl": "b", "17l": "d", "countryid": 83, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 100, "q79b": 100, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "b", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "c", "obi": 67.0978, "roundobi_iyr": 63, "18l": "a", "roundobi_myr": 67, "52l": "d", "q70b": 100, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": "e", "country": "Sri Lanka", "region": "South Asia", "48l": "b", "roundobi": 67, "roundobi_yer": 70, "myr": "PW", "q70bl": "a", "q65bl": "a", "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "b", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "b", "28l": "a", "63": 67, "countrylet": "LKA", "48": 67, "49": 67, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 100, "40": 67, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 33, "74": 67, "73": 100, "72": 67, "71": 67, "70": 67, "116l": "e", "60l": "a", "74l": "b", "15l": "d", "79": 100, "78": 100, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "b", "q58b": 0, "80l": "a", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "b", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 57, "obi_yer": 70.1, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 58, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 36.3636, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 16.75, "9l": "a", "24": 100, "25": 100, "26": 67, "27": 100, "20": 0, "21": 0, "22": 33, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 33, "5l": "a", "obi_ar": 58.25, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "b", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 91.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "a", "81l": "c", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 67, "10l": "d", "24l": "a", "sai_obi": 20.75, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 33, "81": 33, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "d", "roundobi_ebp": 53, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 1, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 0, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "a", "29l": "c", "92l": "d", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "c", "104": -1, "105": -1, "101l": "a", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 0, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 33, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "a", "37l": "c", "22l": "c", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 26, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 53.3273, "q97bl": "c", "17l": "a", "countryid": 83, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 100, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 0, "12": 100, "order_cat": 3, "14": 100, "103l": "e", "16": 100, "19": 0, "18": 100, "65l": "e", "obi": 47.4457, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 17, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Sri Lanka", "region": "South Asia", "48l": "b", "roundobi": 47, "roundobi_yer": 20, "myr": "PW", "q70bl": "c", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "b", "ar": "HC", "61l": "d", "77l": "a", "14l": "a", "87l": "d", "89l": "a", "20l": "d", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "LKA", "48": 67, "49": 67, "46": 100, "47": 0, "44": 0, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "b", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 67, "72": 33, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "b", "79": 33, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "c", "q58b": 0, "80l": "c", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 21, "obi_yer": 19.9, "105l": "c", "106l": "d"}}, {"alpha2": "SD", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 19.4167, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "b", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 13.3, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 84, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 84, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 0, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.358696, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Sudan", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "SDN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 13, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 43, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 19.4167, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 42.8571, "4": 0, "8": 0, "96": 67, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "b", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.4, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 67, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 0, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "c", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 82, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "b", "102l": "d", "88l": "a", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 84, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 0, "99": 33, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 7.97826, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Sudan", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 8, "roundobi_yer": 13, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "d", "ar": "HC", "61l": "d", "77l": "a", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "d", "28l": "d", "63": 0, "countrylet": "SDN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 33, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 33, "obi_yer": 13.3, "105l": "b", "106l": "d"}, "name": "Sudan"}, {"alpha2": "SE", "db_2008": {"35l": "b", "72l": "a", "roundobi_ar": 91, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 75, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 90.5714, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "e", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 33, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "b", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 83.4, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 78, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 67, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": -1, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 67, "31": 100, "30": 100, "37": 67, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 7, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "b", "q79bl": "a", "obi_ebp": 77.6154, "q97bl": "b", "17l": "a", "countryid": 85, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "c", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 67, "94": 0, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 33, "65l": "a", "obi": 77.9438, "roundobi_iyr": 92, "18l": "c", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Sweden", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 78, "roundobi_yer": 80, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "b", "28l": "a", "63": 100, "countrylet": "SWE", "48": 100, "49": 67, "46": 67, "47": 100, "44": -1, "45": 67, "42": 0, "43": 0, "40": 0, "41": -1, "1": 67, "94l": "d", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 75, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 100, "65": 100, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 2, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "b", "roundsai_obi": 83, "obi_yer": 80, "105l": "a", "106l": "c"}, "name": "Sweden", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 91, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 33, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "b", "86": 100, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 0, "122": 100, "123": 100, "124": 100, "125": 0, "76l": "d", "15": 67, "21l": "a", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 67, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 67, "comp0812": 1, "107l": "b", "q99b": null, "108l": "a", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 100, "116": 100, "ebp": "PW", "110": 100, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 100, "81": 100, "119": 33, "118": 0, "obi_cat": "Extensive", "roundobi_cb": 92, "117l": "a", "43l": "c", "100l": "a", "51l": "b", "roundobi_ebp": 85, "124l": "a", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 100, "109": 100, "112l": "a", "98l": "a", "31l": "a", "102": 100, "103": 67, "100": 100, "101": 100, "106": 100, "59l": "b", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": -1, "42l": "d", "58l": "a", "76": 0, "33": 100, "32": 67, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "a", "q97b": null, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 91.75, "97l": "a", "year": 2012, "rank": 4, "60": 100, "46l": "e", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "a", "114l": "c", "107": 67, "118l": "d", "2": 67, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "b", "q79bl": null, "obi_ebp": 85.2407, "q97bl": null, "17l": "a", "countryid": 85, "25l": "a", "112": 100, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": 100, "45l": "a", "57l": "b", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 100, "94": -1, "97": 100, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "b", "16": 100, "19": 67, "18": 67, "65l": "a", "obi": 84.2967, "roundobi_iyr": 92, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "a", "111": 67, "q80bl": null, "country": "Sweden", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 84, "roundobi_yer": 87, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "b", "28l": "a", "63": 100, "countrylet": "SWE", "48": 100, "49": 100, "46": -1, "47": 100, "44": -1, "45": 100, "42": 0, "43": 33, "40": 67, "41": -1, "1": 67, "94l": "e", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 91, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "a", "60l": "a", "74l": "d", "15l": "b", "79": 100, "78": 100, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 4, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 86.7, "105l": "a", "106l": "a"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 1, "113l": "a", "54l": "b", "leg_obi": 80.5833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 33, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 67, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 67, "21l": "a", "q58bl": "e", "39l": "c", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 67, "57": 67, "40l": "b", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "b", "q99b": 100, "108l": "a", "2l": "b", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "a", "24l": "a", "sai_obi": 96.3333, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "c", "100l": "a", "51l": "b", "roundobi_ebp": 83, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "a", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "b", "108": 100, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": -1, "42l": "c", "58l": "a", "76": 0, "33": 100, "32": 67, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 6, "60": 100, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "b", "q79bl": "a", "obi_ebp": 83.3654, "q97bl": "b", "17l": "a", "countryid": 85, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "b", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 100, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 67, "18": 33, "65l": "a", "obi": 83.1798, "roundobi_iyr": 92, "18l": "c", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": "e", "country": "Sweden", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 83, "roundobi_yer": 87, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "b", "28l": "a", "63": 100, "countrylet": "SWE", "48": 100, "49": 67, "46": 67, "47": 100, "44": -1, "45": 100, "42": 33, "43": 33, "40": 67, "41": -1, "1": 67, "94l": "e", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 100, "73l": "d", "roundleg_obi": 81, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "b", "79": 100, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 100, "65": 100, "33l": "a", "q58b": null, "80l": "a", "7l": "a", "yearid": 3, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 100, "95l": "a", "roundsai_obi": 96, "obi_yer": 86.7, "105l": "a", "106l": "a"}, "db_2006": {"35l": "b", "72l": "a", "roundobi_ar": 100, "pub_pbs": 1, "113l": "a", "54l": "a", "leg_obi": 75, "26l": "c", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 100, "25": 100, "26": 33, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 100, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.75, "13l": "a", "120": 33, "121": 0, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "e", "39l": "d", "58": 0, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 79.125, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "e", "83": 67, "80": 100, "81": 100, "119": 100, "118": -1, "obi_cat": "Significant", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "b", "51l": "b", "roundobi_ebp": 78, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "a", "q63b": 100, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 0, "38": -1, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 67, "31": 100, "30": 100, "37": 67, "36": 100, "35": 67, "34": 100, "q64bl": "a", "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 100, "q60bl": "a", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "b", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 8, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 100, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 100, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 78.25, "q97bl": "b", "17l": "a", "countryid": 85, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 33, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "e", "obi": 76.0674, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "b", "111": -1, "q80bl": null, "country": "Sweden", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 76, "roundobi_yer": 83, "myr": "NP", "q70bl": "d", "q65bl": "a", "obi_eb": 100, "82": 100, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "b", "28l": "a", "63": 100, "countrylet": "SWE", "48": 67, "49": 67, "46": 100, "47": 100, "44": -1, "45": 67, "42": 0, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 0, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 75, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 100, "78": 100, "q59bl": "e", "51": 67, "q60b": 100, "q57b": 100, "65": -1, "33l": "b", "q58b": null, "80l": "a", "7l": "a", "yearid": 1, "32l": "b", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": 100, "95l": "c", "roundsai_obi": 79, "obi_yer": 83.4, "105l": "a", "106l": "c"}}, {"alpha2": "ST", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 16.6667, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "c", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 30, "q63cl": "b", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 81, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 73, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0.728261, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "S\u00e3o Tom\u00e9 e Pr\u00edncipe", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 1, "roundobi_yer": 0, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "STP", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 33, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 13.9167, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 30, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "d", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 94, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "d", "17l": "d", "countryid": 73, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 0, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "S\u00e3o Tom\u00e9 e Pr\u00edncipe", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 0, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "STP", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 14, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": 0, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "S\u00e3o Tom\u00e9 e Pr\u00edncipe", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 51.4545, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 100, "26": 100, "27": 67, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 67, "29": 100, "5l": "b", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 71, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "d", "q99b": null, "108l": "d", "2l": "b", "64": 67, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 41.5, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 37, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "b", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "b", "29l": "a", "92l": "c", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "b", "102": 100, "103": 67, "100": 100, "101": 0, "106": 0, "59l": "d", "104": 33, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 100, "31": 67, "30": 100, "37": 0, "36": 33, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 72, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 0, "66": 100, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 0, "118l": "d", "2": 67, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 37.3276, "q97bl": null, "17l": "c", "countryid": 73, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": 33, "45l": "d", "57l": "c", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 33, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "b", "16": 33, "19": 0, "18": 0, "65l": "b", "obi": 28.7684, "roundobi_iyr": 71, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "S\u00e3o Tom\u00e9 e Pr\u00edncipe", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 29, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 0, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "b", "63": 67, "countrylet": "STP", "48": 33, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 51, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 67, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 42, "obi_yer": 0, "105l": "a", "106l": "d"}}, {"alpha2": "TJ", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 14, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 39.4545, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 0, "96": 100, "reg_mena": 0, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 67, "obi_iyr": 79.25, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 67, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 0, "10l": "d", "24l": "d", "sai_obi": 91.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 33, "116": 0, "ebp": "IU", "110": 0, "113": 33, "44l": "d", "123l": "d", "83": 33, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 3, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "b", "q63bl": null, "8l": "d", "82l": "c", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 67, "103": 67, "100": 0, "101": 100, "106": 33, "59l": "d", "104": 67, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 79, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 100, "66": 67, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 0, "50l": "d", "86l": "b", "6": 0, "96l": "a", "102l": "b", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 3.44828, "q97bl": null, "17l": "d", "countryid": 86, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 0, "99": 67, "98": 33, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 67, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "b", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 17.2105, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "Tajikistan", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 17, "roundobi_yer": 60, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "d", "ar": "IU", "61l": "d", "77l": "a", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 100, "countrylet": "TJK", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": null, "5": 0, "84": 100, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 39, "104l": "b", "23l": "b", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "b", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 92, "obi_yer": 60.1, "105l": "b", "106l": "c"}, "name": "Tajikistan"}, {"alpha2": "TZ", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 24.9167, "26l": "a", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 0, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 0, "29": 100, "5l": "b", "obi_ar": 38.1429, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "b", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.375, "13l": "c", "120": 33, "121": 33, "122": 0, "123": 67, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "d", "17": 67, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "c", "64": 100, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "a", "sai_obi": 30.1, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "b", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 41, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "d", "29l": "a", "92l": "b", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 0, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 0, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 52, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 67, "63l": "b", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "b", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 40.5818, "q97bl": "c", "17l": "b", "countryid": 87, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 33, "19": 33, "18": 100, "65l": "a", "obi": 35.5217, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Tanzania", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 36, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "d", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "d", "63": 67, "countrylet": "TZA", "48": 33, "49": 67, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 100, "33l": "c", "q58b": 0, "80l": "d", "7l": "b", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 0, "105l": "b", "106l": "d"}, "name": "Tanzania", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 43, "pub_pbs": 1, "113l": "d", "54l": "b", "leg_obi": 43.3, "26l": "a", "67l": "b", "115l": "c", "30l": "a", "71l": "b", "47l": "d", "90": 0, "109l": "b", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 33, "29": 100, "5l": "b", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "b", "86": 0, "obi_iyr": 83.5, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 67, "pbs": "PW", "61": 33, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "d", "24l": "a", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "HC", "110": 67, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 59, "117l": "c", "43l": "d", "100l": "d", "51l": "b", "roundobi_ebp": 52, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 67, "112l": "c", "98l": "b", "31l": "b", "102": 33, "103": 33, "100": 0, "101": 33, "106": 100, "59l": "b", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 100, "31": 67, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 56, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 1, "53": 67, "cb": "PW", "obi_cb": 58.5, "97l": "d", "year": 2012, "rank": 51, "60": 67, "46l": "b", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "c", "107": 100, "118l": "d", "2": 0, "50l": "c", "86l": "d", "6": 0, "96l": "c", "102l": "c", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 52.3276, "q97bl": null, "17l": "b", "countryid": 87, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": 67, "45l": "c", "57l": "d", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 0, "94": 67, "97": 0, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "c", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 46.7053, "roundobi_iyr": 84, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 67, "q80bl": null, "country": "Tanzania", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 47, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "c", "77l": "d", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "c", "63": 67, "countrylet": "TZA", "48": 67, "49": 33, "46": 67, "47": 0, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 43, "104l": "e", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 67, "70": 67, "116l": "c", "60l": "b", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 0, "105l": "b", "106l": "a"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 48, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 24.9167, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 100, "41l": "d", "q56b": 67, "53l": "b", "28": 100, "29": 0, "5l": "b", "obi_ar": 47.7143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 67, "pbs": "IU", "61": 0, "34l": "a", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 67, "10l": "d", "24l": "a", "sai_obi": 50.1, "q63cl": "d", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "b", "roundobi_ebp": 56, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 33, "103": -1, "100": 0, "101": 0, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 67, "36": 67, "35": 0, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "d", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 50, "60": 0, "46l": "b", "62": 0, "pub_eb": 0, "56l": "b", "roundobi_eb": 0, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "b", "86l": "d", "6": 0, "96l": "b", "102l": "c", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 55.8364, "q97bl": "c", "17l": "b", "countryid": 87, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "d", "obi": 44.6304, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Tanzania", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 45, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "d", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 67, "countrylet": "TZA", "48": 67, "49": 33, "46": 67, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 50, "obi_yer": 0, "105l": "a", "106l": "a"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 58, "pub_pbs": 1, "113l": "c", "54l": "d", "leg_obi": 13.9167, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "c", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 58.25, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "c", "58": 67, "q56bl": "a", "81l": "d", "17": 67, "pbs": "PW", "61": 67, "34l": "a", "54": 0, "57": 33, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.6667, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "a", "sai_obi": 20.75, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "b", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "c", "roundobi_ebp": 57, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 100, "92": 33, "84l": "d", "90l": "d", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "c", "70l": "b", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 0, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 56, "reg_ssa": 1, "pub_myr": 0, "q80b": 33, "88": 100, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 25, "60": 33, "46l": "b", "62": 67, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 56.9455, "q97bl": "c", "17l": "b", "countryid": 87, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "b", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "e", "obi": 47.8261, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Tanzania", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 48, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "HC", "61l": "b", "77l": "d", "14l": "b", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "a", "28l": "a", "63": 67, "countrylet": "TZA", "48": 33, "49": 33, "46": 67, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 33, "41": 33, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 14, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "c", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": -1, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 21, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "TH", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 9, "pub_pbs": 0, "113l": "c", "54l": "c", "leg_obi": 50.0833, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 9.42857, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 75, "13l": "c", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "c", "2l": "a", "64": 67, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "d", "24l": "d", "sai_obi": 53.2, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "c", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 50, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 0, "34": 0, "q64bl": "d", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 45, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 33, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 49.6182, "q97bl": "c", "17l": "d", "countryid": 88, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "a", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 33, "94": 100, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 0, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "c", "obi": 39.8043, "roundobi_iyr": 75, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 33, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Thailand", "region": "East Asia & Pacific", "48l": "c", "roundobi": 40, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "d", "14l": "c", "87l": "d", "89l": "d", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "THA", "48": 33, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 100, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 67, "q57b": 0, "65": 33, "33l": "c", "q58b": 0, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "b", "q64b": 0, "95l": "c", "roundsai_obi": 53, "obi_yer": 0, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "b", "roundobi_ar": 14, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 49.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 33, "25": 67, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 67, "53l": "c", "28": 100, "29": 67, "5l": "a", "obi_ar": 14.1429, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "b", "111l": null, "86": 0, "obi_iyr": 41.5, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "d", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": "d", "52": 33, "comp0812": 1, "107l": "b", "q99b": 33, "108l": "d", "2l": "a", "64": 33, "comp0810": 1, "69l": "c", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "c", "sai_obi": 56.6, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "c", "123l": "a", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 55, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "b", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "c", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 53, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 33, "67": 100, "68": 33, "69": 33, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "b", "86l": "d", "6": 100, "96l": "d", "102l": "a", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 55.4815, "q97bl": "c", "17l": "c", "countryid": 88, "25l": "b", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "a", "36l": "c", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 33, "94": 100, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 0, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 41.8876, "roundobi_iyr": 42, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Thailand", "region": "East Asia & Pacific", "48l": "b", "roundobi": 42, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "d", "14l": "c", "87l": "c", "89l": "b", "20l": "a", "87": 33, "68l": "c", "28l": "a", "63": 100, "countrylet": "THA", "48": 67, "49": 33, "46": 0, "47": 0, "44": 33, "45": 0, "42": 33, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 50, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 100, "q57b": 0, "65": 0, "33l": "c", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "c", "119l": "c", "q64b": 33, "95l": "c", "roundsai_obi": 57, "obi_yer": 0, "105l": "a", "106l": "d"}, "name": "Thailand", "db_2012": {"35l": "c", "72l": "a", "roundobi_ar": 5, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 69.6364, "26l": "d", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "b", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 100, "26": 0, "27": 0, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 100, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 100, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "b", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 67, "55": 33, "10l": "d", "24l": "d", "sai_obi": 83.25, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 33, "116": 0, "ebp": "PW", "110": 67, "113": 33, "44l": "a", "123l": "c", "83": 0, "80": 0, "81": 0, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 50, "117l": "c", "43l": "c", "100l": "a", "51l": "c", "roundobi_ebp": 40, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "a", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 67, "112l": "b", "98l": "c", "31l": "a", "102": 100, "103": 100, "100": 100, "101": 100, "106": 0, "59l": "c", "104": 100, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "d", "37l": "c", "22l": "d", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 50.25, "97l": "c", "year": 2012, "rank": 66, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "b", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "c", "107": 67, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 40.2069, "q97bl": null, "17l": "d", "countryid": 88, "25l": "a", "112": 67, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 100, "98": 33, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 33, "94": 100, "97": 33, "62l": "d", "11": 100, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 0, "103l": "a", "16": 0, "19": 100, "18": 100, "65l": "c", "obi": 36.4842, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Thailand", "region": "East Asia & Pacific", "48l": "b", "roundobi": 36, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 100, "countrylet": "THA", "48": 67, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 33, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 33, "33l": "d", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "d", "66l": "a", "119l": "c", "q64b": null, "95l": "c", "roundsai_obi": 83, "obi_yer": 0, "105l": "a", "106l": "d"}}, {"alpha2": "TL", "db_2012": {"35l": "c", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 48.4545, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "e", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 67, "25": 100, "26": 100, "27": 67, "20": 100, "21": 33, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "b", "28": 67, "29": 0, "5l": "a", "obi_ar": 0, "4": 33, "8": 67, "96": 0, "reg_mena": 0, "49l": "d", "93l": "e", "q59b": null, "12l": "c", "111l": "d", "86": 0, "obi_iyr": 89, "13l": "e", "120": 67, "121": 67, "122": 67, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 33, "21l": "c", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "e", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "b", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 48, "124l": "b", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 67, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "d", "11l": "e", "comp0608": 0, "27l": "b", "29l": "d", "92l": "a", "70l": "e", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "b", "102": 0, "103": 0, "100": 100, "101": 67, "106": 0, "59l": "c", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": -1, "32": 100, "31": 67, "30": 100, "37": 0, "36": -1, "35": 33, "34": -1, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "d", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 67, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 0, "50l": "a", "86l": "d", "6": 67, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 48.1154, "q97bl": null, "17l": "d", "countryid": 89, "25l": "a", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 0, "6l": "b", "36l": "e", "comp1012": 1, "99": 67, "98": 33, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": -1, "122l": "b", "95": 0, "94": -1, "97": 67, "62l": "d", "11": -1, "10": 67, "13": -1, "12": -1, "order_cat": 2, "14": 67, "103l": "d", "16": 33, "19": 0, "18": 100, "65l": "a", "obi": 35.6667, "roundobi_iyr": 89, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Timor-Leste", "region": "East Asia & Pacific", "48l": "d", "roundobi": 36, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "d", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "b", "63": 67, "countrylet": "TMP", "48": 0, "49": 0, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 48, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": -1, "70": -1, "116l": "d", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 100, "33l": "e", "q58b": null, "80l": "d", "7l": "b", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "c", "66l": "a", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 100, "obi_yer": 0, "105l": "a", "106l": "d"}, "db_2010": {"35l": "e", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "b", "leg_obi": 27.75, "26l": "a", "67l": "b", "115l": "e", "30l": "b", "71l": "e", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 100, "27": 100, "20": 100, "21": 100, "22": 0, "23": 0, "41l": "d", "q56b": 33, "53l": "b", "28": 100, "29": 0, "5l": "a", "obi_ar": 0, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "c", "111l": null, "86": 0, "obi_iyr": 50.1667, "13l": "e", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "d", "39l": "c", "58": 0, "q56bl": "c", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "e", "54": 67, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 100, "comp0812": 0, "107l": "d", "q99b": 0, "108l": "d", "2l": "d", "64": 67, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 67, "10l": "a", "24l": "d", "sai_obi": 0, "q63cl": "c", "eb": "IU", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "a", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "b", "roundobi_ebp": 50, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 0, "84l": "d", "90l": "b", "64l": "b", "q63bl": "e", "8l": "a", "82l": "d", "11l": "e", "comp0608": 0, "27l": "a", "29l": "d", "92l": "d", "70l": "e", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 0, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "d", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": -1, "32": 0, "31": 0, "30": 0, "37": 33, "36": 100, "35": -1, "34": -1, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "d", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 62, "60": 0, "46l": "d", "62": 0, "pub_eb": 0, "56l": "d", "roundobi_eb": 0, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 0, "118l": "e", "2": 0, "50l": "c", "86l": "d", "6": 100, "96l": "d", "102l": "d", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 50.3265, "q97bl": "c", "17l": "c", "countryid": 89, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "a", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": -1, "10": 100, "13": -1, "12": -1, "order_cat": 2, "14": 67, "103l": "e", "16": 33, "19": 0, "18": 100, "65l": "c", "obi": 34.131, "roundobi_iyr": 50, "18l": "a", "roundobi_myr": 0, "52l": "a", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Timor-Leste", "region": "East Asia & Pacific", "48l": "a", "roundobi": 34, "roundobi_yer": 10, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 0, "82": 0, "55l": "b", "ar": "NP", "61l": "d", "77l": "a", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "TMP", "48": 100, "49": 33, "46": 0, "47": 0, "44": 100, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 28, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": -1, "70": -1, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 67, "q60b": 67, "q57b": 33, "65": 33, "33l": "e", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "b", "q64b": 0, "95l": "d", "roundsai_obi": 0, "obi_yer": 10, "105l": "a", "106l": "d"}, "name": "Timor-Leste"}, {"alpha2": "TT", "db_2008": {"35l": "d", "72l": "d", "roundobi_ar": 48, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 19.4167, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 1, "obi_myr": 0, "9l": "d", "24": 67, "25": 100, "26": 67, "27": 67, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "c", "q56b": 33, "53l": "d", "28": 67, "29": 33, "5l": null, "obi_ar": 47.5714, "4": 67, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "d", "39l": "c", "58": 0, "q56bl": "c", "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "b", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "c", "52": 0, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "b", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 67, "10l": "d", "24l": "b", "sai_obi": 30.1, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 48, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 67, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "d", "64l": "d", "q63bl": "e", "8l": "b", "82l": "d", "11l": "d", "comp0608": 0, "27l": "b", "29l": "c", "92l": "b", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 100, "101l": "c", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 0, "34": 67, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 56, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 67, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 47.8909, "q97bl": "c", "17l": "c", "countryid": 90, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "c", "57l": "d", "91": 100, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 67, "65l": "d", "obi": 32.6087, "roundobi_iyr": 0, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Trinidad and Tobago", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 33, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "d", "14l": "c", "87l": "c", "89l": "a", "20l": "a", "87": 33, "68l": "d", "28l": "b", "63": 0, "countrylet": "TOT", "48": 33, "49": 33, "46": 100, "47": 0, "44": 0, "45": 33, "42": 33, "43": 0, "40": 33, "41": 33, "1": 100, "94l": "b", "q63c": 67, "5": 67, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 19, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 0, "q57b": 33, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "b", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 30, "obi_yer": 0, "105l": "a", "106l": "d"}, "db_2010": {"35l": "c", "72l": "d", "roundobi_ar": 38, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 38.8333, "26l": "b", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 67, "27": 100, "20": 33, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 38.1429, "4": 33, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "b", "120": 0, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "c", "q58bl": "d", "39l": "c", "58": 0, "q56bl": "c", "81l": "d", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "c", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "d", "24l": "b", "sai_obi": 43.4, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "c", "100l": "a", "51l": "c", "roundobi_ebp": 49, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 100, "3l": "c", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "c", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 67, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 33, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 65, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 48.9818, "q97bl": "c", "17l": "c", "countryid": 90, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "c", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "c", "95": 33, "94": 67, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 67, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 32.913, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "NP", "85l": "d", "111": -1, "q80bl": "e", "country": "Trinidad and Tobago", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 33, "roundobi_yer": 0, "myr": "IU", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "d", "14l": "c", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "TOT", "48": 33, "49": 33, "46": 33, "47": 0, "44": 0, "45": 33, "42": 33, "43": 33, "40": 33, "41": 0, "1": 100, "94l": "b", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "c", "66l": "d", "119l": "d", "q64b": 0, "95l": "c", "roundsai_obi": 43, "obi_yer": 0, "105l": "a", "106l": "a"}, "name": "Trinidad and Tobago", "db_2012": {"35l": "c", "72l": "d", "roundobi_ar": 52, "pub_pbs": 0, "113l": "d", "54l": "c", "leg_obi": 69.5455, "26l": "b", "67l": "d", "115l": "c", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "c", "yer": "NP", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 67, "27": 100, "20": 100, "21": 67, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 52.4286, "4": 67, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "b", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "a", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "b", "q58bl": null, "39l": "c", "58": 0, "q56bl": null, "81l": "d", "17": 33, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 0, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 0, "55": 33, "10l": "d", "24l": "b", "sai_obi": 58.5, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 0, "116": 100, "ebp": "PW", "110": 0, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "c", "100l": "a", "51l": "b", "roundobi_ebp": 55, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "a", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "a", "102": 33, "103": 33, "100": 100, "101": 33, "106": 100, "59l": "c", "104": 100, "105": 100, "101l": "c", "91l": "a", "39": 33, "38": 0, "42l": "c", "58l": "d", "76": 0, "33": 67, "32": 100, "31": 100, "30": 100, "37": 67, "36": 67, "35": 33, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 63, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "d", "roundobi_eb": 33, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 55.1552, "q97bl": null, "17l": "c", "countryid": 90, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 33, "98": 33, "45l": "c", "57l": "d", "91": 100, "q79b": null, "93": 67, "122l": "d", "95": 33, "94": 67, "97": 100, "62l": "d", "11": 0, "10": 0, "13": 100, "12": 100, "order_cat": 2, "14": 33, "103l": "c", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 37.8842, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "c", "q70b": null, "89": 100, "iyr": "NP", "85l": "d", "111": 0, "q80bl": null, "country": "Trinidad and Tobago", "region": "Latin America & Caribbean", "48l": "b", "roundobi": 38, "roundobi_yer": 0, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "d", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "TOT", "48": 67, "49": 33, "46": 33, "47": 0, "44": 67, "45": 33, "42": 33, "43": 33, "40": 33, "41": 0, "1": 100, "94l": "b", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 70, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "a", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 67, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "d", "q64b": null, "95l": "c", "roundsai_obi": 59, "obi_yer": 0, "105l": "a", "106l": "a"}}, {"alpha2": "TN", "db_2012": {"35l": "d", "72l": "b", "roundobi_ar": 9, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 21.1818, "26l": "d", "67l": "a", "115l": "d", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 9.42857, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "c", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 91.625, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "c", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 33.25, "q63cl": null, "eb": "PW", "115": 0, "114": 33, "117": 0, "116": 67, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "a", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "c", "31l": "d", "102": 0, "103": 0, "100": 33, "101": 100, "106": 0, "59l": "d", "104": 0, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 85, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 33, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 91, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 0, "99": 67, "98": 33, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 11.2211, "roundobi_iyr": 92, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Tunisia", "region": "Middle East & North Africa", "48l": "d", "roundobi": 11, "roundobi_yer": 7, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "b", "14l": "d", "87l": "c", "89l": "b", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 100, "countrylet": "TUN", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 21, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 67, "71": 33, "70": 100, "116l": "b", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 33, "obi_yer": 6.7, "105l": "b", "106l": "d"}, "name": "Tunisia"}, {"alpha2": "TR", "db_2008": {"35l": "c", "72l": "a", "roundobi_ar": 14, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 25, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 14.2857, "4": 0, "8": 67, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 95.875, "13l": "d", "120": 33, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "c", "58": 33, "q56bl": "c", "81l": "d", "17": 0, "pbs": "PW", "61": 33, "34l": "a", "54": 0, "57": 67, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "b", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 55.3333, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "a", "24l": "c", "sai_obi": 33.3, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 48, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "b", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 55, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 42, "60": 100, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 67, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 67, "50l": "d", "86l": "d", "6": 100, "96l": "d", "102l": "d", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 48.4909, "q97bl": "c", "17l": "d", "countryid": 92, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "c", "57l": "b", "91": 0, "q79b": 0, "93": 33, "122l": "c", "95": 0, "94": 33, "97": -1, "62l": "c", "11": 0, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 0, "19": 67, "18": 67, "65l": "b", "obi": 43.4783, "roundobi_iyr": 96, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Turkey", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 43, "roundobi_yer": 3, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "c", "77l": "c", "14l": "c", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "b", "28l": "a", "63": 100, "countrylet": "TUR", "48": 67, "49": 33, "46": 0, "47": 0, "44": 0, "45": 33, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 33, "5": 0, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 67, "33l": "a", "q58b": 33, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 33, "obi_yer": 3.3, "105l": "b", "106l": "d"}, "name": "Turkey", "db_2012": {"35l": "b", "72l": "a", "roundobi_ar": 43, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 27.2727, "26l": "a", "67l": "a", "115l": "d", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 0, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 100, "13l": "b", "120": 33, "121": 0, "122": 33, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "c", "58": 100, "q56bl": null, "81l": "b", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 100, "40l": "b", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 0, "10l": "d", "24l": "c", "sai_obi": 50, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 33, "44l": "d", "123l": "d", "83": 67, "80": 67, "81": 67, "119": 33, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 53, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 33, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 0, "103": 67, "100": 33, "101": 67, "106": 0, "59l": "d", "104": 67, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 67, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "b", "grade_leg": "Weak", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 42, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 33, "118l": "d", "2": 100, "50l": "c", "86l": "d", "6": 33, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 52.8621, "q97bl": null, "17l": "d", "countryid": 92, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "c", "36l": "c", "comp1012": 1, "99": 67, "98": 0, "45l": "c", "57l": "a", "91": 0, "q79b": null, "93": 33, "122l": "c", "95": 0, "94": 0, "97": 33, "62l": "d", "11": 67, "10": 0, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "b", "16": 0, "19": 100, "18": 67, "65l": "d", "obi": 49.8421, "roundobi_iyr": 100, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "Turkey", "region": "Eastern Europe & Central Asia", "48l": "d", "roundobi": 50, "roundobi_yer": 50, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "TUR", "48": 0, "49": 33, "46": 0, "47": 0, "44": 0, "45": 33, "42": 0, "43": 0, "40": 67, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 100, "84": 67, "9": 100, "85": 67, "73l": "d", "roundleg_obi": 27, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "c", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 50.2, "105l": "b", "106l": "d"}, "db_2010": {"35l": "c", "72l": "e", "roundobi_ar": 29, "pub_pbs": 1, "113l": "c", "54l": "c", "leg_obi": 25, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "c", "28": 100, "29": 100, "5l": "a", "obi_ar": 28.5714, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 67, "12l": "a", "111l": null, "86": 0, "obi_iyr": 100, "13l": "d", "120": 33, "121": 0, "122": 33, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "c", "58": 33, "q56bl": "c", "81l": "b", "17": 0, "pbs": "PW", "61": 67, "34l": "a", "54": 33, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "c", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 36.6, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 33, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 57, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "b", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 0, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "c", "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "b", "79l": "b", "q97b": 67, "83l": "c", "grade_leg": "Weak", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 29, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 100, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 56.9455, "q97bl": "b", "17l": "d", "countryid": 92, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "c", "57l": "a", "91": 0, "q79b": 0, "93": 33, "122l": "c", "95": 0, "94": 33, "97": -1, "62l": "b", "11": 67, "10": 100, "13": 0, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 0, "19": 100, "18": 67, "65l": "b", "obi": 56.5109, "roundobi_iyr": 100, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": 0, "89": 0, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Turkey", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 57, "roundobi_yer": 53, "myr": "IU", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 33, "55l": "c", "ar": "PW", "61l": "b", "77l": "a", "14l": "b", "87l": "b", "89l": "b", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "TUR", "48": 67, "49": 33, "46": 0, "47": 0, "44": 0, "45": 33, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": 100, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": -1, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 100, "q59bl": "b", "51": 33, "q60b": 67, "q57b": 0, "65": 67, "33l": "d", "q58b": 67, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 37, "obi_yer": 53.3, "105l": "b", "106l": "d"}, "db_2006": {"35l": "c", "72l": "a", "roundobi_ar": 25, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 36.1667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 33, "25": 100, "26": 67, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 25, "4": 0, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 100, "13l": "d", "120": 100, "121": 0, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "c", "58": 100, "q56bl": "c", "81l": "d", "17": 0, "pbs": "PW", "61": 100, "34l": "a", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 77.6667, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "d", "24l": "c", "sai_obi": 37.5, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 44, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 0, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "d", "comp0608": 1, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 67, "101": 67, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 33, "38": 0, "42l": "a", "58l": "a", "76": 0, "33": 100, "32": 100, "31": 100, "30": 100, "37": 67, "36": 33, "35": 33, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": 67, "88": 33, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 35, "60": 100, "46l": "d", "62": 33, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "c", "1l": "b", "q79bl": "b", "obi_ebp": 43.6182, "q97bl": "c", "17l": "d", "countryid": 92, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "c", "91": 0, "q79b": 0, "93": 33, "122l": "a", "95": 0, "94": -1, "97": -1, "62l": "c", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 0, "19": 100, "18": 67, "65l": "e", "obi": 41.6522, "roundobi_iyr": 100, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": null, "country": "Turkey", "region": "Eastern Europe & Central Asia", "48l": "c", "roundobi": 42, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "c", "ar": "PW", "61l": "a", "77l": "d", "14l": "c", "87l": "b", "89l": "d", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "TUR", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 100, "43": 0, "40": 0, "41": 0, "1": 67, "94l": "e", "q63c": 67, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "c", "reg_eca": 1, "reg_we": 0, "77": 0, "120l": "a", "75": 0, "74": 0, "73": 0, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "a", "q58b": 33, "80l": "d", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "c", "q64b": 0, "95l": "d", "roundsai_obi": 38, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "UG", "db_2008": {"35l": "c", "72l": "d", "roundobi_ar": 43, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 33.1667, "26l": "b", "67l": "a", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "c", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 67, "27": 67, "20": 33, "21": 33, "22": 100, "23": 0, "41l": "c", "q56b": 67, "53l": "c", "28": 67, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 33, "12l": "a", "111l": null, "86": 0, "obi_iyr": 25, "13l": "b", "120": 33, "121": 33, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "c", "q58bl": "c", "39l": "d", "58": 33, "q56bl": "b", "81l": "b", "17": 33, "pbs": "HC", "61": 100, "34l": "a", "54": 33, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "c", "q99b": 33, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "c", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "c", "24l": "d", "sai_obi": 29.9, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "c", "83": 67, "80": 67, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 33, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 58, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 67, "84l": "b", "90l": "d", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "b", "29l": "a", "92l": "b", "70l": "d", "19l": "b", "108": 0, "109": 33, "112l": null, "98l": "e", "31l": "c", "102": 33, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "a", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 67, "32": 100, "31": 33, "30": 100, "37": 0, "36": 67, "35": 33, "34": 100, "q64bl": "c", "59": 100, "roundobi_pbs": 89, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "b", "grade_leg": "Weak", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 1, "53": 33, "cb": "HC", "obi_cb": 33, "97l": "e", "year": 2008, "rank": 32, "60": 67, "46l": "b", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 67, "69": 33, "63l": "d", "121l": "c", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 67, "96l": "c", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 58.1818, "q97bl": "c", "17l": "c", "countryid": 93, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "d", "57l": "c", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "a", "11": 100, "10": 33, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 67, "65l": "d", "obi": 51.087, "roundobi_iyr": 25, "18l": "b", "roundobi_myr": 0, "52l": "b", "q70b": 33, "89": 100, "iyr": "IU", "85l": "c", "111": -1, "q80bl": "e", "country": "Uganda", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 51, "roundobi_yer": 43, "myr": "IU", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "b", "63": 0, "countrylet": "UGA", "48": 100, "49": 33, "46": 67, "47": 0, "44": 67, "45": 0, "42": 67, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": 33, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "b", "74l": "d", "15l": "c", "79": 33, "78": 0, "q59bl": "c", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 33, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 30, "obi_yer": 43.4, "105l": "b", "106l": "d"}, "name": "Uganda", "db_2012": {"35l": "b", "72l": "c", "roundobi_ar": 67, "pub_pbs": 1, "113l": "d", "54l": "a", "leg_obi": 72.8182, "26l": "a", "67l": "b", "115l": "d", "30l": "a", "71l": "d", "47l": "b", "90": 100, "109l": "b", "99l": "c", "yer": "HC", "reg_lac": 0, "obi_myr": 41.5, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 67, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "c", "q56b": null, "53l": "a", "28": 67, "29": 67, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "a", "93l": "c", "q59b": null, "12l": "a", "111l": "c", "86": 0, "obi_iyr": 29.125, "13l": "b", "120": 33, "121": 33, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "c", "15": 0, "21l": "a", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "a", "17": 67, "pbs": "HC", "61": 100, "34l": "a", "54": 100, "57": 100, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "b", "q99b": null, "108l": "b", "2l": "a", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 100, "10l": "b", "24l": "c", "sai_obi": 66.5, "q63cl": null, "eb": "HC", "115": 0, "114": 33, "117": 33, "116": 33, "ebp": "HC", "110": 67, "113": 0, "44l": "a", "123l": "d", "83": 100, "80": 33, "81": 100, "119": 67, "118": 0, "obi_cat": "Significant", "roundobi_cb": 50, "117l": "c", "43l": "d", "100l": "d", "51l": "a", "roundobi_ebp": 72, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 67, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "c", "q63bl": null, "8l": "a", "82l": "b", "11l": "c", "comp0608": 1, "27l": "b", "29l": "b", "92l": "a", "70l": "d", "19l": "b", "108": 67, "109": 67, "112l": "c", "98l": "a", "31l": "b", "102": 100, "103": 100, "100": 0, "101": 100, "106": 67, "59l": "b", "104": 100, "105": 100, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "b", "76": 33, "33": 67, "32": 100, "31": 67, "30": 100, "37": 67, "36": 67, "35": 67, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 89, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": null, "79l": "a", "q97b": null, "83l": "a", "grade_leg": "Strong", "16l": "b", "37l": "b", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 50, "97l": "b", "year": 2012, "rank": 18, "60": 67, "46l": "d", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 33, "69": 67, "63l": "c", "121l": "c", "75l": "a", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "b", "114l": "c", "107": 67, "118l": "d", "2": 100, "50l": "a", "86l": "d", "6": 100, "96l": "a", "102l": "a", "88l": "b", "1l": "a", "q79bl": null, "obi_ebp": 71.9138, "q97bl": null, "17l": "b", "countryid": 93, "25l": "a", "112": 33, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": 100, "45l": "d", "57l": "a", "91": 33, "q79b": null, "93": 33, "122l": "d", "95": 33, "94": 33, "97": 67, "62l": "a", "11": 33, "10": 67, "13": 67, "12": 100, "order_cat": 4, "14": 33, "103l": "a", "16": 67, "19": 67, "18": 100, "65l": "d", "obi": 64.9579, "roundobi_iyr": 29, "18l": "a", "roundobi_myr": 42, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 33, "q80bl": null, "country": "Uganda", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 65, "roundobi_yer": 57, "myr": "HC", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 67, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "c", "28l": "b", "63": 33, "countrylet": "UGA", "48": 100, "49": 100, "46": 0, "47": 67, "44": 100, "45": 0, "42": 67, "43": 0, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": null, "5": 100, "84": 67, "9": 100, "85": 0, "73l": "c", "roundleg_obi": 73, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 100, "74": 0, "73": 33, "72": 33, "71": 0, "70": 0, "116l": "c", "60l": "b", "74l": "d", "15l": "d", "79": 100, "78": 0, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "c", "7l": "b", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "b", "q64b": null, "95l": "c", "roundsai_obi": 67, "obi_yer": 56.7, "105l": "a", "106l": "b"}, "db_2010": {"35l": "c", "72l": "c", "roundobi_ar": 43, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 38.8333, "26l": "b", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "c", "90": 0, "109l": "b", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 25, "9l": "a", "24": 67, "25": 100, "26": 67, "27": 67, "20": 33, "21": 67, "22": 100, "23": 100, "41l": "c", "q56b": 67, "53l": "c", "28": 67, "29": 100, "5l": "a", "obi_ar": 42.8571, "4": 67, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 41.625, "13l": "b", "120": 67, "121": 33, "122": 0, "123": 33, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "b", "81l": "b", "17": 33, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 67, "comp0812": 1, "107l": "c", "q99b": 67, "108l": "d", "2l": "a", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "b", "24l": "b", "sai_obi": 33.2, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "b", "123l": "c", "83": 33, "80": 33, "81": 67, "119": 33, "118": -1, "obi_cat": "Some", "roundobi_cb": 67, "117l": "e", "43l": "c", "100l": "c", "51l": "c", "roundobi_ebp": 62, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "c", "90l": "b", "64l": "c", "q63bl": "e", "8l": "a", "82l": "d", "11l": "b", "comp0608": 1, "27l": "b", "29l": "a", "92l": "a", "70l": "c", "19l": "b", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "b", "102": 33, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "b", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 0, "42l": "b", "58l": "c", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 0, "36": 67, "35": 33, "34": 100, "q64bl": "b", "59": 67, "roundobi_pbs": 89, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "c", "q97b": 33, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 1, "53": 33, "cb": "HC", "obi_cb": 67, "97l": "e", "year": 2010, "rank": 32, "60": 67, "46l": "c", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 33, "67": 67, "68": 67, "69": 0, "63l": "b", "121l": "c", "75l": "b", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 67, "96l": "c", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 61.8545, "q97bl": "c", "17l": "c", "countryid": 93, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "b", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "a", "11": 67, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 33, "19": 67, "18": 67, "65l": "c", "obi": 55.4457, "roundobi_iyr": 42, "18l": "b", "roundobi_myr": 25, "52l": "b", "q70b": 33, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Uganda", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 55, "roundobi_yer": 33, "myr": "PW", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "a", "14l": "b", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "b", "63": 67, "countrylet": "UGA", "48": 67, "49": 33, "46": 33, "47": 33, "44": 67, "45": 33, "42": 67, "43": 33, "40": 0, "41": 33, "1": 100, "94l": "c", "q63c": 67, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "c", "roundleg_obi": 39, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "b", "75": 67, "74": 0, "73": 33, "72": 33, "71": 33, "70": 33, "116l": "e", "60l": "b", "74l": "d", "15l": "c", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 33, "33l": "b", "q58b": 0, "80l": "c", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Weak", "4l": "b", "66l": "c", "119l": "c", "q64b": 67, "95l": "d", "roundsai_obi": 33, "obi_yer": 33.2, "105l": "b", "106l": "d"}, "db_2006": {"35l": "b", "72l": "d", "roundobi_ar": 50, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 47.25, "26l": "d", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 0, "109l": "b", "99l": "a", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 0, "27": 0, "20": 0, "21": 0, "22": 100, "23": 0, "41l": "a", "q56b": 67, "53l": "d", "28": 67, "29": 100, "5l": "a", "obi_ar": 50.25, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 67, "121": 33, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "b", "81l": "d", "17": 0, "pbs": "HC", "61": 100, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 77.6667, "comp0610": 1, "comp0612": 1, "56": 0, "55": 67, "10l": "c", "24l": "d", "sai_obi": 25, "q63cl": "c", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 100, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 67, "117l": "e", "43l": "d", "100l": "c", "51l": "d", "roundobi_ebp": 43, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": 33, "92": 67, "84l": "d", "90l": "d", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 1, "27l": "d", "29l": "a", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 67, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 33, "101": 67, "106": 0, "59l": "a", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 100, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 100, "37": 0, "36": 67, "35": 67, "34": 100, "q64bl": "d", "59": 100, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 0, "q80b": 67, "88": 67, "q60bl": "a", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "d", "22l": "a", "pub_cb": 1, "53": 0, "cb": "HC", "obi_cb": 67, "97l": "e", "year": 2006, "rank": 43, "60": 33, "46l": "e", "62": 100, "pub_eb": 1, "56l": "d", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "c", "75l": "d", "pub_iyr": 0, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 100, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 43.2407, "q97bl": "c", "17l": "d", "countryid": 93, "25l": "a", "112": -1, "38l": "a", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "b", "comp1012": 1, "99": 100, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 67, "93": 33, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 33, "13": 0, "12": 100, "order_cat": 2, "14": 100, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 31.9011, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 67, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Uganda", "region": "Sub-Saharan Africa", "48l": "a", "roundobi": 32, "roundobi_yer": 0, "myr": "NP", "q70bl": "c", "q65bl": "d", "obi_eb": 67, "82": 0, "55l": "b", "ar": "PW", "61l": "a", "77l": "d", "14l": "a", "87l": "b", "89l": "b", "20l": "d", "87": 67, "68l": "d", "28l": "b", "63": 0, "countrylet": "UGA", "48": 100, "49": 0, "46": -1, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 100, "1": 100, "94l": "e", "q63c": 33, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 47, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "c", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": -1, "33l": "b", "q58b": 0, "80l": "d", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Weak", "4l": "a", "66l": "d", "119l": "a", "q64b": 0, "95l": "d", "roundsai_obi": 25, "obi_yer": 0, "105l": "b", "106l": "d"}}, {"alpha2": "UA", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 38.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "b", "47l": "c", "90": 100, "109l": "a", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 100, "26": 100, "27": 100, "20": 0, "21": 67, "22": 100, "23": 0, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 54.25, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "b", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "a", "81l": "b", "17": 100, "pbs": "PW", "61": 33, "34l": "d", "54": 0, "57": 100, "40l": "c", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 73.4, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "a", "83": 0, "80": 0, "81": 67, "119": 0, "118": -1, "obi_cat": "Some", "roundobi_cb": 100, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 60, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "d", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "a", "104": -1, "105": 0, "101l": "b", "91l": "a", "39": 0, "38": 67, "42l": "d", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 0, "q64bl": "d", "59": 100, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "a", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 1, "53": 0, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 26, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 0, "67": 100, "68": 67, "69": 100, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "d", "86l": "c", "6": 67, "96l": "b", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 59.8704, "q97bl": "d", "17l": "a", "countryid": 94, "25l": "a", "112": -1, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "c", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "b", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 3, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 33, "65l": "d", "obi": 55.3187, "roundobi_iyr": 54, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Ukraine", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 55, "roundobi_yer": 27, "myr": "IU", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "b", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "b", "28l": "a", "63": 0, "countrylet": "UKR", "48": 67, "49": 33, "46": 100, "47": 33, "44": 0, "45": 33, "42": 0, "43": 0, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 0, "78": 0, "q59bl": "b", "51": 0, "q60b": 100, "q57b": 0, "65": 0, "33l": "c", "q58b": 67, "80l": "d", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 73, "obi_yer": 26.6, "105l": "b", "106l": "d"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "a", "54l": "d", "leg_obi": 36.1667, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 100, "26": 100, "27": 100, "20": 0, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": 67, "12l": "a", "111l": null, "86": 33, "obi_iyr": 91.625, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 33, "21l": "a", "q58bl": "b", "39l": "d", "58": 67, "q56bl": "a", "81l": "b", "17": 67, "pbs": "PW", "61": 33, "34l": "a", "54": 0, "57": 100, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 100, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "c", "sai_obi": 63.4, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 67, "119": 0, "118": -1, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 66, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "b", "comp0608": 0, "27l": "a", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 0, "101l": "b", "91l": "a", "39": 0, "38": 33, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 100, "30": 100, "37": 33, "36": 100, "35": 100, "34": 100, "q64bl": "d", "59": 67, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": "c", "79l": "d", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 19, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "c", "86l": "c", "6": 67, "96l": "b", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 66.0556, "q97bl": "d", "17l": "b", "countryid": 94, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "b", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "d", "95": 0, "94": 100, "97": -1, "62l": "b", "11": 67, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "e", "16": 67, "19": 100, "18": 67, "65l": "a", "obi": 62.2747, "roundobi_iyr": 92, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "Ukraine", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 62, "roundobi_yer": 37, "myr": "IU", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "d", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "UKR", "48": 67, "49": 67, "46": 100, "47": 0, "44": 0, "45": 67, "42": 33, "43": 0, "40": 0, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "a", "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "e", "60l": "a", "74l": "d", "15l": "c", "79": 0, "78": 100, "q59bl": "b", "51": 33, "q60b": 33, "q57b": 0, "65": 100, "33l": "c", "q58b": 67, "80l": "d", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Moderate", "4l": "a", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 63, "obi_yer": 36.6, "105l": "b", "106l": "d"}, "name": "Ukraine", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 67, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 72.8182, "26l": "a", "67l": "b", "115l": "b", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 33, "25": 0, "26": 100, "27": 67, "20": 33, "21": 33, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "c", "28": 0, "29": 100, "5l": "a", "obi_ar": 66.7143, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 33, "obi_iyr": 83.375, "13l": "b", "120": 0, "121": 0, "122": 0, "123": 0, "124": 100, "125": 0, "76l": "d", "15": 33, "21l": "c", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 33, "pbs": "PW", "61": 33, "34l": "d", "54": 33, "57": 67, "40l": "d", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 67, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 66.6667, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "b", "24l": "c", "sai_obi": 75, "q63cl": null, "eb": "PW", "115": 67, "114": 100, "117": 33, "116": 67, "ebp": "PW", "110": 0, "113": 0, "44l": "c", "123l": "d", "83": 0, "80": 0, "81": 67, "119": 0, "118": 0, "obi_cat": "Some", "roundobi_cb": 0, "117l": "c", "43l": "d", "100l": "a", "51l": "c", "roundobi_ebp": 58, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "b", "comp0608": 0, "27l": "b", "29l": "a", "92l": "b", "70l": "a", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "a", "31l": "b", "102": 100, "103": 67, "100": 100, "101": 67, "106": 0, "59l": "b", "104": 67, "105": 0, "101l": "b", "91l": "a", "39": 0, "38": 33, "42l": "c", "58l": "b", "76": 0, "33": 33, "32": 100, "31": 67, "30": 100, "37": 33, "36": 100, "35": 0, "34": 0, "q64bl": null, "59": 67, "roundobi_pbs": 67, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Strong", "16l": "b", "37l": "c", "22l": "a", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 35, "60": 100, "46l": "a", "62": 67, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "a", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "c", "6": 67, "96l": "b", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 58.0172, "q97bl": null, "17l": "c", "countryid": 94, "25l": "d", "112": 0, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": 100, "45l": "c", "57l": "b", "91": 100, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 100, "97": 100, "62l": "b", "11": 67, "10": 67, "13": 67, "12": 100, "order_cat": 3, "14": 100, "103l": "b", "16": 67, "19": 100, "18": 33, "65l": "a", "obi": 53.6737, "roundobi_iyr": 83, "18l": "c", "roundobi_myr": 0, "52l": "b", "q70b": null, "89": 100, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Ukraine", "region": "Eastern Europe & Central Asia", "48l": "b", "roundobi": 54, "roundobi_yer": 33, "myr": "IU", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 33, "55l": "c", "ar": "PW", "61l": "c", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "c", "87": 100, "68l": "a", "28l": "d", "63": 67, "countrylet": "UKR", "48": 67, "49": 33, "46": 100, "47": 0, "44": 33, "45": 33, "42": 33, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 73, "104l": "b", "23l": "a", "q99bl": null, "reg_eca": 1, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 33, "70": 100, "116l": "b", "60l": "a", "74l": "d", "15l": "c", "79": 0, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 100, "33l": "c", "q58b": null, "80l": "d", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 75, "obi_yer": 33.3, "105l": "b", "106l": "d"}}, {"alpha2": "GB", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 71, "pub_pbs": 1, "113l": "c", "54l": "a", "leg_obi": 52.8333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "a", "28": 100, "29": 100, "5l": "a", "obi_ar": 71.4286, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "a", "120": 67, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "a", "58": 0, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "a", "24l": "a", "sai_obi": 76.7, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "a", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 95, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 100, "38": 0, "42l": "a", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 100, "83l": "a", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2008, "rank": 1, "60": 67, "46l": "e", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 0, "96l": "c", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 94.8846, "q97bl": "a", "17l": "a", "countryid": 95, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 33, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 88.0337, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "United Kingdom", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 88, "roundobi_yer": 77, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "UK", "48": 100, "49": 100, "46": -1, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 53, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 67, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "b", "74l": "a", "15l": "b", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 100, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "a", "roundsai_obi": 77, "obi_yer": 76.7, "105l": "a", "106l": "b"}, "name": "United Kingdom", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 1, "113l": "a", "54l": "c", "leg_obi": 48.5455, "26l": "a", "67l": "a", "115l": "a", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "b", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": null, "53l": "a", "28": 100, "29": 100, "5l": "a", "obi_ar": 76.2857, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": "c", "86": 100, "obi_iyr": 100, "13l": "a", "120": 67, "121": 0, "122": 100, "123": 100, "124": 100, "125": 0, "76l": "a", "15": 100, "21l": "a", "q58bl": null, "39l": "a", "58": 0, "q56bl": null, "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 100, "comp0812": 1, "107l": "b", "q99b": null, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 100, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 33, "113": 100, "44l": "e", "123l": "a", "83": 100, "80": 67, "81": 100, "119": 67, "118": 67, "obi_cat": "Extensive", "roundobi_cb": 42, "117l": "d", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 93, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "a", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 67, "112l": "c", "98l": "b", "31l": "a", "102": 0, "103": 0, "100": 33, "101": 33, "106": 67, "59l": "b", "104": 100, "105": 100, "101l": "c", "91l": "a", "39": 100, "38": 67, "42l": "a", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 67, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "a", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 41.5, "97l": "d", "year": 2012, "rank": 3, "60": 100, "46l": "e", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 33, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "c", "114l": "c", "107": 67, "118l": "b", "2": 100, "50l": "a", "86l": "a", "6": 67, "96l": "b", "102l": "d", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 92.7455, "q97bl": null, "17l": "a", "countryid": 95, "25l": "a", "112": 33, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 33, "98": 67, "45l": "b", "57l": "d", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 100, "94": 100, "97": 0, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "d", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 88.4239, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 75, "52l": "a", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 33, "q80bl": null, "country": "United Kingdom", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 88, "roundobi_yer": 90, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 33, "82": 100, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "UK", "48": 100, "49": 100, "46": -1, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 100, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 49, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "b", "75": 0, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "c", "60l": "a", "74l": "a", "15l": "a", "79": 67, "78": 100, "q59bl": null, "51": 100, "q60b": null, "q57b": null, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 90.1, "105l": "a", "106l": "b"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 76, "pub_pbs": 1, "113l": "c", "54l": "c", "leg_obi": 52.8333, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "a", "90": 100, "109l": "a", "99l": "d", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 100, "53l": "a", "28": 100, "29": 100, "5l": "a", "obi_ar": 76.2857, "4": 100, "8": 100, "96": 67, "reg_mena": 0, "49l": "b", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "a", "120": 67, "121": 0, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 0, "21l": "a", "q58bl": "e", "39l": "a", "58": 0, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 33, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 100, "comp0610": 1, "comp0612": 1, "56": 67, "55": 100, "10l": "a", "24l": "a", "sai_obi": 80.1, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "a", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 92, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "c", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 100, "38": 0, "42l": "a", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 100, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "a", "79l": "a", "q97b": 100, "83l": "a", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2010, "rank": 3, "60": 100, "46l": "e", "62": 100, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 0, "96l": "b", "102l": "d", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 91.6731, "q97bl": "a", "17l": "a", "countryid": 95, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 0, "98": -1, "45l": "b", "57l": "d", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "d", "obi": 87.2921, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "United Kingdom", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 87, "roundobi_yer": 77, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "a", "ar": "PW", "61l": "a", "77l": "b", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "UK", "48": 100, "49": 67, "46": -1, "47": 100, "44": -1, "45": 67, "42": 100, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 100, "9": 100, "85": 0, "73l": "a", "roundleg_obi": 53, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 67, "120l": "b", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "a", "74l": "a", "15l": "d", "79": 100, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 100, "65": 0, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "a", "roundsai_obi": 80, "obi_yer": 76.7, "105l": "a", "106l": "b"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 92, "pub_pbs": 1, "113l": "c", "54l": "a", "leg_obi": 47.25, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "a", "90": 100, "109l": "a", "99l": "c", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 100, "23": 100, "41l": "e", "q56b": 67, "53l": "a", "28": 67, "29": 100, "5l": "a", "obi_ar": 91.75, "4": 100, "8": 67, "96": 0, "reg_mena": 0, "49l": "a", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 91.625, "13l": "a", "120": 33, "121": 0, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 67, "21l": "a", "q58bl": "e", "39l": "a", "58": 0, "q56bl": "b", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "a", "54": 100, "57": 0, "40l": "a", "pub_ebp": 1, "50": 100, "q57bl": "a", "52": 100, "comp0812": 1, "107l": "b", "q99b": 67, "108l": "d", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 89, "comp0610": 1, "comp0612": 1, "56": 33, "55": 100, "10l": "a", "24l": "a", "sai_obi": 66.75, "q63cl": "a", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 33, "44l": "e", "123l": "e", "83": 100, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 100, "117l": "e", "43l": "a", "100l": "c", "51l": "a", "roundobi_ebp": 95, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 33, "92": 100, "84l": "a", "90l": "a", "64l": "a", "q63bl": null, "8l": "b", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "a", "108": 0, "109": 100, "112l": null, "98l": "e", "31l": "a", "102": 0, "103": -1, "100": 33, "101": 67, "106": 67, "59l": "d", "104": -1, "105": 100, "101l": "b", "91l": "a", "39": 100, "38": -1, "42l": "b", "58l": "d", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 67, "35": 100, "34": 100, "q64bl": "b", "59": 0, "roundobi_pbs": 89, "reg_ssa": 0, "pub_myr": 1, "q80b": 100, "88": 100, "q60bl": "a", "79l": "b", "q97b": 67, "83l": "a", "grade_leg": "Moderate", "16l": "a", "37l": "a", "22l": "a", "pub_cb": 1, "53": 100, "cb": "PW", "obi_cb": 100, "97l": "e", "year": 2006, "rank": 2, "60": 67, "46l": "e", "62": 100, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "a", "86l": "a", "6": 100, "96l": "d", "102l": "d", "88l": "a", "1l": "a", "q79bl": "b", "obi_ebp": 95.451, "q97bl": "b", "17l": "a", "countryid": 95, "25l": "a", "112": -1, "38l": "e", "reg_eap": 0, "pub_yer": 1, "6l": "a", "36l": "b", "comp1012": 1, "99": 33, "98": -1, "45l": "c", "57l": "d", "91": 100, "q79b": 67, "93": 100, "122l": "a", "95": 100, "94": -1, "97": -1, "62l": "a", "11": 100, "10": 100, "13": 100, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "e", "obi": 87.9091, "roundobi_iyr": 92, "18l": "a", "roundobi_myr": 92, "52l": "a", "q70b": 33, "89": 100, "iyr": "PW", "85l": "a", "111": -1, "q80bl": null, "country": "United Kingdom", "region": "Western Europe & the U.S.", "48l": "a", "roundobi": 88, "roundobi_yer": 87, "myr": "PW", "q70bl": "c", "q65bl": "b", "obi_eb": 67, "82": 33, "55l": "a", "ar": "PW", "61l": "a", "77l": "a", "14l": "a", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "a", "28l": "b", "63": 67, "countrylet": "UK", "48": 100, "49": 100, "46": -1, "47": 100, "44": -1, "45": 33, "42": 67, "43": 100, "40": 100, "41": -1, "1": 100, "94l": "e", "q63c": 100, "5": 100, "84": 100, "9": 100, "85": 100, "73l": "a", "roundleg_obi": 47, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "c", "75": 67, "74": 100, "73": 100, "72": 100, "71": 33, "70": 100, "116l": "e", "60l": "b", "74l": "a", "15l": "b", "79": 67, "78": 100, "q59bl": "e", "51": 100, "q60b": 100, "q57b": 100, "65": -1, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "a", "roundsai_obi": 67, "obi_yer": 86.7, "105l": "a", "106l": "b"}}, {"alpha2": "US", "db_2008": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 88.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 67, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "b", "120": 100, "121": 67, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "c", "58": 67, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 67, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 84, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "b", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 33, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "b", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 5, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "b", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 83.6792, "q97bl": "c", "17l": "a", "countryid": 96, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 82.2556, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "b", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "United States", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 82, "roundobi_yer": 73, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "US", "48": 67, "49": 33, "46": 100, "47": 67, "44": -1, "45": 100, "42": 33, "43": 67, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 89, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "a", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 67, "q57b": 100, "65": 67, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 2, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "a", "roundsai_obi": 100, "obi_yer": 73.4, "105l": "a", "106l": "a"}, "name": "United States", "db_2012": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 0, "113l": "a", "54l": "c", "leg_obi": 86.6, "26l": "a", "67l": "a", "115l": "c", "30l": "a", "71l": "a", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "e", "q56b": null, "53l": "b", "28": 100, "29": 67, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": "d", "86": 100, "obi_iyr": 100, "13l": "b", "120": 100, "121": 100, "122": 100, "123": 67, "124": 100, "125": 0, "76l": "a", "15": 100, "21l": "a", "q58bl": null, "39l": "c", "58": 67, "q56bl": null, "81l": "c", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 33, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": null, "52": 33, "comp0812": 1, "107l": "a", "q99b": null, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": null, "eb": "PW", "115": 33, "114": 33, "117": 33, "116": 33, "ebp": "PW", "110": 0, "113": 100, "44l": "e", "123l": "b", "83": 33, "80": 67, "81": 33, "119": 100, "118": 0, "obi_cat": "Significant", "roundobi_cb": 0, "117l": "c", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 86, "124l": "a", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": "d", "98l": "e", "31l": "a", "102": 100, "103": 33, "100": 100, "101": 100, "106": 100, "59l": "c", "104": 100, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 67, "42l": "a", "58l": "b", "76": 100, "33": 100, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": null, "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": null, "79l": "c", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "b", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 7, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "a", "75l": "b", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 100, "50l": "b", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": null, "obi_ebp": 85.75, "q97bl": null, "17l": "a", "countryid": 96, "25l": "a", "112": 0, "38l": "b", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": null, "93": 100, "122l": "a", "95": 100, "94": 100, "97": 100, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 4, "14": 100, "103l": "c", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 79.2258, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "United States", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 79, "roundobi_yer": 60, "myr": "PW", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "US", "48": 67, "49": 33, "46": 100, "47": 67, "44": -1, "45": 100, "42": 100, "43": 67, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": null, "5": 100, "84": 33, "9": 100, "85": 67, "73l": "a", "roundleg_obi": 87, "104l": "a", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "c", "60l": "d", "74l": "a", "15l": "a", "79": 33, "78": 100, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 67, "33l": "a", "q58b": null, "80l": "b", "7l": "a", "yearid": 4, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "a", "q64b": null, "95l": "a", "roundsai_obi": 100, "obi_yer": 59.9, "105l": "a", "106l": "a"}, "db_2010": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 88.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "b", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 67, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 67, "obi_iyr": 100, "13l": "b", "120": 100, "121": 67, "122": 100, "123": 100, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "c", "58": 67, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 67, "10l": "a", "24l": "a", "sai_obi": 100, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "a", "83": 67, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 83, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": null, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "b", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": 100, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": null, "88": 100, "q60bl": "b", "79l": "a", "q97b": 33, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "a", "22l": "b", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 7, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "b", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 83.0566, "q97bl": "c", "17l": "a", "countryid": 96, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 100, "94": 100, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "b", "obi": 81.8889, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": "e", "country": "United States", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 82, "roundobi_yer": 73, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "US", "48": 67, "49": 0, "46": 100, "47": 67, "44": -1, "45": 100, "42": 33, "43": 67, "40": 33, "41": -1, "1": 100, "94l": "a", "q63c": 67, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 89, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "a", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 67, "q57b": 100, "65": 67, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 3, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "a", "roundsai_obi": 100, "obi_yer": 73.4, "105l": "a", "106l": "a"}, "db_2006": {"35l": "a", "72l": "a", "roundobi_ar": 100, "pub_pbs": 0, "113l": "a", "54l": "b", "leg_obi": 88.9167, "26l": "a", "67l": "a", "115l": "e", "30l": "a", "71l": "a", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "PW", "reg_lac": 0, "obi_myr": 91.75, "9l": "a", "24": 100, "25": 100, "26": 100, "27": 100, "20": 100, "21": 100, "22": 67, "23": 100, "41l": "e", "q56b": 100, "53l": "b", "28": 100, "29": 67, "5l": "a", "obi_ar": 100, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "a", "q59b": null, "12l": "a", "111l": null, "86": 100, "obi_iyr": 100, "13l": "b", "120": 100, "121": 67, "122": 100, "123": -1, "124": -1, "125": -1, "76l": "a", "15": 100, "21l": "a", "q58bl": "e", "39l": "c", "58": 67, "q56bl": "a", "81l": "a", "17": 100, "pbs": "NP", "61": 0, "34l": "a", "54": 67, "57": 100, "40l": "c", "pub_ebp": 1, "50": 67, "q57bl": "a", "52": 33, "comp0812": 1, "107l": "a", "q99b": 67, "108l": "a", "2l": "a", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 100, "55": 33, "10l": "a", "24l": "a", "sai_obi": 95.875, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 100, "44l": "e", "123l": "e", "83": 67, "80": 67, "81": 100, "119": 67, "118": -1, "obi_cat": "Extensive", "roundobi_cb": 0, "117l": "e", "43l": "b", "100l": "a", "51l": "c", "roundobi_ebp": 81, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "a", "q63b": 100, "92": 100, "84l": "b", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "b", "92l": "a", "70l": "a", "19l": "a", "108": 100, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 100, "103": -1, "100": 100, "101": 100, "106": 100, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "a", "39": 33, "38": 33, "42l": "c", "58l": "b", "76": 100, "33": 67, "32": 100, "31": 100, "30": 100, "37": -1, "36": 100, "35": 100, "34": 100, "q64bl": "b", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 1, "q80b": 67, "88": 100, "q60bl": "b", "79l": "a", "q97b": 67, "83l": "b", "grade_leg": "Strong", "16l": "a", "37l": "e", "22l": "b", "pub_cb": 0, "53": 67, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 6, "60": 0, "46l": "a", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "b", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 100, "50l": "b", "86l": "a", "6": 67, "96l": "a", "102l": "a", "88l": "a", "1l": "a", "q79bl": "a", "obi_ebp": 81.4231, "q97bl": "b", "17l": "a", "countryid": 96, "25l": "a", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "a", "comp1012": 1, "99": 100, "98": -1, "45l": "a", "57l": "a", "91": 100, "q79b": 100, "93": 100, "122l": "a", "95": 67, "94": -1, "97": -1, "62l": "d", "11": 100, "10": 100, "13": 67, "12": 100, "order_cat": 5, "14": 100, "103l": "e", "16": 100, "19": 100, "18": 100, "65l": "e", "obi": 80.9213, "roundobi_iyr": 100, "18l": "a", "roundobi_myr": 92, "52l": "c", "q70b": 0, "89": 100, "iyr": "PW", "85l": "c", "111": -1, "q80bl": null, "country": "United States", "region": "Western Europe & the U.S.", "48l": "b", "roundobi": 81, "roundobi_yer": 77, "myr": "PW", "q70bl": "d", "q65bl": "b", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "a", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "a", "28l": "a", "63": 100, "countrylet": "US", "48": 67, "49": 33, "46": 100, "47": 0, "44": -1, "45": 100, "42": 33, "43": 67, "40": 33, "41": -1, "1": 100, "94l": "e", "q63c": 67, "5": 100, "84": 67, "9": 100, "85": 33, "73l": "a", "roundleg_obi": 89, "104l": "e", "23l": "a", "q99bl": "b", "reg_eca": 0, "reg_we": 1, "77": 100, "120l": "a", "75": 67, "74": 100, "73": 100, "72": 100, "71": 100, "70": 100, "116l": "e", "60l": "d", "74l": "a", "15l": "a", "79": 100, "78": 100, "q59bl": "e", "51": 33, "q60b": 67, "q57b": 100, "65": -1, "33l": "b", "q58b": null, "80l": "b", "7l": "a", "yearid": 1, "32l": "a", "grade_sai": "Strong", "4l": "a", "66l": "a", "119l": "b", "q64b": 67, "95l": "b", "roundsai_obi": 96, "obi_yer": 76.7, "105l": "a", "106l": "a"}}, {"alpha2": "VE", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 33, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 30.4167, "26l": "a", "67l": "b", "115l": "e", "30l": "a", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "a", "24": 67, "25": 67, "26": 100, "27": 67, "20": 33, "21": 0, "22": 100, "23": 100, "41l": "c", "q56b": 33, "53l": "d", "28": 67, "29": 33, "5l": "a", "obi_ar": 33.2857, "4": 67, "8": 67, "96": 33, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 37.625, "13l": "c", "120": 33, "121": 33, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "c", "58": 33, "q56bl": "c", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "c", "q99b": 0, "108l": "d", "2l": "c", "64": 0, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 43.2, "q63cl": "b", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "d", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 41, "124l": "e", "pub_ar": 1, "3": 33, "reg_sa": 0, "7": 67, "3l": "c", "78l": "c", "q63b": null, "92": 33, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "b", "82l": "d", "11l": "c", "comp0608": 0, "27l": "b", "29l": "c", "92l": "c", "70l": "b", "19l": "c", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "b", "102": 33, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 33, "38": 33, "42l": "d", "58l": "c", "76": 0, "33": 67, "32": 100, "31": 67, "30": 100, "37": 33, "36": 67, "35": 0, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "b", "q97b": 0, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 53, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 67, "68": 67, "69": 67, "63l": "d", "121l": "c", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 33, "118l": "e", "2": 33, "50l": "c", "86l": "c", "6": 0, "96l": "c", "102l": "c", "88l": "c", "1l": "c", "q79bl": "b", "obi_ebp": 40.5455, "q97bl": "d", "17l": "d", "countryid": 97, "25l": "b", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 33, "97": -1, "62l": "d", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 33, "18": 33, "65l": "d", "obi": 35.4674, "roundobi_iyr": 38, "18l": "c", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Venezuela", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 35, "roundobi_yer": 27, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "b", "14l": "c", "87l": "b", "89l": "a", "20l": "c", "87": 67, "68l": "b", "28l": "b", "63": 0, "countrylet": "VEN", "48": 33, "49": 0, "46": 33, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 33, "1": 33, "94l": "c", "q63c": 67, "5": 100, "84": 0, "9": 100, "85": 0, "73l": "d", "roundleg_obi": 30, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 67, "78": 33, "q59bl": "d", "51": 33, "q60b": 67, "q57b": 0, "65": 0, "33l": "b", "q58b": 0, "80l": "c", "7l": "b", "yearid": 2, "32l": "a", "grade_sai": "Moderate", "4l": "b", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 43, "obi_yer": 26.6, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 29, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 36, "26l": "a", "67l": "d", "115l": "e", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 33, "5l": "b", "obi_ar": 28.5714, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "c", "93l": "c", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 0, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 100, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "b", "39l": "d", "58": 0, "q56bl": "a", "81l": "c", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "b", "q99b": 0, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "b", "sai_obi": 46.7, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 67, "44l": "c", "123l": "a", "83": 0, "80": 33, "81": 33, "119": 33, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "d", "11l": "d", "comp0608": 0, "27l": "a", "29l": "c", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "a", "102": 33, "103": -1, "100": 33, "101": 100, "106": 0, "59l": "c", "104": -1, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 67, "31": 100, "30": 100, "37": 33, "36": 100, "35": 0, "34": 100, "q64bl": "c", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "a", "79l": "c", "q97b": 0, "83l": "d", "grade_leg": "Moderate", "16l": "d", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 63, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 67, "118l": "e", "2": 100, "50l": "c", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "c", "1l": "a", "q79bl": "b", "obi_ebp": 45.4182, "q97bl": "d", "17l": "d", "countryid": 97, "25l": "a", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 0, "19": 100, "18": 67, "65l": "d", "obi": 34.0217, "roundobi_iyr": 0, "18l": "b", "roundobi_myr": 0, "52l": "d", "q70b": 33, "89": 100, "iyr": "NP", "85l": "c", "111": -1, "q80bl": "e", "country": "Venezuela", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 34, "roundobi_yer": 23, "myr": "NP", "q70bl": "c", "q65bl": "c", "obi_eb": 100, "82": 0, "55l": "c", "ar": "PW", "61l": "d", "77l": "a", "14l": "c", "87l": "b", "89l": "a", "20l": "a", "87": 67, "68l": "d", "28l": "a", "63": 0, "countrylet": "VEN", "48": 33, "49": 33, "46": 33, "47": 0, "44": 33, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 33, "73l": "d", "roundleg_obi": 36, "104l": "e", "23l": "a", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "b", "q58b": 67, "80l": "c", "7l": "a", "yearid": 3, "32l": "b", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": 33, "95l": "d", "roundsai_obi": 47, "obi_yer": 23.2, "105l": "a", "106l": "d"}, "name": "Venezuela", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 33, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 39.3636, "26l": "a", "67l": "d", "115l": "d", "30l": "a", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 1, "obi_myr": 0, "9l": "b", "24": 67, "25": 100, "26": 100, "27": 100, "20": 100, "21": 0, "22": 100, "23": 100, "41l": "d", "q56b": null, "53l": "d", "28": 100, "29": 33, "5l": "b", "obi_ar": 33.2857, "4": 100, "8": 100, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "c", "120": 33, "121": 0, "122": 0, "123": 33, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "b", "17": 33, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 100, "q57bl": null, "52": 0, "comp0812": 1, "107l": "c", "q99b": null, "108l": "d", "2l": "a", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "d", "24l": "b", "sai_obi": 58.25, "q63cl": null, "eb": "PW", "115": 0, "114": 100, "117": 0, "116": 0, "ebp": "PW", "110": 0, "113": 33, "44l": "c", "123l": "c", "83": 33, "80": 33, "81": 67, "119": 33, "118": 0, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 51, "124l": "b", "pub_ar": 1, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "c", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "a", "102": 33, "103": 67, "100": 33, "101": 100, "106": 0, "59l": "d", "104": 33, "105": 100, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "b", "58l": "d", "76": 0, "33": 67, "32": 33, "31": 100, "30": 100, "37": 67, "36": 100, "35": 0, "34": 100, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": null, "79l": "c", "q97b": null, "83l": "c", "grade_leg": "Moderate", "16l": "c", "37l": "b", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 65, "60": 0, "46l": "c", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "a", "107": 33, "118l": "d", "2": 100, "50l": "a", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "c", "1l": "a", "q79bl": null, "obi_ebp": 51.1207, "q97bl": null, "17l": "c", "countryid": 97, "25l": "a", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "a", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 0, "97": 67, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "b", "16": 33, "19": 100, "18": 100, "65l": "d", "obi": 36.8105, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "NP", "85l": "d", "111": 0, "q80bl": null, "country": "Venezuela", "region": "Latin America & Caribbean", "48l": "c", "roundobi": 37, "roundobi_yer": 20, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 100, "82": 0, "55l": "b", "ar": "PW", "61l": "d", "77l": "c", "14l": "c", "87l": "a", "89l": "a", "20l": "a", "87": 100, "68l": "d", "28l": "a", "63": 0, "countrylet": "VEN", "48": 33, "49": 0, "46": 33, "47": 0, "44": 33, "45": 0, "42": 67, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 39, "104l": "c", "23l": "a", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "b", "q58b": null, "80l": "c", "7l": "a", "yearid": 4, "32l": "c", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "c", "q64b": null, "95l": "d", "roundsai_obi": 58, "obi_yer": 19.9, "105l": "a", "106l": "d"}}, {"alpha2": "VN", "db_2008": {"35l": "d", "72l": "b", "roundobi_ar": 19, "pub_pbs": 0, "113l": "c", "54l": "d", "leg_obi": 30.5833, "26l": "d", "67l": "a", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 18.8571, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "d", "111l": null, "86": 33, "obi_iyr": 54.25, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 67, "q56bl": "b", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "c", "2l": "d", "64": 33, "comp0810": 1, "69l": "b", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 0, "10l": "d", "24l": "d", "sai_obi": 39.9, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 33, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "c", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 33, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 70, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 67, "67": 100, "68": 67, "69": 67, "63l": "a", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "c", "102l": "c", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 98, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 9.77174, "roundobi_iyr": 54, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Vietnam", "region": "East Asia & Pacific", "48l": "d", "roundobi": 10, "roundobi_yer": 10, "myr": "NP", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "c", "14l": "d", "87l": "c", "89l": "d", "20l": "d", "87": 33, "68l": "b", "28l": "d", "63": 100, "countrylet": "VNM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 67, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 33, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "b", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 40, "obi_yer": 9.9, "105l": "b", "106l": "d"}, "name": "Vietnam", "db_2012": {"35l": "d", "72l": "a", "roundobi_ar": 62, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 75.8182, "26l": "d", "67l": "b", "115l": "d", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 61.8571, "4": 0, "8": 0, "96": 67, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 33.375, "13l": "d", "120": 0, "121": 0, "122": 0, "123": 0, "124": 100, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 67, "q56bl": null, "81l": "b", "17": 0, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "c", "2l": "d", "64": 33, "comp0810": 1, "69l": "d", "obi_pbs": 78, "comp0610": 1, "comp0612": 1, "56": 67, "55": 0, "10l": "d", "24l": "d", "sai_obi": 83.5, "q63cl": null, "eb": "PW", "115": 0, "114": 67, "117": 0, "116": 0, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 33, "80": 67, "81": 67, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 4, "124l": "a", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 67, "84l": "b", "90l": "a", "64l": "c", "q63bl": null, "8l": "d", "82l": "a", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 33, "109": 0, "112l": "d", "98l": "b", "31l": "d", "102": 100, "103": 0, "100": 67, "101": 67, "106": 100, "59l": "c", "104": 100, "105": 100, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "b", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 78, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 100, "q60bl": null, "79l": "b", "q97b": null, "83l": "c", "grade_leg": "Strong", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "a", "year": 2012, "rank": 77, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "b", "roundobi_eb": 67, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "b", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "b", "102l": "a", "88l": "a", "1l": "d", "q79bl": null, "obi_ebp": 4.03448, "q97bl": null, "17l": "d", "countryid": 98, "25l": "d", "112": 0, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 67, "45l": "d", "57l": "a", "91": 0, "q79b": null, "93": 100, "122l": "d", "95": 100, "94": 67, "97": 100, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 18.9789, "roundobi_iyr": 33, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "PW", "85l": "b", "111": 0, "q80bl": null, "country": "Vietnam", "region": "East Asia & Pacific", "48l": "d", "roundobi": 19, "roundobi_yer": 57, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 100, "55l": "d", "ar": "PW", "61l": "b", "77l": "a", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "VNM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": null, "5": 0, "84": 67, "9": 0, "85": 67, "73l": "d", "roundleg_obi": 76, "104l": "a", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 100, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 0, "116l": "d", "60l": "a", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "b", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "a", "roundsai_obi": 84, "obi_yer": 56.8, "105l": "a", "106l": "a"}, "db_2010": {"35l": "d", "72l": "a", "roundobi_ar": 33, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 30.5833, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "b", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 33.1429, "4": 0, "8": 0, "96": 33, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": 33, "12l": "b", "111l": null, "86": 0, "obi_iyr": 83.5, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 33, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 0, "10l": "d", "24l": "d", "sai_obi": 43.3, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "c", "q63b": null, "92": 67, "84l": "d", "90l": "a", "64l": "a", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "b", "104": -1, "105": 0, "101l": "b", "91l": "c", "39": 0, "38": 0, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "c", "59": 67, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 33, "q60bl": "b", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 77, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "c", "88l": "c", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 98, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 33, "q79b": 0, "93": 33, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 13.7609, "roundobi_iyr": 84, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 100, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Vietnam", "region": "East Asia & Pacific", "48l": "d", "roundobi": 14, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "b", "obi_eb": 67, "82": 0, "55l": "d", "ar": "PW", "61l": "d", "77l": "c", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "a", "28l": "d", "63": 67, "countrylet": "VNM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "b", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 31, "104l": "e", "23l": "b", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 67, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 33, "q59bl": "c", "51": 0, "q60b": 67, "q57b": 0, "65": 0, "33l": "d", "q58b": 33, "80l": "d", "7l": "d", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "a", "119l": "d", "q64b": 33, "95l": "d", "roundsai_obi": 43, "obi_yer": 6.6, "105l": "b", "106l": "d"}, "db_2006": {"35l": "d", "72l": "d", "roundobi_ar": 0, "pub_pbs": 0, "113l": "b", "54l": "d", "leg_obi": 25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": -1, "reg_mena": 0, "49l": "d", "93l": "a", "q59b": 0, "12l": "d", "111l": null, "86": 33, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 33, "q56bl": "b", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "d", "54": 0, "57": 67, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 1, "69l": "d", "obi_pbs": 0, "comp0610": 1, "comp0612": 1, "56": 33, "55": 0, "10l": "d", "24l": "d", "sai_obi": 52.4286, "q63cl": "c", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 67, "44l": "d", "123l": "e", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": 67, "92": 67, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "b", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 67, "106": 0, "59l": "c", "104": -1, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 33, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": 100, "88": 0, "q60bl": "d", "79l": "d", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 59, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "c", "6": 0, "96l": "e", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "c", "17l": "d", "countryid": 98, "25l": "d", "112": -1, "38l": "d", "reg_eap": 1, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "b", "91": 0, "q79b": 33, "93": 100, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "e", "obi": 2.92308, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": null, "country": "Vietnam", "region": "East Asia & Pacific", "48l": "d", "roundobi": 3, "roundobi_yer": 7, "myr": "IU", "q70bl": "d", "q65bl": "c", "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "c", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "d", "28l": "d", "63": 0, "countrylet": "VNM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "e", "q63c": 33, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 33, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 0, "q57b": 0, "65": -1, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 52, "obi_yer": 6.6, "105l": "b", "106l": "d"}}, {"alpha2": "YE", "db_2008": {"35l": "d", "72l": "a", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 25, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "d", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 0, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": 0, "12l": "d", "111l": null, "86": 0, "obi_iyr": 75.125, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 100, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 26.7, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "IU", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "a", "51l": "d", "roundobi_ebp": 0, "124l": "e", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "d", "64l": "a", "q63bl": "e", "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 0, "103": -1, "100": 100, "101": 100, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "a", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 69, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "d", "88l": "d", "1l": "d", "q79bl": "b", "obi_ebp": 0, "q97bl": "b", "17l": "d", "countryid": 99, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "a", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "e", "16": 0, "19": 0, "18": 0, "65l": "c", "obi": 9.79348, "roundobi_iyr": 75, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Yemen", "region": "Middle East & North Africa", "48l": "d", "roundobi": 10, "roundobi_yer": 0, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 100, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "d", "14l": "d", "87l": "d", "89l": "d", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "YEM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 25, "104l": "e", "23l": "d", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 100, "71": 0, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 100, "q57b": 0, "65": 33, "33l": "d", "q58b": 0, "80l": "d", "7l": "d", "yearid": 2, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 16.6667, "26l": "d", "67l": "b", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 100, "20": 100, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": 0, "53l": "d", "28": 100, "29": 0, "5l": "b", "obi_ar": 0, "4": 0, "8": 100, "96": 0, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": 0, "12l": "a", "111l": null, "86": 0, "obi_iyr": 79.25, "13l": "c", "120": 67, "121": 0, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "d", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "d", "81l": "d", "17": 0, "pbs": "IU", "61": 0, "34l": "a", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 1, "107l": "a", "q99b": 0, "108l": "d", "2l": "c", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 26.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "PW", "110": -1, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 26, "124l": "e", "pub_ar": 0, "3": 100, "reg_sa": 0, "7": 100, "3l": "a", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": "e", "8l": "a", "82l": "d", "11l": "a", "comp0608": 0, "27l": "a", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 0, "101": 33, "106": 0, "59l": "d", "104": -1, "105": 0, "101l": "c", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 33, "32": 0, "31": 0, "30": 0, "37": 67, "36": 33, "35": 0, "34": 100, "q64bl": "d", "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": "b", "79l": "d", "q97b": 67, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "b", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 71, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 33, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": 0, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 33, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": "b", "obi_ebp": 26.0364, "q97bl": "b", "17l": "d", "countryid": 99, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "c", "comp1012": 1, "99": 67, "98": -1, "45l": "d", "57l": "d", "91": 0, "q79b": 0, "93": 67, "122l": "d", "95": 0, "94": 0, "97": -1, "62l": "d", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 0, "19": 0, "18": 100, "65l": "c", "obi": 24.6304, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 0, "89": 0, "iyr": "PW", "85l": "d", "111": -1, "q80bl": "e", "country": "Yemen", "region": "Middle East & North Africa", "48l": "c", "roundobi": 25, "roundobi_yer": 7, "myr": "NP", "q70bl": "d", "q65bl": "d", "obi_eb": 33, "82": 0, "55l": "c", "ar": "IU", "61l": "d", "77l": "b", "14l": "b", "87l": "d", "89l": "b", "20l": "a", "87": 0, "68l": "a", "28l": "a", "63": 67, "countrylet": "YEM", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "d", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 17, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "e", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 33, "33l": "c", "q58b": 0, "80l": "d", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Weak", "4l": "d", "66l": "a", "119l": "d", "q64b": 0, "95l": "d", "roundsai_obi": 27, "obi_yer": 6.7, "105l": "b", "106l": "d"}, "name": "Yemen", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 5, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.2727, "26l": "d", "67l": "b", "115l": "d", "30l": "b", "71l": "c", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "PW", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 4.71429, "4": 0, "8": 0, "96": 33, "reg_mena": 1, "49l": "d", "93l": "b", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 79.25, "13l": "d", "120": 67, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "c", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 1, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 1, "69l": "a", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 100, "55": 0, "10l": "d", "24l": "d", "sai_obi": 66.75, "q63cl": null, "eb": "PW", "115": 0, "114": 0, "117": 0, "116": 0, "ebp": "NP", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 33, "81": 33, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "d", "51l": "d", "roundobi_ebp": 2, "124l": "b", "pub_ar": 0, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "d", "92l": "a", "70l": "b", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 33, "103": 100, "100": 0, "101": 67, "106": 0, "59l": "d", "104": 33, "105": 0, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 0, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "c", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "c", "year": 2012, "rank": 87, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "a", "roundobi_eb": 67, "66": 100, "67": 67, "68": 100, "69": 100, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "d", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "c", "102l": "c", "88l": "d", "1l": "d", "q79bl": null, "obi_ebp": 1.72414, "q97bl": null, "17l": "d", "countryid": 99, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 67, "98": 0, "45l": "d", "57l": "d", "91": 0, "q79b": null, "93": 67, "122l": "d", "95": 0, "94": 100, "97": 33, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "a", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 10.5263, "roundobi_iyr": 79, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Yemen", "region": "Middle East & North Africa", "48l": "d", "roundobi": 11, "roundobi_yer": 17, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "IU", "61l": "d", "77l": "b", "14l": "d", "87l": "d", "89l": "b", "20l": "d", "87": 0, "68l": "a", "28l": "d", "63": 67, "countrylet": "YEM", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "a", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "c", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 67, "116l": "d", "60l": "d", "74l": "d", "15l": "d", "79": 33, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "c", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Strong", "4l": "d", "66l": "a", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 67, "obi_yer": 16.6, "105l": "b", "106l": "d"}}, {"alpha2": "ZM", "db_2008": {"35l": "d", "72l": "c", "roundobi_ar": 38, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 38.9167, "26l": "d", "67l": "a", "115l": "e", "30l": "a", "71l": "c", "47l": "b", "90": 100, "109l": "d", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 0, "9l": "a", "24": 0, "25": 0, "26": 0, "27": 100, "20": 67, "21": 100, "22": 100, "23": 0, "41l": "d", "q56b": 100, "53l": "d", "28": 100, "29": 100, "5l": "a", "obi_ar": 38.1429, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 79.125, "13l": "c", "120": 67, "121": 67, "122": 0, "123": 0, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 100, "q56bl": "a", "81l": "a", "17": 100, "pbs": "PW", "61": 100, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 33, "108l": "d", "2l": "b", "64": 100, "comp0810": 0, "69l": "a", "obi_pbs": 89, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "a", "24l": "d", "sai_obi": 53.4, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "d", "83": 0, "80": 100, "81": 100, "119": 67, "118": -1, "obi_cat": "Some", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 45, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "b", "q63b": null, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": "e", "8l": "a", "82l": "c", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "a", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "a", "76": 0, "33": 0, "32": 0, "31": 0, "30": 100, "37": 0, "36": 33, "35": 0, "34": 0, "q64bl": "a", "59": 33, "roundobi_pbs": 89, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2008, "rank": 35, "60": 67, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 100, "68": 100, "69": 100, "63l": "a", "121l": "b", "75l": "d", "pub_iyr": 1, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "d", "86l": "c", "6": 67, "96l": "a", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 44.8364, "q97bl": "c", "17l": "a", "countryid": 100, "25l": "d", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "b", "36l": "c", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 0, "93": 0, "122l": "d", "95": 0, "94": 67, "97": -1, "62l": "a", "11": 33, "10": 100, "13": 33, "12": 100, "order_cat": 3, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "b", "obi": 48.1739, "roundobi_iyr": 79, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": 67, "89": 0, "iyr": "HC", "85l": "c", "111": -1, "q80bl": "e", "country": "Zambia", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 48, "roundobi_yer": 50, "myr": "NP", "q70bl": "b", "q65bl": "c", "obi_eb": 100, "82": 33, "55l": "c", "ar": "PW", "61l": "a", "77l": "b", "14l": "c", "87l": "b", "89l": "d", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 100, "countrylet": "ZMB", "48": 33, "49": 33, "46": 100, "47": 67, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 100, "84": 33, "9": 100, "85": 33, "73l": "d", "roundleg_obi": 39, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 0, "74": 0, "73": 0, "72": 33, "71": 33, "70": 100, "116l": "e", "60l": "b", "74l": "d", "15l": "d", "79": 33, "78": 67, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": 67, "33l": "d", "q58b": 33, "80l": "a", "7l": "a", "yearid": 2, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "b", "q64b": 100, "95l": "d", "roundsai_obi": 53, "obi_yer": 49.9, "105l": "b", "106l": "c"}, "name": "Zambia", "db_2012": {"35l": "d", "72l": "d", "roundobi_ar": 43, "pub_pbs": 0, "113l": "d", "54l": "d", "leg_obi": 33.3636, "26l": "d", "67l": "d", "115l": "c", "30l": "b", "71l": "d", "47l": "d", "90": 100, "109l": "d", "99l": "a", "yer": "IU", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 0, "20": 0, "21": 0, "22": 0, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 0, "29": 0, "5l": "b", "obi_ar": 42.8571, "4": 0, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": null, "12l": "b", "111l": "d", "86": 0, "obi_iyr": 0, "13l": "d", "120": 0, "121": 0, "122": 67, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 0, "q56bl": null, "81l": "d", "17": 0, "pbs": "NP", "61": 0, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 0, "50": 0, "q57bl": null, "52": 0, "comp0812": 0, "107l": "a", "q99b": null, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 0, "comp0610": 0, "comp0612": 0, "56": 33, "55": 0, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": null, "eb": "HC", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "IU", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 0, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 1, "124l": "b", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 0, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 1, "27l": "d", "29l": "d", "92l": "a", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 100, "103": 0, "100": 67, "101": 67, "106": 0, "59l": "d", "104": 0, "105": 0, "101l": "b", "91l": "a", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 0, "roundobi_pbs": 0, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 67, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "d", "37l": "d", "22l": "d", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "d", "year": 2012, "rank": 92, "60": 0, "46l": "d", "62": 0, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "d", "75l": "d", "pub_iyr": 0, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 100, "118l": "d", "2": 0, "50l": "d", "86l": "d", "6": 0, "96l": "d", "102l": "a", "88l": "b", "1l": "d", "q79bl": null, "obi_ebp": 0.568965, "q97bl": null, "17l": "d", "countryid": 100, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "d", "36l": "d", "comp1012": 1, "99": 100, "98": 0, "45l": "d", "57l": "d", "91": 100, "q79b": null, "93": 0, "122l": "b", "95": 0, "94": 0, "97": 0, "62l": "d", "11": 0, "10": 0, "13": 0, "12": 0, "order_cat": 1, "14": 0, "103l": "d", "16": 0, "19": 0, "18": 0, "65l": "d", "obi": 4.21053, "roundobi_iyr": 0, "18l": "d", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 100, "iyr": "IU", "85l": "d", "111": 0, "q80bl": null, "country": "Zambia", "region": "Sub-Saharan Africa", "48l": "d", "roundobi": 4, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "d", "ar": "HC", "61l": "d", "77l": "d", "14l": "d", "87l": "c", "89l": "a", "20l": "d", "87": 33, "68l": "d", "28l": "d", "63": 0, "countrylet": "ZMB", "48": 0, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 0, "94l": "d", "q63c": null, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 33, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "d", "75": 0, "74": 0, "73": 0, "72": 0, "71": 0, "70": 0, "116l": "c", "60l": "d", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 0, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Moderate", "4l": "d", "66l": "d", "119l": "d", "q64b": null, "95l": "d", "roundsai_obi": 50, "obi_yer": 0, "105l": "b", "106l": "d"}, "db_2010": {"35l": "d", "72l": "d", "roundobi_ar": 29, "pub_pbs": 1, "113l": "d", "54l": "c", "leg_obi": 47.25, "26l": "d", "67l": "d", "115l": "e", "30l": "b", "71l": "d", "47l": "c", "90": 100, "109l": "d", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 33.25, "9l": "b", "24": 0, "25": 0, "26": 0, "27": 100, "20": 100, "21": 100, "22": 0, "23": 0, "41l": "d", "q56b": 67, "53l": "c", "28": 100, "29": 0, "5l": "b", "obi_ar": 28.5714, "4": 100, "8": 100, "96": 100, "reg_mena": 0, "49l": "d", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 0, "13l": "c", "120": 67, "121": 67, "122": 67, "123": 67, "124": -1, "125": -1, "76l": "c", "15": 0, "21l": "a", "q58bl": "c", "39l": "d", "58": 0, "q56bl": "b", "81l": "b", "17": 67, "pbs": "PW", "61": 100, "34l": "d", "54": 33, "57": 0, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": "d", "52": 33, "comp0812": 0, "107l": "a", "q99b": 0, "108l": "d", "2l": "d", "64": 0, "comp0810": 0, "69l": "d", "obi_pbs": 89, "comp0610": 0, "comp0612": 0, "56": 100, "55": 67, "10l": "d", "24l": "d", "sai_obi": 56.7, "q63cl": "d", "eb": "PW", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "b", "83": 0, "80": 67, "81": 67, "119": 100, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "c", "roundobi_ebp": 39, "124l": "e", "pub_ar": 1, "3": 0, "reg_sa": 0, "7": 100, "3l": "d", "78l": "d", "q63b": null, "92": 100, "84l": "d", "90l": "a", "64l": "d", "q63bl": "e", "8l": "a", "82l": "c", "11l": "a", "comp0608": 1, "27l": "a", "29l": "d", "92l": "a", "70l": "d", "19l": "a", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "c", "104": -1, "105": 0, "101l": "a", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "d", "76": 33, "33": 100, "32": 0, "31": 0, "30": 0, "37": 33, "36": 67, "35": 0, "34": 0, "q64bl": "b", "59": 33, "roundobi_pbs": 89, "reg_ssa": 1, "pub_myr": 1, "q80b": null, "88": 67, "q60bl": "a", "79l": "b", "q97b": 33, "83l": "d", "grade_leg": "Moderate", "16l": "b", "37l": "c", "22l": "d", "pub_cb": 0, "53": 33, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2010, "rank": 60, "60": 67, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 0, "68": 0, "69": 0, "63l": "d", "121l": "b", "75l": "c", "pub_iyr": 0, "q65b": 33, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 0, "50l": "c", "86l": "c", "6": 0, "96l": "a", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 39.3818, "q97bl": "c", "17l": "b", "countryid": 100, "25l": "d", "112": -1, "38l": "d", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "b", "comp1012": 1, "99": 0, "98": -1, "45l": "c", "57l": "d", "91": 0, "q79b": 0, "93": 0, "122l": "b", "95": 0, "94": 67, "97": -1, "62l": "a", "11": 100, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 67, "103l": "e", "16": 67, "19": 100, "18": 100, "65l": "d", "obi": 35.8696, "roundobi_iyr": 0, "18l": "a", "roundobi_myr": 33, "52l": "c", "q70b": 67, "89": 0, "iyr": "IU", "85l": "d", "111": -1, "q80bl": "e", "country": "Zambia", "region": "Sub-Saharan Africa", "48l": "b", "roundobi": 36, "roundobi_yer": 33, "myr": "PW", "q70bl": "b", "q65bl": "c", "obi_eb": 100, "82": 33, "55l": "b", "ar": "PW", "61l": "a", "77l": "b", "14l": "b", "87l": "c", "89l": "b", "20l": "a", "87": 33, "68l": "d", "28l": "a", "63": 0, "countrylet": "ZMB", "48": 67, "49": 0, "46": 100, "47": 33, "44": 67, "45": 33, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "b", "q63c": 0, "5": 0, "84": 0, "9": 0, "85": 0, "73l": "b", "roundleg_obi": 47, "104l": "e", "23l": "b", "q99bl": "d", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 33, "74": 0, "73": 67, "72": 0, "71": 0, "70": 0, "116l": "e", "60l": "b", "74l": "d", "15l": "d", "79": 67, "78": 0, "q59bl": "d", "51": 33, "q60b": 100, "q57b": 0, "65": 0, "33l": "a", "q58b": 33, "80l": "b", "7l": "a", "yearid": 3, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "a", "q64b": 67, "95l": "d", "roundsai_obi": 57, "obi_yer": 33.4, "105l": "b", "106l": "c"}, "db_2006": {"35l": "d", "72l": "c", "roundobi_ar": 42, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 33.3333, "26l": "d", "67l": "c", "115l": "e", "30l": "b", "71l": "c", "47l": "d", "90": 100, "109l": "d", "99l": "d", "yer": "HC", "reg_lac": 0, "obi_myr": 16.5, "9l": "d", "24": 0, "25": 67, "26": 0, "27": 100, "20": 67, "21": 67, "22": 100, "23": 0, "41l": "d", "q56b": 33, "53l": "d", "28": 100, "29": 100, "5l": "b", "obi_ar": 41.75, "4": 100, "8": 100, "96": 33, "reg_mena": 0, "49l": "c", "93l": "d", "q59b": 0, "12l": "a", "111l": null, "86": 33, "obi_iyr": 41.5, "13l": "c", "120": 67, "121": 0, "122": 0, "123": -1, "124": -1, "125": -1, "76l": "d", "15": 0, "21l": "b", "q58bl": "d", "39l": "d", "58": 0, "q56bl": "c", "81l": "c", "17": 33, "pbs": "HC", "61": 100, "34l": "d", "54": 0, "57": 0, "40l": "d", "pub_ebp": 1, "50": 0, "q57bl": "d", "52": 0, "comp0812": 0, "107l": "a", "q99b": 33, "108l": "d", "2l": "b", "64": 100, "comp0810": 0, "69l": "d", "obi_pbs": 100, "comp0610": 0, "comp0612": 0, "56": 100, "55": 33, "10l": "d", "24l": "d", "sai_obi": 50, "q63cl": "d", "eb": "HC", "115": -1, "114": -1, "117": -1, "116": -1, "ebp": "HC", "110": -1, "113": 0, "44l": "b", "123l": "e", "83": 0, "80": 100, "81": 33, "119": 0, "118": -1, "obi_cat": "Minimal", "roundobi_cb": 0, "117l": "e", "43l": "d", "100l": "b", "51l": "d", "roundobi_ebp": 35, "124l": "e", "pub_ar": 1, "3": 67, "reg_sa": 0, "7": 100, "3l": "b", "78l": "b", "q63b": 0, "92": 100, "84l": "c", "90l": "a", "64l": "a", "q63bl": null, "8l": "a", "82l": "d", "11l": "c", "comp0608": 1, "27l": "a", "29l": "a", "92l": "a", "70l": "c", "19l": "b", "108": 0, "109": 0, "112l": null, "98l": "e", "31l": "d", "102": 33, "103": -1, "100": 67, "101": 100, "106": 33, "59l": "b", "104": -1, "105": 0, "101l": "a", "91l": "c", "39": 0, "38": 33, "42l": "d", "58l": "d", "76": 0, "33": 67, "32": 0, "31": 0, "30": 0, "37": 0, "36": 0, "35": 0, "34": 0, "q64bl": "b", "59": 67, "roundobi_pbs": 100, "reg_ssa": 1, "pub_myr": 1, "q80b": 100, "88": 67, "q60bl": "b", "79l": "c", "q97b": 33, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "d", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "e", "year": 2006, "rank": 40, "60": 100, "46l": "a", "62": 100, "pub_eb": 1, "56l": "a", "roundobi_eb": 100, "66": 0, "67": 33, "68": 100, "69": 0, "63l": "c", "121l": "d", "75l": "c", "pub_iyr": 1, "q65b": 67, "125l": "e", "110l": null, "114l": "e", "107": 100, "118l": "e", "2": 67, "50l": "d", "86l": "c", "6": 0, "96l": "c", "102l": "c", "88l": "b", "1l": "a", "q79bl": "b", "obi_ebp": 35.1455, "q97bl": "c", "17l": "c", "countryid": 100, "25l": "b", "112": -1, "38l": "c", "reg_eap": 0, "pub_yer": 1, "6l": "d", "36l": "d", "comp1012": 1, "99": 0, "98": -1, "45l": "d", "57l": "d", "91": 33, "q79b": 33, "93": 0, "122l": "d", "95": 0, "94": -1, "97": -1, "62l": "a", "11": 33, "10": 0, "13": 33, "12": 100, "order_cat": 2, "14": 33, "103l": "e", "16": 33, "19": 67, "18": 100, "65l": "e", "obi": 37.2826, "roundobi_iyr": 42, "18l": "a", "roundobi_myr": 17, "52l": "d", "q70b": 67, "89": 0, "iyr": "HC", "85l": "c", "111": -1, "q80bl": null, "country": "Zambia", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 37, "roundobi_yer": 40, "myr": "HC", "q70bl": "b", "q65bl": "b", "obi_eb": 100, "82": 0, "55l": "c", "ar": "HC", "61l": "a", "77l": "b", "14l": "c", "87l": "b", "89l": "d", "20l": "b", "87": 67, "68l": "a", "28l": "a", "63": 33, "countrylet": "ZMB", "48": 33, "49": 33, "46": 100, "47": 0, "44": 67, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "e", "q63c": 0, "5": 0, "84": 33, "9": 0, "85": 33, "73l": "c", "roundleg_obi": 33, "104l": "e", "23l": "d", "q99bl": "c", "reg_eca": 0, "reg_we": 0, "77": 67, "120l": "b", "75": 33, "74": 0, "73": 33, "72": 33, "71": 33, "70": 33, "116l": "e", "60l": "a", "74l": "d", "15l": "d", "79": 33, "78": 67, "q59bl": "d", "51": 0, "q60b": 67, "q57b": 0, "65": -1, "33l": "b", "q58b": 0, "80l": "a", "7l": "a", "yearid": 1, "32l": "d", "grade_sai": "Moderate", "4l": "a", "66l": "d", "119l": "d", "q64b": 67, "95l": "d", "roundsai_obi": 50, "obi_yer": 39.9, "105l": "b", "106l": "c"}}, {"alpha2": "ZW", "db_2012": {"35l": "d", "72l": "c", "roundobi_ar": 0, "pub_pbs": 1, "113l": "d", "54l": "d", "leg_obi": 23.3, "26l": "a", "67l": "b", "115l": "c", "30l": "b", "71l": "d", "47l": "d", "90": 0, "109l": "d", "99l": "b", "yer": "NP", "reg_lac": 0, "obi_myr": 0, "9l": "b", "24": 0, "25": 0, "26": 100, "27": 0, "20": 33, "21": 0, "22": 100, "23": 0, "41l": "d", "q56b": null, "53l": "d", "28": 33, "29": 100, "5l": "a", "obi_ar": 0, "4": 33, "8": 0, "96": 0, "reg_mena": 0, "49l": "d", "93l": "c", "q59b": null, "12l": "a", "111l": "d", "86": 0, "obi_iyr": 41.75, "13l": "d", "120": 33, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "76l": "d", "15": 0, "21l": "d", "q58bl": null, "39l": "d", "58": 33, "q56bl": null, "81l": "d", "17": 33, "pbs": "PW", "61": 67, "34l": "d", "54": 0, "57": 33, "40l": "d", "pub_ebp": 1, "50": 33, "q57bl": null, "52": 0, "comp0812": 0, "107l": "d", "q99b": null, "108l": "d", "2l": "d", "64": 100, "comp0810": 0, "69l": "d", "obi_pbs": 78, "comp0610": 0, "comp0612": 0, "56": 33, "55": 33, "10l": "d", "24l": "d", "sai_obi": 24.75, "q63cl": null, "eb": "HC", "115": 33, "114": 33, "117": 0, "116": 33, "ebp": "PW", "110": 0, "113": 0, "44l": "d", "123l": "d", "83": 0, "80": 0, "81": 0, "119": 67, "118": 0, "obi_cat": "Scant or no information", "roundobi_cb": 0, "117l": "d", "43l": "d", "100l": "c", "51l": "c", "roundobi_ebp": 22, "124l": "b", "pub_ar": 0, "3": 33, "reg_sa": 0, "7": 0, "3l": "c", "78l": "d", "q63b": null, "92": 33, "84l": "d", "90l": "b", "64l": "a", "q63bl": null, "8l": "d", "82l": "d", "11l": "d", "comp0608": 0, "27l": "d", "29l": "a", "92l": "c", "70l": "d", "19l": "d", "108": 0, "109": 0, "112l": "d", "98l": "d", "31l": "d", "102": 33, "103": 0, "100": 33, "101": 67, "106": 0, "59l": "c", "104": 0, "105": -1, "101l": "b", "91l": "d", "39": 0, "38": 0, "42l": "d", "58l": "c", "76": 0, "33": 0, "32": 0, "31": 0, "30": 0, "37": 33, "36": 0, "35": 0, "34": 0, "q64bl": null, "59": 33, "roundobi_pbs": 78, "reg_ssa": 1, "pub_myr": 0, "q80b": null, "88": 0, "q60bl": null, "79l": "d", "q97b": null, "83l": "d", "grade_leg": "Weak", "16l": "c", "37l": "c", "22l": "a", "pub_cb": 0, "53": 0, "cb": "NP", "obi_cb": 0, "97l": "b", "year": 2012, "rank": 75, "60": 100, "46l": "d", "62": 67, "pub_eb": 1, "56l": "c", "roundobi_eb": 67, "66": 0, "67": 67, "68": 100, "69": 0, "63l": "b", "121l": "d", "75l": "d", "pub_iyr": 1, "q65b": null, "125l": "d", "110l": "d", "114l": "c", "107": 0, "118l": "d", "2": 0, "50l": "c", "86l": "d", "6": 67, "96l": "d", "102l": "c", "88l": "d", "1l": "a", "q79bl": null, "obi_ebp": 22.3448, "q97bl": null, "17l": "c", "countryid": 101, "25l": "d", "112": 0, "38l": "d", "reg_eap": 0, "pub_yer": 0, "6l": "b", "36l": "d", "comp1012": 0, "99": 67, "98": 0, "45l": "d", "57l": "c", "91": 0, "q79b": null, "93": 33, "122l": "d", "95": 0, "94": 33, "97": 67, "62l": "b", "11": 0, "10": 0, "13": 0, "12": 100, "order_cat": 1, "14": 67, "103l": "d", "16": 33, "19": 0, "18": 100, "65l": "d", "obi": 20.3263, "roundobi_iyr": 42, "18l": "a", "roundobi_myr": 0, "52l": "d", "q70b": null, "89": 0, "iyr": "PW", "85l": "d", "111": 0, "q80bl": null, "country": "Zimbabwe", "region": "Sub-Saharan Africa", "48l": "c", "roundobi": 20, "roundobi_yer": 0, "myr": "NP", "q70bl": null, "q65bl": null, "obi_eb": 67, "82": 0, "55l": "c", "ar": "NP", "61l": "b", "77l": "d", "14l": "b", "87l": "d", "89l": "b", "20l": "c", "87": 0, "68l": "a", "28l": "c", "63": 67, "countrylet": "ZIM", "48": 33, "49": 0, "46": 0, "47": 0, "44": 0, "45": 0, "42": 0, "43": 0, "40": 0, "41": 0, "1": 100, "94l": "c", "q63c": null, "5": 100, "84": 0, "9": 0, "85": 0, "73l": "d", "roundleg_obi": 23, "104l": "d", "23l": "b", "q99bl": null, "reg_eca": 0, "reg_we": 0, "77": 0, "120l": "c", "75": 0, "74": 0, "73": 0, "72": 33, "71": 0, "70": 0, "116l": "c", "60l": "a", "74l": "d", "15l": "d", "79": 0, "78": 0, "q59bl": null, "51": 33, "q60b": null, "q57b": null, "65": 0, "33l": "d", "q58b": null, "80l": "d", "7l": "d", "yearid": 4, "32l": "d", "grade_sai": "Weak", "4l": "c", "66l": "d", "119l": "b", "q64b": null, "95l": "d", "roundsai_obi": 25, "obi_yer": 0, "105l": "c", "106l": "d"}, "name": "Zimbabwe"}], "downloads": [{"size": "266kb", "format": "Excel", "filename": "ibp_data.xlsx"}, {"size": "315kb", "format": "CSV", "filename": "ibp_data_csv.zip"}, {"size": "1,551kb", "format": "JSON", "filename": "ibp_data.json"}], "question": {"1": {"a": "All expenditures are classified by administrative unit", "c": "Expenditures are classified by administrative unit, but those for a significant number of units are not presented separately.  ", "b": "Expenditures are classified by administrative unit, but expenditures for some small units are not presented separately. ", "e": "Not applicable/other (please comment). ", "d": "No expenditures classified by administrative unit are presented", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present  expenditures for the budget year that are classified by administrative unit (that is, by ministry, department, or agency)? ", "number": 1}, "2": {"a": "All expenditures are presented by functional classification, and the categorization is compatible with international standards.", "c": "Some, but not all, expenditures are presented by functional classification.", "b": "All expenditures are presented by functional classification, but the categorization is not compatible with international standards.", "e": "Not applicable/other (please comment).", "d": "No expenditures classified by function are presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for the budget year by functional classification?", "number": 2}, "3": {"a": "All expenditures are presented by economic classification, and the categorization is compatible with international standards.", "c": "Some, but not all, expenditures are presented by economic classification.", "b": "All expenditures are presented by economic classification, but the categorization is not compatible with international standards.", "e": "Not applicable/other (please comment).", "d": "No expenditures classified by economic classification are presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for the budget year that are presented by economic classification?", "number": 3}, "4": {"a": " Program-level data are presented for all expenditures.", "c": "Program-level data are presented, but for less than two-thirds of expenditures.", "b": "Program-level data are presented for at least two-thirds of, but not all, expenditures.", "e": "Not applicable/other (please comment).", "d": "No program-level data are presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for individual programs for the budget year?", "number": 4}, "5": {"a": "Yes, multi-year estimates of aggregate expenditure are presented.", "c": " Not applicable/other (please comment).", "b": "No, multi-year estimates of aggregate expenditure are not presented.", "e": null, "d": null, "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation are estimates of the aggregate level of expenditure presented for a multi-year period (at least two years beyond the budget year)?", "number": 5}, "6": {"a": "Yes, multi-year expenditure estimates are presented for all individual programs, and for one or more expenditure classification (such as functional, economic, or administrative).", "c": "Yes, multi-year estimates are presented, but only for a portion of one or more of the expenditure classifications (such as some functions, or some administrative units) and/or for only some individual programs.", "b": "Yes, multi-year estimates are presented for one or more expenditure classification (such as functional, economic, or administrative), but only for some individual programs.", "e": "Not applicable/other (please comment).", "d": "No, multi-year estimates are presented for aggregate expenditure only, or they are not presented at all.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation is more detail in addition to the aggregate level presented for expenditure estimates that cover a multi-year period (for at least two years beyond the budget year)?", "number": 6}, "7": {"a": "All sources of tax revenue are identified individually.", "c": " Sources of tax revenue amounting to less than two-thirds of all tax revenues are identified individually.", "b": "Sources of tax revenue amounting to at least two-thirds of but not all tax revenues are identified individually.", "e": "Not applicable/other (please comment).", "d": "No sources of tax revenue are identified individually.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation identify the different sources of tax revenue (such as income tax or VAT) for the budget year?", "number": 7}, "8": {"a": "All sources of non-tax revenue are identified individually.", "c": "Sources of non-tax revenue amounting to less than two-thirds of all non-tax revenue are identified individually.", "b": " Sources of non-tax revenue amounting to at least two-thirds of, but not all, non-tax revenues are identified individually.", "e": "Not applicable/other (please comment).", "d": "No sources of non-tax revenue are identified individually.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation identify the different sources of non-tax revenue (such as grants, property income, and sales of government-produced goods and services) for the budget year?", "number": 8}, "9": {"a": "Yes, multi-year estimates of aggregate revenue are presented.", "c": "Not applicable/other (please comment).", "b": "No, multi-year estimates of aggregate revenue are not presented.", "e": null, "d": null, "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation are estimates of the aggregate level of revenue presented for a multi-year period (at least two years beyond the budget year)?", "number": 9}, "10": {"a": "Yes, multi-year revenue estimates are presented for individual sources of revenue, and by revenue classification (such as tax and non-tax).", "c": "Yes, multi-year estimates are presented, but only for some individual sources of revenue.", "b": "Yes, multi-year estimates are presented by revenue classification (such as tax and non-tax), but only for some individual sources of revenue.", "e": "Not applicable/other (please comment).", "d": "No, multi-year estimates are presented for aggregate revenue only, or they are not presented at all.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation is more detail in addition to the aggregate level presented for revenue estimates that cover a multi-year period (for at least two years beyond the budget year)?", "number": 10}, "11": {"a": "Yes, the data reflect the outstanding debt both at the start of the budget year and at the end of the budget year (and thereby reflect the net borrowing requirement of the budget).", "c": " Yes, the data reflect the outstanding debt at the start of the budget year.", "b": "Yes, the data reflect the outstanding debt at the end of the budget year.", "e": "Not applicable/other (please comment).", "d": "No, data on the outstanding debt are not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present data on the total government debt outstanding for the budget year?", "number": 11}, "12": {"a": "Yes, interest payments on the debt are presented.", "c": "Not applicable/other (please comment).", "b": " No, interest payments on the debt are not presented.", "e": null, "d": null, "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present interest payments on the debt for the budget year?", "number": 12}, "13": {"a": "Yes, extensive information related to the composition of government debt is presented.", "c": " Yes, some additional information is presented, but it lacks important details.", "b": " Yes, key additional information is presented, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, additional information related to the composition of government debt is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information related to the composition of government debt (such as interest rates on the debt, maturity profile of the debt, currency denomination of the debt, or whether it is domestic or external debt) for the budget year?", "number": 13}, "14": {"a": " Yes, an extensive discussion of the macroeconomic forecast is presented, and key assumptions (for such factors as inflation, real GDP growth, unemployment rate, and interest rates) are stated explicitly.", "c": " Yes, there is some discussion of the macroeconomic forecast (and/or the presentation of key assumptions), but it lacks important details.", "b": "Yes, the macroeconomic forecast is discussed and most of the key assumptions are stated explicitly, but some details are excluded.", "e": " Not applicable/other (please comment).", "d": "No, information related to the macroeconomic forecast is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present the macroeconomic forecast upon which the budget projections are based?", "number": 14}, "15": {"a": "Yes, extensive information on the impact of macroeconomic assumptions on the budget is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting the impact of the major macroeconomic assumptions, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on the impact of different macroeconomic assumptions on the budget is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation show the impact of different macroeconomic assumptions (i.e., sensitivity analysis) on the budget (including impacts on expenditures, revenues, and debt)?", "number": 15}, "16": {"a": "Yes, extensive information on the impact of policy proposals on expenditures is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some information is presented, but it lacks important details.", "b": " Yes, information is presented, highlighting the impact of key policy proposals on expenditures, but some details are excluded.", "e": " Not applicable/other (please comment).", "d": "No, information on the impact of policy proposals on expenditures is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information for at least the budget year that shows how policy proposals, as distinct from existing policies, affect expenditures?", "number": 16}, "17": {"a": " Yes, extensive information on the impact of policy proposals on revenues is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting the impact of key policy proposals on revenues, but some details are excluded.", "e": " Not applicable/other (please comment).", "d": "No, information on the impact of policy proposals on revenues is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information for at least the budget year that shows how policy proposals, as distinct from existing policies, affect revenues?", "number": 17}, "18": {"a": "All expenditures are classified by administrative unit for BY-1.", "c": " Expenditures are classified by administrative unit for BY-1, but a significant number of units are not shown separately.", "b": "Expenditures are classified by administrative unit for BY-1, but some small units are not shown separately.", "e": "Not applicable/other (please comment).", "d": " No expenditures classified by administrative unit are presented for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for the year preceding the budget year (BY-1) that are classified by administrative unit (that is, by ministry, department, or agency)?", "number": 18}, "19": {"a": " All expenditures are classified by functional classification for BY-1, and the categorization is compatible with international standards.", "c": " Some, but not all, expenditures are classified by function for BY-1.", "b": "All expenditures are classified by functional classification for BY-1, but the categorization is not compatible with international standards.", "e": " Not applicable/other (please comment).", "d": " No expenditures classified by function are presented for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for the year preceding the budget year (BY-1) that are classified by functional classification?", "number": 19}, "20": {"a": "All expenditures are classified by economic classification for BY-1, and the categorization is compatible with international standards.", "c": " Some, but not all, expenditures are classified by economic classification for BY-1.", "b": "All expenditures are classified by economic classification for BY-1, but the categorization is not compatible with international standards.", "e": "Not applicable/other (please comment).", "d": "No expenditures classified by economic classification are presented for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for the year preceding the budget year (BY-1) that are classified by economic classification?", "number": 20}, "21": {"a": "Program-level expenditure data are presented for all expenditures for BY-1.", "c": "Program-level expenditure data are presented, but for less than two-thirds of expenditures for BY-1.", "b": " Program-level expenditure data are presented for at least two-thirds of, but not all, expenditures for BY-1.", "e": " Not applicable/other (please comment).", "d": " No program-level expenditure data are presented for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present expenditures for individual programs for the year preceding the budget year (BY-1)?", "number": 21}, "22": {"a": " All BY-1 estimates have been updated from the original enacted levels to reflect six or more months of actual expenditure.", "c": " Some BY-1 estimates have been updated from the original enacted levels to reflect actual expenditure.", "b": "All BY-1 estimates have been updated from the original enacted levels but reflect less than six months of actual expenditure.", "e": " Not applicable/other (please comment).", "d": "The BY-1 estimates have not been updated from the original enacted levels, or no BY-1 estimates are presented.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation, how many months of data on actual expenditures are reflected in the expenditure estimates of the year prior to the budget year (BY-1)?", "number": 22}, "23": {"a": "Yes, such prior-year estimates of aggregate expenditure are presented.", "c": " Not applicable/other (please comment).", "b": "No, such prior-year estimates of aggregate expenditure are not presented.", "e": null, "d": null, "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation are estimates of the aggregate level of expenditure presented for more than one year prior to the budget year (that is, BY-2 and prior years)?", "number": 23}, "24": {"a": "Yes, such prior-year expenditure estimates are presented for all individual programs, and for one or more expenditure classification (such as functional, economic, or administrative).", "c": "Yes, such prior-year estimates are presented, but only for a portion of one or more of the expenditure classifications (such as some functions, or some administrative units) and/or for only some individual programs.", "b": " Yes, such prior-year estimates are presented for one or more expenditure classification (such as functional, economic, or administrative), but only for some individual programs.", "e": " Not applicable/other (please comment).", "d": "No, such prior-year estimates are presented for aggregate expenditure only, or they are not presented at all.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present more detail in addition to the aggregate level for expenditure estimates that cover more than one year prior to the budget year (that is, BY-2 and prior years)?", "number": 24}, "25": {"a": "Two years prior to the budget year (BY-2).", "c": " Before BY-3.", "b": "Three years prior to the budget year (BY-3).", "e": " Not applicable/other (please comment).", "d": "No actual data for all expenditures are presented in the budget or supporting budget documentation.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation, what is the most recent year presented for which all expenditures reflect actual outcomes?", "number": 25}, "26": {"a": "Yes, prior-year data are always adjusted to be comparable to the budget year data.", "c": "Yes, in some cases, prior-year data are adjusted to be comparable, but significant deviations between prior-year and budget-year classifications exist.", "b": "Yes, in most cases, prior-year data are adjusted to be comparable.", "e": " Not applicable/other (please comment).", "d": "No, prior-year data are not adjusted to be comparable, or no prior-year estimates are presented.", "text": "Are the expenditure estimates for the years prior to the budget year adjusted as needed to be comparable with the budget-year estimates in terms of classification and presentation?", "number": 26}, "27": {"a": "All tax revenues are identified individually for BY-1.", "c": " Tax revenues amounting to less than two-thirds of all tax revenues for BY-1 are identified individually.", "b": "Tax revenues amounting to at least two-thirds of, but not all, tax revenue for BY-1 are identified individually.", "e": "Not applicable/other (please comment).", "d": " No tax revenues are identified individually for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation identify the different sources of tax revenue (such as income tax or VAT) for the year preceding the budget year (BY-1)?", "number": 27}, "28": {"a": "All non-tax revenues are identified individually for BY-1.", "c": "Non-tax revenues amounting to less than two-thirds of all non-tax  revenues for BY-1 are identified individually.", "b": " Non-tax revenues amounting to at least two-thirds of, but not all, non-tax revenue for BY-1 are identified individually.", "e": "Not applicable/other (please comment).", "d": "No non-tax revenues are identified individually for BY-1.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation identify the different sources of non-tax revenue (such as grants, property income, and sales of goods and services) for the year preceding the budget year (BY-1)?", "number": 28}, "29": {"a": "All BY-1 estimates have been updated from the original estimates to reflect six or more months of actual revenue collections.", "c": " Some BY-1 estimates have not been updated from the original estimates to reflect actual revenue collections.", "b": " All BY-1 estimates have been updated from the original estimates but reflect less than six months of actual revenue collections.", "e": "Not applicable/other (please comment).", "d": "The BY-1 estimates have not been updated from the original estimates, or no BY-1 estimates are presented.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation, how many months of data on actual revenues are reflected in the revenue estimates of the year prior to the budget year (BY-1)?", "number": 29}, "30": {"a": " Yes, such prior-year estimates of aggregate revenue are presented.", "c": " Not applicable/other (please comment).", "b": " No, such prior-year estimates of aggregate revenue are not presented.", "e": null, "d": null, "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation are estimates of the aggregate level of revenues presented for more than one year prior to the budget year (that is, BY-2 and prior years)?", "number": 30}, "31": {"a": "Yes, such prior-year revenue estimates are presented for individual sources of revenue, and by revenue classification (such as tax and non-tax).", "c": " Yes, such prior-year estimates are presented, but only for some individual sources of revenue.", "b": "Yes, such prior-year estimates are presented by revenue classification (such as tax and non-tax), but only for some individual sources of revenue.", "e": "Not applicable/other (please comment).", "d": "No, such prior-year estimates are presented for aggregate revenue only, or they are not presented at all.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation is more detail in addition to the aggregate level presented for revenue estimates for more than one year prior to the budget year (that is, BY-2 and prior years)?", "number": 31}, "32": {"a": "Two years prior to the budget year (BY-2).", "c": " Before BY-3.", "b": "Three years prior to the budget year (BY-3).", "e": "Not applicable/other (please comment).", "d": "No actual data for all revenues are presented in the budget or supporting budget documentation.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation, what is the most recent year presented for which all revenues reflect actual outcomes?", "number": 32}, "33": {"a": "Yes, extensive information is presented on the level and composition of government debt for the year preceding the budget year.", "c": "Yes, but only information on the level of debt is presented.", "b": "Yes, information on the level of debt is presented, but some important details about the composition of the debt are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information related to the government debt for BY-1 is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information related to the government debt for the year preceding the budget year?", "number": 33}, "34": {"a": "Two years prior to the budget year (BY-2).", "c": " Before BY-3.", "b": "Three years prior to the budget year (BY-3).", "e": " Not applicable/other (please comment).", "d": " No actual data for government debt are presented in the budget or supporting budget documentation.", "text": "In the Executive\u2019s Budget Proposal or any supporting budget documentation, what is the most recent year presented for which the debt figures reflect actual outcomes?", "number": 34}, "35": {"a": "Yes, extensive information on extra-budgetary funds is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key extra-budgetary funds, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on extra-budgetary funds is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on extra-budgetary funds for at least the budget year?", "number": 35}, "36": {"a": " Yes, extensive information on intergovernmental transfers is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key intergovernmental transfers, but some details are excluded.", "e": " Not applicable/other (please comment).", "d": "No, information on intergovernmental transfers is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on intergovernmental transfers for at least the budget year?", "number": 36}, "37": {"a": " Yes, extensive information on transfers to public corporations is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key transfers to public corporations, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on transfers to public corporations is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on transfers to public corporations for at least the budget year?", "number": 37}, "38": {"a": "Yes, extensive information on quasi-fiscal activities is presented, including both a narrative discussion and, where possible, quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key quasi-fiscal activities, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on quasi-fiscal activities is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on quasi-fiscal activities for at least the budget year?", "number": 38}, "39": {"a": "Yes, extensive information on financial assets is presented, including a listing of the assets, a discussion of their purpose, and an estimate of their market value.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key information, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on financial assets is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on financial assets held by the government?", "number": 39}, "40": {"a": "Yes, extensive information on nonfinancial assets is presented, including a listing of the assets and, where possible, an estimate of their market value.", "c": " Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key information, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No information on nonfinancial assets is presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on nonfinancial assets held by the government?", "number": 40}, "41": {"a": "Yes, extensive information on expenditure arrears is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": " Yes, information is presented, highlighting key expenditure arrears, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on expenditure arrears is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on expenditure arrears for at least the budget year?", "number": 41}, "42": {"a": "Yes, extensive information on contingent liabilities is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key contingent liabilities, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on contingent liabilities is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on contingent liabilities (such as government loan guarantees)?", "number": 42}, "43": {"a": "Yes, extensive information on future liabilities is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key future liabilities, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on future liabilities is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on future liabilities, such as civil service pensions?", "number": 43}, "44": {"a": "All sources of donor assistance are identified individually.", "c": "Less than two-thirds of sources of donor assistance are identified individually.", "b": "At least two-thirds of, but not all, sources of donor assistance are identified individually.", "e": "Not applicable/other (please comment).", "d": "No sources of donor assistance are identified individually.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation provide details on the sources of donor assistance, both financial and in-kind?", "number": 44}, "45": {"a": "Yes, extensive information on tax expenditures is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key tax expenditures, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on tax expenditures is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on tax expenditures for at least the budget year?", "number": 45}, "46": {"a": " All earmarked revenues are identified individually.", "c": " Less than two-thirds of earmarked revenues are identified individually.", "b": "At least two-thirds of, but not all, earmarked revenues are identified individually.", "e": " Not applicable/other (please comment).", "d": " No earmarked revenues are identified individually.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation identify all earmarked revenues?", "number": 46}, "47": {"a": "One percent or less of expenditure is dedicated to secret items.", "c": "Eight percent or less, but more than three percent, of expenditure is dedicated to secret items.", "b": "Three percent or less, but more than one percent, of expenditure is dedicated to secret items.", "e": " Not applicable/other (please comment).", "d": " More than eight percent of expenditure is dedicated to secret items, or the percentage is not available to the public.", "text": "What percentage of expenditure in the budget year is dedicated to spending on secret items relating to, for instance, national security and military intelligence?", "number": 47}, "48": {"a": " Yes, extensive information on the link between the budget and the government\u2019s stated policy goals, by administrative unit or functional category, is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting the link between major policy goals and the budget, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information on the link between the budget and the government\u2019s stated policy goals is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation explain how the proposed budget is linked to government\u2019s stated policy goals, by administrative unit or functional category, for the budget year?", "number": 48}, "49": {"a": "Yes, extensive information on the link between the budget and the government\u2019s stated policy goals over a multi-year period is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some information is presented, but it lacks important details.", "b": " Yes, information is presented, highlighting the major policy goals, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on the link between the budget and the government\u2019s stated policy goals over a multi-year period is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation explain how the proposed budget is linked to government\u2019s stated policy goals for a multi-year period (for at least two years beyond the budget year)?", "number": 49}, "50": {"a": "Nonfinancial data are presented for all programs.", "c": " Nonfinancial data are presented for programs representing less than two-thirds of expenditure.", "b": " Nonfinancial data are presented for programs representing at least two-thirds of, but not all, expenditures.", "e": " Not applicable/other (please comment).", "d": "No nonfinancial data are presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present nonfinancial data, such as the number of beneficiaries, for expenditure programs?", "number": 50}, "51": {"a": "The nonfinancial data are very useful for assessing program performance.", "c": "The nonfinancial data are somewhat useful for assessing program performance.", "b": "The nonfinancial data are mostly useful for assessing program performance.", "e": null, "d": "No nonfinancial data are provided or they are not useful for assessing program performance.", "text": "Are the nonfinancial data presented useful for assessing how an expenditure program is performing?", "number": 51}, "52": {"a": " Performance indicators are presented for all programs.", "c": "Performance indicators are presented for programs representing less than two-thirds of expenditures.", "b": "Performance indicators are presented for programs representing at least two-thirds of, but not all, expenditures.", "e": " Not applicable/other (please comment).", "d": " No performance indicators are presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation contain performance indicators for expenditure programs?", "number": 52}, "53": {"a": "All performance indicators are well designed.", "c": " Some performance indicators are well designed, but most are not.", "b": "Most performance indicators are well designed.", "e": "Not applicable/other (please comment).", "d": "No programs have performance indicators, or they are not well designed.", "text": "Are the performance indicators sufficiently well designed, such that one can assess whether there has been progress toward meeting policy goals?", "number": 53}, "54": {"a": "All performance indicators are used in conjunction with performance targets.", "c": "Some performance indicators are used in conjunction with performance targets, but most are not.", "b": "Most performance indicators are used in conjunction with performance targets.", "e": " Not applicable/other (please comment).", "d": "No performance indicators are used in conjunction with performance targets.", "text": "Are performance indicators used in conjunction with performance targets presented in the Executive\u2019s Budget Proposal or any supporting budget documentation?", "number": 54}, "55": {"a": "Yes, extensive information on policies intended to alleviate poverty is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting the impact of key policies intended to alleviate poverty, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, information on policies intended to alleviate poverty is not presented.", "text": "Does the Executive\u2019s Budget Proposal or any supporting budget documentation present information on policies (both proposals and existing commitments) that are intended to benefit directly the country\u2019s most impoverished populations in at least the budget year?", "number": 55}, "56": {"a": " The release date is set in permanent law. ", "c": "The executive announces the release date less than two months, but more than two weeks, in advance. ", "b": "The executive announces the release date at least two months in advance. ", "e": "Not applicable/other (please comment). ", "d": " The executive announces the release date two weeks or less before the release, or makes no announcement. ", "text": "How far in advance of the release of the budget is the day of its release known? ", "number": 56}, "57": {"a": " Yes, a detailed timetable is released to the public.", "c": "Yes, a timetable is released, but it lacks important details.", "b": "Yes, a timetable is released, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, a timetable is not issued to the public.", "text": "Does the executive release to the public its timetable for formulating the Executive\u2019s Budget Proposal (that is, a document setting deadlines for submissions from other government entities, such as line ministries or subnational government, to the Ministry of Finance or whatever central government agency is in charge of coordinating the budget\u2019s formulation)?", "number": 57}, "58": {"a": "The executive adheres to the dates in its timetable.", "c": " The executive has difficulty adhering to most of the dates in its timetable.", "b": "The executive adheres to most of the key dates in its timetable.", "e": "Not applicable/other (please comment).", "d": "The executive does not adhere to the dates in its timetable, or it does not release to the public its timetable.", "text": "Does the executive adhere to its timetable for the preparation and release of the budget?", "number": 58}, "59": {"a": " Yes, the executive holds extensive consultations with a wide range of legislators.", "c": " Yes, the executive holds very limited consultations, involving only a few members of the legislature.", "b": " Yes, the executive holds consultations with a range of legislators, but some key members are excluded.", "e": "Not applicable/other (please comment).", "d": "No, the executive does not typically consult with members of the legislature as part of the budget preparation process.", "text": "Does the executive hold consultations with members of the legislature as part of its process of determining budget priorities?", "number": 59}, "60": {"a": "The executive releases a Pre-Budget Statement at least four months in advance of the start of the budget year.", "c": " The executive releases a Pre-Budget Statement, but it is released less than two months before the start of the budget year.", "b": "The executive releases a Pre-Budget Statement at least two months (but less than four months) in advance of the start of the budget year.", "e": " Not applicable/other (please comment).", "d": "The executive does not release a Pre-Budget Statement.", "text": "When does the executive release a Pre-Budget Statement to the public?", "number": 60}, "61": {"a": " Yes, an extensive explanation of the government\u2019s fiscal and macroeconomic policy is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some explanation is presented, but it lacks important details.", "b": " Yes, an explanation is presented that highlights key aspects of the fiscal and macroeconomic framework, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or the executive does not release to the public a Pre-Budget Statement.", "text": "Does the Pre-Budget Statement describe the government\u2019s macroeconomic and fiscal framework?", "number": 61}, "62": {"a": "Yes, an extensive explanation of the government\u2019s budget policies and priorities is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some explanation is presented, but it lacks important details.", "b": "Yes, an explanation is presented, highlighting key aspects of the government\u2019s budget policies and priorities, but some details are excluded.", "e": " Not applicable/other (please comment).", "d": " No, an explanation is not presented, or the executive does not release to the public a Pre-Budget Statement.", "text": "Does the Pre-Budget Statement describe the government\u2019s policies and priorities that will guide the development of detailed estimates for the upcoming budget?", "number": 62}, "63": {"a": " In-Year Reports on actual expenditure are released at least every month.", "c": "In-Year Reports on actual expenditure are released at least semi-annually.", "b": "In-Year Reports on actual expenditure are released at least every quarter.", "e": "Not applicable/other (please comment).", "d": "In-Year Reports on actual expenditure are not released.", "text": "How often does the executive release to the public In-Year Reports on actual expenditure (organized by administrative unit, economic classification, and/or function)?", "number": 63}, "64": {"a": " In-Year Reports cover all expenditures.", "c": " In-Year Reports cover less than two-thirds of expenditures.", "b": "In-Year Reports cover at least two-thirds, but not all, of expenditures.", "e": "Not applicable/other (please comment).", "d": "No In-Year Reports are released to the public.", "text": "What share of expenditure is covered by In-Year Reports on actual expenditure (organized by administrative unit, economic classification, and/or function)?", "number": 64}, "65": {"a": "The In-Year Reports on actual expenditures organized by administrative unit contain program-level detail.", "c": "The In-Year Reports on actual expenditures organized by administrative unit contain only departmental totals.", "b": "The In-Year Reports on actual expenditures organized by administrative unit contain departmental totals and some additional details (for instance, subdepartment totals or major programs).", "e": "Not applicable/other (please comment).", "d": "The In-Year Reports on actual expenditures organized by administrative unit are not released to the public, not produced, or contain less information than at least departmental totals.", "text": "What is the most detail provided in the In-Year Reports on actual expenditures organized by administrative unit?", "number": 65}, "66": {"a": " Yes, comparisons are made for all expenditures.", "c": "Yes, but comparisons are made for less than two-thirds of expenditures.", "b": "Yes, comparisons are made for at least two-thirds of, but not all, expenditures.", "e": "Not applicable/other (please comment).", "d": "No, comparisons are not made, or no In-Year Reports are released to the public.", "text": "Do the In-Year Reports released to the public compare actual year-to-date expenditures with either the original estimate for that period (based on the enacted budget) or the same period in the previous year?", "number": 66}, "67": {"a": " In-Year Reports on actual revenue collections by source of revenue are released at least every month.", "c": "In-Year Reports on actual revenue collections are released at least semi-annually.", "b": "In-Year Reports on actual revenue collections are released at least every quarter.", "e": " Not applicable/other (please comment).", "d": "In-Year Reports on actual revenue collections by source of revenue are not released.", "text": "How often does the executive release to the public In-Year Reports on actual revenue collections by source of revenue?", "number": 67}, "68": {"a": " In-Year Reports cover the actual revenue collections of all sources of revenue.", "c": " In-Year Reports cover actual revenue collections of less than two-thirds of revenue sources.", "b": " In-Year Reports cover the actual revenue collections of at least two-thirds of, but not all, sources of revenue.", "e": " Not applicable/other (please comment).", "d": "In-Year Reports on actual revenue collections are not released to the public.", "text": "What share of revenue is covered by the In-Year Reports on actual revenue collections?", "number": 68}, "69": {"a": "Yes, comparisons are made for all revenue sources.", "c": " Yes, but comparisons are made for less than two-thirds of revenue sources.", "b": "Yes, comparisons are made for at least two-thirds of, but not all, revenue sources.", "e": " Not applicable/other (please comment).", "d": "No, comparisons are not made, or no In-Year Reports are released to the public.", "text": "Do the In-Year Reports released to the public compare actual year-to-date revenue collections with either the original estimate for that period (based on the enacted budget) or the same period in the previous year?", "number": 69}, "70": {"a": "Yes, In-Year Reports on actual borrowing are released at least every month.", "c": " Yes, In-Year Reports on actual borrowing are released at least semi-annually.", "b": " Yes, In-Year Reports on actual borrowing are released at least every quarter.", "e": " Not applicable/other (please comment). ", "d": "No, In-Year Reports on actual borrowing are not released. ", "text": "Does the executive release to the public In-Year Reports on actual borrowing?", "number": 70}, "71": {"a": "Yes, extensive information related to the composition of government debt is presented.", "c": " Yes, some additional information is presented, but it lacks important details.", "b": "Yes, key additional information is presented, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, additional information related to the composition of government debt is not presented, or such In-Year Reports on borrowing are not released.", "text": "Do In-Year Reports released to the public on actual borrowing present information related to the composition of government debt (such as interest rates on the debt, maturity profile of the debt, and currency denomination of the debt) for the budget year?", "number": 71}, "72": {"a": " Reports are released one month or less after the end of the period.", "c": "Reports are released more than two months after the end of the period.", "b": "Reports are released two months or less (but more than one month) after the end of the period.", "e": "Not applicable/other (please comment).", "d": "In-year Reports are not released.", "text": "For In-Year Reports on actual expenditure released to the public by the executive, how much time typically elapses between the end of the reporting period and when the report is released (e.g., are quarterly reports released less than four weeks after the end of the quarter)?", "number": 72}, "73": {"a": "Yes, the Mid-Year Review includes an extensive discussion of the economy that includes a revised forecast for the full fiscal year and its effects on the budget.", "c": "Yes, the Mid-Year Review includes a discussion of the economy, but it lacks important details. ", "b": "Yes, the Mid-Year Review includes a discussion of the economy, but it lacks some details.", "e": "Not applicable/other (please comment).", "d": "No, the Mid-Year Review does not include a discussion of the economy, or the executive does not release a Mid-Year Review of the budget.", "text": "Does the executive release to the public a Mid-Year Review of the budget that discusses the changes in economic outlook since the budget was enacted?", "number": 73}, "74": {"a": "Yes, the Mid-Year Review includes updated expenditure estimates for the full fiscal year, providing extensive information on why estimates have changed from the original enacted levels. ", "c": " Yes, the Mid-Year Review includes updated estimates of expenditure, but important details on why estimates have changed are not provided. ", "b": "Yes, the Mid-Year Review includes updated estimates of expenditure, but some details on why estimates have changed are not provided. ", "e": "Not applicable/other (please comment). ", "d": "No, the Mid-Year Review does not include updated expenditure estimates for the budget year, or the executive does not release a Mid-Year Review of the budget. ", "text": "Does the executive release to the public a Mid-Year Review of the budget that includes updated expenditure estimates for the budget year underway? ", "number": 74}, "75": {"a": "The Mid-Year Review includes program-level detail for expenditures.", "c": " The Mid-Year Review includes only departmental totals (or functional totals).", "b": " The Mid-Year Review includes departmental totals (or functional totals) and some additional details (for instance, subdepartment totals or major programs).", "e": "Not applicable/other (please comment).", "d": "The Mid-Year Review includes less information than departmental totals (or functional totals) for expenditures, or the executive does not release a Mid-Year Review of the budget.", "text": "What is the most detail provided in the Mid-Year Review for expenditures?", "number": 75}, "76": {"a": "Yes, the Mid-Year Review includes updated revenue estimates for the full fiscal year, providing extensive information on why estimates have changed from the original enacted levels.", "c": "Yes, the Mid-Year Review includes updated estimates of revenue, but important details on why estimates have changed are not provided.", "b": "Yes, the Mid-Year Review includes updated estimates of revenue, but some details on why estimates have changed are not provided.", "e": "Not applicable/other (please comment).", "d": "No, the Mid-Year Review does not include updated revenue estimates for the budget year, or the executive does not release a Mid-Year Review of the budget.", "text": "Does the executive release to the public a Mid-Year Review of the budget that includes updated revenue estimates for the budget year underway?", "number": 76}, "77": {"a": "The Year-End Report is released six months or less after the end of the fiscal year.", "c": "The Year-End Report is released more than 12 months after the end of the fiscal year.", "b": "The Year-End Report is released 12 months or less (but more than six months) after the end of the fiscal year.", "e": "Not applicable/other (please comment).", "d": "The executive does not release a Year-End Report.", "text": "How long after the end of the budget year does the executive release to the public a Year-End Report that discusses the budget\u2019s actual outcome for the year?", "number": 77}, "78": {"a": "Yes, all data on actual outcomes have been audited.", "c": " Less than two-thirds of the data on actual outcomes have been audited.", "b": "At least two-thirds, but not all, of the data on actual outcomes have been audited.", "e": " Not applicable/other (please comment).", "d": "None of the data on actual outcomes has been audited, or a Year-End Report is not released.", "text": "In the Year-End Report have the data on the actual outcomes been audited?", "number": 78}, "79": {"a": "Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some explanation is presented, but it lacks important details.", "b": "Yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or a Year-End Report is not released.", "text": "Does the Year-End Report explain the differences between the enacted levels (including in-year changes approved by the legislature) and the actual outcome for expenditures?", "number": 79}, "80": {"a": "The explanation of the differences between the enacted expenditure levels and the actual outcome focuses on the program level.", "c": "The explanation focuses on a higher level of aggregation than departmental totals (or functional totals).", "b": " The explanation focuses on departmental totals (or functional totals) or some lower level of detail (but not the program level in all cases).", "e": "Not applicable/other (please comment).", "d": "No explanation of the differences is provided, or a Year-End Report is not released.", "text": "What level of detail is the focus of the explanation of the differences between the enacted levels and the actual outcome for expenditures presented in the Year-End Report?", "number": 80}, "81": {"a": "Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some explanation is presented, but it lacks important details.", "b": " Yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or a Year-End Report is not released.", "text": "Does the Year-End Report explain the differences between the enacted levels (including in-year changes approved by the legislature) and the actual outcome for revenues?", "number": 81}, "82": {"a": " Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some explanation is presented, but it lacks important details.", "b": "Yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or a Year-End Report is not released.", "text": " Does the Year-End Report explain the differences between the original macroeconomic forecast for the fiscal year and the actual outcome for that year?", "number": 82}, "83": {"a": "Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some explanation is presented, but it lacks important details.", "b": "Yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, an explanation is not presented, or a Year-End Report is not released.", "text": "Does the Year-End Report explain the differences between the original estimates of nonfinancial data and the actual outcome?", "number": 83}, "84": {"a": "Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": " Yes, some explanation is presented, but it lacks important details.", "b": "Yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or a Year-End Report is not released.", "text": "Does the Year-End Report explain the differences between the original performance indicators and the actual outcome?", "number": 84}, "85": {"a": "Yes, an extensive explanation of the differences is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some explanation is presented, but it lacks important details.", "b": "yes, an explanation is presented, highlighting key differences, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": "No, an explanation is not presented, or a Year-End Report is not released.", "text": "Does the Year-End Report explain the differences between the enacted level of funds intended to benefit directly the country\u2019s most impoverished populations and the actual outcome?", "number": 85}, "86": {"a": "Yes, extensive information on the actual outcome for extra-budgetary funds is presented, including both a narrative discussion and quantitative estimates.", "c": "Yes, some information is presented, but it lacks important details.", "b": "Yes, information is presented, highlighting key issues, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, information is not presented on extra-budgetary funds, or a Year-End Report is not released.", "text": "Does the Year-End Report present the actual outcome for extra-budgetary funds?", "number": 86}, "87": {"a": "Final audited accounts are released to the public six months or less after the end of the fiscal year.", "c": " Final audit accounts are released more than 12 months, but within 24 months, of the end of the fiscal year.", "b": "Final audited accounts are released 12 months or less (but more than six months) after the end of the fiscal year.", "e": "Not applicable/other (please comment).", "d": "Final audited accounts are not completed within 24 months after the end of the fiscal year, or they are not released to the public.", "text": "How long after the end of the fiscal year are the final annual expenditures of national departments audited and the results of the audits (except for secret programs) released to the public?", "number": 87}, "88": {"a": "All expenditures have been audited and the Audit Report(s) released to the public.", "c": " Expenditure representing less than two-thirds of expenditure has been audited and the Audit Report(s) released to the public.", "b": " Expenditures representing at least two-thirds of, but not all, expenditure have been audited and the Audit Report(s) released to the public.", "e": "Not applicable/other (please comment).", "d": "No expenditures have been audited, the reports have not been released to the public or were released more than 24 months after the end of the fiscal year.", "text": "Two years after the end of a fiscal year, what percentage of annual expenditures has been audited and included in (except for secret programs) the Audit Report(s) released to the public?", "number": 88}, "89": {"a": " The annual Audit Report(s) includes one or more executive summaries summarizing the report\u2019s content.", "c": "Not applicable/other (please comment).", "b": "No, the Audit Report(s) does not include an executive summary, or such reports are not released to the public, or were released more than 24 months after the end of the fiscal year.", "e": null, "d": null, "text": "Does the annual Audit Report(s) that is released to the public include an executive summary?", "number": 89}, "90": {"a": "Yes, the head of the SAI may only be removed by the legislature or judiciary, or the legislature or judiciary must give final consent before he or she is removed. ", "c": "Not applicable/other (please comment). ", "b": "No, the executive may remove the head of the SAI without the final consent of the judiciary or legislature. ", "e": null, "d": null, "text": "Must a branch of government other than the executive (such as the legislature or the judiciary) give final consent before the head of the supreme audit institution (SAI) can be removed from office? ", "number": 90}, "91": {"a": "Yes, the SAI releases to the public audits of all extra-budgetary funds.", "c": "Yes, the SAI releases audits representing less than two-thirds of all extra-budgetary funds.", "b": " Yes, the SAI releases audits representing at least two-thirds of, but not all, extra-budgetary funds.", "e": "Not applicable/other (please comment). ", "d": "No, the SAI does not release to the public audits of extra-budgetary funds, or it does not audit such funds, or such a report was released more than 24 months after the end of the fiscal year.", "text": "Does the supreme audit institution (SAI) release to the public audits of extra-budgetary funds?", "number": 91}, "92": {"a": "The SAI has full discretion to decide which audits it wishes to undertake. ", "c": "The SAI has some discretion, but faces considerable limitations. ", "b": "The SAI has significant discretion, but faces some limitations. ", "e": "Not applicable/other (please comment). ", "d": "The SAI has no discretion to decide which audits it wishes to undertake. ", "text": "Beyond the established year-end attestation audits, does the supreme audit institution (SAI) have the discretion in law to undertake those audits it may wish to? ", "number": 92}, "93": {"a": "The budget of the SAI is determined by the legislature or judiciary (or some independent body), and the funding level is broadly consistent with the resources the SAI needs to fulfill its mandate.", "c": "The budget of the SAI is determined by the legislature or judiciary (or some independent body), but the funding level is not consistent with the resources the SAI needs to fulfill its mandate.", "b": "The budget of the SAI is determined by the executive, and the funding level is broadly consistent with the resources the SAI needs to fulfill its mandate.", "e": "Not applicable/other (please comment). ", "d": "The budget of the SAI is determined by the executive, but the funding level is not consistent with the resources the SAI needs to fulfill its mandate.", "text": "Who determines the budget of the supreme audit institution (SAI)? ", "number": 93}, "94": {"a": "The SAI employs designated staff, and the staffing levels are broadly consistent with the resources the SAI needs to fulfill its mandate.", "c": "The SAI employs designated staff, but the staffing levels pose a significant constraint on the SAI in fulfilling its mandate.", "b": "The SAI employs designated staff, but the staffing levels are a cause of some constraints to the SAI in fulfilling its mandate.", "e": "Not applicable/other (please comment). ", "d": "The SAI does not employ designated staff for auditing of the security sector, or does not undertake audits of the security sector.", "text": "Does the supreme audit institution (SAI) employ designated staff to undertake audits of the central government agencies pertaining to the security sector (military, police, intelligence services)?", "number": 94}, "95": {"a": " Yes, the executive reports publicly on what steps it has taken to address audit findings.", "c": " Yes, the executive reports publicly on some audit findings.", "b": "Yes, the executive reports publicly on most audit findings.", "e": "Not applicable/other (please comment). ", "d": " No, the executive does not report on steps it has taken to address audit findings.", "text": "Does the executive make available to the public a report on what steps it has taken to address audit recommendations or findings that indicate a need for remedial action?", "number": 95}, "96": {"a": "Yes, legislators are provided with detailed Audit Reports related to the security sector and other secret programs.", "c": " Yes, legislators are provided Audit Reports on secret items, but they lack important details.", "b": "Yes, legislators are provided Audit Reports on secret items, but some details are excluded.", "e": "Not applicable/other (please comment). ", "d": "No, legislators are not provided Audit Reports on secret items, or secret programs are not audited (please specify).", "text": "Are Audit Reports of the annual accounts of the security sector (military, police, intelligence services) and other secret programs provided to the legislature (or relevant committee)?", "number": 96}, "97": {"a": "Yes, there is a specialized budget research office/unit attached to the legislature, and it has sufficient staffing, resources, and analytical capacity to carry out its tasks.", "c": "No, there is no specialized office attached to the legislature, but there is an external research body which can perform budget analyses.", "b": " Yes, there is a specialized budget research office, but its staffing and other resources, including adequate funding, are insufficient to carry out its tasks.", "e": "Not applicable/other (please comment). ", "d": "No, the legislature has neither internal capacity nor access to independent research capacity for budget analyses.", "text": "Does the legislature have internal capacity to conduct budget analyses or access to independent research capacity for such analyses? ", "number": 97}, "98": {"a": " Yes, there is a formal pre-budget policy debate in the legislature prior to the tabling of the Executive\u2019s Budget Proposal, and there are mechanisms in place to make sure that proposed changes that result from the debate are incorporated into the budget proposal.", "c": "There is no formal pre-budget policy debate, but legislators discuss specific policies in committee sessions prior to the introduction of the Executive\u2019s Budget Proposal. ", "b": "Yes, there is a formal pre-budget policy debate in the legislature prior to the tabling of the Executive\u2019s Budget Proposal, but the executive is not obliged to make any changes in proposed policies as a result of the debate.", "e": "Not applicable/other (please comment). ", "d": "There is no formal discussion of the overall budget policy, neither before nor following the tabling of the Executive\u2019s Budget Proposal.", "text": "Does the legislature formally debate the overall budget policy prior to the tabling of the Executive\u2019s Budget Proposal?", "number": 98}, "99": {"a": "The legislature receives the Executive\u2019s Budget Proposal at least three months before the start of the budget year.", "c": "The legislature receives the Executive\u2019s Budget Proposal less than six weeks before the start of the budget year.", "b": "The legislature receives the Executive\u2019s Budget Proposal at least six weeks, but less than three months, before the start of the budget year.", "e": "Not applicable/other (please comment). ", "d": " The legislature does not receive the Executive\u2019s Budget Proposal before the start of the budget year.", "text": "How far in advance of the start of the budget year does the legislature receive the Executive\u2019s Budget Proposal?", "number": 99}, "100": {"a": "Yes, the legislature has unlimited authority in law to amend the Executive\u2019s Budget Proposal.", "c": " Yes, the legislature has authority in law to amend the Executive\u2019s Budget Proposal, but its authority is very limited.", "b": " Yes, the legislature has authority in law to amend the Executive\u2019s Budget Proposal, with some limitations.", "e": "Not applicable/other (please comment). ", "d": "No, the legislature does not have any authority in law to amend the Executive\u2019s Budget Proposal.", "text": "Does the legislature have the authority in law to amend the Executive\u2019s Budget Proposal?", "number": 100}, "101": {"a": "The Enacted Budget includes program-level detail.", "c": "The Enacted Budget includes details only for administrative units.", "b": "The Enacted Budget includes information on administrative units and some additional details (for instance, subdepartment totals or major programs).", "e": "Not applicable/other (please comment). ", "d": "The Enacted Budget includes less information than that for administrative units (same as departmental totals, but maybe clearer) or the Enacted Budget is not released to the public. ", "text": "What is the highest level of detail provided for appropriations (expenditure budget) in the Enacted Budget approved by the legislature?", "number": 101}, "102": {"a": "Yes, the executive must seek ex ante approval from the legislature before shifting funds between administrative units.", "c": "Yes, the executive must seek legislative ex post approval, after the shift of funds has been implemented.", "b": " Yes, the executive must give prior notification to the legislature before shifting funds, giving the legislature an opportunity to block or modify the proposed adjustment within a predetermined timeframe, beyond which the shift of funds occurs without legislative approval. ", "e": "Not applicable/other (please comment). ", "d": "No, the executive can shift funds between administrative units without seeking input from the legislature, or the amount of funds it can shift without legislative approval  under the law is significantly large enough as to undermine public scrutiny and accountability (please describe arrangements below).", "text": "Is the executive required by law or regulation to seek input from the legislature when it shifts funds between administrative units that receive explicit funding through the annual budget?", "number": 102}, "103": {"a": "The executive is required to obtain legislative approval for every shift of funds between budget lines.", "c": "Only shifts between a few large categories of appropriations require prior legislative approval, but the legislature is given the opportunity to block or modify other proposed adjustments that do not require prior approval.", "b": "The executive is required to obtain legislative approval for most shifts between budget lines, but there are legal provisions that delegate power to the government to decide on the extent to which spending ministries can shift funds within the detailed budget. ", "e": "Not applicable/other (please comment). ", "d": "The executive can shift funds between line items without any restrictions.", "text": "Is the executive required seek input from the legislature when it shifts funds between line items (except when the amounts are below a certain minimal level specified in law or regulation)? ", "number": 103}, "104": {"a": "When actual revenues are higher than projected in the Enacted Budget, the executive is required by law or regulation to submit a supplementary budget to the legislature for approval prior to spending the funds.", "c": "When actual revenues are higher than projected in the Enacted Budget, the executive is required by law or regulations to secure legislative approval to spend the funds, but in practice it uses various means to bypass this requirement (e.g., through an off-budget fund).", "b": "When actual revenues are higher than projected in the Enacted Budget, the executive has been authorized by the legislature to spend them only on specified items (e.g., to reduce the public debt).", "e": "Not applicable/other (please comment). ", "d": "When actual revenues are higher than projected in the Enacted Budget, there are no legal or regulatory restrictions on the executive\u2019s use of the funds.", "text": "What legal or regulatory restrictions are in place on the executive\u2019s discretion to spend excess revenue that may become available during the budget execution period? ", "number": 104}, "105": {"a": " Supplemental budgets are approved before the funds are expended. ", "c": " Not applicable/other (please comment).", "b": "Supplemental budgets are approved after the funds are expended, or the executive implements supplemental budgets without ever receiving approval from the legislature (please specify).", "e": null, "d": null, "text": " When does the legislature typically approve supplemental budgets?", "number": 105}, "106": {"a": "Expenditures are approved before the funds are spent, or contingency funds or other funds with no specific purposes are not included in the Enacted Budget.", "c": " Expenditures are approved after the end of the fiscal year, for example, in the next Enacted Budget.", "b": "Expenditures are approved after the funds are spent, but before the end of the fiscal year.", "e": "Not applicable/other (please comment). ", "d": "Such expenditure takes place without legislative approval", "text": "When does the legislature approve the expenditure of contingency funds or other funds for which no specific purpose was identified in the Enacted Budget?", "number": 106}, "107": {"a": "Yes, all audit reports are scrutinized.", "c": "Yes, some audit reports are scrutinized.", "b": " Yes, most audit reports are scrutinized.", "e": "Not applicable/other (please comment). ", "d": "No, audit reports are not scrutinized.", "text": "Does a committee of the legislature view and scrutinize the audit reports?", "number": 107}, "108": {"a": "Yes, a comprehensive report is released regularly that tracks actions taken by the executive to address audit recommendations.", "c": " Yes, a report is released, but it lacks important details.", "b": " Yes, a report is released, covering key audit recommendations, but some details are excluded.", "e": "Not applicable/other (please comment). ", "d": "No, a report is not produced, or it is prepared for internal purposes only (please specify).", "text": "Does either the supreme audit institution or legislature release to the public a report that tracks actions taken by the executive to address audit recommendations?", "number": 108}, "109": {"a": "The Citizens Budget includes information on all the following six topics: 1) budget process, 2) revenue collection, 3) priority spending and allocations, 4) sector specific information and targeted programs, 5) contact information for follow up by citizens; and 6) economic assumptions.", "c": " The Citizens Budget includes information on at least two of the six topics described above.", "b": "The Citizens Budget includes information on at least four of the six topics described above.", "e": "Not applicable/other (please comment). ", "d": "The Citizens Budget is not sufficiently detailed (it includes at most one of the six topics described above), or a Citizens Budget is not published (non-existent).", "text": "What is the most detail provided by the Citizens Budget?", "number": 109}, "110": {"a": "A Citizens Budget is disseminated widely through a combination of at least three different appropriate tools and media (such as the Internet, billboards, radio programs, newspapers, etc.).", "c": " A Citizens Budget is disseminated only by using one means.", "b": "A Citizens Budget is published by using at least two, but less than three, means of dissemination, but no other dissemination efforts are undertaken by the executive.", "e": "Not applicable/other (please comment). ", "d": "A Citizens Budget is not published.", "text": "How is the Citizens Budget disseminated to the public?", "number": 110}, "111": {"a": "The executive widely consults with the public, with many different stakeholders and using many different means, to identify its informational requirements prior to publishing a Citizens Budget. ", "c": "The executive undertakes limited consultations with the public, i.e., one set of experts, to identify its informational requirements prior to publishing a Citizens Budget.", "b": "The executive undertakes consultations with the different stakeholders to identify its informational requirements prior to publishing a Citizens Budget, but it uses a single means.", "e": "Not applicable/other (please comment). ", "d": "The executive does not consult with the citizens before publishing a Citizens Budget, or a Citizens Budget is not published.", "text": "Are the public\u2019s priorities on budget information taken into consideration by the executive while drafting the Citizens Budget?", "number": 111}, "112": {"a": "Citizens Budgets are published at each of the four stages of the budget process (budget formulation, enactment, execution, and audit).", "c": "Citizens Budgets are published for at least one stage of the budget process", "b": "Citizens Budgets are published for at least two of the four stages of the budget process.", "e": "Not applicable/other (please comment). ", "d": "A Citizens Budget is not published.", "text": "Are Citizens Budget throughout the budget process?", "number": 112}, "113": {"a": "Yes, clear and detailed definitions of budget terms are provided. ", "c": "Yes, some definitions are provided, but it lacks important details. ", "b": "Yes, definitions are provided, but some details are excluded. ", "e": "Not applicable/other (please comment). ", "d": "No, definitions are not provided. ", "text": "Does the executive make available to the public accessible, nontechnical definitions of terms used in the budget and other budget-related documents (for instance, in a glossary)? ", "number": 113}, "114": {"a": "Yes, a law, a regulation, or a formal procedural obligation requires the executive to engage with the public during both the budget formulation and the budget execution processes. ", "c": "No, no formal requirement exists requiring the executive to engage with the public during either the budget formulation or execution processes, but informal procedures exist to enable the public to engage with the budget formulation or execution processes. ", "b": "Yes, a law, a regulation, or a formal procedural obligation requires the executive to engage with the public during one of either the budget formulation or the budget execution processes but not both.", "e": "Not applicable/other (please comment). ", "d": "No, no formal requirement exists and the executive does not engage with the public during the budget process. ", "text": "Is the executive formally required to engage with the public during the budget process? ", "number": 114}, "115": {"a": "Yes, the executive clearly identifies what it hopes to achieve from its public engagement mechanisms during the budget process and publicizes this information well in advance of each public engagement. ", "c": " Yes, the executive identifies and publicizes what it hopes to achieve from some of its public engagement mechanisms, but this information is not provided to the public in a timely manner prior to the engagement process. ", "b": "Yes, the executive identifies what it hopes to achieve from each of its public engagement mechanisms and publicizes this information well in advance of each public engagement, but some of the stated objectives are vague; or the executive identifies what it hopes to achieve from some but not all of its public engagement mechanisms and publicizes this information well in advance of the public engagement. ", "e": "Not applicable/other (please comment). ", "d": "No, the executive does not identify the purposes for engaging the public during the budget process, or the executive does not engage with the public during the budget process. ", "text": "Does the executive clearly, and in a timely manner, articulate its purpose for engaging the public during the budget formulation and execution processes? ", "number": 115}, "116": {"a": "Yes, the executive has established appropriate mechanisms to identify the public\u2019s perspective on budget priorities, and these mechanisms are accessible in practice to a majority of the public. ", "c": "Yes, the executive has established some mechanisms to identify the public\u2019s perspective on budget priorities, but these mechanisms are not effective or practical or are not accessible in practice to a majority of the public. ", "b": " Yes, the executive has established appropriate mechanisms to identify the public\u2019s perspective on budget priorities, but these mechanisms are accessible in practice only to some but not to a majority of the public. ", "e": "Not applicable/other (please comment).", "d": "No, the executive has not established any mechanisms to identify the public\u2019s perspective on budget priorities. ", "text": "Has the executive established practical and accessible mechanisms to identify the public\u2019s perspective on budget priorities?", "number": 116}, "117": {"a": "Yes, the executive has established appropriate mechanisms to identify the public\u2019s perspective on budget execution, and these mechanisms are accessible in practice to a majority of the public. ", "c": "Yes, the executive has established some mechanisms to identify the public\u2019s perspective on budget execution, but these mechanisms are not effective or practical or are not accessible in practice to the public. ", "b": "Yes, the executive has established appropriate mechanisms to identify the public\u2019s perspective on budget execution, and these mechanisms are accessible in practice to some but not to a majority of the public. ", "e": "Not applicable/other (please comment).", "d": "No, the executive has not established any mechanisms to identify the public\u2019s perspective on budget execution. ", "text": "Has the executive established practical and accessible mechanisms to identify the public\u2019s perspective on budget execution?", "number": 117}, "118": {"a": "Yes, the executive issues extensive, detailed reports on the inputs and comments it received from the public and how it used this information to develop its budget plans and improve budget execution.", "c": "Yes, the executive issues only limited reports that provide inadequate feedback on how it has used inputs from the public to develop its budget plans or to improve budget execution. ", "b": " Yes, the executive issues extensive, detailed reports on the inputs and comments it received from the public and how it used this information either to develop its budget plans or improve budget execution but not both.", "e": "Not applicable/other (please comment).", "d": " No, the executive does not issue reports on the inputs it received from the public through public consultations, or it does not engage with the public during the budget process. ", "text": "Does the executive provide formal, detailed feedback to the public on how its inputs have been used to develop budget plans and improve budget execution?", "number": 118}, "119": {"a": "Yes, public hearings are held on the macroeconomic and fiscal framework in which testimony is heard from the executive branch and a wide range of constituencies.", "c": " Yes, public hearings are held in which testimony from the executive branch is heard, but no testimony from the public is heard.", "b": "Yes, public hearings are held in which testimony is heard from the executive branch and some constituencies.", "e": "Not applicable/other (please comment).", "d": "No, public hearings are not held on the macroeconomic and fiscal framework in which testimony from the executive branch and the public is heard.", "text": "Does a legislative committee (or committees) hold public hearings on the macroeconomic and fiscal framework presented in the budget in which testimony from the executive branch and the public is heard?", "number": 119}, "120": {"a": "Yes, extensive public hearings are held on the budgets of administrative units in which testimony from the executive branch is heard.", "c": " Yes, a limited number of public hearings are held in which testimony from the executive branch is heard.", "b": "Yes, public hearings are held, covering key administrative units, in which testimony from the executive branch is heard.", "e": "Not applicable/other (please comment).", "d": "No, public hearings are not held on the budgets of administrative units in which testimony from the executive branch is heard.", "text": "Do legislative committees hold public hearings on the individual budgets of central government administrative units (i.e., ministries, departments, and agencies) in which testimony from the executive branch is heard?", "number": 120}, "121": {"a": "Yes, extensive public hearings are held on the budgets of administrative units in which testimony from the public is heard.", "c": "Yes, a limited number of public hearings are held in which testimony from the public is heard.", "b": "Yes, public hearings are held, covering key administrative units, in which testimony from the public is heard.", "e": "Not applicable/other (please comment).", "d": "No, public hearings are not held on the budgets of administrative units in which testimony from the public is heard.", "text": "Does a legislative committee (or committees) hold public hearings on the individual budgets of central government administrative units (i.e., ministries, departments, and agencies) in which testimony from the public is heard?", "number": 121}, "122": {"a": "Yes, the committees release very informative reports, which include all written and spoken testimony presented at the hearings.", "c": "Yes, the committees release reports, but they are not very informative.", "b": "Yes, the committees release reports, but some details are excluded.", "e": "Not applicable/other (please comment).", "d": " No, the committees do not release reports, or do not hold public hearings.", "text": "Do the legislative committees that hold public hearings release reports to the public on these hearings?", "number": 122}, "123": {"a": " Yes, the SAI has established accessible mechanisms for public engagement through which the public can assist in formulating its audit program (by identifying the agencies, programs, or projects that should be audited) and can participate in audit investigations (as respondents, witnesses, etc.). ", "c": "Yes, the SAI has established some mechanisms for public engagement through which the public can assist in formulating its audit program (by identifying the agencies, programs, or projects that should be audited) and/or participate in audit investigations (as respondents, witnesses, etc.), but these mechanisms are not accessible in practice to a majority of the public. ", "b": " Yes, the SAI has established accessible mechanisms for public engagement through which the public can assist in formulating its audit program (by identifying the agencies, programs, or projects that should be audited) or can participate in audit investigations (as respondents, witnesses, etc.), but the SAI has not established mechanisms that enable the public to participate in both processes. ", "e": " Not applicable.", "d": " No, the SAI does not maintain any formal mechanisms of communication with the public. ", "text": "Does the supreme audit institution (SAI) maintain formal mechanisms through which the public can participate in the audit process?", "number": 123}, "124": {"a": "Yes, in addition to publishing audit reports, the SAI maintains other mechanisms of communication to make the public aware of audit findings (such as maintaining an office that regularly conducts outreach activities to publicize previously released audit findings). ", "c": " Not applicable/other (please comment).", "b": "No, the SAI does not maintain any formal mechanisms of communication with the public beyond publishing audit reports. ", "e": null, "d": null, "text": "Does the SAI maintain any communication with the public regarding its audit reports beyond simply making these reports publicly available? ", "number": 124}, "125": {"a": "Yes, the SAI issues extensive, detailed reports on the inputs it received from the public through public consultations and provides feedback on how the SAI has used these inputs to develop its audit program or its audit reports. ", "c": "Yes, the SAI issues reports on the inputs it received from the public through public consultations, but these reports provide no feedback on how the SAI has used these inputs to develop its audit program or its audit reports. ", "b": " Yes, the SAI issues reports on the inputs it received from the public through public consultations and provides limited feedback on how the SAI has used these inputs to develop its audit program or its audit reports. ", "e": "Not applicable/other (please comment).", "d": "No, the SAI does not issue reports on the inputs it received from the public through public consultations or provide any feedback on how the SAI has used these inputs to develop its audit program or its audit reports. ", "text": "Does the supreme audit institution (SAI) provide formal, detailed feedback to the public on how their inputs have been used to determine its audit program or in audit reports?", "number": 125}}, "regions": [{"contains": ["KH", "CN", "FJ", "ID", "MY", "MN", "MM", "NZ", "PG", "PH", "KR", "TH", "TL", "VN"], "name": "East Asia & Pacific"}, {"contains": ["AL", "AZ", "BA", "BG", "HR", "CZ", "GE", "KZ", "KG", "MK", "PL", "RO", "RU", "RS", "SK", "SI", "TJ", "TR", "UA"], "name": "Eastern Europe & Central Asia"}, {"contains": ["AR", "BO", "BR", "CL", "CO", "CR", "DO", "EC", "SV", "GT", "HN", "MX", "NI", "PE", "TT", "VE"], "name": "Latin America & Caribbean"}, {"contains": ["DZ", "EG", "IQ", "JO", "LB", "MA", "QA", "TN", "SA", "YE"], "name": "Middle East & North Africa"}, {"contains": ["AF", "BD", "IN", "NP", "PK", "LK"], "name": "South Asia"}, {"contains": ["AO", "BJ", "BW", "BF", "CM", "TD", "CD", "GQ", "GH", "KE", "LR", "MW", "ML", "MZ", "NA", "NE", "NG", "RW", "ST", "SN", "SL", "ZA", "SD", "TZ", "UG", "ZM", "ZW"], "name": "Sub-Saharan Africa"}, {"contains": ["FR", "DE", "IT", "NO", "PT", "ES", "SE", "GB", "US"], "name": "Western Europe & the U.S."}], "availability": [{"db_2008": {"alpha2": "AF", "auditreport": "IU", "citizensbudget": "NP", "name": "Afghanistan", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "AF", "auditreport": "IU", "citizensbudget": "PW", "name": "Afghanistan", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "AF", "auditreport": "HC", "citizensbudget": "NP", "name": "Afghanistan", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "AL", "auditreport": "PW", "citizensbudget": "NP", "name": "Albania", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "AL", "auditreport": "PW", "citizensbudget": "NP", "name": "Albania", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "AL", "auditreport": "HC", "citizensbudget": "NP", "name": "Albania", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "AL", "auditreport": "PW", "citizensbudget": "NP", "name": "Albania", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "DZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Algeria", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "DZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Algeria", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "DZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Algeria", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "NP"}, "db_2006": {"alpha2": "DZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Algeria", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "AO", "auditreport": "IU", "citizensbudget": "HC", "name": "Angola", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "AO", "auditreport": "NP", "citizensbudget": "NP", "name": "Angola", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "AO", "auditreport": "IU", "citizensbudget": "NP", "name": "Angola", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2006": {"alpha2": "AO", "auditreport": "NP", "citizensbudget": "PW", "name": "Angola", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "AR", "auditreport": "IU", "citizensbudget": "NP", "name": "Argentina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "AR", "auditreport": "PW", "citizensbudget": "NP", "name": "Argentina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "AR", "auditreport": "IU", "citizensbudget": "NP", "name": "Argentina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "AR", "auditreport": "IU", "citizensbudget": "NP", "name": "Argentina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "AZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Azerbaijan", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2012": {"alpha2": "AZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Azerbaijan", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "AZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Azerbaijan", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "AZ", "auditreport": "IU", "citizensbudget": "NP", "name": "Azerbaijan", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "BD", "auditreport": "IU", "citizensbudget": "NP", "name": "Bangladesh", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "BD", "auditreport": "NP", "citizensbudget": "NP", "name": "Bangladesh", "midyearreview": "PW", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "BD", "auditreport": "IU", "citizensbudget": "NP", "name": "Bangladesh", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "BD", "auditreport": "IU", "citizensbudget": "NP", "name": "Bangladesh", "midyearreview": "IU", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "BJ", "auditreport": "NP", "citizensbudget": "NP", "name": "Benin", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "BO", "auditreport": "NP", "citizensbudget": "NP", "name": "Bolivia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "BO", "auditreport": "PW", "citizensbudget": "NP", "name": "Bolivia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "BO", "auditreport": "PW", "citizensbudget": "NP", "name": "Bolivia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "BO", "auditreport": "PW", "citizensbudget": "NP", "name": "Bolivia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "BA", "auditreport": "PW", "citizensbudget": "NP", "name": "Bosnia and Herzegovina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "BA", "auditreport": "PW", "citizensbudget": "NP", "name": "Bosnia and Herzegovina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2010": {"alpha2": "BA", "auditreport": "PW", "citizensbudget": "NP", "name": "Bosnia and Herzegovina", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "BW", "auditreport": "PW", "citizensbudget": "NP", "name": "Botswana", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "BW", "auditreport": "HC", "citizensbudget": "PW", "name": "Botswana", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2010": {"alpha2": "BW", "auditreport": "PW", "citizensbudget": "NP", "name": "Botswana", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2006": {"alpha2": "BW", "auditreport": "PW", "citizensbudget": "NP", "name": "Botswana", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "BR", "auditreport": "PW", "citizensbudget": "NP", "name": "Brazil", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "BR", "auditreport": "PW", "citizensbudget": "PW", "name": "Brazil", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "BR", "auditreport": "PW", "citizensbudget": "NP", "name": "Brazil", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "BR", "auditreport": "PW", "citizensbudget": "NP", "name": "Brazil", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "BG", "auditreport": "PW", "citizensbudget": "NP", "name": "Bulgaria", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "BG", "auditreport": "PW", "citizensbudget": "NP", "name": "Bulgaria", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "BG", "auditreport": "IU", "citizensbudget": "NP", "name": "Bulgaria", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "BG", "auditreport": "HC", "citizensbudget": "NP", "name": "Bulgaria", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "BF", "auditreport": "HC", "citizensbudget": "NP", "name": "Burkina Faso", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "HC"}, "db_2012": {"alpha2": "BF", "auditreport": "NP", "citizensbudget": "NP", "name": "Burkina Faso", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2010": {"alpha2": "BF", "auditreport": "NP", "citizensbudget": "NP", "name": "Burkina Faso", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "HC"}, "db_2006": {"alpha2": "BF", "auditreport": "IU", "citizensbudget": "NP", "name": "Burkina Faso", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "HC"}}, {"db_2008": {"alpha2": "KH", "auditreport": "IU", "citizensbudget": "NP", "name": "Cambodia", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "KH", "auditreport": "IU", "citizensbudget": "NP", "name": "Cambodia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "KH", "auditreport": "IU", "citizensbudget": "NP", "name": "Cambodia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "HC", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CM", "auditreport": "NP", "citizensbudget": "NP", "name": "Cameroon", "midyearreview": "HC", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "HC", "inyearreports": "IU"}, "db_2012": {"alpha2": "CM", "auditreport": "PW", "citizensbudget": "NP", "name": "Cameroon", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2010": {"alpha2": "CM", "auditreport": "IU", "citizensbudget": "NP", "name": "Cameroon", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "HC", "inyearreports": "IU"}, "db_2006": {"alpha2": "CM", "auditreport": "NP", "citizensbudget": "NP", "name": "Cameroon", "midyearreview": "HC", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "TD", "auditreport": "HC", "citizensbudget": "NP", "name": "Chad", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "NP"}, "db_2012": {"alpha2": "TD", "auditreport": "NP", "citizensbudget": "NP", "name": "Chad", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "TD", "auditreport": "NP", "citizensbudget": "NP", "name": "Chad", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2006": {"alpha2": "TD", "auditreport": "PW", "citizensbudget": "NP", "name": "Chad", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2012": {"alpha2": "CL", "auditreport": "PW", "citizensbudget": "PW", "name": "Chile", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "CL", "auditreport": "PW", "citizensbudget": "PW", "name": "Chile", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CN", "auditreport": "PW", "citizensbudget": "NP", "name": "China", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "CN", "auditreport": "PW", "citizensbudget": "NP", "name": "China", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "CN", "auditreport": "PW", "citizensbudget": "NP", "name": "China", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CO", "auditreport": "PW", "citizensbudget": "PW", "name": "Colombia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "CO", "auditreport": "PW", "citizensbudget": "NP", "name": "Colombia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "CO", "auditreport": "IU", "citizensbudget": "NP", "name": "Colombia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "CO", "auditreport": "PW", "citizensbudget": "NP", "name": "Colombia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CR", "auditreport": "PW", "citizensbudget": "NP", "name": "Costa Rica", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "CR", "auditreport": "PW", "citizensbudget": "NP", "name": "Costa Rica", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2010": {"alpha2": "CR", "auditreport": "PW", "citizensbudget": "NP", "name": "Costa Rica", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2006": {"alpha2": "CR", "auditreport": "PW", "citizensbudget": "NP", "name": "Costa Rica", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "HR", "auditreport": "PW", "citizensbudget": "PW", "name": "Croatia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "HR", "auditreport": "PW", "citizensbudget": "NP", "name": "Croatia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "HR", "auditreport": "PW", "citizensbudget": "NP", "name": "Croatia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "HR", "auditreport": "PW", "citizensbudget": "NP", "name": "Croatia", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "HC", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Czech Republic", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "CZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Czech Republic", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "CZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Czech Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "CZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Czech Republic", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "CD", "auditreport": "IU", "citizensbudget": "NP", "name": "Dem. Rep. of Congo", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2012": {"alpha2": "CD", "auditreport": "NP", "citizensbudget": "NP", "name": "Dem. Rep. of Congo", "midyearreview": "IU", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "CD", "auditreport": "IU", "citizensbudget": "PW", "name": "Dem. Rep. of Congo", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "DO", "auditreport": "PW", "citizensbudget": "NP", "name": "Dominican Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "DO", "auditreport": "PW", "citizensbudget": "NP", "name": "Dominican Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "DO", "auditreport": "PW", "citizensbudget": "NP", "name": "Dominican Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "EC", "auditreport": "IU", "citizensbudget": "NP", "name": "Ecuador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "EC", "auditreport": "IU", "citizensbudget": "NP", "name": "Ecuador", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "EC", "auditreport": "IU", "citizensbudget": "NP", "name": "Ecuador", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "EC", "auditreport": "IU", "citizensbudget": "NP", "name": "Ecuador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "EG", "auditreport": "IU", "citizensbudget": "NP", "name": "Egypt", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "EG", "auditreport": "IU", "citizensbudget": "NP", "name": "Egypt", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "EG", "auditreport": "IU", "citizensbudget": "NP", "name": "Egypt", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "EG", "auditreport": "IU", "citizensbudget": "NP", "name": "Egypt", "midyearreview": "PW", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "SV", "auditreport": "HC", "citizensbudget": "PW", "name": "El Salvador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "SV", "auditreport": "IU", "citizensbudget": "PW", "name": "El Salvador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "SV", "auditreport": "IU", "citizensbudget": "PW", "name": "El Salvador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "SV", "auditreport": "IU", "citizensbudget": "PW", "name": "El Salvador", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "GQ", "auditreport": "NP", "citizensbudget": "NP", "name": "Equatorial Guinea", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "GQ", "auditreport": "NP", "citizensbudget": "NP", "name": "Equatorial Guinea", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "GQ", "auditreport": "NP", "citizensbudget": "NP", "name": "Equatorial Guinea", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "FJ", "auditreport": "HC", "citizensbudget": "NP", "name": "Fiji", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2012": {"alpha2": "FJ", "auditreport": "IU", "citizensbudget": "NP", "name": "Fiji", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2010": {"alpha2": "FJ", "auditreport": "IU", "citizensbudget": "NP", "name": "Fiji", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "NP", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "FR", "auditreport": "PW", "citizensbudget": "PW", "name": "France", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "FR", "auditreport": "PW", "citizensbudget": "PW", "name": "France", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "FR", "auditreport": "PW", "citizensbudget": "PW", "name": "France", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "FR", "auditreport": "PW", "citizensbudget": "PW", "name": "France", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "GE", "auditreport": "PW", "citizensbudget": "HC", "name": "Georgia", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2012": {"alpha2": "GE", "auditreport": "PW", "citizensbudget": "NP", "name": "Georgia", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2010": {"alpha2": "GE", "auditreport": "HC", "citizensbudget": "NP", "name": "Georgia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "GE", "auditreport": "PW", "citizensbudget": "NP", "name": "Georgia", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "HC"}}, {"db_2008": {"alpha2": "DE", "auditreport": "PW", "citizensbudget": "NP", "name": "Germany", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "DE", "auditreport": "PW", "citizensbudget": "NP", "name": "Germany", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "DE", "auditreport": "PW", "citizensbudget": "NP", "name": "Germany", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "GH", "auditreport": "IU", "citizensbudget": "PW", "name": "Ghana", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "GH", "auditreport": "PW", "citizensbudget": "NP", "name": "Ghana", "midyearreview": "PW", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "GH", "auditreport": "HC", "citizensbudget": "IU", "name": "Ghana", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2006": {"alpha2": "GH", "auditreport": "IU", "citizensbudget": "NP", "name": "Ghana", "midyearreview": "HC", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "GT", "auditreport": "HC", "citizensbudget": "NP", "name": "Guatemala", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "GT", "auditreport": "PW", "citizensbudget": "PW", "name": "Guatemala", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "GT", "auditreport": "PW", "citizensbudget": "NP", "name": "Guatemala", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "GT", "auditreport": "HC", "citizensbudget": "NP", "name": "Guatemala", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "HN", "auditreport": "PW", "citizensbudget": "NP", "name": "Honduras", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "HN", "auditreport": "PW", "citizensbudget": "PW", "name": "Honduras", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "HN", "auditreport": "IU", "citizensbudget": "NP", "name": "Honduras", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "HN", "auditreport": "PW", "citizensbudget": "NP", "name": "Honduras", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "IN", "auditreport": "PW", "citizensbudget": "PW", "name": "India", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "IN", "auditreport": "PW", "citizensbudget": "PW", "name": "India", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "IN", "auditreport": "PW", "citizensbudget": "PW", "name": "India", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "IN", "auditreport": "PW", "citizensbudget": "PW", "name": "India", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "ID", "auditreport": "PW", "citizensbudget": "NP", "name": "Indonesia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2012": {"alpha2": "ID", "auditreport": "HC", "citizensbudget": "PW", "name": "Indonesia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2010": {"alpha2": "ID", "auditreport": "PW", "citizensbudget": "NP", "name": "Indonesia", "midyearreview": "PW", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2006": {"alpha2": "ID", "auditreport": "HC", "citizensbudget": "NP", "name": "Indonesia", "midyearreview": "PW", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2012": {"alpha2": "IQ", "auditreport": "IU", "citizensbudget": "NP", "name": "Iraq", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "IQ", "auditreport": "IU", "citizensbudget": "NP", "name": "Iraq", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2012": {"alpha2": "IT", "auditreport": "PW", "citizensbudget": "PW", "name": "Italy", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "IT", "auditreport": "PW", "citizensbudget": "NP", "name": "Italy", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "HC"}}, {"db_2008": {"alpha2": "JO", "auditreport": "HC", "citizensbudget": "NP", "name": "Jordan", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "JO", "auditreport": "PW", "citizensbudget": "NP", "name": "Jordan", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "JO", "auditreport": "HC", "citizensbudget": "NP", "name": "Jordan", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "JO", "auditreport": "HC", "citizensbudget": "NP", "name": "Jordan", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "KZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Kazakhstan", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "KZ", "auditreport": "PW", "citizensbudget": "PW", "name": "Kazakhstan", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "KZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Kazakhstan", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "KZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Kazakhstan", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "KE", "auditreport": "PW", "citizensbudget": "NP", "name": "Kenya", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "KE", "auditreport": "PW", "citizensbudget": "PW", "name": "Kenya", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "KE", "auditreport": "PW", "citizensbudget": "NP", "name": "Kenya", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "KE", "auditreport": "HC", "citizensbudget": "NP", "name": "Kenya", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "KG", "auditreport": "IU", "citizensbudget": "NP", "name": "Kyrgyz Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "KG", "auditreport": "IU", "citizensbudget": "NP", "name": "Kyrgyz Republic", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "KG", "auditreport": "IU", "citizensbudget": "NP", "name": "Kyrgyz Republic", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "LB", "auditreport": "PW", "citizensbudget": "NP", "name": "Lebanon", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "LB", "auditreport": "IU", "citizensbudget": "NP", "name": "Lebanon", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "NP", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "LB", "auditreport": "NP", "citizensbudget": "NP", "name": "Lebanon", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "NP", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "LR", "auditreport": "NP", "citizensbudget": "NP", "name": "Liberia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "NP", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2012": {"alpha2": "LR", "auditreport": "NP", "citizensbudget": "NP", "name": "Liberia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "LR", "auditreport": "PW", "citizensbudget": "NP", "name": "Liberia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "MK", "auditreport": "PW", "citizensbudget": "IU", "name": "Macedonia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "MK", "auditreport": "PW", "citizensbudget": "NP", "name": "Macedonia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "MK", "auditreport": "PW", "citizensbudget": "NP", "name": "Macedonia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "MW", "auditreport": "IU", "citizensbudget": "NP", "name": "Malawi", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "MW", "auditreport": "HC", "citizensbudget": "NP", "name": "Malawi", "midyearreview": "HC", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "MW", "auditreport": "IU", "citizensbudget": "HC", "name": "Malawi", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "IU", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "MW", "auditreport": "IU", "citizensbudget": "NP", "name": "Malawi", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "MY", "auditreport": "PW", "citizensbudget": "NP", "name": "Malaysia", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "MY", "auditreport": "PW", "citizensbudget": "NP", "name": "Malaysia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "MY", "auditreport": "PW", "citizensbudget": "NP", "name": "Malaysia", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "ML", "auditreport": "NP", "citizensbudget": "PW", "name": "Mali", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "ML", "auditreport": "IU", "citizensbudget": "NP", "name": "Mali", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "MX", "auditreport": "PW", "citizensbudget": "NP", "name": "Mexico", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "MX", "auditreport": "PW", "citizensbudget": "PW", "name": "Mexico", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "MX", "auditreport": "PW", "citizensbudget": "NP", "name": "Mexico", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "MX", "auditreport": "PW", "citizensbudget": "NP", "name": "Mexico", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "MN", "auditreport": "IU", "citizensbudget": "NP", "name": "Mongolia", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "MN", "auditreport": "PW", "citizensbudget": "NP", "name": "Mongolia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "MN", "auditreport": "HC", "citizensbudget": "NP", "name": "Mongolia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "MN", "auditreport": "PW", "citizensbudget": "NP", "name": "Mongolia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "HC", "inyearreports": "HC"}}, {"db_2008": {"alpha2": "MA", "auditreport": "NP", "citizensbudget": "NP", "name": "Morocco", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "MA", "auditreport": "PW", "citizensbudget": "PW", "name": "Morocco", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "MA", "auditreport": "NP", "citizensbudget": "NP", "name": "Morocco", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "MA", "auditreport": "NP", "citizensbudget": "NP", "name": "Morocco", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "MZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Mozambique", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "MZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Mozambique", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}}, {"db_2012": {"alpha2": "MM", "auditreport": "IU", "citizensbudget": "NP", "name": "Myanmar", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "NA", "auditreport": "HC", "citizensbudget": "NP", "name": "Namibia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "NA", "auditreport": "PW", "citizensbudget": "NP", "name": "Namibia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2010": {"alpha2": "NA", "auditreport": "PW", "citizensbudget": "NP", "name": "Namibia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "NA", "auditreport": "IU", "citizensbudget": "NP", "name": "Namibia", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "NP", "auditreport": "PW", "citizensbudget": "NP", "name": "Nepal", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "HC"}, "db_2012": {"alpha2": "NP", "auditreport": "PW", "citizensbudget": "NP", "name": "Nepal", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "NP", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "NP", "auditreport": "PW", "citizensbudget": "NP", "name": "Nepal", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "NP", "auditreport": "PW", "citizensbudget": "NP", "name": "Nepal", "midyearreview": "PW", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "HC"}}, {"db_2008": {"alpha2": "NZ", "auditreport": "PW", "citizensbudget": "PW", "name": "New Zealand", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "NZ", "auditreport": "PW", "citizensbudget": "PW", "name": "New Zealand", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "NZ", "auditreport": "PW", "citizensbudget": "PW", "name": "New Zealand", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "NZ", "auditreport": "PW", "citizensbudget": "PW", "name": "New Zealand", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "NI", "auditreport": "IU", "citizensbudget": "NP", "name": "Nicaragua", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "NI", "auditreport": "PW", "citizensbudget": "NP", "name": "Nicaragua", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "NI", "auditreport": "PW", "citizensbudget": "NP", "name": "Nicaragua", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "NI", "auditreport": "NP", "citizensbudget": "NP", "name": "Nicaragua", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "NE", "auditreport": "NP", "citizensbudget": "NP", "name": "Niger", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "NE", "auditreport": "IU", "citizensbudget": "NP", "name": "Niger", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "NE", "auditreport": "IU", "citizensbudget": "NP", "name": "Niger", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "NG", "auditreport": "IU", "citizensbudget": "NP", "name": "Nigeria", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "IU", "inyearreports": "NP"}, "db_2012": {"alpha2": "NG", "auditreport": "IU", "citizensbudget": "NP", "name": "Nigeria", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "NG", "auditreport": "IU", "citizensbudget": "PW", "name": "Nigeria", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "NG", "auditreport": "IU", "citizensbudget": "NP", "name": "Nigeria", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "NO", "auditreport": "PW", "citizensbudget": "NP", "name": "Norway", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "NO", "auditreport": "PW", "citizensbudget": "PW", "name": "Norway", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "NO", "auditreport": "PW", "citizensbudget": "PW", "name": "Norway", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "NO", "auditreport": "PW", "citizensbudget": "NP", "name": "Norway", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "PK", "auditreport": "HC", "citizensbudget": "NP", "name": "Pakistan", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2012": {"alpha2": "PK", "auditreport": "HC", "citizensbudget": "NP", "name": "Pakistan", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "PK", "auditreport": "IU", "citizensbudget": "NP", "name": "Pakistan", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2006": {"alpha2": "PK", "auditreport": "HC", "citizensbudget": "NP", "name": "Pakistan", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "PG", "auditreport": "HC", "citizensbudget": "NP", "name": "Papua New Guinea", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "PG", "auditreport": "PW", "citizensbudget": "NP", "name": "Papua New Guinea", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "NP"}, "db_2010": {"alpha2": "PG", "auditreport": "NP", "citizensbudget": "NP", "name": "Papua New Guinea", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "NP"}, "db_2006": {"alpha2": "PG", "auditreport": "IU", "citizensbudget": "NP", "name": "Papua New Guinea", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "PE", "auditreport": "PW", "citizensbudget": "NP", "name": "Peru", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "PE", "auditreport": "PW", "citizensbudget": "NP", "name": "Peru", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "PE", "auditreport": "PW", "citizensbudget": "NP", "name": "Peru", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "PE", "auditreport": "PW", "citizensbudget": "NP", "name": "Peru", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "PH", "auditreport": "PW", "citizensbudget": "NP", "name": "Philippines", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "PH", "auditreport": "PW", "citizensbudget": "NP", "name": "Philippines", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "PH", "auditreport": "PW", "citizensbudget": "NP", "name": "Philippines", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "PH", "auditreport": "PW", "citizensbudget": "NP", "name": "Philippines", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "PL", "auditreport": "PW", "citizensbudget": "NP", "name": "Poland", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "PL", "auditreport": "PW", "citizensbudget": "NP", "name": "Poland", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "PL", "auditreport": "PW", "citizensbudget": "NP", "name": "Poland", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "HC", "inyearreports": "PW"}, "db_2006": {"alpha2": "PL", "auditreport": "PW", "citizensbudget": "NP", "name": "Poland", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "PT", "auditreport": "PW", "citizensbudget": "NP", "name": "Portugal", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "PT", "auditreport": "PW", "citizensbudget": "NP", "name": "Portugal", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "QA", "auditreport": "IU", "citizensbudget": "NP", "name": "Qatar", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "RO", "auditreport": "PW", "citizensbudget": "NP", "name": "Romania", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2012": {"alpha2": "RO", "auditreport": "PW", "citizensbudget": "NP", "name": "Romania", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "RO", "auditreport": "PW", "citizensbudget": "NP", "name": "Romania", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "RO", "auditreport": "PW", "citizensbudget": "NP", "name": "Romania", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "RU", "auditreport": "PW", "citizensbudget": "HC", "name": "Russia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "RU", "auditreport": "PW", "citizensbudget": "NP", "name": "Russia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "RU", "auditreport": "PW", "citizensbudget": "NP", "name": "Russia", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "RU", "auditreport": "PW", "citizensbudget": "NP", "name": "Russia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "RW", "auditreport": "IU", "citizensbudget": "NP", "name": "Rwanda", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "RW", "auditreport": "IU", "citizensbudget": "NP", "name": "Rwanda", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "RW", "auditreport": "PW", "citizensbudget": "PW", "name": "Rwanda", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "ST", "auditreport": "IU", "citizensbudget": "NP", "name": "Sao Tome", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2012": {"alpha2": "ST", "auditreport": "NP", "citizensbudget": "NP", "name": "Sao Tome", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "ST", "auditreport": "IU", "citizensbudget": "NP", "name": "Sao Tome", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "SA", "auditreport": "IU", "citizensbudget": "NP", "name": "Saudi Arabia", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2012": {"alpha2": "SA", "auditreport": "IU", "citizensbudget": "NP", "name": "Saudi Arabia", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2010": {"alpha2": "SA", "auditreport": "IU", "citizensbudget": "NP", "name": "Saudi Arabia", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "SN", "auditreport": "PW", "citizensbudget": "NP", "name": "Senegal", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "SN", "auditreport": "NP", "citizensbudget": "NP", "name": "Senegal", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "HC", "inyearreports": "PW"}, "db_2010": {"alpha2": "SN", "auditreport": "PW", "citizensbudget": "NP", "name": "Senegal", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "RS", "auditreport": "NP", "citizensbudget": "NP", "name": "Serbia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "RS", "auditreport": "PW", "citizensbudget": "NP", "name": "Serbia", "midyearreview": "HC", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "RS", "auditreport": "NP", "citizensbudget": "NP", "name": "Serbia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "SL", "auditreport": "PW", "citizensbudget": "NP", "name": "Sierra Leone", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "SK", "auditreport": "PW", "citizensbudget": "PW", "name": "Slovakia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "SK", "auditreport": "NP", "citizensbudget": "NP", "name": "Slovakia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "SI", "auditreport": "PW", "citizensbudget": "NP", "name": "Slovenia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "SI", "auditreport": "PW", "citizensbudget": "NP", "name": "Slovenia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "SI", "auditreport": "PW", "citizensbudget": "NP", "name": "Slovenia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "SI", "auditreport": "PW", "citizensbudget": "NP", "name": "Slovenia", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "ZA", "auditreport": "PW", "citizensbudget": "PW", "name": "South Africa", "midyearreview": "PW", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "ZA", "auditreport": "PW", "citizensbudget": "PW", "name": "South Africa", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "ZA", "auditreport": "PW", "citizensbudget": "PW", "name": "South Africa", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "ZA", "auditreport": "PW", "citizensbudget": "PW", "name": "South Africa", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "KR", "auditreport": "PW", "citizensbudget": "PW", "name": "South Korea", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "KR", "auditreport": "PW", "citizensbudget": "PW", "name": "South Korea", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "KR", "auditreport": "PW", "citizensbudget": "PW", "name": "South Korea", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "KR", "auditreport": "PW", "citizensbudget": "PW", "name": "South Korea", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "ES", "auditreport": "PW", "citizensbudget": "NP", "name": "Spain", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "ES", "auditreport": "PW", "citizensbudget": "NP", "name": "Spain", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "LK", "auditreport": "PW", "citizensbudget": "NP", "name": "Sri Lanka", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2012": {"alpha2": "LK", "auditreport": "PW", "citizensbudget": "NP", "name": "Sri Lanka", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2010": {"alpha2": "LK", "auditreport": "PW", "citizensbudget": "PW", "name": "Sri Lanka", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "LK", "auditreport": "HC", "citizensbudget": "NP", "name": "Sri Lanka", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "SD", "auditreport": "IU", "citizensbudget": "NP", "name": "Sudan", "midyearreview": "IU", "yearendreport": "IU", "enactedbudget": "IU", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}, "db_2010": {"alpha2": "SD", "auditreport": "HC", "citizensbudget": "NP", "name": "Sudan", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "SE", "auditreport": "PW", "citizensbudget": "PW", "name": "Sweden", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "SE", "auditreport": "PW", "citizensbudget": "PW", "name": "Sweden", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "SE", "auditreport": "PW", "citizensbudget": "PW", "name": "Sweden", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "SE", "auditreport": "PW", "citizensbudget": "PW", "name": "Sweden", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "TJ", "auditreport": "IU", "citizensbudget": "NP", "name": "Tajikistan", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "TZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Tanzania", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "TZ", "auditreport": "PW", "citizensbudget": "PW", "name": "Tanzania", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "TZ", "auditreport": "PW", "citizensbudget": "NP", "name": "Tanzania", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "TZ", "auditreport": "HC", "citizensbudget": "NP", "name": "Tanzania", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "TH", "auditreport": "IU", "citizensbudget": "NP", "name": "Thailand", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "TH", "auditreport": "NP", "citizensbudget": "PW", "name": "Thailand", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "TH", "auditreport": "PW", "citizensbudget": "NP", "name": "Thailand", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2012": {"alpha2": "TL", "auditreport": "NP", "citizensbudget": "NP", "name": "Timor-Leste", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "TL", "auditreport": "NP", "citizensbudget": "NP", "name": "Timor-Leste", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "IU", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "TT", "auditreport": "PW", "citizensbudget": "NP", "name": "Trinidad and Tobago", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2012": {"alpha2": "TT", "auditreport": "PW", "citizensbudget": "NP", "name": "Trinidad and Tobago", "midyearreview": "IU", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "NP"}, "db_2010": {"alpha2": "TT", "auditreport": "PW", "citizensbudget": "NP", "name": "Trinidad and Tobago", "midyearreview": "IU", "yearendreport": "NP", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "NP"}}, {"db_2012": {"alpha2": "TN", "auditreport": "PW", "citizensbudget": "NP", "name": "Tunisia", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "TR", "auditreport": "PW", "citizensbudget": "NP", "name": "Turkey", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "TR", "auditreport": "PW", "citizensbudget": "NP", "name": "Turkey", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2010": {"alpha2": "TR", "auditreport": "PW", "citizensbudget": "NP", "name": "Turkey", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "TR", "auditreport": "PW", "citizensbudget": "NP", "name": "Turkey", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "UG", "auditreport": "PW", "citizensbudget": "HC", "name": "Uganda", "midyearreview": "IU", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "IU"}, "db_2012": {"alpha2": "UG", "auditreport": "PW", "citizensbudget": "PW", "name": "Uganda", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "PW"}, "db_2010": {"alpha2": "UG", "auditreport": "PW", "citizensbudget": "HC", "name": "Uganda", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "UG", "auditreport": "PW", "citizensbudget": "HC", "name": "Uganda", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "UA", "auditreport": "PW", "citizensbudget": "PW", "name": "Ukraine", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "UA", "auditreport": "PW", "citizensbudget": "NP", "name": "Ukraine", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "UA", "auditreport": "PW", "citizensbudget": "NP", "name": "Ukraine", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "GB", "auditreport": "PW", "citizensbudget": "PW", "name": "United Kingdom", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2012": {"alpha2": "GB", "auditreport": "PW", "citizensbudget": "PW", "name": "United Kingdom", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "GB", "auditreport": "PW", "citizensbudget": "PW", "name": "United Kingdom", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2006": {"alpha2": "GB", "auditreport": "PW", "citizensbudget": "PW", "name": "United Kingdom", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "US", "auditreport": "PW", "citizensbudget": "NP", "name": "United States", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "US", "auditreport": "PW", "citizensbudget": "NP", "name": "United States", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "US", "auditreport": "PW", "citizensbudget": "NP", "name": "United States", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2006": {"alpha2": "US", "auditreport": "PW", "citizensbudget": "NP", "name": "United States", "midyearreview": "PW", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "NP", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "VE", "auditreport": "PW", "citizensbudget": "NP", "name": "Venezuela", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2012": {"alpha2": "VE", "auditreport": "PW", "citizensbudget": "NP", "name": "Venezuela", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "NP"}, "db_2010": {"alpha2": "VE", "auditreport": "PW", "citizensbudget": "NP", "name": "Venezuela", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "NP"}}, {"db_2008": {"alpha2": "VN", "auditreport": "PW", "citizensbudget": "NP", "name": "Vietnam", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "VN", "auditreport": "PW", "citizensbudget": "NP", "name": "Vietnam", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "PW", "inyearreports": "PW"}, "db_2010": {"alpha2": "VN", "auditreport": "PW", "citizensbudget": "NP", "name": "Vietnam", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "PW"}, "db_2006": {"alpha2": "VN", "auditreport": "IU", "citizensbudget": "NP", "name": "Vietnam", "midyearreview": "IU", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "IU", "prebudgetstatement": "IU", "inyearreports": "IU"}}, {"db_2008": {"alpha2": "YE", "auditreport": "IU", "citizensbudget": "NP", "name": "Yemen", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2012": {"alpha2": "YE", "auditreport": "IU", "citizensbudget": "NP", "name": "Yemen", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "NP", "prebudgetstatement": "NP", "inyearreports": "PW"}, "db_2010": {"alpha2": "YE", "auditreport": "IU", "citizensbudget": "NP", "name": "Yemen", "midyearreview": "NP", "yearendreport": "PW", "enactedbudget": "PW", "executivesbudgetproposal": "PW", "prebudgetstatement": "IU", "inyearreports": "PW"}}, {"db_2008": {"alpha2": "ZM", "auditreport": "PW", "citizensbudget": "NP", "name": "Zambia", "midyearreview": "NP", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "HC"}, "db_2012": {"alpha2": "ZM", "auditreport": "HC", "citizensbudget": "NP", "name": "Zambia", "midyearreview": "NP", "yearendreport": "IU", "enactedbudget": "HC", "executivesbudgetproposal": "IU", "prebudgetstatement": "NP", "inyearreports": "IU"}, "db_2010": {"alpha2": "ZM", "auditreport": "PW", "citizensbudget": "NP", "name": "Zambia", "midyearreview": "PW", "yearendreport": "HC", "enactedbudget": "PW", "executivesbudgetproposal": "HC", "prebudgetstatement": "PW", "inyearreports": "IU"}, "db_2006": {"alpha2": "ZM", "auditreport": "HC", "citizensbudget": "NP", "name": "Zambia", "midyearreview": "HC", "yearendreport": "HC", "enactedbudget": "HC", "executivesbudgetproposal": "HC", "prebudgetstatement": "HC", "inyearreports": "HC"}}, {"db_2012": {"alpha2": "ZW", "auditreport": "NP", "citizensbudget": "NP", "name": "Zimbabwe", "midyearreview": "NP", "yearendreport": "NP", "enactedbudget": "HC", "executivesbudgetproposal": "PW", "prebudgetstatement": "PW", "inyearreports": "PW"}}], "groupings": [{"by": "The Open Budget Questionnaire", "entries": [{"qs": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 101, 108, 109, 110, 111, 112], "title": "The Open Budget Index"}, {"qs": [59, 90, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "title": "Oversight Questions"}]}, {"by": "Info in the Executive's Budget Proposal:", "entries": [{"qs": [1, 2, 3, 4, 7, 8, 11, 12, 13, 47], "title": "Estimates for the current year (BY)"}, {"qs": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "title": "Estimates for previous years (BY-)"}, {"qs": [5, 6, 9, 10], "title": "Estimates for future years (BY+)"}, {"qs": [16, 17, 48, 49, 50, 51, 52, 53, 54, 55], "title": "Performance Information"}]}, {"by": "Within the Oversight function (by oversight body)", "entries": [{"qs": [59, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107], "title": "Strength of the Legislature"}, {"qs": [90, 92, 93, 94], "title": "Strength of the Supreme Audit Institution"}, {"qs": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "title": "Public Engagement"}]}, {"by": "By Key Budget Document", "entries": [{"qs": [60, 61, 62], "title": "Pre-Budget Statement"}, {"qs": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "title": "Executive's Budget Proposal"}, {"qs": [101], "title": "Enacted Budget"}, {"qs": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "title": "In-Year Reports"}, {"qs": [73, 74, 75, 76], "title": "Mid-Year Review"}, {"qs": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "title": "Year-End Report"}, {"qs": [87, 88, 89, 91, 95, 96, 108], "title": "Audit Report"}, {"qs": [109, 110, 111, 112], "title": "Citizens Budget"}]}, {"by": "Info throughout all eight key documents", "entries": [{"qs": [1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 63, 64, 65, 66, 74, 75, 79, 80, 87, 88], "title": "Info on Expenditure (BY, BY+, BY-)"}, {"qs": [7, 8, 9, 10, 27, 28, 29, 30, 31, 32, 46, 67, 68, 69, 76, 81], "title": "Info on Revenue (BY, BY+, BY-)"}, {"qs": [11, 12, 13, 33, 34, 70, 71], "title": "Info on Debt (BY, BY+, BY-)"}, {"qs": [16, 17, 48, 49, 50, 51, 52, 53, 54, 55, 83, 84, 85], "title": "Performance Information"}]}]};
;

/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the util functions
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */
jsPlumbUtil = {
	isArray : function(a) {
		return Object.prototype.toString.call(a) === "[object Array]";	
	},
	isString : function(s) {
		return typeof s === "string";
	},
	isObject : function(o) {
		return Object.prototype.toString.call(o) === "[object Object]";	
	},
	convertStyle : function(s, ignoreAlpha) {
		// TODO: jsPlumb should support a separate 'opacity' style member.
		if ("transparent" === s) return s;
		var o = s,
		    pad = function(n) { return n.length == 1 ? "0" + n : n; },
		    hex = function(k) { return pad(Number(k).toString(16)); },
		    pattern = /(rgb[a]?\()(.*)(\))/;
		if (s.match(pattern)) {
			var parts = s.match(pattern)[2].split(",");
			o = "#" + hex(parts[0]) + hex(parts[1]) + hex(parts[2]);
			if (!ignoreAlpha && parts.length == 4) 
				o = o + hex(parts[3]);
		}
		return o;
	},
	gradient : function(p1, p2) {
		p1 = jsPlumbUtil.isArray(p1) ? p1 : [p1.x, p1.y];
		p2 = jsPlumbUtil.isArray(p2) ? p2 : [p2.x, p2.y];			
		return (p2[1] - p1[1]) / (p2[0] - p1[0]);		
	},
	normal : function(p1, p2) {
		return -1 / jsPlumbUtil.gradient(p1,p2);
	},
	lineLength : function(p1, p2) {
		p1 = jsPlumbUtil.isArray(p1) ? p1 : [p1.x, p1.y];
		p2 = jsPlumbUtil.isArray(p2) ? p2 : [p2.x, p2.y];			
		return Math.sqrt(Math.pow(p2[1] - p1[1], 2) + Math.pow(p2[0] - p1[0], 2));			
	},
    segment : function(p1, p2) {
        p1 = jsPlumbUtil.isArray(p1) ? p1 : [p1.x, p1.y];
        p2 = jsPlumbUtil.isArray(p2) ? p2 : [p2.x, p2.y];
        if (p2[0] > p1[0]) {
            return (p2[1] > p1[1]) ? 2 : 1;
        }
        else {
            return (p2[1] > p1[1]) ? 3 : 4;
        }
    },
    intersects : function(r1, r2) {
    	var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,
    		a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;
    		
    	return  ( (x1 <= a1 && a1 <= x2) && (y1 <= b1 && b1 <= y2) ) ||
    			( (x1 <= a2 && a2 <= x2) && (y1 <= b1 && b1 <= y2) ) ||
    			( (x1 <= a1 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||
    			( (x1 <= a2 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||
    			
    			( (a1 <= x1 && x1 <= a2) && (b1 <= y1 && y1 <= b2) ) ||
    			( (a1 <= x2 && x2 <= a2) && (b1 <= y1 && y1 <= b2) ) ||
    			( (a1 <= x1 && x1 <= a2) && (b1 <= y2 && y2 <= b2) ) ||
    			( (a1 <= x2 && x1 <= a2) && (b1 <= y2 && y2 <= b2) );
    },
    segmentMultipliers : [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ],
    inverseSegmentMultipliers : [null, [-1, -1], [-1, 1], [1, 1], [1, -1] ],
	pointOnLine : function(fromPoint, toPoint, distance) {
        var m = jsPlumbUtil.gradient(fromPoint, toPoint),
            s = jsPlumbUtil.segment(fromPoint, toPoint),
		    segmentMultiplier = distance > 0 ? jsPlumbUtil.segmentMultipliers[s] : jsPlumbUtil.inverseSegmentMultipliers[s],
			theta = Math.atan(m),
    		y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],
			x =  Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];
		return { x:fromPoint.x + x, y:fromPoint.y + y };
	},
    /**
     * calculates a perpendicular to the line fromPoint->toPoint, that passes through toPoint and is 'length' long.
     * @param fromPoint
     * @param toPoint
     * @param length
     */
	perpendicularLineTo : function(fromPoint, toPoint, length) {
		var m = jsPlumbUtil.gradient(fromPoint, toPoint),
            theta2 = Math.atan(-1 / m),
    		y =  length / 2 * Math.sin(theta2),
			x =  length / 2 * Math.cos(theta2);
		return [{x:toPoint.x + x, y:toPoint.y + y}, {x:toPoint.x - x, y:toPoint.y - y}];
	},
	findWithFunction : function(a, f) {
    	if (a)
  			for (var i = 0; i < a.length; i++) if (f(a[i])) return i;
		return -1;
	},
	indexOf : function(l, v) {
		return jsPlumbUtil.findWithFunction(l, function(_v) { return _v == v; });	
	},
    removeWithFunction : function(a, f) {
        var idx = jsPlumbUtil.findWithFunction(a, f);
        if (idx > -1) a.splice(idx, 1);
        return idx != -1;
    },
    remove : function(l, v) {
    	var idx = jsPlumbUtil.indexOf(l, v);	
    	if (idx > -1) l.splice(idx, 1);
        return idx != -1;
    },
    // TODO support insert index
    addWithFunction : function(list, item, hashFunction) {
        if (jsPlumbUtil.findWithFunction(list, hashFunction) == -1) list.push(item);
    },
	addToList : function(map, key, value) {
		var l = map[key];
		if (l == null) {
			l = [], map[key] = l;
		}
		l.push(value);
		return l;
	},	
	/**
	 * EventGenerator
	 * Superclass for objects that generate events - jsPlumb extends this, as does jsPlumbUIComponent, which all the UI elements extend.
	 */
	EventGenerator : function() {
		var _listeners = {}, self = this;
		
		// this is a list of events that should re-throw any errors that occur during their dispatch. as of 1.3.0 this is private to
		// jsPlumb, but it seems feasible that people might want to manipulate this list.  the thinking is that we don't want event
		// listeners to bring down jsPlumb - or do we.  i can't make up my mind about this, but i know i want to hear about it if the "ready"
		// event fails, because then my page has most likely not initialised.  so i have this halfway-house solution.  it will be interesting
		// to hear what other people think.
		var eventsToDieOn = [ "ready" ];
							    
		/*
		 * Binds a listener to an event.  
		 * 
		 * Parameters:
		 * 	event		-	name of the event to bind to.
		 * 	listener	-	function to execute.
		 */
		this.bind = function(event, listener) {
			jsPlumbUtil.addToList(_listeners, event, listener);		
			return self;		
		};
		/*
		 * Fires an update for the given event.
		 * 
		 * Parameters:
		 * 	event				-	event to fire
		 * 	value				-	value to pass to the event listener(s).
		 *  originalEvent	 	- 	the original event from the browser
		 */			
		this.fire = function(event, value, originalEvent) {
			if (_listeners[event]) {
				for ( var i = 0; i < _listeners[event].length; i++) {
					// doing it this way rather than catching and then possibly re-throwing means that an error propagated by this
					// method will have the whole call stack available in the debugger.
					if (jsPlumbUtil.findWithFunction(eventsToDieOn, function(e) { return e === event}) != -1)
						_listeners[event][i](value, originalEvent);
					else {
						// for events we don't want to die on, catch and log.
						try {
							_listeners[event][i](value, originalEvent);
						} catch (e) {
							jsPlumbUtil.log("jsPlumb: fire failed for event " + event + " : " + e);
						}
					}
				}
			}
			return self;
		};
		/*
		 * Clears either all listeners, or listeners for some specific event.
		 * 
		 * Parameters:
		 * 	event	-	optional. constrains the clear to just listeners for this event.
		 */
		this.clearListeners = function(event) {
			if (event)
				delete _listeners[event];
			else {
				delete _listeners;
				_listeners = {};
			}
			return self;
		};
		
		this.getListener = function(forEvent) {
			return _listeners[forEvent];
		};		
	},
	logEnabled : true,
	log : function() {
	    if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
            try {
                var msg = arguments[arguments.length - 1];
			    console.log(msg);
            }
            catch (e) {} 
        }
	},
	group : function(g) { if (jsPlumbUtil.logEnabled && typeof console != "undefined") console.group(g); },
	groupEnd : function(g) { if (jsPlumbUtil.logEnabled && typeof console != "undefined") console.groupEnd(g); },
	time : function(t) { if (jsPlumbUtil.logEnabled && typeof console != "undefined") console.time(t); },
	timeEnd : function(t) { if (jsPlumbUtil.logEnabled && typeof console != "undefined") console.timeEnd(t); }
};/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the jsPlumb core code.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (simon.porritt@gmail.com)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */

;(function() {
	
	/**
	 * Class:jsPlumb
	 * The jsPlumb engine, registered as a static object in the window.  This object contains all of the methods you will use to
	 * create and maintain Connections and Endpoints.
	 */	
	
	var canvasAvailable = !!document.createElement('canvas').getContext,
		svgAvailable = !!window.SVGAngle || document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1"),
		// http://stackoverflow.com/questions/654112/how-do-you-detect-support-for-vml-or-svg-in-a-browser
		vmlAvailable = function() {		    
			if(vmlAvailable.vml == undefined) { 
				var a = document.body.appendChild(document.createElement('div'));
		        a.innerHTML = '<v:shape id="vml_flag1" adj="1" />';
		        var b = a.firstChild;
		        b.style.behavior = "url(#default#VML)";
		        vmlAvailable.vml = b ? typeof b.adj == "object": true;
		        a.parentNode.removeChild(a);
			}
			return vmlAvailable.vml;
		};
	
    var _findWithFunction = jsPlumbUtil.findWithFunction,
	_indexOf = jsPlumbUtil.indexOf,
    _removeWithFunction = jsPlumbUtil.removeWithFunction,
    _remove = jsPlumbUtil.remove,
    // TODO support insert index
    _addWithFunction = jsPlumbUtil.addWithFunction,
    _addToList = jsPlumbUtil.addToList,
	/**
		an isArray function that even works across iframes...see here:
		
		http://tobyho.com/2011/01/28/checking-types-in-javascript/

		i was originally using "a.constructor == Array" as a test.
	*/
	_isArray = jsPlumbUtil.isArray,
	_isString = jsPlumbUtil.isString,
	_isObject = jsPlumbUtil.isObject;
	
	// for those browsers that dont have it.  they still don't have it! but at least they won't crash.
	if (!window.console)
		window.console = { time:function(){}, timeEnd:function(){}, group:function(){}, groupEnd:function(){}, log:function(){} };
		
	var _connectionBeingDragged = null,
		_getAttribute = function(el, attName) { return jsPlumb.CurrentLibrary.getAttribute(_getElementObject(el), attName); },
		_setAttribute = function(el, attName, attValue) { jsPlumb.CurrentLibrary.setAttribute(_getElementObject(el), attName, attValue); },
		_addClass = function(el, clazz) { jsPlumb.CurrentLibrary.addClass(_getElementObject(el), clazz); },
		_hasClass = function(el, clazz) { return jsPlumb.CurrentLibrary.hasClass(_getElementObject(el), clazz); },
		_removeClass = function(el, clazz) { jsPlumb.CurrentLibrary.removeClass(_getElementObject(el), clazz); },
		_getElementObject = function(el) { return jsPlumb.CurrentLibrary.getElementObject(el); },
		_getOffset = function(el) { return jsPlumb.CurrentLibrary.getOffset(_getElementObject(el)); },		
		_getSize = function(el) { return jsPlumb.CurrentLibrary.getSize(_getElementObject(el)); },
		_log = jsPlumbUtil.log,
		_group = jsPlumbUtil.group,
		_groupEnd = jsPlumbUtil.groupEnd,
		_time = jsPlumbUtil.time,
		_timeEnd = jsPlumbUtil.timeEnd,
		
		/**
		 * creates a timestamp, using milliseconds since 1970, but as a string.
		 */
		_timestamp = function() { return "" + (new Date()).getTime(); },
		
		/*
		 * Class:jsPlumbUIComponent
		 * Abstract superclass for UI components Endpoint and Connection.  Provides the abstraction of paintStyle/hoverPaintStyle,
		 * and also extends jsPlumbUtil.EventGenerator to provide the bind and fire methods.
		 */
		jsPlumbUIComponent = function(params) {
			var self = this, 
				a = arguments, 
				_hover = false, 
				parameters = params.parameters || {}, 
				idPrefix = self.idPrefix,
				id = idPrefix + (new Date()).getTime(),
				paintStyle = null,
				hoverPaintStyle = null;

			self._jsPlumb = params["_jsPlumb"];			
			self.getId = function() { return id; };
			self.tooltip = params.tooltip;
			self.hoverClass = params.hoverClass || self._jsPlumb.Defaults.HoverClass || jsPlumb.Defaults.HoverClass;				
			
			// all components can generate events
			jsPlumbUtil.EventGenerator.apply(this);
			// all components get this clone function.
			// TODO issue 116 showed a problem with this - it seems 'a' that is in
			// the clone function's scope is shared by all invocations of it, the classic
			// JS closure problem.  for now, jsPlumb does a version of this inline where 
			// it used to call clone.  but it would be nice to find some time to look
			// further at this.
			this.clone = function() {
				var o = new Object();
				self.constructor.apply(o, a);
				return o;
			};
			
			this.getParameter = function(name) { return parameters[name]; },
			this.getParameters = function() { 
				return parameters; 
			},
			this.setParameter = function(name, value) { parameters[name] = value; },
			this.setParameters = function(p) { parameters = p; },			
			this.overlayPlacements = [];			
			
			// user can supply a beforeDetach callback, which will be executed before a detach
			// is performed; returning false prevents the detach.
			var beforeDetach = params.beforeDetach;
			this.isDetachAllowed = function(connection) {
				var r = self._jsPlumb.checkCondition("beforeDetach", connection );
				if (beforeDetach) {
					try { 
						r = beforeDetach(connection); 
					}
					catch (e) { _log("jsPlumb: beforeDetach callback failed", e); }
				}
				return r;
			};
			
			// user can supply a beforeDrop callback, which will be executed before a dropped
			// connection is confirmed. user can return false to reject connection.
			var beforeDrop = params.beforeDrop;
			this.isDropAllowed = function(sourceId, targetId, scope, connection, dropEndpoint) {
				var r = self._jsPlumb.checkCondition("beforeDrop", { 
					sourceId:sourceId, 
					targetId:targetId, 
					scope:scope,
					connection:connection,
					dropEndpoint:dropEndpoint 
				});
				if (beforeDrop) {
					try { 
						r = beforeDrop({ 
							sourceId:sourceId, 
							targetId:targetId, 
							scope:scope, 
							connection:connection,
							dropEndpoint:dropEndpoint
						}); 
					}
					catch (e) { _log("jsPlumb: beforeDrop callback failed", e); }
				}
				return r;
			};
			
			// helper method to update the hover style whenever it, or paintStyle, changes.
			// we use paintStyle as the foundation and merge hoverPaintStyle over the
			// top.
			var _updateHoverStyle = function() {
				if (paintStyle && hoverPaintStyle) {
					var mergedHoverStyle = {};
					jsPlumb.extend(mergedHoverStyle, paintStyle);
					jsPlumb.extend(mergedHoverStyle, hoverPaintStyle);
					delete self["hoverPaintStyle"];
					// we want the fillStyle of paintStyle to override a gradient, if possible.
					if (mergedHoverStyle.gradient && paintStyle.fillStyle)
						delete mergedHoverStyle["gradient"];
					hoverPaintStyle = mergedHoverStyle;
				}
			};
			
			/*
		     * Sets the paint style and then repaints the element.
		     * 
		     * Parameters:
		     * 	style - Style to use.
		     */
		    this.setPaintStyle = function(style, doNotRepaint) {
		    	paintStyle = style;
		    	self.paintStyleInUse = paintStyle;
		    	_updateHoverStyle();
		    	if (!doNotRepaint) self.repaint();
		    };

		    /**
		    * Gets the component's paint style.
		    *
		    * Returns:
		    * the component's paint style. if there is no hoverPaintStyle set then this will be the paint style used all the time, otherwise this is the style used when the mouse is not hovering.
		    */
		    this.getPaintStyle = function() {
		    	return paintStyle;
		    };
		    
		    /*
		     * Sets the paint style to use when the mouse is hovering over the element. This is null by default.
		     * The hover paint style is applied as extensions to the paintStyle; it does not entirely replace
		     * it.  This is because people will most likely want to change just one thing when hovering, say the
		     * color for example, but leave the rest of the appearance the same.
		     * 
		     * Parameters:
		     * 	style - Style to use when the mouse is hovering.
		     *  doNotRepaint - if true, the component will not be repainted.  useful when setting things up initially.
		     */
		    this.setHoverPaintStyle = function(style, doNotRepaint) {		    	
		    	hoverPaintStyle = style;
		    	_updateHoverStyle();
		    	if (!doNotRepaint) self.repaint();
		    };

		    /**
		    * Gets the component's hover paint style.
		    *
		    * Returns:
		    * the component's hover paint style. may be null.
		    */
		    this.getHoverPaintStyle = function() {
		    	return hoverPaintStyle;
		    };
		    
		    /*
		     * sets/unsets the hover state of this element.
		     * 
		     * Parameters:
		     * 	hover - hover state boolean
		     * 	ignoreAttachedElements - if true, does not notify any attached elements of the change in hover state.  used mostly to avoid infinite loops.
		     */
		    this.setHover = function(hover, ignoreAttachedElements, timestamp) {
		    	// while dragging, we ignore these events.  this keeps the UI from flashing and
		    	// swishing and whatevering.
				if (!self._jsPlumb.currentlyDragging && !self._jsPlumb.isHoverSuspended()) {
		    
			    	_hover = hover;
					if (self.hoverClass != null && self.canvas != null) {
						if (hover) 
							jpcl.addClass(self.canvas, self.hoverClass);						
						else
							jpcl.removeClass(self.canvas, self.hoverClass);
					}
		   		 	if (hoverPaintStyle != null) {
						self.paintStyleInUse = hover ? hoverPaintStyle : paintStyle;
						timestamp = timestamp || _timestamp();
						self.repaint({timestamp:timestamp, recalc:false});
					}
					// get the list of other affected elements, if supported by this component.
					// for a connection, its the endpoints.  for an endpoint, its the connections! surprise.
					if (self.getAttachedElements && !ignoreAttachedElements)
						_updateAttachedElements(hover, _timestamp(), self);
				}
		    };
		    
		    this.isHover = function() { return _hover; };

			var jpcl = jsPlumb.CurrentLibrary,
				events = [ "click", "dblclick", "mouseenter", "mouseout", "mousemove", "mousedown", "mouseup", "contextmenu" ],
				eventFilters = { "mouseout":"mouseexit" },
				bindOne = function(o, c, evt) {
					var filteredEvent = eventFilters[evt] || evt;
					jpcl.bind(o, evt, function(ee) {
						c.fire(filteredEvent, c, ee);
					});
				},
				unbindOne = function(o, evt) {
					var filteredEvent = eventFilters[evt] || evt;
					jpcl.unbind(o, evt);
				};
		    
		    this.attachListeners = function(o, c) {
				for (var i = 0; i < events.length; i++) {
					bindOne(o, c, events[i]); 			
				}
			};
		    
		    var _updateAttachedElements = function(state, timestamp, sourceElement) {
		    	var affectedElements = self.getAttachedElements();		// implemented in subclasses
		    	if (affectedElements) {
		    		for (var i = 0; i < affectedElements.length; i++) {
		    			if (!sourceElement || sourceElement != affectedElements[i])
		    				affectedElements[i].setHover(state, true, timestamp);			// tell the attached elements not to inform their own attached elements.
		    		}
		    	}
		    };
		    
		    this.reattachListenersForElement = function(o) {
			    if (arguments.length > 1) {
		    		for (var i = 0; i < events.length; i++)
		    			unbindOne(o, events[i]);
			    	for (var i = 1; i < arguments.length; i++)
		    			self.attachListeners(o, arguments[i]);
		    	}
		    };			
		},

		overlayCapableJsPlumbUIComponent = function(params) {
			jsPlumbUIComponent.apply(this, arguments);
			var self = this;
			/*
			 * Property: overlays
			 * List of Overlays for this component.
			 */
			this.overlays = [];

			var processOverlay = function(o) {
				var _newOverlay = null;
				if (_isArray(o)) {	// this is for the shorthand ["Arrow", { width:50 }] syntax
					// there's also a three arg version:
					// ["Arrow", { width:50 }, {location:0.7}] 
					// which merges the 3rd arg into the 2nd.
					var type = o[0],
						// make a copy of the object so as not to mess up anyone else's reference...
						p = jsPlumb.extend({component:self, _jsPlumb:self._jsPlumb}, o[1]);
					if (o.length == 3) jsPlumb.extend(p, o[2]);
					_newOverlay = new jsPlumb.Overlays[self._jsPlumb.getRenderMode()][type](p);
					if (p.events) {
						for (var evt in p.events) {
							_newOverlay.bind(evt, p.events[evt]);
						}
					}
				} else if (o.constructor == String) {
					_newOverlay = new jsPlumb.Overlays[self._jsPlumb.getRenderMode()][o]({component:self, _jsPlumb:self._jsPlumb});
				} else {
					_newOverlay = o;
				}										
					
				self.overlays.push(_newOverlay);
			},
			calculateOverlaysToAdd = function(params) {
				var defaultKeys = self.defaultOverlayKeys || [],
					o = params.overlays,
					checkKey = function(k) {
						return self._jsPlumb.Defaults[k] || jsPlumb.Defaults[k] || [];
					};
				
				if (!o) o = [];

				for (var i = 0; i < defaultKeys.length; i++)
					o.unshift.apply(o, checkKey(defaultKeys[i]));
				
				return o;
			}

			var _overlays = calculateOverlaysToAdd(params);//params.overlays || self._jsPlumb.Defaults.Overlays;
			if (_overlays) {
				for (var i = 0; i < _overlays.length; i++) {
					processOverlay(_overlays[i]);
				}
			}

		    // overlay finder helper method
			var _getOverlayIndex = function(id) {
				var idx = -1;
				for (var i = 0; i < self.overlays.length; i++) {
					if (id === self.overlays[i].id) {
						idx = i;
						break;
					}
				}
				return idx;
			};
			
			/*
			 * Function: addOverlay
			 * Adds an Overlay to the Connection.
			 * 
			 * Parameters:
			 * 	overlay - Overlay to add.
			 */
			this.addOverlay = function(overlay) { 
				processOverlay(overlay); 
				self.repaint();
			};
			
			/*
			 * Function: getOverlay
			 * Gets an overlay, by ID. Note: by ID.  You would pass an 'id' parameter
			 * in to the Overlay's constructor arguments, and then use that to retrieve
			 * it via this method.
			 */
			this.getOverlay = function(id) {
				var idx = _getOverlayIndex(id);
				return idx >= 0 ? self.overlays[idx] : null;
			};

			/*
			* Function:getOverlays
			* Gets all the overlays for this component.
			*/
			this.getOverlays = function() {
				return self.overlays;
			};
			
			/*
			 * Function: hideOverlay
			 * Hides the overlay specified by the given id.
			 */
			this.hideOverlay = function(id) {
				var o = self.getOverlay(id);
				if (o) o.hide();
			};

			this.hideOverlays = function() {
				for (var i = 0; i < self.overlays.length; i++)
					self.overlays[i].hide();
			};
			
			/*
			 * Function: showOverlay
			 * Shows the overlay specified by the given id.
			 */
			this.showOverlay = function(id) {
				var o = self.getOverlay(id);
				if (o) o.show();
			};

			this.showOverlays = function() {
				for (var i = 0; i < self.overlays.length; i++)
					self.overlays[i].show();
			};
			
			/**
			 * Function: removeAllOverlays
			 * Removes all overlays from the Connection, and then repaints.
			 */
			this.removeAllOverlays = function() {
				for (var i in self.overlays)
					self.overlays[i].cleanup();

				self.overlays.splice(0, self.overlays.length);
				self.repaint();
			};
			
			/**
			 * Function:removeOverlay
			 * Removes an overlay by ID.  Note: by ID.  this is a string you set in the overlay spec.
			 * Parameters:
			 * overlayId - id of the overlay to remove.
			 */
			this.removeOverlay = function(overlayId) {
				var idx = _getOverlayIndex(overlayId);
				if (idx != -1) {
					var o = self.overlays[idx];
					o.cleanup();
					self.overlays.splice(idx, 1);
				}
			};
			
			/**
			 * Function:removeOverlays
			 * Removes a set of overlays by ID.  Note: by ID.  this is a string you set in the overlay spec.
			 * Parameters:
			 * overlayIds - this function takes an arbitrary number of arguments, each of which is a single overlay id.
			 */
			this.removeOverlays = function() {
				for (var i = 0; i < arguments.length; i++)
					self.removeOverlay(arguments[i]);
			};

			// this is a shortcut helper method to let people add a label as
			// overlay.			
			var _internalLabelOverlayId = "__label",
			_makeLabelOverlay = function(params) {

				var _params = {
					cssClass:params.cssClass,
					labelStyle : this.labelStyle,					
					id:_internalLabelOverlayId,
					component:self,
					_jsPlumb:self._jsPlumb
				},
				mergedParams = jsPlumb.extend(_params, params);

				return new jsPlumb.Overlays[self._jsPlumb.getRenderMode()].Label( mergedParams );
			};
			if (params.label) {
				var loc = params.labelLocation || self.defaultLabelLocation || 0.5,
					labelStyle = params.labelStyle || self._jsPlumb.Defaults.LabelStyle || jsPlumb.Defaults.LabelStyle;			
				this.overlays.push(_makeLabelOverlay({
					label:params.label,
					location:loc,
					labelStyle:labelStyle
				}));
			}

			/*
			 * Function: setLabel
			 * Sets the Connection's label.  
			 * 
			 * Parameters:
			 * 	l	- label to set. May be a String, a Function that returns a String, or a params object containing { "label", "labelStyle", "location", "cssClass" }
			 */
			this.setLabel = function(l) {
				var lo = self.getOverlay(_internalLabelOverlayId);
				if (!lo) {
					var params = l.constructor == String || l.constructor == Function ? { label:l } : l;
					lo = _makeLabelOverlay(params);	
					this.overlays.push(lo);
				}
				else {
					if (l.constructor == String || l.constructor == Function) lo.setLabel(l);
					else {
						if (l.label) lo.setLabel(l.label);
						if (l.location) lo.setLocation(l.location);
					}
				}
				
				self.repaint();
			};

			/*
				Function:getLabel
				Returns the label text for this component (or a function if you are labelling with a function).
				This does not return the overlay itself; this is a convenience method which is a pair with
				setLabel; together they allow you to add and access a Label Overlay without having to create the
				Overlay object itself.  For access to the underlying label overlay that jsPlumb has created,
				use getLabelOverlay.
			*/
			this.getLabel = function() {
				var lo = self.getOverlay(_internalLabelOverlayId);
				return lo != null ? lo.getLabel() : null;
			};

			/*
				Function:getLabelOverlay
				Returns the underlying internal label overlay, which will exist if you specified a label on
				a connect or addEndpoint call, or have called setLabel at any stage.   
			*/
			this.getLabelOverlay = function() {
				return self.getOverlay(_internalLabelOverlayId);
			}
		},
		
		_bindListeners = function(obj, _self, _hoverFunction) {
        	obj.bind("click", function(ep, e) { _self.fire("click", _self, e); });
			obj.bind("dblclick", function(ep, e) { _self.fire("dblclick", _self, e); });
	        obj.bind("contextmenu", function(ep, e) { _self.fire("contextmenu", _self, e); });
			obj.bind("mouseenter", function(ep, e) {
				if (!_self.isHover()) {
	                _hoverFunction(true);
					_self.fire("mouseenter", _self, e);
				}
			});
			obj.bind("mouseexit", function(ep, e) {
				if (_self.isHover()) {
	                _hoverFunction(false);
					_self.fire("mouseexit", _self, e);
				}
			});	
        };	
		
		var _jsPlumbInstanceIndex = 0,
			getInstanceIndex = function() {
				var i = _jsPlumbInstanceIndex + 1;
				_jsPlumbInstanceIndex++;
				return i;
			};

		var jsPlumbInstance = function(_defaults) {
		
		/*
		 * Property: Defaults 
		 * 
		 * These are the default settings for jsPlumb.  They are what will be used if you do not supply specific pieces of information 
		 * to the various API calls. A convenient way to implement your own look and feel can be to override these defaults 
		 * by including a script somewhere after the jsPlumb include, but before you make any calls to jsPlumb.
		 * 
		 * Properties:
		 * 	-	*Anchor*				    The default anchor to use for all connections (both source and target). Default is "BottomCenter".
		 * 	-	*Anchors*				    The default anchors to use ([source, target]) for all connections. Defaults are ["BottomCenter", "BottomCenter"].
		 *  -   *ConnectionsDetachable*		Whether or not connections are detachable by default (using the mouse). Defaults to true.
		 *  -   *ConnectionOverlays*		The default overlay definitions for Connections. Defaults to an empty list.
		 * 	-	*Connector*				The default connector definition to use for all connections.  Default is "Bezier".
		 *  -   *Container*				Optional selector or element id that instructs jsPlumb to append elements it creates to a specific element.
		 * 	-	*DragOptions*			The default drag options to pass in to connect, makeTarget and addEndpoint calls. Default is empty.
		 * 	-	*DropOptions*			The default drop options to pass in to connect, makeTarget and addEndpoint calls. Default is empty.
		 * 	-	*Endpoint*				The default endpoint definition to use for all connections (both source and target).  Default is "Dot".
		 *  -   *EndpointOverlays*		The default overlay definitions for Endpoints. Defaults to an empty list.
		 * 	-	*Endpoints*				The default endpoint definitions ([ source, target ]) to use for all connections.  Defaults are ["Dot", "Dot"].
		 * 	-	*EndpointStyle*			The default style definition to use for all endpoints. Default is fillStyle:"#456".
		 * 	-	*EndpointStyles*		The default style definitions ([ source, target ]) to use for all endpoints.  Defaults are empty.
		 * 	-	*EndpointHoverStyle*	The default hover style definition to use for all endpoints. Default is null.
		 * 	-	*EndpointHoverStyles*	The default hover style definitions ([ source, target ]) to use for all endpoints. Defaults are null.
		 * 	-	*HoverPaintStyle*		The default hover style definition to use for all connections. Defaults are null.
		 * 	-	*LabelStyle*			The default style to use for label overlays on connections.
		 * 	-	*LogEnabled*			Whether or not the jsPlumb log is enabled. defaults to false.
		 * 	-	*Overlays*				The default overlay definitions (for both Connections and Endpoint). Defaults to an empty list.
		 * 	-	*MaxConnections*		The default maximum number of connections for an Endpoint.  Defaults to 1.		 
		 * 	-	*PaintStyle*			The default paint style for a connection. Default is line width of 8 pixels, with color "#456".
		 * 	-	*RenderMode*			What mode to use to paint with.  If you're on IE<9, you don't really get to choose this.  You'll just get VML.  Otherwise, the jsPlumb default is to use SVG.
		 * 	-	*Scope*				The default "scope" to use for connections. Scope lets you assign connections to different categories. 
		 */
		this.Defaults = {
			Anchor : "BottomCenter",
			Anchors : [ null, null ],
            ConnectionsDetachable : true,
            ConnectionOverlays : [ ],
            Connector : "Bezier",
			Container : null,
			DragOptions : { },
			DropOptions : { },
			Endpoint : "Dot",
			EndpointOverlays : [ ],
			Endpoints : [ null, null ],
			EndpointStyle : { fillStyle : "#456" },
			EndpointStyles : [ null, null ],
			EndpointHoverStyle : null,
			EndpointHoverStyles : [ null, null ],
			HoverPaintStyle : null,
			LabelStyle : { color : "black" },
			LogEnabled : false,
			Overlays : [ ],
			MaxConnections : 1, 
			PaintStyle : { lineWidth : 8, strokeStyle : "#456" },
            //Reattach:false,
			RenderMode : "svg",
			Scope : "jsPlumb_DefaultScope"
		};
		if (_defaults) jsPlumb.extend(this.Defaults, _defaults);
		
		this.logEnabled = this.Defaults.LogEnabled;		

		jsPlumbUtil.EventGenerator.apply(this);
		var _currentInstance = this,
			_instanceIndex = getInstanceIndex(),
			_bb = _currentInstance.bind,
			_initialDefaults = {};

		for (var i in this.Defaults)
			_initialDefaults[i] = this.Defaults[i];

		this.bind = function(event, fn) {		
			if ("ready" === event && initialized) fn();
			else _bb.apply(_currentInstance,[event, fn]);
		};

		/*
			Function: importDefaults
			Imports all the given defaults into this instance of jsPlumb.
		*/
		_currentInstance.importDefaults = function(d) {
			for (var i in d) {
				_currentInstance.Defaults[i] = d[i];
			}	
		};

		/*
			Function:restoreDefaults
			Restores the default settings to "factory" values.
		*/
		_currentInstance.restoreDefaults = function() {
			_currentInstance.Defaults = jsPlumb.extend({}, _initialDefaults);
		};

		var log = null,
		repaintFunction = function() {
			jsPlumb.repaintEverything();
		},
		automaticRepaint = true,
		repaintEverything = function() {
			if (automaticRepaint)
				repaintFunction();
		},
		resizeTimer = null,
		initialized = false,
		connectionsByScope = {},
		/**
		 * map of element id -> endpoint lists. an element can have an arbitrary
		 * number of endpoints on it, and not all of them have to be connected
		 * to anything.
		 */
		endpointsByElement = {},
		endpointsByUUID = {},
		offsets = {},
		offsetTimestamps = {},
		floatingConnections = {},
		draggableStates = {},		
		canvasList = [],
		sizes = [],
		//listeners = {}, // a map: keys are event types, values are lists of listeners.
		DEFAULT_SCOPE = this.Defaults.Scope,
		renderMode = null,  // will be set in init()							

		/**
		 * helper method to add an item to a list, creating the list if it does
		 * not yet exist.
		 */
		_addToList = function(map, key, value) {
			var l = map[key];
			if (l == null) {
				l = [];
				map[key] = l;
			}
			l.push(value);
			return l;
		},

		/**
		 * appends an element to some other element, which is calculated as follows:
		 * 
		 * 1. if _currentInstance.Defaults.Container exists, use that element.
		 * 2. if the 'parent' parameter exists, use that.
		 * 3. otherwise just use the document body.
		 * 
		 */
		_appendElement = function(el, parent) {
			if (_currentInstance.Defaults.Container)
				jsPlumb.CurrentLibrary.appendElement(el, _currentInstance.Defaults.Container);
			else if (!parent)
				document.body.appendChild(el);
			else
				jsPlumb.CurrentLibrary.appendElement(el, parent);
		},

		_curIdStamp = 1,
		_idstamp = function() { return "" + _curIdStamp++; },		
		
		/**
		 * YUI, for some reason, put the result of a Y.all call into an object that contains
		 * a '_nodes' array, instead of handing back an array-like object like the other
		 * libraries do.
		 */
		_convertYUICollection = function(c) {
			return c._nodes ? c._nodes : c;
		},

        _suspendDrawing = false,
        /*
        sets whether or not to suspend drawing.  you should use this if you need to connect a whole load of things in one go.
        it will save you a lot of time.
         */
        _setSuspendDrawing = function(val, repaintAfterwards) {
            _suspendDrawing = val;
            if (repaintAfterwards) _currentInstance.repaintEverything();
        },

		/**
		 * Draws an endpoint and its connections. this is the main entry point into drawing connections as well
		 * as endpoints, since jsPlumb is endpoint-centric under the hood.
		 * 
		 * @param element element to draw (of type library specific element object)
		 * @param ui UI object from current library's event system. optional.
		 * @param timestamp timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do.
		 */
		_draw = function(element, ui, timestamp) {
            if (!_suspendDrawing) {
			    var id = _getAttribute(element, "id"),
			    	repaintEls = _currentInstance.dragManager.getElementsForDraggable(id);			    

			    if (timestamp == null) timestamp = _timestamp();

			    _currentInstance.anchorManager.redraw(id, ui, timestamp);

			    if (repaintEls) {
				    for (var i in repaintEls) {
						_currentInstance.anchorManager.redraw(repaintEls[i].id, ui, timestamp, repaintEls[i].offset);			    	
				    }
				}
            }
		},

		/**
		 * executes the given function against the given element if the first
		 * argument is an object, or the list of elements, if the first argument
		 * is a list. the function passed in takes (element, elementId) as
		 * arguments.
		 */
		_elementProxy = function(element, fn) {
			var retVal = null;
			if (_isArray(element)) {
				retVal = [];
				for ( var i = 0; i < element.length; i++) {
					var el = _getElementObject(element[i]), id = _getAttribute(el, "id");
					retVal.push(fn(el, id)); // append return values to what we will return
				}
			} else {
				var el = _getElementObject(element), id = _getAttribute(el, "id");
				retVal = fn(el, id);
			}
			return retVal;
		},				

		/**
		 * gets an Endpoint by uuid.
		 */
		_getEndpoint = function(uuid) { return endpointsByUUID[uuid]; },

		/**
		 * inits a draggable if it's not already initialised.
		 */
		_initDraggableIfNecessary = function(element, isDraggable, dragOptions) {
			var draggable = isDraggable == null ? false : isDraggable,
				jpcl = jsPlumb.CurrentLibrary;
			if (draggable) {
				if (jpcl.isDragSupported(element) && !jpcl.isAlreadyDraggable(element)) {
					var options = dragOptions || _currentInstance.Defaults.DragOptions || jsPlumb.Defaults.DragOptions;
					options = jsPlumb.extend( {}, options); // make a copy.
					var dragEvent = jpcl.dragEvents["drag"],
						stopEvent = jpcl.dragEvents["stop"],
						startEvent = jpcl.dragEvents["start"];

					options[startEvent] = _wrap(options[startEvent], function() {
						_currentInstance.setHoverSuspended(true);
					});

					options[dragEvent] = _wrap(options[dragEvent], function() {
						var ui = jpcl.getUIPosition(arguments);
						_draw(element, ui);
						_addClass(element, "jsPlumb_dragged");
					});
					options[stopEvent] = _wrap(options[stopEvent], function() {
						var ui = jpcl.getUIPosition(arguments);
						_draw(element, ui);
						_removeClass(element, "jsPlumb_dragged");
						_currentInstance.setHoverSuspended(false);
					});
					var elId = _getId(element); // need ID
					draggableStates[elId] = true;  
					var draggable = draggableStates[elId];
					options.disabled = draggable == null ? false : !draggable;
					jpcl.initDraggable(element, options, false);
					_currentInstance.dragManager.register(element);
				}
			}
		},
		
		/*
		* prepares a final params object that can be passed to _newConnection, taking into account defaults, events, etc.
		*/
		_prepareConnectionParams = function(params, referenceParams) {
			var _p = jsPlumb.extend( {}, params);
			if (referenceParams) jsPlumb.extend(_p, referenceParams);
			
			// hotwire endpoints passed as source or target to sourceEndpoint/targetEndpoint, respectively.
			if (_p.source && _p.source.endpoint) _p.sourceEndpoint = _p.source;
			if (_p.source && _p.target.endpoint) _p.targetEndpoint = _p.target;
			
			// test for endpoint uuids to connect
			if (params.uuids) {
				_p.sourceEndpoint = _getEndpoint(params.uuids[0]);
				_p.targetEndpoint = _getEndpoint(params.uuids[1]);
			}

			// now ensure that if we do have Endpoints already, they're not full.
			// source:
			if (_p.sourceEndpoint && _p.sourceEndpoint.isFull()) {
				_log(_currentInstance, "could not add connection; source endpoint is full");
				return;
			}

			// target:
			if (_p.targetEndpoint && _p.targetEndpoint.isFull()) {
				_log(_currentInstance, "could not add connection; target endpoint is full");
				return;
			}			
			
			// copy in any connectorOverlays that were specified on the source endpoint.
			// it doesnt copy target endpoint overlays.  i'm not sure if we want it to or not.
			if (_p.sourceEndpoint && _p.sourceEndpoint.connectorOverlays) {
				_p.overlays = _p.overlays || [];
				for (var i = 0; i < _p.sourceEndpoint.connectorOverlays.length; i++) {
					_p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);
				}
			}
			
			// tooltip.  params.tooltip takes precedence, then sourceEndpoint.connectorTooltip.
			_p.tooltip = params.tooltip;
			if (!_p.tooltip && _p.sourceEndpoint && _p.sourceEndpoint.connectorTooltip)
				_p.tooltip = _p.sourceEndpoint.connectorTooltip;
			
			// if there's a target specified (which of course there should be), and there is no
			// target endpoint specified, and 'newConnection' was not set to true, then we check to
			// see if a prior call to makeTarget has provided us with the specs for the target endpoint, and
			// we use those if so.  additionally, if the makeTarget call was specified with 'uniqueEndpoint' set
			// to true, then if that target endpoint has already been created, we re-use it.
			if (_p.target && !_p.target.endpoint && !_p.targetEndpoint && !_p.newConnection) {				
				var tid = _getId(_p.target),
					tep =_targetEndpointDefinitions[tid],
					existingUniqueEndpoint = _targetEndpoints[tid];				

				if (tep) {			
					// if target not enabled, return.
					if (!_targetsEnabled[tid]) return;

					// check for max connections??						
					var newEndpoint = existingUniqueEndpoint != null ? existingUniqueEndpoint : _currentInstance.addEndpoint(_p.target, tep);
					if (_targetEndpointsUnique[tid]) _targetEndpoints[tid] = newEndpoint;
					 _p.targetEndpoint = newEndpoint;
					 newEndpoint._makeTargetCreator = true;
				}
			}

			// same thing, but for source.
			if (_p.source && !_p.source.endpoint && !_p.sourceEndpoint && !_p.newConnection) {
				var tid = _getId(_p.source),
					tep = _sourceEndpointDefinitions[tid],
					existingUniqueEndpoint = _sourceEndpoints[tid];				

				if (tep) {
					// if source not enabled, return.					
					if (!_sourcesEnabled[tid]) return;
				
					var newEndpoint = existingUniqueEndpoint != null ? existingUniqueEndpoint : _currentInstance.addEndpoint(_p.source, tep);
					if (_sourceEndpointsUnique[tid]) _sourceEndpoints[tid] = newEndpoint;
					 _p.sourceEndpoint = newEndpoint;
				}
			}
			
			return _p;
		},
		
		_newConnection = function(params) {
			var connectionFunc = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),
			    endpointFunc = _currentInstance.Defaults.EndpointType || Endpoint,
			    parent = jsPlumb.CurrentLibrary.getParent;
			
			if (params.container)
				params["parent"] = params.container;
			else {
				if (params.sourceEndpoint)
					params["parent"] = params.sourceEndpoint.parent;
				else if (params.source.constructor == endpointFunc)
					params["parent"] = params.source.parent;
				else params["parent"] = parent(params.source);
			}
			
			params["_jsPlumb"] = _currentInstance;
			var con = new connectionFunc(params);
			con.id = "con_" + _idstamp();
			_eventFireProxy("click", "click", con);
			_eventFireProxy("dblclick", "dblclick", con);
            _eventFireProxy("contextmenu", "contextmenu", con);
			return con;
		},
		
		/**
		* adds the connection to the backing model, fires an event if necessary and then redraws
		*/
		_finaliseConnection = function(jpc, params, originalEvent) {
            params = params || {};
			// add to list of connections (by scope).
            if (!jpc.suspendedEndpoint)
			    _addToList(connectionsByScope, jpc.scope, jpc);
			// fire an event
			if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {
				_currentInstance.fire("jsPlumbConnection", {
					connection:jpc,
					source : jpc.source, target : jpc.target,
					sourceId : jpc.sourceId, targetId : jpc.targetId,
					sourceEndpoint : jpc.endpoints[0], targetEndpoint : jpc.endpoints[1]
				}, originalEvent);
			}
            // always inform the anchor manager
            // except that if jpc has a suspended endpoint it's not true to say the
            // connection is new; it has just (possibly) moved. the question is whether
            // to make that call here or in the anchor manager.  i think perhaps here.
            _currentInstance.anchorManager.newConnection(jpc);
			// force a paint
			_draw(jpc.source);
		},
		
		_eventFireProxy = function(event, proxyEvent, obj) {
			obj.bind(event, function(originalObject, originalEvent) {
				_currentInstance.fire(proxyEvent, obj, originalEvent);
			});
		},
		
		/**
		 * for the given endpoint params, returns an appropriate parent element for the UI elements that will be added.
		 * this function is used by _newEndpoint (directly below), and also in the makeSource function in jsPlumb.
		 * 
		 *   the logic is to first look for a "container" member of params, and pass that back if found.  otherwise we
		 *   handoff to the 'getParent' function in the current library.
		 */
		_getParentFromParams = function(params) {
			if (params.container)
				return params.container;
			else {
                var tag = jsPlumb.CurrentLibrary.getTagName(params.source),
                    p = jsPlumb.CurrentLibrary.getParent(params.source);
                if (tag && tag.toLowerCase() === "td")
                    return jsPlumb.CurrentLibrary.getParent(p);
                else return p;
            }
		},
		
		/**
			factory method to prepare a new endpoint.  this should always be used instead of creating Endpoints
			manually, since this method attaches event listeners and an id.
		*/
		_newEndpoint = function(params) {
			var endpointFunc = _currentInstance.Defaults.EndpointType || Endpoint;
			params.parent = _getParentFromParams(params);
			params["_jsPlumb"] = _currentInstance;
			var ep = new endpointFunc(params);
			ep.id = "ep_" + _idstamp();
			_eventFireProxy("click", "endpointClick", ep);
			_eventFireProxy("dblclick", "endpointDblClick", ep);
            _eventFireProxy("contextmenu", "contextmenu", ep);
			return ep;
		},
		
		/**
		 * performs the given function operation on all the connections found
		 * for the given element id; this means we find all the endpoints for
		 * the given element, and then for each endpoint find the connectors
		 * connected to it. then we pass each connection in to the given
		 * function.
		 */
		_operation = function(elId, func, endpointFunc) {
			var endpoints = endpointsByElement[elId];
			if (endpoints && endpoints.length) {
				for ( var i = 0; i < endpoints.length; i++) {
					for ( var j = 0; j < endpoints[i].connections.length; j++) {
						var retVal = func(endpoints[i].connections[j]);
						// if the function passed in returns true, we exit.
						// most functions return false.
						if (retVal) return;
					}
					if (endpointFunc) endpointFunc(endpoints[i]);
				}
			}
		},
		/**
		 * perform an operation on all elements.
		 */
		_operationOnAll = function(func) {
			for ( var elId in endpointsByElement) {
				_operation(elId, func);
			}
		},		
		
		/**
		 * helper to remove an element from the DOM.
		 */
		_removeElement = function(element, parent) {
			if (element != null && element.parentNode != null) {
				element.parentNode.removeChild(element);
			}
		},
		/**
		 * helper to remove a list of elements from the DOM.
		 */
		_removeElements = function(elements, parent) {
			for ( var i = 0; i < elements.length; i++)
				_removeElement(elements[i], parent);
		},
		/**
		 * Sets whether or not the given element(s) should be draggable,
		 * regardless of what a particular plumb command may request.
		 * 
		 * @param element
		 *            May be a string, a element objects, or a list of
		 *            strings/elements.
		 * @param draggable
		 *            Whether or not the given element(s) should be draggable.
		 */
		_setDraggable = function(element, draggable) {
			return _elementProxy(element, function(el, id) {
				draggableStates[id] = draggable;
				if (jsPlumb.CurrentLibrary.isDragSupported(el)) {
					jsPlumb.CurrentLibrary.setDraggable(el, draggable);
				}
			});
		},
		/**
		 * private method to do the business of hiding/showing.
		 * 
		 * @param el
		 *            either Id of the element in question or a library specific
		 *            object for the element.
		 * @param state
		 *            String specifying a value for the css 'display' property
		 *            ('block' or 'none').
		 */
		_setVisible = function(el, state, alsoChangeEndpoints) {
			state = state === "block";
			var endpointFunc = null;
			if (alsoChangeEndpoints) {
				if (state) endpointFunc = function(ep) {
					ep.setVisible(true, true, true);
				};
				else endpointFunc = function(ep) {
					ep.setVisible(false, true, true);
				};
			}
			var id = _getAttribute(el, "id");
			_operation(id, function(jpc) {
				if (state && alsoChangeEndpoints) {		
					// this test is necessary because this functionality is new, and i wanted to maintain backwards compatibility.
					// this block will only set a connection to be visible if the other endpoint in the connection is also visible.
					var oidx = jpc.sourceId === id ? 1 : 0;
					if (jpc.endpoints[oidx].isVisible()) jpc.setVisible(true);
				}
				else  // the default behaviour for show, and what always happens for hide, is to just set the visibility without getting clever.
					jpc.setVisible(state);
			}, endpointFunc);
		},
		/**
		 * toggles the draggable state of the given element(s).
		 * 
		 * @param el
		 *            either an id, or an element object, or a list of
		 *            ids/element objects.
		 */
		_toggleDraggable = function(el) {
			return _elementProxy(el, function(el, elId) {
				var state = draggableStates[elId] == null ? false : draggableStates[elId];
				state = !state;
				draggableStates[elId] = state;
				jsPlumb.CurrentLibrary.setDraggable(el, state);
				return state;
			});
		},
		/**
		 * private method to do the business of toggling hiding/showing.
		 * 
		 * @param elId
		 *            Id of the element in question
		 */
		_toggleVisible = function(elId, changeEndpoints) {
			var endpointFunc = null;
			if (changeEndpoints) {
				endpointFunc = function(ep) {
					var state = ep.isVisible();
					ep.setVisible(!state);
				};
			}
			_operation(elId, function(jpc) {
				var state = jpc.isVisible();
				jpc.setVisible(!state);				
			}, endpointFunc);
			// todo this should call _elementProxy, and pass in the
			// _operation(elId, f) call as a function. cos _toggleDraggable does
			// that.
		},
		/**
		 * updates the offset and size for a given element, and stores the
		 * values. if 'offset' is not null we use that (it would have been
		 * passed in from a drag call) because it's faster; but if it is null,
		 * or if 'recalc' is true in order to force a recalculation, we get the current values.
		 */
		_updateOffset = function(params) {
			var timestamp = params.timestamp, recalc = params.recalc, offset = params.offset, elId = params.elId;
			if (!recalc) {
				if (timestamp && timestamp === offsetTimestamps[elId])
					return offsets[elId];
			}
			if (recalc || !offset) { // if forced repaint or no offset
											// available, we recalculate.
				// get the current size and offset, and store them
				var s = _getElementObject(elId);
				if (s != null) {
					sizes[elId] = _getSize(s);
					offsets[elId] = _getOffset(s);
					offsetTimestamps[elId] = timestamp;
				}
			} else {
				offsets[elId] = offset;
                if (sizes[elId] == null) {
                    var s = _getElementObject(elId);
				    if (s != null)
					    sizes[elId] = _getSize(s);
                }
			}
			
			if(offsets[elId] && !offsets[elId].right) {
				offsets[elId].right = offsets[elId].left + sizes[elId][0];
				offsets[elId].bottom = offsets[elId].top + sizes[elId][1];	
				offsets[elId].width = sizes[elId][0];
				offsets[elId].height = sizes[elId][1];	
				offsets[elId].centerx = offsets[elId].left + (offsets[elId].width / 2);
				offsets[elId].centery = offsets[elId].top + (offsets[elId].height / 2);				
			}
			return offsets[elId];
		},

		// TODO comparison performance
		_getCachedData = function(elId) {
			var o = offsets[elId];
			if (!o) o = _updateOffset({elId:elId});
			return {o:o, s:sizes[elId]};
		},

		/**
		 * gets an id for the given element, creating and setting one if
		 * necessary.  the id is of the form
		 *
		 *	jsPlumb_<instance index>_<index in instance>
		 *
		 * where "index in instance" is a monotonically increasing integer that starts at 0,
		 * for each instance.  this method is used not only to assign ids to elements that do not
		 * have them but also to connections and endpoints.
		 */
		_getId = function(element, uuid, doNotCreateIfNotFound) {
			var ele = _getElementObject(element);
			var id = _getAttribute(ele, "id");
			if (!id || id == "undefined") {
				// check if fixed uuid parameter is given
				if (arguments.length == 2 && arguments[1] != undefined)
					id = uuid;
				else if (arguments.length == 1 || (arguments.length == 3 && !arguments[2]))
					id = "jsPlumb_" + _instanceIndex + "_" + _idstamp();
				_setAttribute(ele, "id", id);
			}
			return id;
		},		

		/**
		 * wraps one function with another, creating a placeholder for the
		 * wrapped function if it was null. this is used to wrap the various
		 * drag/drop event functions - to allow jsPlumb to be notified of
		 * important lifecycle events without imposing itself on the user's
		 * drag/drop functionality. TODO: determine whether or not we should
		 * support an error handler concept, if one of the functions fails.
		 * 
		 * @param wrappedFunction original function to wrap; may be null.
		 * @param newFunction function to wrap the original with.
		 * @param returnOnThisValue Optional. Indicates that the wrappedFunction should 
		 * not be executed if the newFunction returns a value matching 'returnOnThisValue'.
		 * note that this is a simple comparison and only works for primitives right now.
		 */
		_wrap = function(wrappedFunction, newFunction, returnOnThisValue) {
			wrappedFunction = wrappedFunction || function() { };
			newFunction = newFunction || function() { };
			return function() {
				var r = null;
				try {
					r = newFunction.apply(this, arguments);
				} catch (e) {
					_log(_currentInstance, "jsPlumb function failed : " + e);
				}
				if (returnOnThisValue == null || (r !== returnOnThisValue)) {
					try {
						wrappedFunction.apply(this, arguments);
					} catch (e) {
						_log(_currentInstance, "wrapped function failed : " + e);
					}
				}
				return r;
			};
		};	

		/*
		 * Property: connectorClass 
		 *   The CSS class to set on Connection elements. This value is a String and can have multiple classes; the entire String is appended as-is.
		 */
		this.connectorClass = "_jsPlumb_connector";

		/*
		 * Property: endpointClass 
		 *   The CSS class to set on Endpoint elements. This value is a String and can have multiple classes; the entire String is appended as-is.
		 */
		this.endpointClass = "_jsPlumb_endpoint";

		/*
		 * Property: overlayClass 
		 * The CSS class to set on an Overlay that is an HTML element. This value is a String and can have multiple classes; the entire String is appended as-is.
		 */
		this.overlayClass = "_jsPlumb_overlay";
		
		this.Anchors = {};
		
		this.Connectors = { 
			"canvas":{},
			"svg":{},
			"vml":{}
		};

		this.Endpoints = {
			"canvas":{},
			"svg":{},
			"vml":{}
		};

		this.Overlays = {
			"canvas":{},
			"svg":{},
			"vml":{}
		};
		
// ************************ PLACEHOLDER DOC ENTRIES FOR NATURAL DOCS *****************************************
		/*
		 * Function: bind
		 * Bind to an event on jsPlumb.  
		 * 
		 * Parameters:
		 * 	event - the event to bind.  Available events on jsPlumb are:
		 *         - *jsPlumbConnection* 			: 	notification that a new Connection was established.  jsPlumb passes the new Connection to the callback.
		 *         - *jsPlumbConnectionDetached* 	: 	notification that a Connection was detached.  jsPlumb passes the detached Connection to the callback.
		 *         - *click*						:	notification that a Connection was clicked.  jsPlumb passes the Connection that was clicked to the callback.
		 *         - *dblclick*						:	notification that a Connection was double clicked.  jsPlumb passes the Connection that was double clicked to the callback.
		 *         - *endpointClick*				:	notification that an Endpoint was clicked.  jsPlumb passes the Endpoint that was clicked to the callback.
		 *         - *endpointDblClick*				:	notification that an Endpoint was double clicked.  jsPlumb passes the Endpoint that was double clicked to the callback.
		 *         - *beforeDrop*					: 	notification that a Connection is about to be dropped. Returning false from this method cancels the drop. jsPlumb passes { sourceId, targetId, scope, connection, dropEndpoint } to your callback. For more information, refer to the jsPlumb documentation.
		 *         - *beforeDetach*					: 	notification that a Connection is about to be detached. Returning false from this method cancels the detach. jsPlumb passes the Connection to your callback. For more information, refer to the jsPlumb documentation.
		 *		   - *connectionDrag* 				:   notification that an existing Connection is being dragged. jsPlumb passes the Connection to your callback function.
		 *         - *connectionDragEnd*            :   notification that the drag of an existing Connection has ended.  jsPlumb passes the Connection to your callback function.
		 *         
		 *  callback - function to callback. This function will be passed the Connection/Endpoint that caused the event, and also the original event.    
		 */
		
		/*
		 * Function: clearListeners
		 * Clears either all listeners, or listeners for some specific event.
		 * 
		 * Parameters:
		 * 	event	-	optional. constrains the clear to just listeners for this event.
		 */				
		
// *************** END OF PLACEHOLDER DOC ENTRIES FOR NATURAL DOCS ***********************************************************		
		

// --------------------------- jsPLumbInstance public API ---------------------------------------------------------

		/*
		 Function: addClass
		 
		 Helper method to abstract out differences in setting css classes on the different renderer types.
		*/
		this.addClass = function(el, clazz) {
			return jsPlumb.CurrentLibrary.addClass(el, clazz);
		};
		
		/*
		 Function: removeClass
		 
		 Helper method to abstract out differences in setting css classes on the different renderer types.
		*/
		this.removeClass = function(el, clazz) {
			return jsPlumb.CurrentLibrary.removeClass(el, clazz);
		};
		
		/*
		 Function: hasClass
		 
		 Helper method to abstract out differences in testing for css classes on the different renderer types.
		*/
		this.hasClass = function(el, clazz) {
			return jsPlumb.CurrentLibrary.hasClass(el, clazz);
		};
		
		/*
		  Function: addEndpoint 
		  	
		  Adds an <Endpoint> to a given element or elements.
		  			  
		  Parameters:
		   
		  	el - Element to add the endpoint to. Either an element id, a selector representing some element(s), or an array of either of these. 
		  	params - Object containing Endpoint constructor arguments.  For more information, see <Endpoint>.
		  	referenceParams - Object containing more Endpoint constructor arguments; it will be merged with params by jsPlumb.  You would use this if you had some 
		  					  shared parameters that you wanted to reuse when you added Endpoints to a number of elements. The allowed values in
		  					  this object are anything that 'params' can contain.  See <Endpoint>.
		  	 
		  Returns: 
		  	The newly created <Endpoint>, if el referred to a single element.  Otherwise, an array of newly created <Endpoint>s. 
		  	
		  See Also: 
		  	<addEndpoints>
		 */
		this.addEndpoint = function(el, params, referenceParams) {
			referenceParams = referenceParams || {};
			var p = jsPlumb.extend({}, referenceParams);
			jsPlumb.extend(p, params);
			p.endpoint = p.endpoint || _currentInstance.Defaults.Endpoint || jsPlumb.Defaults.Endpoint;
			p.paintStyle = p.paintStyle || _currentInstance.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle;
            // YUI wrapper
			el = _convertYUICollection(el);			
			
			var results = [], inputs = el.length && el.constructor != String ? el : [ el ];
						
			for (var i = 0; i < inputs.length; i++) {
				var _el = _getElementObject(inputs[i]), id = _getId(_el);
				p.source = _el;
                _updateOffset({ elId : id });
				var e = _newEndpoint(p);
				if (p.parentAnchor) e.parentAnchor = p.parentAnchor;
				_addToList(endpointsByElement, id, e);
				var myOffset = offsets[id], myWH = sizes[id];
				var anchorLoc = e.anchor.compute( { xy : [ myOffset.left, myOffset.top ], wh : myWH, element : e });
				e.paint({ anchorLoc : anchorLoc });
				results.push(e);
				_currentInstance.dragManager.endpointAdded(_el);
			}
			
			return results.length == 1 ? results[0] : results;
		};
		
		/*
		  Function: addEndpoints 
		  Adds a list of <Endpoint>s to a given element or elements.
		  
		  Parameters: 
		  	target - element to add the Endpoint to. Either an element id, a selector representing some element(s), or an array of either of these. 
		  	endpoints - List of objects containing Endpoint constructor arguments. one Endpoint is created for each entry in this list.  See <Endpoint>'s constructor documentation. 
			referenceParams - Object containing more Endpoint constructor arguments; it will be merged with params by jsPlumb.  You would use this if you had some shared parameters that you wanted to reuse when you added Endpoints to a number of elements.		  	 

		  Returns: 
		  	List of newly created <Endpoint>s, one for each entry in the 'endpoints' argument. 
		  	
		  See Also:
		  	<addEndpoint>
		 */
		this.addEndpoints = function(el, endpoints, referenceParams) {
			var results = [];
			for ( var i = 0; i < endpoints.length; i++) {
				var e = _currentInstance.addEndpoint(el, endpoints[i], referenceParams);
				if (_isArray(e))
					Array.prototype.push.apply(results, e);
				else results.push(e);
			}
			return results;
		};

		/*
		  Function: animate 
		  This is a wrapper around the supporting library's animate function; it injects a call to jsPlumb in the 'step' function (creating
		  the 'step' function if necessary). This only supports the two-arg version of the animate call in jQuery, the one that takes an 'options' object as
		  the second arg. MooTools has only one method, a two arg one. Which is handy.  YUI has a one-arg method, so jsPlumb merges 'properties' and 'options' together for YUI.
		   
		  Parameters: 
		  	el - Element to animate. Either an id, or a selector representing the element. 
		  	properties - The 'properties' argument you want passed to the library's animate call. 
		   	options - The 'options' argument you want passed to the library's animate call.
		    
		  Returns: 
		  	void
		 */
		this.animate = function(el, properties, options) {
			var ele = _getElementObject(el), id = _getAttribute(el, "id");
			options = options || {};
			var stepFunction = jsPlumb.CurrentLibrary.dragEvents['step'];
			var completeFunction = jsPlumb.CurrentLibrary.dragEvents['complete'];
			options[stepFunction] = _wrap(options[stepFunction], function() {
				_currentInstance.repaint(id);
			});

			// onComplete repaints, just to make sure everything looks good at the end of the animation.
			options[completeFunction] = _wrap(options[completeFunction],
					function() {
						_currentInstance.repaint(id);
					});

			jsPlumb.CurrentLibrary.animate(ele, properties, options);
		};		
		
		/**
		* checks for a listener for the given condition, executing it if found, passing in the given value.
		* condition listeners would have been attached using "bind" (which is, you could argue, now overloaded, since
		* firing click events etc is a bit different to what this does).  i thought about adding a "bindCondition"
		* or something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these
		* condition events anyway.
		*/
		this.checkCondition = function(conditionName, value) {
			var l = _currentInstance.getListener(conditionName);
			var r = true;
			if (l && l.length > 0) {
				try {
					for (var i = 0 ; i < l.length; i++) {
						r = r && l[i](value); 
					}
				}
				catch (e) { 
					_log(_currentInstance, "cannot check condition [" + conditionName + "]" + e); 
				}
			}
			return r;
		};

		/*
		  Function: connect 
		  Establishes a <Connection> between two elements (or <Endpoint>s, which are themselves registered to elements).
		  
		  Parameters: 
		    params - Object containing constructor arguments for the Connection. See <Connection>'s constructor documentation.
		    referenceParams - Optional object containing more constructor arguments for the Connection. Typically you would pass in data that a lot of 
		    Connections are sharing here, such as connector style etc, and then use the main params for data specific to this Connection.
		     
		  Returns: 
		  	The newly created <Connection>.
		 */
		this.connect = function(params, referenceParams) {
			// prepare a final set of parameters to create connection with
			var _p = _prepareConnectionParams(params, referenceParams);
			// TODO probably a nicer return value if the connection was not made.  _prepareConnectionParams
			// will return null (and log something) if either endpoint was full.  what would be nicer is to 
			// create a dedicated 'error' object.
			if (_p) {
				// a connect call will delete its created endpoints on detach, unless otherwise specified.
				// this is because the endpoints belong to this connection only, and are no use to
				// anyone else, so they hang around like a bad smell.
				if (_p.deleteEndpointsOnDetach == null)
					_p.deleteEndpointsOnDetach = true;

				// create the connection.  it is not yet registered 
				var jpc = _newConnection(_p);
				// now add it the model, fire an event, and redraw
				_finaliseConnection(jpc, _p);						
				return jpc;
			}
		};
		
		/*
		 Function: deleteEndpoint		 
		 Deletes an Endpoint and removes all Connections it has (which removes the Connections from the other Endpoints involved too)
		 
		 Parameters:
		 	object - either an <Endpoint> object (such as from an addEndpoint call), or a String UUID.
		 	
		 Returns:
		 	void		  
		 */
		this.deleteEndpoint = function(object) {
			var endpoint = (typeof object == "string") ? endpointsByUUID[object] : object;			
			if (endpoint) {					
				var uuid = endpoint.getUuid();
				if (uuid) endpointsByUUID[uuid] = null;				
				endpoint.detachAll();				
				_removeElements(endpoint.endpoint.getDisplayElements());
				_currentInstance.anchorManager.deleteEndpoint(endpoint);
				for (var e in endpointsByElement) {
					var endpoints = endpointsByElement[e];
					if (endpoints) {
						var newEndpoints = [];
						for (var i = 0; i < endpoints.length; i++)
							if (endpoints[i] != endpoint) newEndpoints.push(endpoints[i]);
						
						endpointsByElement[e] = newEndpoints;
					}
				}
				_currentInstance.dragManager.endpointDeleted(endpoint);								
			}									
		};
		
		/*
		 Function: deleteEveryEndpoint
		  Deletes every <Endpoint>, and their associated <Connection>s, in this instance of jsPlumb. Does not unregister any event listeners (this is the only difference
between this method and jsPlumb.reset).  
		  
		 Returns: 
		 	void 
		 */
		this.deleteEveryEndpoint = function() {
			for ( var id in endpointsByElement) {
				var endpoints = endpointsByElement[id];
				if (endpoints && endpoints.length) {
					for ( var i = 0; i < endpoints.length; i++) {
						_currentInstance.deleteEndpoint(endpoints[i]);
					}
				}
			}
			delete endpointsByElement;
			endpointsByElement = {};
			delete endpointsByUUID;
			endpointsByUUID = {};
		};

		var fireDetachEvent = function(jpc, doFireEvent, originalEvent) {
            // may have been given a connection, or in special cases, an object
            var connType =  _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),
                argIsConnection = jpc.constructor == connType,
                params = argIsConnection ? {
                    connection:jpc,
				    source : jpc.source, target : jpc.target,
				    sourceId : jpc.sourceId, targetId : jpc.targetId,
				    sourceEndpoint : jpc.endpoints[0], targetEndpoint : jpc.endpoints[1]
                } : jpc;

			if (doFireEvent) _currentInstance.fire("jsPlumbConnectionDetached", params, originalEvent);
            _currentInstance.anchorManager.connectionDetached(params);
		},
		/**
			fires an event to indicate an existing connection is being dragged.
		*/
		fireConnectionDraggingEvent = function(jpc) {
			_currentInstance.fire("connectionDrag", jpc);	
		},
		fireConnectionDragStopEvent = function(jpc) {
			_currentInstance.fire("connectionDragStop", jpc);
		};


		/*
		  Function: detach 
		  Detaches and then removes a <Connection>.  From 1.3.5 this method has been altered to remove support for
		  specifying Connections by various parameters; you can now pass in a Connection as the first argument and
		  an optional parameters object as a second argument.  If you need the functionality this method provided
		  before 1.3.5 then you should use the getConnections method to get the list of Connections to detach, and
		  then iterate through them, calling this for each one.
		  		   
		  Parameters: 
		    connection  -   the <Connection> to detach
		    params      -   optional parameters to the detach call.  valid values here are
		                    fireEvent   :   defaults to false; indicates you want jsPlumb to fire a connection
		                                    detached event. The thinking behind this is that if you made a programmatic
		                                    call to detach an event, you probably don't need the callback.
		                    forceDetach :   defaults to false. allows you to override any beforeDetach listeners that may be registered.

		    Returns: 
		    	true if successful, false if not.
		 */
		this.detach = function() {

            if (arguments.length == 0) return;
            var connType =  _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),
                firstArgIsConnection = arguments[0].constructor == connType,
                params = arguments.length == 2 ? firstArgIsConnection ? (arguments[1] || {}) : arguments[0] : arguments[0],
                fireEvent = (params.fireEvent !== false),
                forceDetach = params.forceDetach,
                connection = firstArgIsConnection ? arguments[0] : params.connection;

				if (connection) {
                    if (forceDetach || (connection.isDetachAllowed(connection)
                                        && connection.endpoints[0].isDetachAllowed(connection)
                                        && connection.endpoints[1].isDetachAllowed(connection))) {
                        if (forceDetach || _currentInstance.checkCondition("beforeDetach", connection))
						    connection.endpoints[0].detach(connection, false, true, fireEvent); // TODO check this param iscorrect for endpoint's detach method
                    }
                }
                else {
					var _p = jsPlumb.extend( {}, params); // a backwards compatibility hack: source should be thought of as 'params' in this case.
					// test for endpoint uuids to detach
					if (_p.uuids) {
						_getEndpoint(_p.uuids[0]).detachFrom(_getEndpoint(_p.uuids[1]), fireEvent);
					} else if (_p.sourceEndpoint && _p.targetEndpoint) {
						_p.sourceEndpoint.detachFrom(_p.targetEndpoint);
					} else {
						var sourceId = _getId(_p.source),
						    targetId = _getId(_p.target);
						_operation(sourceId, function(jpc) {
						    if ((jpc.sourceId == sourceId && jpc.targetId == targetId) || (jpc.targetId == sourceId && jpc.sourceId == targetId)) {
							    if (_currentInstance.checkCondition("beforeDetach", jpc)) {
                                    jpc.endpoints[0].detach(jpc, false, true, fireEvent);
								}
							}
						});
					}
				}
		};

		/*
		  Function: detachAllConnections
		  Removes all an element's Connections.
		   
		  Parameters:
		  	el - either the id of the element, or a selector for the element.
		  	params - optional parameters.  alowed values:
		  	        fireEvent : defaults to true, whether or not to fire the detach event.
		  	
		  Returns: 
		  	void
		 */
		this.detachAllConnections = function(el, params) {
            params = params || {};
            el = _getElementObject(el);
			var id = _getAttribute(el, "id"),
                endpoints = endpointsByElement[id];
			if (endpoints && endpoints.length) {
				for ( var i = 0; i < endpoints.length; i++) {
					endpoints[i].detachAll(params.fireEvent);
				}
			}
		};

		/*
		  Function: detachEveryConnection 
		  Remove all Connections from all elements, but leaves Endpoints in place.

		  Parameters:
		    params  - optional params object containing:
		            fireEvent : whether or not to fire detach events. defaults to true.

		   
		  Returns: 
		  	void
		  	 
		  See Also:
		  	<removeEveryEndpoint>
		 */
		this.detachEveryConnection = function(params) {
            params = params || {};
			for ( var id in endpointsByElement) {
				var endpoints = endpointsByElement[id];
				if (endpoints && endpoints.length) {
					for ( var i = 0; i < endpoints.length; i++) {
						endpoints[i].detachAll(params.fireEvent);
					}
				}
			}
			delete connectionsByScope;
			connectionsByScope = {};
		};


		/*
		  Function: draggable 
		  Initialises the draggability of some element or elements.  You should use this instead of your 
		  library's draggable method so that jsPlumb can setup the appropriate callbacks.  Your 
		  underlying library's drag method is always called from this method.
		  
		  Parameters: 
		  	el - either an element id, a list of element ids, or a selector. 
		  	options - options to pass through to the underlying library
		  	 
		  Returns: 
		  	void
		 */		 
		this.draggable = function(el, options) {
			if (typeof el == 'object' && el.length) {
				for ( var i = 0; i < el.length; i++) {
					var ele = _getElementObject(el[i]);
					if (ele) _initDraggableIfNecessary(ele, true, options);
				}
			} 
			else if (el._nodes) { 	// TODO this is YUI specific; really the logic should be forced
				// into the library adapters (for jquery and mootools aswell)
				for ( var i = 0; i < el._nodes.length; i++) {
					var ele = _getElementObject(el._nodes[i]);
					if (ele) _initDraggableIfNecessary(ele, true, options);
				}
			}
			else {
				var ele = _getElementObject(el);
				if (ele) _initDraggableIfNecessary(ele, true, options);
			}
		};

		/*
		  Function: extend 
		  Wraps the underlying library's extend functionality.
		  
		  Parameters: 
		  	o1 - object to extend 
		  	o2 - object to extend o1 with
		  	
		  Returns: 
		  	o1, extended with all properties from o2.
		 */
		this.extend = function(o1, o2) {
			return jsPlumb.CurrentLibrary.extend(o1, o2);
		};
		
		/*
		 * Function: getDefaultEndpointType
		 * 	Returns the default Endpoint type. Used when someone wants to subclass Endpoint and have jsPlumb return instances of their subclass.
		 *  you would make a call like this in your class's constructor:
		 *    jsPlumb.getDefaultEndpointType().apply(this, arguments);
		 * 
		 * Returns:
		 * 	the default Endpoint function used by jsPlumb.
		 */
		this.getDefaultEndpointType = function() {
			return Endpoint;
		};
		
		/*
		 * Function: getDefaultConnectionType
		 * 	Returns the default Connection type. Used when someone wants to subclass Connection and have jsPlumb return instances of their subclass.
		 *  you would make a call like this in your class's constructor:
		 *    jsPlumb.getDefaultConnectionType().apply(this, arguments);
		 * 
		 * Returns:
		 * 	the default Connection function used by jsPlumb.
		 */
		this.getDefaultConnectionType = function() {
			return Connection;
		};

		// helpers for select/selectEndpoints
		var _setOperation = function(list, func, args, selector) {
				for (var i = 0; i < list.length; i++) {
					list[i][func].apply(list[i], args);
				}	
				return selector(list);
			},
			_getOperation = function(list, func, args) {
				var out = [];
				for (var i = 0; i < list.length; i++) {					
					out.push([ list[i][func].apply(list[i], args), list[i] ]);
				}	
				return out;
			},
			setter = function(list, func, selector) {
				return function() {
					return _setOperation(list, func, arguments, selector);
				};
			},
			getter = function(list, func) {
				return function() {
					return _getOperation(list, func, arguments);
				};	
			};

		/*
		 * Function: getConnections 
		 * Gets all or a subset of connections currently managed by this jsPlumb instance.  If only one scope is passed in to this method,
		 * the result will be a list of connections having that scope (passing in no scope at all will result in jsPlumb assuming you want the
		 * default scope).  If multiple scopes are passed in, the return value will be a map of { scope -> [ connection... ] }.
		 * 
		 *  Parameters:
		 *  	scope	-	if the only argument to getConnections is a string, jsPlumb will treat that string as a scope filter, and return a list
		 *                  of connections that are in the given scope. use '*' for all scopes.
		 *      options	-	if the argument is a JS object, you can specify a finer-grained filter:
		 *      
		 *      		-	*scope* may be a string specifying a single scope, or an array of strings, specifying multiple scopes. Also may have the value '*', indicating any scope.
		 *      		-	*source* either a string representing an element id, a selector, or an array of ids. Also may have the value '*', indicating any source.  Constrains the result to connections having this/these element(s) as source.
		 *      		-	*target* either a string representing an element id, a selector, or an array of ids. Also may have the value '*', indicating any target.  Constrains the result to connections having this/these element(s) as target.		 
		 *		flat    -	return results in a flat array (don't return an object whose keys are scopes and whose values are lists per scope).
		 * 
		 */
		this.getConnections = function(options, flat) {
			if (!options) {
				options = {};
			} else if (options.constructor == String) {
				options = { "scope": options };
			}
			var prepareList = function(input) {
				var r = [];
				if (input) {
					if (typeof input == 'string') {
						if (input === "*") return input;
						r.push(input);
					}
					else
						r = input;
				}
				return r;
			},
			scope = options.scope || _currentInstance.getDefaultScope(),
			scopes = prepareList(scope),
			sources = prepareList(options.source),
			targets = prepareList(options.target),
			filter = function(list, value) {
				if (list === "*") return true;
				return list.length > 0 ? _indexOf(list, value) != -1 : true;
			},
			results = (!flat && scopes.length > 1) ? {} : [],
			_addOne = function(scope, obj) {
				if (!flat && scopes.length > 1) {
					var ss = results[scope];
					if (ss == null) {
						ss = []; results[scope] = ss;
					}
					ss.push(obj);
				} else results.push(obj);
			};
			for ( var i in connectionsByScope) {
				if (filter(scopes, i)) {
					for ( var j = 0; j < connectionsByScope[i].length; j++) {
						var c = connectionsByScope[i][j];
						if (filter(sources, c.sourceId) && filter(targets, c.targetId))
							_addOne(i, c);
					}
				}
			}
			return results;
		};
		
		var	_makeConnectionSelectHandler = function(list) {
			//var 
			return {
				// setters
				setHover:setter(list, "setHover", _makeConnectionSelectHandler),								
				removeAllOverlays:setter(list, "removeAllOverlays", _makeConnectionSelectHandler),
				setLabel:setter(list, "setLabel", _makeConnectionSelectHandler),
				addOverlay:setter(list, "addOverlay", _makeConnectionSelectHandler),
				removeOverlay:setter(list, "removeOverlay", _makeConnectionSelectHandler),
				removeOverlays:setter(list, "removeOverlays", _makeConnectionSelectHandler),
				showOverlay:setter(list, "showOverlay", _makeConnectionSelectHandler),
				hideOverlay:setter(list, "hideOverlay", _makeConnectionSelectHandler),
				showOverlays:setter(list, "showOverlays", _makeConnectionSelectHandler),
				hideOverlays:setter(list, "hideOverlays", _makeConnectionSelectHandler),
				setPaintStyle:setter(list, "setPaintStyle", _makeConnectionSelectHandler),
				setHoverPaintStyle:setter(list, "setHoverPaintStyle", _makeConnectionSelectHandler),					
				setDetachable:setter(list, "setDetachable", _makeConnectionSelectHandler),
				setConnector:setter(list, "setConnector", _makeConnectionSelectHandler),		
				setParameter:setter(list, "setParameter", _makeConnectionSelectHandler),		
				setParameters:setter(list, "setParameters", _makeConnectionSelectHandler),	
				
				detach:function() {
					for (var i = 0; i < list.length; i++)
						_currentInstance.detach(list[i]);
				},				

				// getters
				getLabel:getter(list, "getLabel"),
				getOverlay:getter(list, "getOverlay"),
				isHover:getter(list, "isHover"),
				isDetachable:getter(list, "isDetachable"),
				getParameter:getter(list, "getParameter"),		
				getParameters:getter(list, "getParameters"),
				getPaintStyle:getter(list, "getPaintStyle"),		
				getHoverPaintStyle:getter(list, "getHoverPaintStyle"),

				// util
				length:list.length,
				each:function(f) {
					for (var i = 0; i < list.length; i++) {
						f(list[i]);
					}
					return _makeConnectionSelectHandler(list);
				},
				get:function(idx) {
					return list[idx];
				}

			};
		};
			
		/*
		* Function: select
		* Selects a set of Connections, using the filter options from the getConnections method, and returns an object
		* that allows you to perform an operation on all of the Connections at once. The return value from any of these 
		* operations is the original list of Connections, allowing operations to be chained (for 'setter' type operations).
		* 'getter' type operations return an array of values, where each entry is a [Connection, return value] pair.
		* 
		* Parameters:
		*	scope - see getConnections
		* 	source - see getConnections
		*	target - see getConnections
		*
		* Returns:
		* A list of Connections on which operations may be executed. 'Setter' type operations can be chained; 'getter' type operations
		* return an array of [Connection, value] pairs, one entry for each Connection in the list returned. The full list of operations 
		* is as follows (where not specified, the operation's effect or return value is the same as the corresponding method on Connection) :
		*	-	setHover								
		*	-	removeAllOverlays
		*	-	setLabel
		*	-	addOverlay
		*	-	removeOverlay
		*	-	removeOverlays
		*	-	showOverlay
		*	-	hideOverlay
		*	-	showOverlays
		*	-	hideOverlays
		*	-	setPaintStyle
		*	-	setHoverPaintStyle
		*	-	setDetachable
		*	-	setConnector
		*	-	setParameter
		*	-	setParameters
		*   - 	getLabel
		*	-	getOverlay
		*	-	isHover
		*	-	isDetachable
		*	-	getParameter
		*	-	getParameters
		*	-	getPaintStyle
		*	-	getHoverPaintStyle
		*	-	detach detaches all the connections in the list. not chainable and does not return anything.
		*	-	length : returns the length of the list.
		*	-	get(index) : returns the Connection at 'index' in the list.
		*	-	each(function(connection)...) : allows you to specify your own function to execute; this function is chainable.
		*/
		this.select = function(params) {
			params = params || {};
			params.scope = params.scope || "*";
			var c = _currentInstance.getConnections(params, true);
			return _makeConnectionSelectHandler(c);							
		};

		/*
		 * Function: getAllConnections
		 * Gets all connections, as a map of { scope -> [ connection... ] }. 
		 */
		this.getAllConnections = function() {
			return connectionsByScope;
		};

		/*
		 * Function: getDefaultScope 
		 * Gets the default scope for connections and  endpoints. a scope defines a type of endpoint/connection; supplying a
		 * scope to an endpoint or connection allows you to support different
		 * types of connections in the same UI. but if you're only interested in
		 * one type of connection, you don't need to supply a scope. this method
		 * will probably be used by very few people; it's good for testing
		 * though.
		 */
		this.getDefaultScope = function() {
			return DEFAULT_SCOPE;
		};

		/*
		  Function: getEndpoint 
		  Gets an Endpoint by UUID
		   
		  Parameters: 
		  	uuid - the UUID for the Endpoint
		  	 
		  Returns: 
		  	Endpoint with the given UUID, null if nothing found.
		 */
		this.getEndpoint = _getEndpoint;
				
		/**
		 * Function:getEndpoints
		 * Gets the list of Endpoints for a given selector, or element id.
		 * @param el
		 * @return
		 */
		this.getEndpoints = function(el) {
			return endpointsByElement[_getId(el)];
		};		

		/*
		 * Gets an element's id, creating one if necessary. really only exposed
		 * for the lib-specific functionality to access; would be better to pass
		 * the current instance into the lib-specific code (even though this is
		 * a static call. i just don't want to expose it to the public API).
		 */
		this.getId = _getId;
		this.getOffset = function(id) { 
			var o = offsets[id]; 
			return _updateOffset({elId:id});
		};
		
		this.getSelector = function(spec) {
			return jsPlumb.CurrentLibrary.getSelector(spec);
		};
		
		this.getSize = function(id) { 
			var s = sizes[id]; 
			if (!s) _updateOffset({elId:id});
			return sizes[id];
		};		
		
		this.appendElement = _appendElement;
		
		var _hoverSuspended = false;
		this.isHoverSuspended = function() { return _hoverSuspended; };
		this.setHoverSuspended = function(s) { _hoverSuspended = s; };

		this.isCanvasAvailable = function() { return canvasAvailable; };
		this.isSVGAvailable = function() { return svgAvailable; };
		this.isVMLAvailable = vmlAvailable;

		/*
		  Function: hide 
		  Sets an element's connections to be hidden.
		  
		  Parameters: 
		  	el - either the id of the element, or a selector for the element.
		  	changeEndpoints - whether not to also hide endpoints on the element. by default this is false.  
		  	 
		  Returns: 
		  	void
		 */
		this.hide = function(el, changeEndpoints) {
			_setVisible(el, "none", changeEndpoints);
		};
		
		// exposed for other objects to use to get a unique id.
		this.idstamp = _idstamp;
		
		/**
		 * callback from the current library to tell us to prepare ourselves (attach
		 * mouse listeners etc; can't do that until the library has provided a bind method)
		 * @return
		 */
		this.init = function() {
			if (!initialized) {
				_currentInstance.setRenderMode(_currentInstance.Defaults.RenderMode);  // calling the method forces the capability logic to be run.
				
				var bindOne = function(event) {
						jsPlumb.CurrentLibrary.bind(document, event, function(e) {
							if (!_currentInstance.currentlyDragging && renderMode == jsPlumb.CANVAS) {
								// try connections first
								for (var scope in connectionsByScope) {
					    			var c = connectionsByScope[scope];
					    			for (var i = 0; i < c.length; i++) {
					    				var t = c[i].connector[event](e);
					    				if (t) return;	
					    			}
					    		}
								for (var el in endpointsByElement) {
									var ee = endpointsByElement[el];
									for (var i = 0; i < ee.length; i++) {
										if (ee[i].endpoint[event](e)) return;
									}
								}
							}
						});					
				};
				bindOne("click");bindOne("dblclick");bindOne("mousemove");bindOne("mousedown");bindOne("mouseup");bindOne("contextmenu");
			
				initialized = true;
				_currentInstance.fire("ready");
			}
		};
		
		this.log = log;
		this.jsPlumbUIComponent = jsPlumbUIComponent;		

		/*
		 * Creates an anchor with the given params.
		 * 
		 * 
		 * Returns: The newly created Anchor.
		 */
		this.makeAnchor = function() {
			if (arguments.length == 0) return null;
			var specimen = arguments[0], elementId = arguments[1], jsPlumbInstance = arguments[2], newAnchor = null;			
			// if it appears to be an anchor already...
			if (specimen.compute && specimen.getOrientation) return specimen;  //TODO hazy here about whether it should be added or is already added somehow.
			// is it the name of an anchor type?
			else if (typeof specimen == "string") {
				newAnchor = jsPlumb.Anchors[arguments[0]]({elementId:elementId, jsPlumbInstance:_currentInstance});
			}
			// is it an array? it will be one of:
			// 		an array of [name, params] - this defines a single anchor
			//		an array of arrays - this defines some dynamic anchors
			//		an array of numbers - this defines a single anchor.				
			else if (_isArray(specimen)) {
				if (_isArray(specimen[0]) || _isString(specimen[0])) {
					if (specimen.length == 2 && _isString(specimen[0]) && _isObject(specimen[1])) {
						var pp = jsPlumb.extend({elementId:elementId, jsPlumbInstance:_currentInstance}, specimen[1]);
						newAnchor = jsPlumb.Anchors[specimen[0]](pp);
					}
					else
						newAnchor = new DynamicAnchor(specimen, null, elementId);
				}
				else {
					var anchorParams = {
						x:specimen[0], y:specimen[1],
						orientation : (specimen.length >= 4) ? [ specimen[2], specimen[3] ] : [0,0],
						offsets : (specimen.length == 6) ? [ specimen[4], specimen[5] ] : [ 0, 0 ],
						elementId:elementId
					};						
					newAnchor = new Anchor(anchorParams);
					newAnchor.clone = function() { return new Anchor(anchorParams); };						 					
				}
			}
			
			if (!newAnchor.id) newAnchor.id = "anchor_" + _idstamp();
			return newAnchor;
		};

		/**
		 * makes a list of anchors from the given list of types or coords, eg
		 * ["TopCenter", "RightMiddle", "BottomCenter", [0, 1, -1, -1] ]
		 */
		this.makeAnchors = function(types, elementId, jsPlumbInstance) {
			var r = [];
			for ( var i = 0; i < types.length; i++) {
				if (typeof types[i] == "string")
					r.push(jsPlumb.Anchors[types[i]]({elementId:elementId, jsPlumbInstance:jsPlumbInstance}));
				else if (_isArray(types[i]))
					r.push(_currentInstance.makeAnchor(types[i], elementId, jsPlumbInstance));
			}
			return r;
		};

		/**
		 * Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor
		 * objects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will
		 * not need to provide this - i think). 
		 */
		this.makeDynamicAnchor = function(anchors, anchorSelector) {
			return new DynamicAnchor(anchors, anchorSelector);
		};
		
		/**
		 * Function: makeTarget
		 * Makes some DOM element a Connection target, allowing you to drag connections to it
		 * without having to register any Endpoints on it first.  When a Connection is established,
		 * the endpoint spec that was passed in to this method is used to create a suitable 
		 * Endpoint (the default will be used if you do not provide one).
		 * 
		 * Parameters:
		 *  el		-	string id or element selector for the element to make a target.
		 * 	params	-	JS object containing parameters:
		 * 	  endpoint	optional.	specification of an endpoint to create when a connection is created.
		 * 	  scope		optional.   scope for the drop zone.
		 * 	  dropOptions optional. same stuff as you would pass to dropOptions of an Endpoint definition.
		 * 	  deleteEndpointsOnDetach  optional, defaults to true. whether or not to delete
		 *                             any Endpoints created by a connection to this target if
		 *                             the connection is subsequently detached. this will not 
		 *                             remove Endpoints that have had more Connections attached
		 *                             to them after they were created.
		 *                   	
		 * 
		 */
		var _targetEndpointDefinitions = {},
			_targetEndpoints = {},
			_targetEndpointsUnique = {},
			_targetMaxConnections = {},
			_setEndpointPaintStylesAndAnchor = function(ep, epIndex) {
				ep.paintStyle = ep.paintStyle ||
				 				_currentInstance.Defaults.EndpointStyles[epIndex] ||
	                            _currentInstance.Defaults.EndpointStyle ||
	                            jsPlumb.Defaults.EndpointStyles[epIndex] ||
	                            jsPlumb.Defaults.EndpointStyle;
				ep.hoverPaintStyle = ep.hoverPaintStyle ||
	                           _currentInstance.Defaults.EndpointHoverStyles[epIndex] ||
	                           _currentInstance.Defaults.EndpointHoverStyle ||
	                           jsPlumb.Defaults.EndpointHoverStyles[epIndex] ||
	                           jsPlumb.Defaults.EndpointHoverStyle;                            

				ep.anchor = ep.anchor ||
	                      	_currentInstance.Defaults.Anchors[epIndex] ||
	                      	_currentInstance.Defaults.Anchor ||
	                      	jsPlumb.Defaults.Anchors[epIndex] ||
	                      	jsPlumb.Defaults.Anchor;                           
					
				ep.endpoint = ep.endpoint ||
							  _currentInstance.Defaults.Endpoints[epIndex] ||
							  _currentInstance.Defaults.Endpoint ||
							  jsPlumb.Defaults.Endpoints[epIndex] ||
							  jsPlumb.Defaults.Endpoint;
			};

		this.makeTarget = function(el, params, referenceParams) {						
			
			var p = jsPlumb.extend({_jsPlumb:_currentInstance}, referenceParams);
			jsPlumb.extend(p, params);
			_setEndpointPaintStylesAndAnchor(p, 1);                                                    
			var jpcl = jsPlumb.CurrentLibrary,
			    targetScope = p.scope || _currentInstance.Defaults.Scope,
			    deleteEndpointsOnDetach = !(p.deleteEndpointsOnDetach === false),
			    maxConnections = p.maxConnections || -1,
			_doOne = function(_el) {
				
				// get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,
				// and use the endpoint definition if found.
				var elid = _getId(_el);
					_targetEndpointDefinitions[elid] = p;
					_targetEndpointsUnique[elid] = p.uniqueEndpoint,
					_targetMaxConnections[elid] = maxConnections,
					_targetsEnabled[elid] = true,
					proxyComponent = new jsPlumbUIComponent(p);								
				
				var dropOptions = jsPlumb.extend({}, p.dropOptions || {}),
				_drop = function() {

					var originalEvent = jsPlumb.CurrentLibrary.getDropEvent(arguments),
						targetCount = _currentInstance.select({target:elid}).length;
						
					if (!_targetsEnabled[elid] || _targetMaxConnections[elid] > 0 && targetCount >= _targetMaxConnections[elid]){
						console.log("target element " + elid + " is full.");
						return false;
					}												

					_currentInstance.currentlyDragging = false;
					var draggable = _getElementObject(jpcl.getDragObject(arguments)),
						id = _getAttribute(draggable, "dragId"),				
						// restore the original scope if necessary (issue 57)
						scope = _getAttribute(draggable, "originalScope"),
						jpc = floatingConnections[id],
						source = jpc.endpoints[0],
						_endpoint = p.endpoint ? jsPlumb.extend({}, p.endpoint) : {};                                              

					// unlock the source anchor to allow it to refresh its position if necessary
					source.anchor.locked = false;					
										
					if (scope) jpcl.setDragScope(draggable, scope);				
					
					// check if drop is allowed here.					
					//var _continue = jpc.isDropAllowed(jpc.sourceId, _getId(_el), jpc.scope);		
					var _continue = proxyComponent.isDropAllowed(jpc.sourceId, _getId(_el), jpc.scope, jpc, null);		
					
					// regardless of whether the connection is ok, reconfigure the existing connection to 
					// point at the current info. we need this to be correct for the detach event that will follow.
					// clear the source endpoint from the list to detach. we will detach this connection at this
					// point, but we want to keep the source endpoint.  the target is a floating endpoint and should
					// be removed.  TODO need to figure out whether this code can result in endpoints kicking around
					// when they shouldnt be.  like is this a full detach of a connection?  can it be?
					if (jpc.endpointsToDeleteOnDetach) {
						if (source === jpc.endpointsToDeleteOnDetach[0])
							jpc.endpointsToDeleteOnDetach[0] = null;
						else if (source === jpc.endpointsToDeleteOnDetach[1])
							jpc.endpointsToDeleteOnDetach[1] = null;
					}
					// reinstate any suspended endpoint; this just puts the connection back into
					// a state in which it will report sensible values if someone asks it about
					// its target.  we're going to throw this connection away shortly so it doesnt matter
					// if we manipulate it a bit.
					if (jpc.suspendedEndpoint) {
						jpc.targetId = jpc.suspendedEndpoint.elementId;
						jpc.target = jpcl.getElementObject(jpc.suspendedEndpoint.elementId);
						jpc.endpoints[1] = jpc.suspendedEndpoint;
					}																										
					
					if (_continue) {
					
						// detach this connection from the source.						
						source.detach(jpc, false, true, false);
					
						// make a new Endpoint for the target												
						var newEndpoint = _targetEndpoints[elid] || _currentInstance.addEndpoint(_el, p);
						if (p.uniqueEndpoint) _targetEndpoints[elid] = newEndpoint;  // may of course just store what it just pulled out. that's ok.
						newEndpoint._makeTargetCreator = true;
																
						// if the anchor has a 'positionFinder' set, then delegate to that function to find
						// out where to locate the anchor.
						if (newEndpoint.anchor.positionFinder != null) {
							var dropPosition = jpcl.getUIPosition(arguments),
							elPosition = jpcl.getOffset(_el),
							elSize = jpcl.getSize(_el),
							ap = newEndpoint.anchor.positionFinder(dropPosition, elPosition, elSize, newEndpoint.anchor.constructorParams);
							newEndpoint.anchor.x = ap[0];
							newEndpoint.anchor.y = ap[1];
							// now figure an orientation for it..kind of hard to know what to do actually. probably the best thing i can do is to
							// support specifying an orientation in the anchor's spec. if one is not supplied then i will make the orientation 
							// be what will cause the most natural link to the source: it will be pointing at the source, but it needs to be
							// specified in one axis only, and so how to make that choice? i think i will use whichever axis is the one in which
							// the target is furthest away from the source.
						}
						var c = _currentInstance.connect({
							source:source,
							target:newEndpoint,
							scope:scope,
							previousConnection:jpc,
							container:jpc.parent,
							deleteEndpointsOnDetach:deleteEndpointsOnDetach,
							// 'endpointWillMoveAfterConnection' is set by the makeSource function, and it indicates that the
							// given endpoint will actually transfer from the element it is currently attached to to some other
							// element after a connection has been established.  in that case, we do not want to fire the
							// connection event, since it will have the wrong data in it; makeSource will do it for us.
							// this is controlled by the 'parent' parameter on a makeSource call.
							doNotFireConnectionEvent:source.endpointWillMoveAfterConnection
						});

						// delete the original target endpoint.  but only want to do this if the endpoint was created
						// automatically and has no other connections.
						if (jpc.endpoints[1]._makeTargetCreator && jpc.endpoints[1].connections.length < 2)
							_currentInstance.deleteEndpoint(jpc.endpoints[1]);

						if (deleteEndpointsOnDetach) 
							c.endpointsToDeleteOnDetach = [ source, newEndpoint ];

						c.repaint();
					}				
					// if not allowed to drop...
					else {
						// TODO this code is identical (pretty much) to what happens when a connection
						// dragged from a normal endpoint is in this situation. refactor.
						// is this an existing connection, and will we reattach?
						if (jpc.suspendedEndpoint) {
							if (source.isReattach) {
								jpc.setHover(false);
								jpc.floatingAnchorIndex = null;
								jpc.suspendedEndpoint.addConnection(jpc);
								_currentInstance.repaint(source.elementId);
							}
							else
								source.detach(jpc, false, true, true, originalEvent);  // otherwise, detach the connection and tell everyone about it.
						}
						
					}														
				};
				
				var dropEvent = jpcl.dragEvents['drop'];
				dropOptions["scope"] = dropOptions["scope"] || targetScope;
				dropOptions[dropEvent] = _wrap(dropOptions[dropEvent], _drop);
				
				jpcl.initDroppable(_el, dropOptions, true);
			};
			
			el = _convertYUICollection(el);			
			
			var inputs = el.length && el.constructor != String ? el : [ el ];
						
			for (var i = 0; i < inputs.length; i++) {			
				_doOne(_getElementObject(inputs[i]));
			}

			return _currentInstance;
		};

		/*
		*	Function: unmakeTarget
		*	Sets the given element to no longer be a connection target.
		*	Parameters:
		*	el - either a string id or a selector representing the element.
		*	Returns:
		*	The current jsPlumb instance.
		*/
		this.unmakeTarget = function(el, doNotClearArrays) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			var elid = _getId(el);			

			// TODO this is not an exhaustive unmake of a target, since it does not remove the droppable stuff from
			// the element.  the effect will be to prevent it form behaving as a target, but it's not completely purged.
			if (!doNotClearArrays) {
				delete _targetEndpointDefinitions[elid];
				delete _targetEndpointsUnique[elid];
				delete _targetMaxConnections[elid];
				delete _targetsEnabled[elid];
			}

			return _currentInstance;
		};
		
		/**
		 * helper method to make a list of elements drop targets.
		 * @param els
		 * @param params
		 * @param referenceParams
		 * @return
		 */
		this.makeTargets = function(els, params, referenceParams) {
			for ( var i = 0; i < els.length; i++) {
				_currentInstance.makeTarget(els[i], params, referenceParams);				
			}
		};
		
		/**
		 * Function: makeSource
		 * Makes some DOM element a Connection source, allowing you to drag connections from it
		 * without having to register any Endpoints on it first.  When a Connection is established,
		 * the endpoint spec that was passed in to this method is used to create a suitable 
		 * Endpoint (the default will be used if you do not provide one).
		 * 
		 * Parameters:
		 *  el		-	string id or element selector for the element to make a source.
		 * 	params	-	JS object containing parameters:
		 * 	  endpoint	optional.	specification of an endpoint to create when a connection is created.
		 * 	  parent	optional.   the element to add Endpoints to when a Connection is established.  if you omit this, 
		 *                          Endpoints will be added to 'el'.
		 * 	  scope		optional.   scope for the connections dragged from this element.
		 * 	  dragOptions optional. same stuff as you would pass to dragOptions of an Endpoint definition.
		 * 	  deleteEndpointsOnDetach  optional, defaults to false. whether or not to delete
		 *                             any Endpoints created by a connection from this source if
		 *                             the connection is subsequently detached. this will not 
		 *                             remove Endpoints that have had more Connections attached
		 *                             to them after they were created.
		 *                   	
		 * 
		 */
		var _sourceEndpointDefinitions = {},
			_sourceEndpoints = {},
			_sourceEndpointsUnique = {},
			_sourcesEnabled = {},
			_sourceTriggers = {},		
			_targetsEnabled = {};

		this.makeSource = function(el, params, referenceParams) {
			var p = jsPlumb.extend({}, referenceParams);
			jsPlumb.extend(p, params);
			_setEndpointPaintStylesAndAnchor(p, 0);   
			var jpcl = jsPlumb.CurrentLibrary,						
			_doOne = function(_el) {
				// get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,
				// and use the endpoint definition if found.
				var elid = _getId(_el),
					parent = p.parent,
					idToRegisterAgainst = parent != null ? _currentInstance.getId(jpcl.getElementObject(parent)) : elid;
				
				_sourceEndpointDefinitions[idToRegisterAgainst] = p;
				_sourceEndpointsUnique[idToRegisterAgainst] = p.uniqueEndpoint;
				_sourcesEnabled[idToRegisterAgainst] = true;

				var stopEvent = jpcl.dragEvents["stop"],
					dragEvent = jpcl.dragEvents["drag"],
					dragOptions = jsPlumb.extend({ }, p.dragOptions || {}),
					existingDrag = dragOptions.drag,
					existingStop = dragOptions.stop,
					ep = null,
					endpointAddedButNoDragYet = false;

				// set scope if its not set in dragOptions but was passed in in params
				dragOptions["scope"] = dragOptions["scope"] || p.scope;

				dragOptions[dragEvent] = _wrap(dragOptions[dragEvent], function() {
					if (existingDrag) existingDrag.apply(this, arguments);
					endpointAddedButNoDragYet = false;
				});
					
				dragOptions[stopEvent] = _wrap(dragOptions[stopEvent], function() { 							
					if (existingStop) existingStop.apply(this, arguments);								

                    //_currentlyDown = false;
					_currentInstance.currentlyDragging = false;
					
					if (ep.connections.length == 0)
						_currentInstance.deleteEndpoint(ep);
					else {
						
						jpcl.unbind(ep.canvas, "mousedown"); 
								
						// reset the anchor to the anchor that was initially provided. the one we were using to drag
						// the connection was just a placeholder that was located at the place the user pressed the
						// mouse button to initiate the drag.
						var anchorDef = p.anchor || _currentInstance.Defaults.Anchor,
							oldAnchor = ep.anchor,
							oldConnection = ep.connections[0];

						ep.anchor = _currentInstance.makeAnchor(anchorDef, elid, _currentInstance);																							
						
						if (p.parent) {						
							var parent = jpcl.getElementObject(p.parent);
							if (parent) {	
								var currentId = ep.elementId;
																
								ep.setElement(parent);
								ep.endpointWillMoveAfterConnection = false;														
								_currentInstance.anchorManager.rehomeEndpoint(currentId, parent);													
								oldConnection.previousConnection = null;
								// remove from connectionsByScope
								_removeWithFunction(connectionsByScope[oldConnection.scope], function(c) {
									return c.id === oldConnection.id;
								});										
								_currentInstance.anchorManager.connectionDetached({
									sourceId:oldConnection.sourceId,
									targetId:oldConnection.targetId,
									connection:oldConnection
								});											
								_finaliseConnection(oldConnection);					
							}
						}						
						
						ep.repaint();			
						_currentInstance.repaint(ep.elementId);																		
						_currentInstance.repaint(oldConnection.targetId);

					}				
				});
				// when the user presses the mouse, add an Endpoint, if we are enabled.
				var mouseDownListener = function(e) {

					if (!_sourcesEnabled[idToRegisterAgainst]) return;

					// make sure we have the latest offset for this div 
					var myOffsetInfo = _updateOffset({elId:elid});		

					var x = ((e.pageX || e.page.x) - myOffsetInfo.left) / myOffsetInfo.width, 
					    y = ((e.pageY || e.page.y) - myOffsetInfo.top) / myOffsetInfo.height,
					    parentX = x, 
					    parentY = y;					
							
					// if there is a parent, the endpoint will actually be added to it now, rather than the div
					// that was the source.  in that case, we have to adjust the anchor position so it refers to
					// the parent.
					if (p.parent) {
						var pEl = jsPlumb.CurrentLibrary.getElementObject(p.parent),
							pId = _getId(pEl);
						myOffsetInfo = _updateOffset({elId:pId});
						parentX = ((e.pageX || e.page.x) - myOffsetInfo.left) / myOffsetInfo.width, 
					    parentY = ((e.pageY || e.page.y) - myOffsetInfo.top) / myOffsetInfo.height;
					}											
					
					// we need to override the anchor in here, and force 'isSource', but we don't want to mess with
					// the params passed in, because after a connection is established we're going to reset the endpoint
					// to have the anchor we were given.
					var tempEndpointParams = {};
					jsPlumb.extend(tempEndpointParams, p);
					tempEndpointParams.isSource = true;
					tempEndpointParams.anchor = [x,y,0,0];
					tempEndpointParams.parentAnchor = [ parentX, parentY, 0, 0 ];
					tempEndpointParams.dragOptions = dragOptions;
					// if a parent was given we need to turn that into a "container" argument.  this is, by default,
					// the parent of the element we will move to, so parent of p.parent in this case.  however, if
					// the user has specified a 'container' on the endpoint definition or on 
					// the defaults, we should use that.
					if (p.parent) {
						var potentialParent = tempEndpointParams.container || _currentInstance.Defaults.Container;
						if (potentialParent)
							tempEndpointParams.container = potentialParent;
						else
							tempEndpointParams.container = jsPlumb.CurrentLibrary.getParent(p.parent);
					}
					
					ep = _currentInstance.addEndpoint(elid, tempEndpointParams);

					endpointAddedButNoDragYet = true;
					// we set this to prevent connections from firing attach events before this function has had a chance
					// to move the endpoint.
					ep.endpointWillMoveAfterConnection = p.parent != null;
					ep.endpointWillMoveTo = p.parent ? jpcl.getElementObject(p.parent) : null;

                    var _delTempEndpoint = function() {
						// this mouseup event is fired only if no dragging occurred, by jquery and yui, but for mootools
						// it is fired even if dragging has occurred, in which case we would blow away a perfectly
						// legitimate endpoint, were it not for this check.  the flag is set after adding an
						// endpoint and cleared in a drag listener we set in the dragOptions above.
						if(endpointAddedButNoDragYet) {
							_currentInstance.deleteEndpoint(ep);
                        }
					};

					_currentInstance.registerListener(ep.canvas, "mouseup", _delTempEndpoint);
                    _currentInstance.registerListener(_el, "mouseup", _delTempEndpoint);
					
					// and then trigger its mousedown event, which will kick off a drag, which will start dragging
					// a new connection from this endpoint.
					jpcl.trigger(ep.canvas, "mousedown", e);
				};
               
                // register this on jsPlumb so that it can be cleared by a reset.
                _currentInstance.registerListener(_el, "mousedown", mouseDownListener);
                _sourceTriggers[elid] = mouseDownListener;
			};
			
			el = _convertYUICollection(el);			
			
			var inputs = el.length && el.constructor != String ? el : [ el ];
						
			for (var i = 0; i < inputs.length; i++) {			
				_doOne(_getElementObject(inputs[i]));
			}

			return _currentInstance;
		};

		/**
		*	Function: unmakeSource
		*	Sets the given element to no longer be a connection source.
		*	Parameters:
		*	el - either a string id or a selector representing the element.
		*	Returns:
		*	The current jsPlumb instance.
		*/
		this.unmakeSource = function(el, doNotClearArrays) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			var id = _getId(el),
				mouseDownListener = _sourceTriggers[id];
			
			if (mouseDownListener) 
				_currentInstance.unregisterListener(_el, "mousedown", mouseDownListener);

			if (!doNotClearArrays) {
				delete _sourceEndpointDefinitions[id];
				delete _sourceEndpointsUnique[id];
				delete _sourcesEnabled[id];
				delete _sourceTriggers[id];
			}

			return _currentInstance;
		};

		/*
		*	Function: unmakeEverySource
		*	Resets all elements in this instance of jsPlumb so that none of them are connection sources.
		*	Returns:
		*	The current jsPlumb instance.
		*/
		this.unmakeEverySource = function() {
			for (var i in _sourcesEnabled)
				_currentInstance.unmakeSource(i, true);

			_sourceEndpointDefinitions = {};
			_sourceEndpointsUnique = {};
			_sourcesEnabled = {};
			_sourceTriggers = {};
		};

		/*
		*	Function: unmakeEveryTarget
		*	Resets all elements in this instance of jsPlumb so that none of them are connection targets.
		*	Returns:
		*	The current jsPlumb instance.
		*/
		this.unmakeEveryTarget = function() {
			for (var i in _targetsEnabled)
				_currentInstance.unmakeTarget(i, true);
			
			_targetEndpointDefinitions = {};
			_targetEndpointsUnique = {};
			_targetMaxConnections = {};
			_targetsEnabled = {};

			return _currentInstance;
		};
		
		/*
		 * Function: makeSources
		 * Makes all elements in some array or a selector connection sources.
		 * Parameters:
		 * 	els 	- 	either an array of ids or a selector
		 *  params  -   parameters to configure each element as a source with
		 *  referenceParams - extra parameters to configure each element as a source with.
		 *
		 * Returns:
		 * The current jsPlumb instance.
		 */
		this.makeSources = function(els, params, referenceParams) {
			for ( var i = 0; i < els.length; i++) {
				_currentInstance.makeSource(els[i], params, referenceParams);				
			}

			return _currentInstance;
		};

		// does the work of setting a source enabled or disabled.
		var _setEnabled = function(type, el, state, toggle) {
			var a = type == "source" ? _sourcesEnabled : _targetsEnabled;									

			if (_isString(el)) a[el] = toggle ? !a[el] : state;
			else if (el.length) {
				el = _convertYUICollection(el);
				for (var i = 0; i < el.length; i++) {
					var id = _el = jsPlumb.CurrentLibrary.getElementObject(el[i]), id = _getId(_el);
					a[id] = toggle ? !a[id] : state;
				}
			}	
			return _currentInstance;
		};

		/*
			Function: setSourceEnabled
			Sets the enabled state of one or more elements that were previously made a connection source with the makeSource
			method.

			Parameters:
				el 	- 	either a string representing some element's id, or an array of ids, or a selector.
				state - true to enable the element(s), false to disable it.

			Returns:
			The current jsPlumb instance.
		*/
		this.setSourceEnabled = function(el, state) {
			return _setEnabled("source", el, state);
		};

		/*
		*	Function: toggleSourceEnabled
		*	Toggles the source enabled state of the given element or elements.
		*
		* 	Parameters:
		*		el 	- 	either a string representing some element's id, or an array of ids, or a selector.
		*		state - true to enable the element(s), false to disable it.
		*
		*	Returns:
		*	The current enabled state of the source.
		*/	
		this.toggleSourceEnabled = function(el) {
			_setEnabled("source", el, null, true);	
			return _currentInstance.isSourceEnabled(el);
		};

		/*
		*	Function: isSource
		*	Returns whether or not the given element is registered as a connection source.
		*
		*	Parameters:
		*		el 	- 	either a string id, or a selector representing a single element.
		*
		*	Returns:
		*	True if source, false if not.
		*/
		this.isSource = function(el) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			return _sourcesEnabled[_getId(el)] != null;
		};

		/*
		*	Function: isSourceEnabled
		*	Returns whether or not the given connection source is enabled.
		*
		*	Parameters:
		*	el 	- 	either a string id, or a selector representing a single element.
		*
		*	Returns:
		*	True if enabled, false if not.
		*/
		this.isSourceEnabled = function(el) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			return _sourcesEnabled[_getId(el)] === true;
		};

		/*
		*	Function: setTargetEnabled
		*	Sets the enabled state of one or more elements that were previously made a connection target with the makeTarget method.
		*	method.
		*
		*	Parameters:
		*		el 	- 	either a string representing some element's id, or an array of ids, or a selector.
		*		state - true to enable the element(s), false to disable it.
		*
		*	Returns:
		*	The current jsPlumb instance.
		*/
		this.setTargetEnabled = function(el, state) {
			return _setEnabled("target", el, state);
		};

		/*
		*	Function: toggleTargetEnabled
		*	Toggles the target enabled state of the given element or elements.
		*
		*	Parameters:
		*		el 	- 	either a string representing some element's id, or an array of ids, or a selector.
		*		state - true to enable the element(s), false to disable it.
		*
		*	Returns:
		*	The current enabled state of the target.
		*/	
		this.toggleTargetEnabled = function(el) {
			return _setEnabled("target", el, null, true);	
			return _currentInstance.isTargetEnabled(el);
		};

		/*
			Function: isTarget
			Returns whether or not the given element is registered as a connection target.

			Parameters:
				el 	- 	either a string id, or a selector representing a single element.

			Returns:
			True if source, false if not.
		*/
		this.isTarget = function(el) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			return _targetsEnabled[_getId(el)] != null;
		};

		/*
			Function: isTargetEnabled
			Returns whether or not the given connection target is enabled.

			Parameters:
				el 	- 	either a string id, or a selector representing a single element.

			Returns:
			True if enabled, false if not.
		*/
		this.isTargetEnabled = function(el) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			return _targetsEnabled[_getId(el)] === true;
		};
		
		/*
		  Function: ready
		  Helper method to bind a function to jsPlumb's ready event.
		 */
		this.ready = function(fn) {
			_currentInstance.bind("ready", fn);
		},

		/*
		  Function: repaint 
		  Repaints an element and its connections. This method gets new sizes for the elements before painting anything.
		  
		  Parameters: 
		  	el - either the id of the element or a selector representing the element.
		  	 
		  Returns: 
		  	void
		  	 
		  See Also: 
		  	<repaintEverything>
		 */
		this.repaint = function(el) {
			var _processElement = function(el) { _draw(_getElementObject(el)); };
			// support both lists...
			if (typeof el == 'object')
				for ( var i = 0; i < el.length; i++) _processElement(el[i]);			 
			else // ...and single strings.
				_processElement(el);
		};

		/*
		  Function: repaintEverything 
		  Repaints all connections.
		   
		  Returns: 
		  	void
		  	
		  See Also: 
		  	<repaint>
		 */
		this.repaintEverything = function() {
			for ( var elId in endpointsByElement) {
				_draw(_getElementObject(elId), null, null);
			}
		};

		/*
		  Function: removeAllEndpoints 
		  Removes all Endpoints associated with a given element. Also removes all Connections associated with each Endpoint it removes.
		  
		  Parameters: 
		  	el - either an element id, or a selector for an element.
		  	 
		  Returns: 
		  	void
		  	 
		  See Also: 
		  	<removeEndpoint>
		 */
		this.removeAllEndpoints = function(el) {
			var elId = _getAttribute(el, "id"),
			    ebe = endpointsByElement[elId];
			if (ebe) {
				for ( var i = 0; i < ebe.length; i++) 
					_currentInstance.deleteEndpoint(ebe[i]);
			}
			endpointsByElement[elId] = [];
		};

		/*
		  Removes every Endpoint in this instance of jsPlumb.		   		  		  		  
		  @deprecated use deleteEveryEndpoint instead
		 */
		this.removeEveryEndpoint = this.deleteEveryEndpoint;
		
		/*
		  Removes the given Endpoint from the given element.		  		  
		  @deprecated Use jsPlumb.deleteEndpoint instead (and note you dont need to supply the element. it's irrelevant).
		 */
		this.removeEndpoint = function(el, endpoint) {
			_currentInstance.deleteEndpoint(endpoint);
		};

        var _registeredListeners = {},
            _unbindRegisteredListeners = function() {
                for (var i in _registeredListeners) {
                    for (var j = 0; j < _registeredListeners[i].length; j++) {
                        var info = _registeredListeners[i][j];
                        jsPlumb.CurrentLibrary.unbind(info.el, info.event, info.listener);
                    }
                }
                _registeredListeners = {};
            };

        // internal register listener method.  gives us a hook to clean things up
        // with if the user calls jsPlumb.reset.
        this.registerListener = function(el, type, listener) {
            jsPlumb.CurrentLibrary.bind(el, type, listener);
            _addToList(_registeredListeners, type, {el:el, event:type, listener:listener});
        };

        this.unregisterListener = function(el, type, listener) {
        	jsPlumb.CurrentLibrary.unbind(el, type, listener);
        	_removeWithFunction(_registeredListeners, function(rl) {
        		return rl.type == type && rl.listener == listener;
        	});
        };

		/*
		  Function:reset 
		  Removes all endpoints and connections and clears the listener list. To keep listeners call jsPlumb.deleteEveryEndpoint instead of this.
		 */
		this.reset = function() {			
			_currentInstance.deleteEveryEndpoint();
			_currentInstance.clearListeners();
			_targetEndpointDefinitions = {};
			_targetEndpoints = {};
			_targetEndpointsUnique = {};
			_targetMaxConnections = {};
			_sourceEndpointDefinitions = {};
			_sourceEndpoints = {};
			_sourceEndpointsUnique = {};
            _unbindRegisteredListeners();
            _currentInstance.anchorManager.reset();
            _currentInstance.dragManager.reset();
		};

		/*
		  Function: setAutomaticRepaint 
		  Sets/unsets automatic repaint on window resize.
		   
		  Parameters: 
		  	value - whether or not to automatically repaint when the window is resized.
		  	 
		  Returns: void
		 *
		this.setAutomaticRepaint = function(value) {
			automaticRepaint = value;
		};*/

		/*
		 * Function: setDefaultScope 
		 * Sets the default scope for Connections and Endpoints. A scope defines a type of Endpoint/Connection; supplying a
		 * scope to an Endpoint or Connection allows you to support different
		 * types of Connections in the same UI.  If you're only interested in
		 * one type of Connection, you don't need to supply a scope. This method
		 * will probably be used by very few people; it just instructs jsPlumb
		 * to use a different key for the default scope.
		 * 
		 * Parameters:
		 * 	scope - scope to set as default.
		 */
		this.setDefaultScope = function(scope) {
			DEFAULT_SCOPE = scope;
		};

		/*
		 * Function: setDraggable 
		 * Sets whether or not a given element is
		 * draggable, regardless of what any jsPlumb command may request.
		 * 
		 * Parameters: 
		 * 	el - either the id for the element, or a selector representing the element.
		 *  
		 * Returns: 
		 * 	void
		 */
		this.setDraggable = _setDraggable;

		/*
		* Function: setId
		* Changes the id of some element, adjusting all connections and endpoints
		*
		* Parameters:
		* el - a selector, a DOM element, or a string. 
		* newId - string.
		*/
		this.setId = function(el, newId, doNotSetAttribute) {
		
			var id = el.constructor == String ? el : _currentInstance.getId(el),
				sConns = _currentInstance.getConnections({source:id, scope:'*'}, true),
				tConns = _currentInstance.getConnections({target:id, scope:'*'}, true);

			newId = "" + newId;
							
			if (!doNotSetAttribute) {
				el = jsPlumb.CurrentLibrary.getElementObject(id);
				jsPlumb.CurrentLibrary.setAttribute(el, "id", newId);
			}
			
			el = jsPlumb.CurrentLibrary.getElementObject(newId);
			

			endpointsByElement[newId] = endpointsByElement[id] || [];
			for (var i = 0; i < endpointsByElement[newId].length; i++) {
				endpointsByElement[newId][i].elementId = newId;
				endpointsByElement[newId][i].element = el;
				endpointsByElement[newId][i].anchor.elementId = newId;
			}
			delete endpointsByElement[id];

			_currentInstance.anchorManager.changeId(id, newId);

			var _conns = function(list, epIdx, type) {
				for (var i = 0; i < list.length; i++) {
					list[i].endpoints[epIdx].elementId = newId;
					list[i].endpoints[epIdx].element = el;
					list[i][type + "Id"] = newId;
					list[i][type] = el;
				}
			};
			_conns(sConns, 0, "source");
			_conns(tConns, 1, "target");
		};

		/*
		* Function: setIdChanged
		* Notify jsPlumb that the element with oldId has had its id changed to newId.
		*/
		this.setIdChanged = function(oldId, newId) {
			_currentInstance.setId(oldId, newId, true);
		};

		this.setDebugLog = function(debugLog) {
			log = debugLog;
		};

		/*
		 * Function: setRepaintFunction 
		 * 	Sets the function to fire when the window size has changed and a repaint was fired. 
		 * 
		 * Parameters: 
		 * 	f - Function to execute.
		 *  
		 * Returns: void
		 */
		this.setRepaintFunction = function(f) {
			repaintFunction = f;
		};				

        /*
         * Function: setSuspendDrawing
         * Suspends drawing operations.  This can be used when you have a lot of connections to make or endpoints to register;
         * it will save you a lot of time.
         */
        this.setSuspendDrawing = _setSuspendDrawing;
		
		/*
		 * Constant for use with the setRenderMode method
		 */
		this.CANVAS = "canvas";
		
		/*
		 * Constant for use with the setRenderMode method
		 */
		this.SVG = "svg";
		
		this.VML = "vml";
		
		/*
		 * Function: setRenderMode
		 * Sets render mode: jsPlumb.CANVAS, jsPlumb.SVG or jsPlumb.VML.  jsPlumb will fall back to VML if it determines that
		 * what you asked for is not supported (and that VML is).  If you asked for VML but the browser does
		 * not support it, jsPlumb uses SVG.  
		 * 
		 * Returns:
		 * the render mode that jsPlumb set, which of course may be different from that requested.
		 */
		this.setRenderMode = function(mode) {
			if (mode) 
				mode = mode.toLowerCase();
			else 
				return;
			if (mode !== jsPlumb.CANVAS && mode !== jsPlumb.SVG && mode !== jsPlumb.VML) throw new Error("render mode must be one of jsPlumb.CANVAS, jsPlumb.SVG or jsPlumb.VML");
			// now test we actually have the capability to do this.
			if (mode === jsPlumb.CANVAS && canvasAvailable) 
				renderMode = jsPlumb.CANVAS;
			else if (mode === jsPlumb.SVG && svgAvailable)
				renderMode = jsPlumb.SVG;
			else if (vmlAvailable())
				renderMode = jsPlumb.VML;		
			
			return renderMode;
		};
		
		this.getRenderMode = function() { return renderMode; };

		/*
		 * Function: show 
		 * Sets an element's connections to be visible.
		 * 
		 * Parameters: 
		 * 	el - either the id of the element, or a selector for the element.
		 *  changeEndpoints - whether or not to also change the visible state of the endpoints on the element.  this also has a bearing on
		 *  other connections on those endpoints: if their other endpoint is also visible, the connections are made visible.  
		 *  
		 * Returns: 
		 * 	void
		 */
		this.show = function(el, changeEndpoints) {
			_setVisible(el, "block", changeEndpoints);
		};

		/*
		 * Function: sizeCanvas 
		 * Helper to size a canvas. You would typically use
		 * this when writing your own Connector or Endpoint implementation.
		 * 
		 * Parameters: 
		 * 	x - [int] x position for the Canvas origin 
		 * 	y - [int] y position for the Canvas origin 
		 * 	w - [int] width of the canvas 
		 * 	h - [int] height of the canvas
		 *  
		 * Returns: 
		 * 	void
		 */
		this.sizeCanvas = function(canvas, x, y, w, h) {
			if (canvas) {
				canvas.style.height = h + "px";
				canvas.height = h;
				canvas.style.width = w + "px";
				canvas.width = w;
				canvas.style.left = x + "px";
				canvas.style.top = y + "px";
			}
		};

		/**
		 * gets some test hooks. nothing writable.
		 */
		this.getTestHarness = function() {
			return {
				endpointsByElement : endpointsByElement,  
				endpointCount : function(elId) {
					var e = endpointsByElement[elId];
					return e ? e.length : 0;
				},
				connectionCount : function(scope) {
					scope = scope || DEFAULT_SCOPE;
					var c = connectionsByScope[scope];
					return c ? c.length : 0;
				},
				//findIndex : _findIndex,
				getId : _getId,
				makeAnchor:self.makeAnchor,
				makeDynamicAnchor:self.makeDynamicAnchor
			};
		};

		/**
		 * Toggles visibility of an element's connections. kept for backwards
		 * compatibility
		 */
		this.toggle = _toggleVisible;

		/*
		 * Function: toggleVisible 
		 * Toggles visibility of an element's Connections.
		 *  
		 * Parameters: 
		 * 	el - either the element's id, or a selector representing the element.
		 *  changeEndpoints - whether or not to also toggle the endpoints on the element.
		 *  
		 * Returns: 
		 * 	void, but should be updated to return the current state
		 */
		// TODO: update this method to return the current state.
		this.toggleVisible = _toggleVisible;

		/*
		 * Function: toggleDraggable 
		 * Toggles draggability (sic?) of an element's Connections.
		 *  
		 * Parameters: 
		 * 	el - either the element's id, or a selector representing the element.
		 *  
		 * Returns: 
		 * 	The current draggable state.
		 */
		this.toggleDraggable = _toggleDraggable;

		/*
		 * Function: unload 
		 * Unloads jsPlumb, deleting all storage. You should call this from an onunload attribute on the <body> element. 
		 * 
		 * Returns:
		 * 	void
		 */
		this.unload = function() {
			// this used to do something, but it turns out that what it did was nothing.
			// now it exists only for backwards compatibility.
		};

		/*
		 * Helper method to wrap an existing function with one of
		 * your own. This is used by the various implementations to wrap event
		 * callbacks for drag/drop etc; it allows jsPlumb to be transparent in
		 * its handling of these things. If a user supplies their own event
		 * callback, for anything, it will always be called. 
		 */
		this.wrap = _wrap;			
		this.addListener = this.bind;
		
		var adjustForParentOffsetAndScroll = function(xy, el) {

			var offsetParent = null, result = xy;
			if (el.tagName.toLowerCase() === "svg" && el.parentNode) {
				offsetParent = el.parentNode;
			}
			else if (el.offsetParent) {
				offsetParent = el.offsetParent;					
			}
			if (offsetParent != null) {
				var po = offsetParent.tagName.toLowerCase() === "body" ? {left:0,top:0} : _getOffset(offsetParent),
					so = offsetParent.tagName.toLowerCase() === "body" ? {left:0,top:0} : {left:offsetParent.scrollLeft, top:offsetParent.scrollTop};					


				// i thought it might be cool to do this:
				//	lastReturnValue[0] = lastReturnValue[0] - offsetParent.offsetLeft + offsetParent.scrollLeft;
				//	lastReturnValue[1] = lastReturnValue[1] - offsetParent.offsetTop + offsetParent.scrollTop;					
				// but i think it ignores margins.  my reasoning was that it's quicker to not hand off to some underlying					
				// library.
				
				result[0] = xy[0] - po.left + so.left;
				result[1] = xy[1] - po.top + so.top;
			}
		
			return result;
			
		};

		/**
		 * Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user
		 * was required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. "TopMiddle"),
		 * or by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as "TopMiddle").  jsPlumb now handles all of the
		 * creation of Anchors without user intervention.
		 */
		var Anchor = function(params) {
			var self = this;
			this.x = params.x || 0;
			this.y = params.y || 0;
			this.elementId = params.elementId;
			var orientation = params.orientation || [ 0, 0 ];
			var lastTimestamp = null, lastReturnValue = null;
			this.offsets = params.offsets || [ 0, 0 ];
			self.timestamp = null;
			this.compute = function(params) {
				var xy = params.xy, wh = params.wh, element = params.element, timestamp = params.timestamp;
				
				if (timestamp && timestamp === self.timestamp)
					return lastReturnValue;
	
				lastReturnValue = [ xy[0] + (self.x * wh[0]) + self.offsets[0], xy[1] + (self.y * wh[1]) + self.offsets[1] ];
				
				// adjust loc if there is an offsetParent
				lastReturnValue = adjustForParentOffsetAndScroll(lastReturnValue, element.canvas);
				
				self.timestamp = timestamp;
				return lastReturnValue;
			};

			this.getOrientation = function(_endpoint) { return orientation; };

			this.equals = function(anchor) {
				if (!anchor) return false;
				var ao = anchor.getOrientation();
				var o = this.getOrientation();
				return this.x == anchor.x && this.y == anchor.y
						&& this.offsets[0] == anchor.offsets[0]
						&& this.offsets[1] == anchor.offsets[1]
						&& o[0] == ao[0] && o[1] == ao[1];
			};

			this.getCurrentLocation = function() { return lastReturnValue; };
		};

		/**
		 * An Anchor that floats. its orientation is computed dynamically from
		 * its position relative to the anchor it is floating relative to.  It is used when creating 
		 * a connection through drag and drop.
		 * 
		 * TODO FloatingAnchor could totally be refactored to extend Anchor just slightly.
		 */
		var FloatingAnchor = function(params) {

			// this is the anchor that this floating anchor is referenced to for
			// purposes of calculating the orientation.
			var ref = params.reference,
			// the canvas this refers to.
			refCanvas = params.referenceCanvas,
			size = _getSize(_getElementObject(refCanvas)),

			// these are used to store the current relative position of our
			// anchor wrt the reference anchor. they only indicate
			// direction, so have a value of 1 or -1 (or, very rarely, 0). these
			// values are written by the compute method, and read
			// by the getOrientation method.
			xDir = 0, yDir = 0,
			// temporary member used to store an orientation when the floating
			// anchor is hovering over another anchor.
			orientation = null,
			_lastResult = null;

			// set these to 0 each; they are used by certain types of connectors in the loopback case,
			// when the connector is trying to clear the element it is on. but for floating anchor it's not
			// very important.
			this.x = 0; this.y = 0;

			this.isFloating = true;

			this.compute = function(params) {
				var xy = params.xy, element = params.element,
				result = [ xy[0] + (size[0] / 2), xy[1] + (size[1] / 2) ]; // return origin of the element. we may wish to improve this so that any object can be the drag proxy.
							
				// adjust loc if there is an offsetParent
				result = adjustForParentOffsetAndScroll(result, element.canvas);
				
				_lastResult = result;
				return result;
			};

			this.getOrientation = function(_endpoint) {
				if (orientation) return orientation;
				else {
					var o = ref.getOrientation(_endpoint);
					// here we take into account the orientation of the other
					// anchor: if it declares zero for some direction, we declare zero too. this might not be the most awesome. perhaps we can come
					// up with a better way. it's just so that the line we draw looks like it makes sense. maybe this wont make sense.
					return [ Math.abs(o[0]) * xDir * -1,
							Math.abs(o[1]) * yDir * -1 ];
				}
			};

			/**
			 * notification the endpoint associated with this anchor is hovering
			 * over another anchor; we want to assume that anchor's orientation
			 * for the duration of the hover.
			 */
			this.over = function(anchor) { 
				orientation = anchor.getOrientation(); 
			};

			/**
			 * notification the endpoint associated with this anchor is no
			 * longer hovering over another anchor; we should resume calculating
			 * orientation as we normally do.
			 */
			this.out = function() { orientation = null; };

			this.getCurrentLocation = function() { return _lastResult; };
		};

		/* 
		 * A DynamicAnchor is an Anchor that contains a list of other Anchors, which it cycles
		 * through at compute time to find the one that is located closest to
		 * the center of the target element, and returns that Anchor's compute
		 * method result. this causes endpoints to follow each other with
		 * respect to the orientation of their target elements, which is a useful
		 * feature for some applications.
		 * 
		 */
		var DynamicAnchor = function(anchors, anchorSelector, elementId) {
			this.isSelective = true;
			this.isDynamic = true;			
			var _anchors = [], self = this,
			_convert = function(anchor) { 
				return anchor.constructor == Anchor ? anchor: _currentInstance.makeAnchor(anchor, elementId, _currentInstance); 
			};
			for (var i = 0; i < anchors.length; i++) 
				_anchors[i] = _convert(anchors[i]);			
			this.addAnchor = function(anchor) { _anchors.push(_convert(anchor)); };
			this.getAnchors = function() { return _anchors; };
			this.locked = false;
			var _curAnchor = _anchors.length > 0 ? _anchors[0] : null,
				_curIndex = _anchors.length > 0 ? 0 : -1,
				self = this,
			
				// helper method to calculate the distance between the centers of the two elements.
				_distance = function(anchor, cx, cy, xy, wh) {
					var ax = xy[0] + (anchor.x * wh[0]), ay = xy[1] + (anchor.y * wh[1]);
					return Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2));
				},
			
			// default method uses distance between element centers.  you can provide your own method in the dynamic anchor
			// constructor (and also to jsPlumb.makeDynamicAnchor). the arguments to it are four arrays: 
			// xy - xy loc of the anchor's element
			// wh - anchor's element's dimensions
			// txy - xy loc of the element of the other anchor in the connection
			// twh - dimensions of the element of the other anchor in the connection.
			// anchors - the list of selectable anchors
			_anchorSelector = anchorSelector || function(xy, wh, txy, twh, anchors) {
				var cx = txy[0] + (twh[0] / 2), cy = txy[1] + (twh[1] / 2);
				var minIdx = -1, minDist = Infinity;
				for ( var i = 0; i < anchors.length; i++) {
					var d = _distance(anchors[i], cx, cy, xy, wh);
					if (d < minDist) {
						minIdx = i + 0;
						minDist = d;
					}
				}
				return anchors[minIdx];
			};
			
			this.compute = function(params) {				
				var xy = params.xy, wh = params.wh, timestamp = params.timestamp, txy = params.txy, twh = params.twh;				
				// if anchor is locked or an opposite element was not given, we
				// maintain our state. anchor will be locked
				// if it is the source of a drag and drop.
				if (self.locked || txy == null || twh == null)
					return _curAnchor.compute(params);				
				else
					params.timestamp = null; // otherwise clear this, i think. we want the anchor to compute.
				
				_curAnchor = _anchorSelector(xy, wh, txy, twh, _anchors);
				self.x = _curAnchor.x;
				self.y = _curAnchor.y;
				
				return _curAnchor.compute(params);
			};

			this.getCurrentLocation = function() {
				return _curAnchor != null ? _curAnchor.getCurrentLocation() : null;
			};

			this.getOrientation = function(_endpoint) { return _curAnchor != null ? _curAnchor.getOrientation(_endpoint) : [ 0, 0 ]; };
			this.over = function(anchor) { if (_curAnchor != null) _curAnchor.over(anchor); };
			this.out = function() { if (_curAnchor != null) _curAnchor.out(); };
		};
		
	/*
	manages anchors for all elements.
	*/
	// "continuous" anchors: anchors that pick their location based on how many connections the given element has.
	// this requires looking at a lot more elements than normal - anything that has had a Continuous anchor applied has
	// to be recalculated.  so this manager is used as a reference point.  the first time, with a new timestamp, that
	// a continuous anchor is asked to compute, it calls this guy.  or maybe, even, this guy gets called somewhere else
	// and compute only ever returns pre-computed values.  either way, this is the central point, and we want it to
	// be called as few times as possible.
	var continuousAnchors = {},
        continuousAnchorLocations = {},
	    continuousAnchorOrientations = {},
	    Orientation = { HORIZONTAL : "horizontal", VERTICAL : "vertical", DIAGONAL : "diagonal", IDENTITY:"identity" },
    
	// TODO this functions uses a crude method of determining orientation between two elements.
	// 'diagonal' should be chosen when the angle of the line between the two centers is around
	// one of 45, 135, 225 and 315 degrees. maybe +- 15 degrees.
	calculateOrientation = function(sourceId, targetId, sd, td) {

		if (sourceId === targetId) return {
			orientation:Orientation.IDENTITY,
			a:["top", "top"]
		};

		var theta = Math.atan2((td.centery - sd.centery) , (td.centerx - sd.centerx)),
		    theta2 = Math.atan2((sd.centery - td.centery) , (sd.centerx - td.centerx)),
		    h = ((sd.left <= td.left && sd.right >= td.left) || (sd.left <= td.right && sd.right >= td.right) ||
			    (sd.left <= td.left && sd.right >= td.right) || (td.left <= sd.left && td.right >= sd.right)),
		    v = ((sd.top <= td.top && sd.bottom >= td.top) || (sd.top <= td.bottom && sd.bottom >= td.bottom) ||
			    (sd.top <= td.top && sd.bottom >= td.bottom) || (td.top <= sd.top && td.bottom >= sd.bottom));

		if (! (h || v)) {
			var a = null, rls = false, rrs = false, sortValue = null;
			if (td.left > sd.left && td.top > sd.top)
				a = ["right", "top"];
			else if (td.left > sd.left && sd.top > td.top)
				a = [ "top", "left"];
			else if (td.left < sd.left && td.top < sd.top)
				a = [ "top", "right"];
			else if (td.left < sd.left && td.top > sd.top)
				a = ["left", "top" ];

			return { orientation:Orientation.DIAGONAL, a:a, theta:theta, theta2:theta2 };
		}
		else if (h) return {
			orientation:Orientation.HORIZONTAL,
			a:sd.top < td.top ? ["bottom", "top"] : ["top", "bottom"],
			theta:theta, theta2:theta2
		}
		else return {
			orientation:Orientation.VERTICAL,
			a:sd.left < td.left ? ["right", "left"] : ["left", "right"],
			theta:theta, theta2:theta2
		}
	},
	placeAnchorsOnLine = function(desc, elementDimensions, elementPosition,
					connections, horizontal, otherMultiplier, reverse) {
		var a = [], step = elementDimensions[horizontal ? 0 : 1] / (connections.length + 1);

		for (var i = 0; i < connections.length; i++) {
			var val = (i + 1) * step, other = otherMultiplier * elementDimensions[horizontal ? 1 : 0];
			if (reverse)
			  val = elementDimensions[horizontal ? 0 : 1] - val;

			var dx = (horizontal ? val : other), x = elementPosition[0] + dx,  xp = dx / elementDimensions[0],
			 	dy = (horizontal ? other : val), y = elementPosition[1] + dy, yp = dy / elementDimensions[1];

			a.push([ x, y, xp, yp, connections[i][1], connections[i][2] ]);
		}

		return a;
	},
	standardEdgeSort = function(a, b) { return a[0] > b[0] ? 1 : -1 },
	currySort = function(reverseAngles) {
		return function(a,b) {
            var r = true;
			if (reverseAngles) {
				if (a[0][0] < b[0][0])
					r = true;
				else
					r = a[0][1] > b[0][1];
			}
			else {
				if (a[0][0] > b[0][0])
					r= true;
				else
					r =a[0][1] > b[0][1];
			}
            return r === false ? -1 : 1;
		};
	},
	leftSort = function(a,b) {
		// first get adjusted values
		var p1 = a[0][0] < 0 ? -Math.PI - a[0][0] : Math.PI - a[0][0],
		p2 = b[0][0] < 0 ? -Math.PI - b[0][0] : Math.PI - b[0][0];
		if (p1 > p2) return 1;
		else return a[0][1] > b[0][1] ? 1 : -1;
	},
	edgeSortFunctions = {
		"top":standardEdgeSort,
		"right":currySort(true),
		"bottom":currySort(true),
		"left":leftSort
	},
    _sortHelper = function(_array, _fn) {
      return _array.sort(_fn);
    },
	placeAnchors = function(elementId, _anchorLists) {		
		var sS = sizes[elementId], sO = offsets[elementId],
		placeSomeAnchors = function(desc, elementDimensions, elementPosition, unsortedConnections, isHorizontal, otherMultiplier, orientation) {
            if (unsortedConnections.length > 0) {
			    var sc = _sortHelper(unsortedConnections, edgeSortFunctions[desc]), // puts them in order based on the target element's pos on screen			    
				    reverse = desc === "right" || desc === "top",
				    anchors = placeAnchorsOnLine(desc, elementDimensions,
											 elementPosition, sc,
											 isHorizontal, otherMultiplier, reverse );

			    // takes a computed anchor position and adjusts it for parent offset and scroll, then stores it.
			    var _setAnchorLocation = function(endpoint, anchorPos) {
				    var a = adjustForParentOffsetAndScroll([anchorPos[0], anchorPos[1]], endpoint.canvas);
				    continuousAnchorLocations[endpoint.id] = [ a[0], a[1], anchorPos[2], anchorPos[3] ];
				    continuousAnchorOrientations[endpoint.id] = orientation;
			    };

			    for (var i = 0; i < anchors.length; i++) {
				    var c = anchors[i][4], weAreSource = c.endpoints[0].elementId === elementId, weAreTarget = c.endpoints[1].elementId === elementId;
				    if (weAreSource)
					    _setAnchorLocation(c.endpoints[0], anchors[i]);
				    else if (weAreTarget)
					    _setAnchorLocation(c.endpoints[1], anchors[i]);
			    }
            }
		};

		placeSomeAnchors("bottom", sS, [sO.left,sO.top], _anchorLists.bottom, true, 1, [0,1]);
		placeSomeAnchors("top", sS, [sO.left,sO.top], _anchorLists.top, true, 0, [0,-1]);
		placeSomeAnchors("left", sS, [sO.left,sO.top], _anchorLists.left, false, 0, [-1,0]);
		placeSomeAnchors("right", sS, [sO.left,sO.top], _anchorLists.right, false, 1, [1,0]);
	},
    AnchorManager = function() {
		var _amEndpoints = {},
			connectionsByElementId = {},
			self = this,
            anchorLists = {};

        this.reset = function() {
        	_amEndpoints = {};
        	connectionsByElementId = {};
            anchorLists = {};
        };			
 		this.newConnection = function(conn) {
			var sourceId = conn.sourceId, targetId = conn.targetId,
				ep = conn.endpoints,
                doRegisterTarget = true,
			    registerConnection = function(otherIndex, otherEndpoint, otherAnchor, elId, c) {

					if ((sourceId == targetId) && otherAnchor.isContinuous){
                       // remove the target endpoint's canvas.  we dont need it.
                        jsPlumb.CurrentLibrary.removeElement(ep[1].canvas);
                        doRegisterTarget = false;
                    }
					_addToList(connectionsByElementId, elId, [c, otherEndpoint, otherAnchor.constructor == DynamicAnchor]);
			    };

			registerConnection(0, ep[0], ep[0].anchor, targetId, conn);
            if (doRegisterTarget)
            	registerConnection(1, ep[1], ep[1].anchor, sourceId, conn);
		};
		this.connectionDetached = function(connInfo) {
			var connection = connInfo.connection || connInfo;
			var sourceId = connection.sourceId,
                targetId = connection.targetId,
				ep = connection.endpoints,
				removeConnection = function(otherIndex, otherEndpoint, otherAnchor, elId, c) {
					if (otherAnchor.constructor == FloatingAnchor) {
						// no-op
					}
					else {
						_removeWithFunction(connectionsByElementId[elId], function(_c) {
							return _c[0].id == c.id;
						});
					}
				};
				
			removeConnection(1, ep[1], ep[1].anchor, sourceId, connection);
			removeConnection(0, ep[0], ep[0].anchor, targetId, connection);

            // remove from anchorLists
            var sEl = connection.sourceId,
                tEl = connection.targetId,
                sE =  connection.endpoints[0].id,
                tE = connection.endpoints[1].id,
                _remove = function(list, eId) {
                    if (list) {  // transient anchors dont get entries in this list.
                        var f = function(e) { return e[4] == eId; };
                        _removeWithFunction(list["top"], f);
                        _removeWithFunction(list["left"], f);
                        _removeWithFunction(list["bottom"], f);
                        _removeWithFunction(list["right"], f);
                    }
                };
            
            _remove(anchorLists[sEl], sE);
            _remove(anchorLists[tEl], tE);
            self.redraw(sEl);
            self.redraw(tEl);
		};
		this.add = function(endpoint, elementId) {
			_addToList(_amEndpoints, elementId, endpoint);
		};
		this.changeId = function(oldId, newId) {
			connectionsByElementId[newId] = connectionsByElementId[oldId];
			_amEndpoints[newId] = _amEndpoints[oldId];
			delete connectionsByElementId[oldId];
			delete _amEndpoints[oldId];	
		};
		this.getConnectionsFor = function(elementId) {
			return connectionsByElementId[elementId] || [];
		};
		this.getEndpointsFor = function(elementId) {
			return _amEndpoints[elementId] || [];
		};
		this.deleteEndpoint = function(endpoint) {
			_removeWithFunction(_amEndpoints[endpoint.elementId], function(e) {
				return e.id == endpoint.id;
			});
		};
		this.clearFor = function(elementId) {
			delete _amEndpoints[elementId];
			_amEndpoints[elementId] = [];
		};
        // updates the given anchor list by either updating an existing anchor's info, or adding it. this function
        // also removes the anchor from its previous list, if the edge it is on has changed.
        // all connections found along the way (those that are connected to one of the faces this function
        // operates on) are added to the connsToPaint list, as are their endpoints. in this way we know to repaint
        // them wthout having to calculate anything else about them.
        var _updateAnchorList = function(lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, elId, connsToPaint, endpointsToPaint) {
            // first try to find the exact match, but keep track of the first index of a matching element id along the way.s
            var exactIdx = -1,
                firstMatchingElIdx = -1,
                endpoint = conn.endpoints[idx],
                endpointId = endpoint.id,
                oIdx = [1,0][idx],
                values = [ [ theta, order ], conn, aBoolean, otherElId, endpointId ],
                listToAddTo = lists[edgeId],
                listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null;

            if (listToRemoveFrom) {
                var rIdx = _findWithFunction(listToRemoveFrom, function(e) { return e[4] == endpointId });
                if (rIdx != -1) {
                    listToRemoveFrom.splice(rIdx, 1);
                    // get all connections from this list
                    for (var i = 0; i < listToRemoveFrom.length; i++) {
                        _addWithFunction(connsToPaint, listToRemoveFrom[i][1], function(c) { return c.id == listToRemoveFrom[i][1].id });
                        _addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[idx], function(e) { return e.id == listToRemoveFrom[i][1].endpoints[idx].id });
                    }
                }
            }

            for (var i = 0; i < listToAddTo.length; i++) {
                if (idx == 1 && listToAddTo[i][3] === otherElId && firstMatchingElIdx == -1)
                    firstMatchingElIdx = i;
                _addWithFunction(connsToPaint, listToAddTo[i][1], function(c) { return c.id == listToAddTo[i][1].id });                
                _addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[idx], function(e) { return e.id == listToAddTo[i][1].endpoints[idx].id });
            }
            if (exactIdx != -1) {
                listToAddTo[exactIdx] = values;
            }
            else {
                var insertIdx = reverse ? firstMatchingElIdx != -1 ? firstMatchingElIdx : 0 : listToAddTo.length; // of course we will get this from having looked through the array shortly.
                listToAddTo.splice(insertIdx, 0, values);
            }

            // store this for next time.
            endpoint._continuousAnchorEdge = edgeId;
        };
		this.redraw = function(elementId, ui, timestamp, offsetToUI) {
			// get all the endpoints for this element
			var ep = _amEndpoints[elementId] || [],
				endpointConnections = connectionsByElementId[elementId] || [],
				connectionsToPaint = [],
				endpointsToPaint = [],
                anchorsToUpdate = [];
            
			timestamp = timestamp || _timestamp();
			// offsetToUI are values that would have been calculated in the dragManager when registering
			// an endpoint for an element that had a parent (somewhere in the hierarchy) that had been
			// registered as draggable.
			offsetToUI = offsetToUI || {left:0, top:0};
			if (ui) {
				ui = {
					left:ui.left + offsetToUI.left,
					top:ui.top + offsetToUI.top
				}
			}
				
			_updateOffset( { elId : elementId, offset : ui, recalc : false, timestamp : timestamp }); 
			// valid for one paint cycle.
			var myOffset = offsets[elementId],
                myWH = sizes[elementId],
                orientationCache = {};
			
			// actually, first we should compute the orientation of this element to all other elements to which
			// this element is connected with a continuous anchor (whether both ends of the connection have
			// a continuous anchor or just one)
            //for (var i = 0; i < continuousAnchorConnections.length; i++) {
            for (var i = 0; i < endpointConnections.length; i++) {
                var conn = endpointConnections[i][0],
					sourceId = conn.sourceId,
                    targetId = conn.targetId,
                    sourceContinuous = conn.endpoints[0].anchor.isContinuous,
                    targetContinuous = conn.endpoints[1].anchor.isContinuous;

                if (sourceContinuous || targetContinuous) {
	                var oKey = sourceId + "_" + targetId,
	                    oKey2 = targetId + "_" + sourceId,
	                    o = orientationCache[oKey],
	                    oIdx = conn.sourceId == elementId ? 1 : 0;

	                if (sourceContinuous && !anchorLists[sourceId]) anchorLists[sourceId] = { top:[], right:[], bottom:[], left:[] };
	                if (targetContinuous && !anchorLists[targetId]) anchorLists[targetId] = { top:[], right:[], bottom:[], left:[] };

	                if (elementId != targetId) _updateOffset( { elId : targetId, timestamp : timestamp }); 
	                if (elementId != sourceId) _updateOffset( { elId : sourceId, timestamp : timestamp }); 

	                var td = _getCachedData(targetId),
						sd = _getCachedData(sourceId);

	                if (targetId == sourceId && (sourceContinuous || targetContinuous)) {
	                    // here we may want to improve this by somehow determining the face we'd like
					    // to put the connector on.  ideally, when drawing, the face should be calculated
					    // by determining which face is closest to the point at which the mouse button
						// was released.  for now, we're putting it on the top face.
	                    _updateAnchorList(anchorLists[sourceId], -Math.PI / 2, 0, conn, false, targetId, 0, false, "top", sourceId, connectionsToPaint, endpointsToPaint)
					}
	                else {
	                    if (!o) {
	                        o = calculateOrientation(sourceId, targetId, sd.o, td.o);
	                        orientationCache[oKey] = o;
	                        // this would be a performance enhancement, but the computed angles need to be clamped to
	                        //the (-PI/2 -> PI/2) range in order for the sorting to work properly.
	                    /*  orientationCache[oKey2] = {
	                            orientation:o.orientation,
	                            a:[o.a[1], o.a[0]],
	                            theta:o.theta + Math.PI,
	                            theta2:o.theta2 + Math.PI
	                        };*/
	                    }
	                    if (sourceContinuous) _updateAnchorList(anchorLists[sourceId], o.theta, 0, conn, false, targetId, 0, false, o.a[0], sourceId, connectionsToPaint, endpointsToPaint);
	                    if (targetContinuous) _updateAnchorList(anchorLists[targetId], o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], targetId, connectionsToPaint, endpointsToPaint);
	                }

	                if (sourceContinuous) _addWithFunction(anchorsToUpdate, sourceId, function(a) { return a === sourceId; });
	                if (targetContinuous) _addWithFunction(anchorsToUpdate, targetId, function(a) { return a === targetId; });
	                _addWithFunction(connectionsToPaint, conn, function(c) { return c.id == conn.id; });
	                if ((sourceContinuous && oIdx == 0) || (targetContinuous && oIdx == 1))
	                	_addWithFunction(endpointsToPaint, conn.endpoints[oIdx], function(e) { return e.id == conn.endpoints[oIdx].id; });
	            }
            }

            // now place all the continuous anchors we need to;
            for (var i = 0; i < anchorsToUpdate.length; i++) {
				placeAnchors(anchorsToUpdate[i], anchorLists[anchorsToUpdate[i]]);
			}
			
			// now that continuous anchors have been placed, paint all the endpoints for this element
            // TODO performance: add the endpoint ids to a temp array, and then when iterating in the next
            // loop, check that we didn't just paint that endpoint. we can probably shave off a few more milliseconds this way.
			for (var i = 0; i < ep.length; i++) {				
				ep[i].paint( { timestamp : timestamp, offset : myOffset, dimensions : myWH });
			}
            // ... and any other endpoints we came across as a result of the continuous anchors.
            for (var i = 0; i < endpointsToPaint.length; i++) {
				endpointsToPaint[i].paint( { timestamp : timestamp, offset : myOffset, dimensions : myWH });
			}

			// paint all the standard and "dynamic connections", which are connections whose other anchor is
			// static and therefore does need to be recomputed; we make sure that happens only one time.

			// TODO we could have compiled a list of these in the first pass through connections; might save some time.
			for (var i = 0; i < endpointConnections.length; i++) {
				var otherEndpoint = endpointConnections[i][1];
				if (otherEndpoint.anchor.constructor == DynamicAnchor) {			 							
					otherEndpoint.paint({ elementWithPrecedence:elementId });								
                    _addWithFunction(connectionsToPaint, endpointConnections[i][0], function(c) { return c.id == endpointConnections[i][0].id; });
					// all the connections for the other endpoint now need to be repainted
					for (var k = 0; k < otherEndpoint.connections.length; k++) {
						if (otherEndpoint.connections[k] !== endpointConnections[i][0])							
                            _addWithFunction(connectionsToPaint, otherEndpoint.connections[k], function(c) { return c.id == otherEndpoint.connections[k].id; });
					}
				} else if (otherEndpoint.anchor.constructor == Anchor) {					
                    _addWithFunction(connectionsToPaint, endpointConnections[i][0], function(c) { return c.id == endpointConnections[i][0].id; });
				}
			}
			// paint current floating connection for this element, if there is one.
			var fc = floatingConnections[elementId];
			if (fc) 
				fc.paint({timestamp:timestamp, recalc:false, elId:elementId});
				
			// paint all the connections
			for (var i = 0; i < connectionsToPaint.length; i++) {
				connectionsToPaint[i].paint({elId:elementId, timestamp:timestamp, recalc:false});
			}
		};
		this.rehomeEndpoint = function(currentId, element) {
			var eps = _amEndpoints[currentId] || [], //, 
				elementId = _currentInstance.getId(element);
			for (var i = 0; i < eps.length; i++) {
				self.add(eps[i], elementId);
			}
			eps.splice(0, eps.length);
		};
	};
	_currentInstance.anchorManager = new AnchorManager();				
	_currentInstance.continuousAnchorFactory = {
		get:function(params) {
			var existing = continuousAnchors[params.elementId];
			if (!existing) {
				existing = {
					type:"Continuous",
					compute : function(params) {
						return continuousAnchorLocations[params.element.id] || [0,0];
					},
					getCurrentLocation : function(endpoint) {
						return continuousAnchorLocations[endpoint.id] || [0,0];
					},
					getOrientation : function(endpoint) {
						return continuousAnchorOrientations[endpoint.id] || [0,0];
					},
					isDynamic : true,
					isContinuous : true
				};
				continuousAnchors[params.elementId] = existing;
			}
			return existing;
		}
	};

	/**
		Manages dragging for some instance of jsPlumb.  

	*/
	var DragManager = function() {
		
		var _draggables = {}, _dlist = [], _delements = {}, _elementsWithEndpoints = {};

		/**
			register some element as draggable.  right now the drag init stuff is done elsewhere, and it is
			possible that will continue to be the case.
		*/
		this.register = function(el) {
			var jpcl = jsPlumb.CurrentLibrary;
			el = jpcl.getElementObject(el);
			var id = _currentInstance.getId(el),
				domEl = jpcl.getDOMElement(el);
			if (!_draggables[id]) {
				_draggables[id] = el;
				_dlist.push(el);
				_delements[id] = {};
			}
				
			// look for child elements that have endpoints and register them against this draggable.
			var _oneLevel = function(p) {
				var pEl = jpcl.getElementObject(p),
					pOff = jpcl.getOffset(pEl);

				for (var i = 0; i < p.childNodes.length; i++) {
					if (p.childNodes[i].nodeType != 3) {
						var cEl = jpcl.getElementObject(p.childNodes[i]),
							cid = _currentInstance.getId(cEl, null, true);
						if (cid && _elementsWithEndpoints[cid] && _elementsWithEndpoints[cid] > 0) {
							var cOff = jpcl.getOffset(cEl);
							_delements[id][cid] = {
								id:cid,
								offset:{
									left:cOff.left - pOff.left,
									top:cOff.top - pOff.top
								}
							};
						}
					}	
				}
			};

			_oneLevel(domEl);
		};

		/**
			notification that an endpoint was added to the given el.  we go up from that el's parent
			node, looking for a parent that has been registered as a draggable. if we find one, we add this
			el to that parent's list of elements to update on drag (if it is not there already)
		*/
		this.endpointAdded = function(el) {
			var jpcl = jsPlumb.CurrentLibrary, b = document.body, id = _currentInstance.getId(el), c = jpcl.getDOMElement(el), 
				p = c.parentNode, done = p == b;

			_elementsWithEndpoints[id] = _elementsWithEndpoints[id] ? _elementsWithEndpoints[id] + 1 : 1;

			while (p != b) {
				var pid = _currentInstance.getId(p);
				if (_draggables[pid]) {
					var idx = -1, pEl = jpcl.getElementObject(p), pLoc = jpcl.getOffset(pEl);
					
					if (_delements[pid][id] == null) {
						var cLoc = jsPlumb.CurrentLibrary.getOffset(el);
						_delements[pid][id] = {
							id:id,
							offset:{
								left:cLoc.left - pLoc.left,
								top:cLoc.top - pLoc.top
							}
						};
					}
					break;
				}
				p = p.parentNode;
			}	
		};

		this.endpointDeleted = function(endpoint) {
			if (_elementsWithEndpoints[endpoint.elementId]) {
				_elementsWithEndpoints[endpoint.elementId]--;
				if (_elementsWithEndpoints[endpoint.elementId] <= 0) {
					for (var i in _delements) {
						delete _delements[i][endpoint.elementId];
					}
				}
			}		
		};

		this.getElementsForDraggable = function(id) {
			return _delements[id];	
		};

		this.reset = function() {
			_draggables = {};
			_dlist = [];
			_delements = {};
			_elementsWithEndpoints = {};
		};
		
	};
	_currentInstance.dragManager = new DragManager();
	


		/*
		 * Class: Connection
		 * The connecting line between two Endpoints.
		 */
		/*
		 * Function: Connection
		 * Connection constructor. You should not ever create one of these directly.
		 * 
		 * Parameters:
		 * 	source 	- either an element id, a selector for an element, or an Endpoint.
		 * 	target	- either an element id, a selector for an element, or an Endpoint
		 * 	scope	- scope descriptor for this connection. optional.
		 *  container - optional id or selector instructing jsPlumb where to attach all the elements it creates for this connection.  you should read the documentation for a full discussion of this.
		 *  detachable - optional, defaults to true. Defines whether or not the connection may be detached using the mouse.
		 *  endpoint - Optional. Endpoint definition to use for both ends of the connection.
		 *  endpoints - Optional. Array of two Endpoint definitions, one for each end of the Connection. This and 'endpoint' are mutually exclusive parameters.
		 *  endpointStyle - Optional. Endpoint style definition to use for both ends of the Connection.
		 *  endpointStyles - Optional. Array of two Endpoint style definitions, one for each end of the Connection. This and 'endpoint' are mutually exclusive parameters.
		 *  paintStyle - Parameters defining the appearance of the Connection. Optional; jsPlumb will use the defaults if you supply nothing here.
		 *  hoverPaintStyle - Parameters defining the appearance of the Connection when the mouse is hovering over it. Optional; jsPlumb will use the defaults if you supply nothing here (note that the default hoverPaintStyle is null).
		 *  overlays - Optional array of Overlay definitions to appear on this Connection.
		 *  drawEndpoints - if false, instructs jsPlumb to not draw the endpoints for this Connection.  Be careful with this: it only really works when you tell jsPlumb to attach elements to the document body. Read the documentation for a full discussion of this. 
		 *  parameters - Optional JS object containing parameters to set on the Connection. These parameters are then available via the getParameter method.
		 */
		var Connection = function(params) {
			var self = this, visible = true;
			self.idPrefix = "_jsplumb_c_";
			self.defaultLabelLocation = 0.5;
			self.defaultOverlayKeys = ["Overlays", "ConnectionOverlays"];
			this.parent = params.parent;
			overlayCapableJsPlumbUIComponent.apply(this, arguments);
			// ************** get the source and target and register the connection. *******************
			
			/**
				Function:isVisible
				Returns whether or not the Connection is currently visible.
			*/
			this.isVisible = function() { return visible; };
			/**
				Function: setVisible
				Sets whether or not the Connection should be visible.

				Parameters:
					visible - boolean indicating desired visible state.
			*/
			this.setVisible = function(v) {
				visible = v;
				self[v ? "showOverlays" : "hideOverlays"]();
				if (self.connector && self.connector.canvas) self.connector.canvas.style.display = v ? "block" : "none";
			};
			
			/**
				Property: source
				The source element for this Connection.
			*/
			this.source = _getElementObject(params.source);
			/**
				Property:target
				The target element for this Connection.
			*/
			this.target = _getElementObject(params.target);
			// sourceEndpoint and targetEndpoint override source/target, if they are present. but 
			// source is not overridden if the Endpoint has declared it is not the final target of a connection;
			// instead we use the source that the Endpoint declares will be the final source element.
			if (params.sourceEndpoint) {
				this.source = params.sourceEndpoint.endpointWillMoveTo || params.sourceEndpoint.getElement();
			}
			if (params.targetEndpoint) this.target = params.targetEndpoint.getElement();
			
			// if a new connection is the result of moving some existing connection, params.previousConnection
			// will have that Connection in it. listeners for the jsPlumbConnection event can look for that
			// member and take action if they need to.
			self.previousConnection = params.previousConnection;
			
			var _cost = params.cost;
			self.getCost = function() { return _cost; };
			self.setCost = function(c) { _cost = c; };
			
			var _bidirectional = params.bidirectional === false ? false : true;
			self.isBidirectional = function() { return _bidirectional; };
			
			/*
			 * Property: sourceId
			 * Id of the source element in the connection.
			 */
			this.sourceId = _getAttribute(this.source, "id");
			/*
			 * Property: targetId
			 * Id of the target element in the connection.
			 */
			this.targetId = _getAttribute(this.target, "id");
			
			/**
			 * implementation of abstract method in jsPlumbUtil.EventGenerator
			 * @return list of attached elements. in our case, a list of Endpoints.
			 */
			this.getAttachedElements = function() {
				return self.endpoints;
			};
			
			/*
			 * Property: scope
			 * Optional scope descriptor for the connection.
			 */
			this.scope = params.scope; // scope may have been passed in to the connect call. if it wasn't, we will pull it from the source endpoint, after having initialised the endpoints. 
			/*
			 * Property: endpoints
			 * Array of [source, target] Endpoint objects.
			 */
			this.endpoints = [];
			this.endpointStyles = [];
			// wrapped the main function to return null if no input given. this lets us cascade defaults properly.
			var _makeAnchor = function(anchorParams, elementId) {
				if (anchorParams)
					return _currentInstance.makeAnchor(anchorParams, elementId, _currentInstance);
			},
			prepareEndpoint = function(existing, index, params, element, elementId, connectorPaintStyle, connectorHoverPaintStyle) {
				if (existing) {
					self.endpoints[index] = existing;
					existing.addConnection(self);
				} else {
					if (!params.endpoints) params.endpoints = [ null, null ];
					var ep = params.endpoints[index] 
					        || params.endpoint
							|| _currentInstance.Defaults.Endpoints[index]
							|| jsPlumb.Defaults.Endpoints[index]
							|| _currentInstance.Defaults.Endpoint
							|| jsPlumb.Defaults.Endpoint;

					if (!params.endpointStyles) params.endpointStyles = [ null, null ];
					if (!params.endpointHoverStyles) params.endpointHoverStyles = [ null, null ];
					var es = params.endpointStyles[index] || params.endpointStyle || _currentInstance.Defaults.EndpointStyles[index] || jsPlumb.Defaults.EndpointStyles[index] || _currentInstance.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle;
					// Endpoints derive their fillStyle from the connector's strokeStyle, if no fillStyle was specified.
					if (es.fillStyle == null && connectorPaintStyle != null)
						es.fillStyle = connectorPaintStyle.strokeStyle;
					
					// TODO: decide if the endpoint should derive the connection's outline width and color.  currently it does:
					//*
					if (es.outlineColor == null && connectorPaintStyle != null) 
						es.outlineColor = connectorPaintStyle.outlineColor;
					if (es.outlineWidth == null && connectorPaintStyle != null) 
						es.outlineWidth = connectorPaintStyle.outlineWidth;
					//*/
					
					var ehs = params.endpointHoverStyles[index] || params.endpointHoverStyle || _currentInstance.Defaults.EndpointHoverStyles[index] || jsPlumb.Defaults.EndpointHoverStyles[index] || _currentInstance.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle;
					// endpoint hover fill style is derived from connector's hover stroke style.  TODO: do we want to do this by default? for sure?
					if (connectorHoverPaintStyle != null) {
						if (ehs == null) ehs = {};
						if (ehs.fillStyle == null) {
							ehs.fillStyle = connectorHoverPaintStyle.strokeStyle;
						}
					}
					var a = params.anchors ? params.anchors[index] : 
						params.anchor ? params.anchor :
						_makeAnchor(_currentInstance.Defaults.Anchors[index], elementId) || 
						_makeAnchor(jsPlumb.Defaults.Anchors[index], elementId) || 
						_makeAnchor(_currentInstance.Defaults.Anchor, elementId) || 
						_makeAnchor(jsPlumb.Defaults.Anchor, elementId),					
					u = params.uuids ? params.uuids[index] : null,
					e = _newEndpoint({ 
						paintStyle : es, 
						hoverPaintStyle:ehs, 
						endpoint : ep, 
						connections : [ self ], 
						uuid : u, 
						anchor : a, 
						source : element,
						scope  : params.scope,
						container:params.container,
						reattach:params.reattach,
                        detachable:params.detachable
					});
					self.endpoints[index] = e;
					
					
					if (params.drawEndpoints === false) e.setVisible(false, true, true);
					
					return e;
				}
			};					

			var eS = prepareEndpoint(params.sourceEndpoint, 
									 0, 
									 params, 
									 self.source, 
									 self.sourceId, 
									 params.paintStyle, 
									 params.hoverPaintStyle);
			if (eS) _addToList(endpointsByElement, this.sourceId, eS);
			
			// if there were no endpoints supplied and the source element is the target element, we will reuse the source
			// endpoint that was just created.
			var existingTargetEndpoint = ((self.sourceId == self.targetId) && params.targetEndpoint == null) ? eS : params.targetEndpoint,
				eT = prepareEndpoint(existingTargetEndpoint, 
									 1, 
									 params, 
									 self.target, 
									 self.targetId, 
									 params.paintStyle, 
									 params.hoverPaintStyle);
			if (eT) _addToList(endpointsByElement, this.targetId, eT);
			// if scope not set, set it to be the scope for the source endpoint.
			if (!this.scope) this.scope = this.endpoints[0].scope;		
			
			// if delete endpoints on detach, keep a record of just exactly which endpoints they are.
			if (params.deleteEndpointsOnDetach)
				self.endpointsToDeleteOnDetach = [eS, eT];

            var _detachable = _currentInstance.Defaults.ConnectionsDetachable;
            if (params.detachable === false) _detachable = false;
            if(self.endpoints[0].connectionsDetachable === false) _detachable = false;
            if(self.endpoints[1].connectionsDetachable === false) _detachable = false;
            
            // inherit connectin cost if it was set on source endpoint
            if (_cost == null) _cost = self.endpoints[0].getConnectionCost();
            // inherit bidirectional flag if set no source endpoint
            if (params.bidirectional == null) _bidirectional = self.endpoints[0].areConnectionsBidirectional();
            
            /*
                Function: isDetachable
                Returns whether or not this connection can be detached from its target/source endpoint.  by default this
                is false; use it in conjunction with the 'reattach' parameter.
             */
            this.isDetachable = function() {
                return _detachable === true;
            };

            /*
                Function: setDetachable
                Sets whether or not this connection is detachable.
             */
            this.setDetachable = function(detachable) {
              _detachable = detachable === true;
            };
			
			// merge all the parameters objects into the connection.  parameters set
			// on the connection take precedence; then target endpoint params, then
			// finally source endpoint params.
			// TODO jsPlumb.extend could be made to take more than two args, and it would
			// apply the second through nth args in order.
			var _p = jsPlumb.extend({}, this.endpoints[0].getParameters());
			jsPlumb.extend(_p, this.endpoints[1].getParameters());
			jsPlumb.extend(_p, self.getParameters());
			self.setParameters(_p);
			
			// override setHover to pass it down to the underlying connector
			var _sh = self.setHover;

			self.setHover = function(state) {
				self.connector.setHover.apply(self.connector, arguments);
				_sh.apply(self, arguments);
			};
			
			var _internalHover = function(state) {
				if (_connectionBeingDragged == null) {
					self.setHover(state, false);
				}
			};						

			/*
			 * Function: setConnector
			 * Sets the Connection's connector (eg "Bezier", "Flowchart", etc).  You pass a Connector definition into this method - the same
			 * thing that you would set as the 'connector' property on a jsPlumb.connect call.
			 * 
			 * Parameters:
			 * 	connector		-	Connector definition
			 */
			this.setConnector = function(connector, doNotRepaint) {
				if (self.connector != null) _removeElements(self.connector.getDisplayElements(), self.parent);
				var connectorArgs = { 
					_jsPlumb:self._jsPlumb, 
					parent:params.parent, 
					cssClass:params.cssClass, 
					container:params.container,
					tooltip:self.tooltip
				};
				if (_isString(connector)) 
					this.connector = new jsPlumb.Connectors[renderMode][connector](connectorArgs); // lets you use a string as shorthand.
				else if (_isArray(connector))
					this.connector = new jsPlumb.Connectors[renderMode][connector[0]](jsPlumb.extend(connector[1], connectorArgs));
				self.canvas = self.connector.canvas;
				// binds mouse listeners to the current connector.
				_bindListeners(self.connector, self, _internalHover);				
				if (!doNotRepaint) self.repaint();
			};
			/*
			 * Property: connector
			 * The underlying Connector for this Connection (eg. a Bezier connector, straight line connector, flowchart connector etc)
			 */			
						
			self.setConnector(this.endpoints[0].connector || 
							  this.endpoints[1].connector || 
							  params.connector || 
							  _currentInstance.Defaults.Connector || 
							  jsPlumb.Defaults.Connector, true);							  							  		
			
			this.setPaintStyle(this.endpoints[0].connectorStyle || 
							   this.endpoints[1].connectorStyle || 
							   params.paintStyle || 
							   _currentInstance.Defaults.PaintStyle || 
							   jsPlumb.Defaults.PaintStyle, true);
						
			this.setHoverPaintStyle(this.endpoints[0].connectorHoverStyle || 
									this.endpoints[1].connectorHoverStyle || 
									params.hoverPaintStyle || 
									_currentInstance.Defaults.HoverPaintStyle || 
									jsPlumb.Defaults.HoverPaintStyle, true);
			
			this.paintStyleInUse = this.getPaintStyle();
								
			
			this.moveParent = function(newParent) {
				var jpcl = jsPlumb.CurrentLibrary, curParent = jpcl.getParent(self.connector.canvas);				
				if (self.connector.bgCanvas) {
				    jpcl.removeElement(self.connector.bgCanvas, curParent);
				    jpcl.appendElement(self.connector.bgCanvas, newParent);
                }
				jpcl.removeElement(self.connector.canvas, curParent);
				jpcl.appendElement(self.connector.canvas, newParent);                
                // this only applies for DOMOverlays
				for (var i = 0; i < self.overlays.length; i++) {
                    if (self.overlays[i].isAppendedAtTopLevel) {
					    jpcl.removeElement(self.overlays[i].canvas, curParent);
					    jpcl.appendElement(self.overlays[i].canvas, newParent);
					    if (self.overlays[i].reattachListeners) 
					    	self.overlays[i].reattachListeners(self.connector);
                    }
				}
				if (self.connector.reattachListeners)		// this is for SVG/VML; change an element's parent and you have to reinit its listeners.
					self.connector.reattachListeners();     // the Canvas implementation doesn't have to care about this
			};
			
// ***************************** PLACEHOLDERS FOR NATURAL DOCS *************************************************
			/*
			 * Function: bind
			 * Bind to an event on the Connection.  
			 * 
			 * Parameters:
			 * 	event - the event to bind.  Available events on a Connection are:
			 *         - *click*						:	notification that a Connection was clicked.  
			 *         - *dblclick*						:	notification that a Connection was double clicked.
			 *         - *mouseenter*					:	notification that the mouse is over a Connection. 
			 *         - *mouseexit*					:	notification that the mouse exited a Connection.
			 * 		   - *contextmenu*                  :   notification that the user right-clicked on the Connection.
			 *         
			 *  callback - function to callback. This function will be passed the Connection that caused the event, and also the original event.    
			 */
			
			/*
		     * Function: setPaintStyle
		     * Sets the Connection's paint style and then repaints the Connection.
		     * 
		     * Parameters:
		     * 	style - Style to use.
		     */

		     /*
		     * Function: getPaintStyle
		     * Gets the Connection's paint style. This is not necessarily the paint style in use at the time;
		     * this is the paint style for the connection when the mouse it not hovering over it.
		     */
			
			/*
		     * Function: setHoverPaintStyle
		     * Sets the paint style to use when the mouse is hovering over the Connection. This is null by default.
		     * The hover paint style is applied as extensions to the paintStyle; it does not entirely replace
		     * it.  This is because people will most likely want to change just one thing when hovering, say the
		     * color for example, but leave the rest of the appearance the same.
		     * 
		     * Parameters:
		     * 	style - Style to use when the mouse is hovering.
		     *  doNotRepaint - if true, the Connection will not be repainted.  useful when setting things up initially.
		     */
			
			/*
		     * Function: setHover
		     * Sets/unsets the hover state of this Connection.
		     * 
		     * Parameters:
		     * 	hover - hover state boolean
		     * 	ignoreAttachedElements - if true, does not notify any attached elements of the change in hover state.  used mostly to avoid infinite loops.
		     */

		     /*
		     * Function: getParameter
		     * Gets the named parameter; returns null if no parameter with that name is set. Parameter values may have been supplied to a 'connect' or 'addEndpoint' call (connections made with the mouse get a copy of all parameters set on each of their Endpoints), or the parameter value may have been set with setParameter.
		     *
		     * Parameters:
		     *   key - Parameter name.
		     */

		     /*
		     * Function: setParameter
		     * Sets the named parameter to the given value.
		     *
		     * Parameters:
		     *   key - Parameter name.
		     *   value - Parameter value.
		     */
			
// ***************************** END OF PLACEHOLDERS FOR NATURAL DOCS *************************************************												

			_updateOffset( { elId : this.sourceId });
			_updateOffset( { elId : this.targetId });
			
			// paint the endpoints
			var myOffset = offsets[this.sourceId], myWH = sizes[this.sourceId],
				otherOffset = offsets[this.targetId],
				otherWH = sizes[this.targetId],
				initialTimestamp = _timestamp(),
				anchorLoc = this.endpoints[0].anchor.compute( {
					xy : [ myOffset.left, myOffset.top ], wh : myWH, element : this.endpoints[0],
					elementId:this.endpoints[0].elementId,
					txy : [ otherOffset.left, otherOffset.top ], twh : otherWH, tElement : this.endpoints[1],
					timestamp:initialTimestamp
				});

			this.endpoints[0].paint( { anchorLoc : anchorLoc, timestamp:initialTimestamp });

			anchorLoc = this.endpoints[1].anchor.compute( {
				xy : [ otherOffset.left, otherOffset.top ], wh : otherWH, element : this.endpoints[1],
				elementId:this.endpoints[1].elementId,				
				txy : [ myOffset.left, myOffset.top ], twh : myWH, tElement : this.endpoints[0],
				timestamp:initialTimestamp				
			});
			this.endpoints[1].paint({ anchorLoc : anchorLoc, timestamp:initialTimestamp });										    		  		    	    		  
		    
			/*
			 * Paints the Connection.  Not exposed for public usage. 
			 * 
			 * Parameters:
			 * 	elId - Id of the element that is in motion.
			 * 	ui - current library's event system ui object (present if we came from a drag to get here).
			 *  recalc - whether or not to recalculate all anchors etc before painting. 
			 *  timestamp - timestamp of this paint.  If the Connection was last painted with the same timestamp, it does not paint again.
			 */
			this.paint = function(params) {
				params = params || {};
				var elId = params.elId, ui = params.ui, recalc = params.recalc, timestamp = params.timestamp,
				// if the moving object is not the source we must transpose the two references.
				swap = false,
				tId = swap ? this.sourceId : this.targetId, sId = swap ? this.targetId : this.sourceId,
				tIdx = swap ? 0 : 1, sIdx = swap ? 1 : 0;

				var sourceInfo = _updateOffset( { elId : elId, offset : ui, recalc : recalc, timestamp : timestamp }),
					targetInfo = _updateOffset( { elId : tId, timestamp : timestamp }); // update the target if this is a forced repaint. otherwise, only the source has been moved.
				
				var sE = this.endpoints[sIdx], tE = this.endpoints[tIdx],
					sAnchorP = sE.anchor.getCurrentLocation(sE),				
					tAnchorP = tE.anchor.getCurrentLocation(tE);

				/* paint overlays*/
				var maxSize = 0;
				for ( var i = 0; i < self.overlays.length; i++) {
					var o = self.overlays[i];
					if (o.isVisible()) maxSize = Math.max(maxSize, o.computeMaxSize(self.connector));
				}

				var dim = this.connector.compute(sAnchorP, tAnchorP, 
				this.endpoints[sIdx], this.endpoints[tIdx],
				this.endpoints[sIdx].anchor, this.endpoints[tIdx].anchor, 
				self.paintStyleInUse.lineWidth, maxSize,
				sourceInfo,
				targetInfo);
				
				self.connector.paint(dim, self.paintStyleInUse);

				/* paint overlays*/
				for ( var i = 0; i < self.overlays.length; i++) {
					var o = self.overlays[i];
					if (o.isVisible) self.overlayPlacements[i] = o.draw(self.connector, self.paintStyleInUse, dim);
				}
			};			

			/*
			 * Function: repaint
			 * Repaints the Connection.
			 */
			this.repaint = function(params) {
				params = params || {};
                var recalc = !(params.recalc === false);
				this.paint({ elId : this.sourceId, recalc : recalc, timestamp:params.timestamp });
			};			
			
		};
		
// ENDPOINT HELPER FUNCTIONS
		var _makeConnectionDragHandler = function(placeholder) {
            var stopped = false;
			return {

				drag : function() {
                	if (stopped) {
                		stopped = false;
	                	return true;
	                }
					var _ui = jsPlumb.CurrentLibrary.getUIPosition(arguments),
					el = placeholder.element;
                	if (el) {
				    	jsPlumb.CurrentLibrary.setOffset(el, _ui);
				    	_draw(_getElementObject(el), _ui);
                	}
                },
                stopDrag : function() {
                    stopped = true;
                }
			};
		};		
		
		var _makeFloatingEndpoint = function(paintStyle, referenceAnchor, endpoint, referenceCanvas, sourceElement) {			
			var floatingAnchor = new FloatingAnchor( { reference : referenceAnchor, referenceCanvas : referenceCanvas });

            //setting the scope here should not be the way to fix that mootools issue.  it should be fixed by not
            // adding the floating endpoint as a droppable.  that makes more sense anyway!
            
			return _newEndpoint({ paintStyle : paintStyle, endpoint : endpoint, anchor : floatingAnchor, source : sourceElement, scope:"__floating" });
		};
		
		/**
		 * creates a placeholder div for dragging purposes, adds it to the DOM, and pre-computes its offset. then returns
		 * both the element id and a selector for the element.
		 */
		var _makeDraggablePlaceholder = function(placeholder, parent) {
			var n = document.createElement("div");
			n.style.position = "absolute";
			var placeholderDragElement = _getElementObject(n);
			_appendElement(n, parent);
			var id = _getId(placeholderDragElement);
			_updateOffset( { elId : id });
			// create and assign an id, and initialize the offset.
			placeholder.id = id;
			placeholder.element = placeholderDragElement;
		};

		/*
		 * Class: Endpoint 
		 * 
		 * Models an endpoint. Can have 1 to 'maxConnections' Connections emanating from it (set maxConnections to -1 
		 * to allow unlimited).  Typically, if you use 'jsPlumb.connect' to programmatically connect two elements, you won't
		 * actually deal with the underlying Endpoint objects.  But if you wish to support drag and drop Connections, one of the ways you
		 * do so is by creating and registering Endpoints using 'jsPlumb.addEndpoint', and marking these Endpoints as 'source' and/or
		 * 'target' Endpoints for Connections.  
		 * 
		 * 
		 */

		/*
		 * Function: Endpoint 
		 * 
		 * Endpoint constructor.
		 * 
		 * Parameters: 
		 * anchor - definition of the Anchor for the endpoint.  You can include one or more Anchor definitions here; if you include more than one, jsPlumb creates a 'dynamic' Anchor, ie. an Anchor which changes position relative to the other elements in a Connection.  Each Anchor definition can be either a string nominating one of the basic Anchors provided by jsPlumb (eg. "TopCenter"), or a four element array that designates the Anchor's location and orientation (eg, and this is equivalent to TopCenter, [ 0.5, 0, 0, -1 ]).  To provide more than one Anchor definition just put them all in an array. You can mix string definitions with array definitions.
		 * endpoint - optional Endpoint definition. This takes the form of either a string nominating one of the basic Endpoints provided by jsPlumb (eg. "Rectangle"), or an array containing [name,params] for those cases where you don't wish to use the default values, eg. [ "Rectangle", { width:5, height:10 } ].
		 * enabled - optional, defaults to true. Indicates whether or not the Endpoint should be enabled for mouse events (drag/drop).
		 * paintStyle - endpoint style, a js object. may be null. 
		 * hoverPaintStyle - style to use when the mouse is hovering over the Endpoint. A js object. may be null; defaults to null. 
		 * source - element the Endpoint is attached to, of type String (an element id) or element selector. Required.
		 * canvas - canvas element to use. may be, and most often is, null.
		 * container - optional id or selector instructing jsPlumb where to attach the element it creates for this endpoint.  you should read the documentation for a full discussion of this.
		 * connections - optional list of Connections to configure the Endpoint with. 
		 * isSource - boolean. indicates the endpoint can act as a source of new connections. Optional; defaults to false.
		 * maxConnections - integer; defaults to 1.  a value of -1 means no upper limit. 
		 * dragOptions - if isSource is set to true, you can supply arguments for the underlying library's drag method. Optional; defaults to null. 
		 * connectorStyle - if isSource is set to true, this is the paint style for Connections from this Endpoint. Optional; defaults to null.
		 * connectorHoverStyle - if isSource is set to true, this is the hover paint style for Connections from this Endpoint. Optional; defaults to null.
		 * connector - optional Connector type to use.  Like 'endpoint', this may be either a single string nominating a known Connector type (eg. "Bezier", "Straight"), or an array containing [name, params], eg. [ "Bezier", { curviness:160 } ].
		 * connectorOverlays - optional array of Overlay definitions that will be applied to any Connection from this Endpoint. 
		 * connectionsDetachable - optional, defaults to true. Sets whether connections to/from this Endpoint should be detachable or not.
		 * isTarget - boolean. indicates the endpoint can act as a target of new connections. Optional; defaults to false.
		 * dropOptions - if isTarget is set to true, you can supply arguments for the underlying library's drop method with this parameter. Optional; defaults to null. 
		 * reattach - optional boolean that determines whether or not the Connections reattach after they have been dragged off an Endpoint and left floating. defaults to false: Connections dropped in this way will just be deleted.
		 * parameters - Optional JS object containing parameters to set on the Endpoint. These parameters are then available via the getParameter method.  When a connection is made involving this Endpoint, the parameters from this Endpoint are copied into that Connection. Source Endpoint parameters override target Endpoint parameters if they both have a parameter with the same name.
		 */
		var Endpoint = function(params) {
			var self = this;
			self.idPrefix = "_jsplumb_e_";			
			self.defaultLabelLocation = [ 0.5, 0.5 ];
			self.defaultOverlayKeys = ["Overlays", "EndpointOverlays"];
			this.parent = params.parent;
			overlayCapableJsPlumbUIComponent.apply(this, arguments);
			params = params || {};

// ***************************** PLACEHOLDERS FOR NATURAL DOCS *************************************************
			/*
			 * Function: bind
			 * Bind to an event on the Endpoint.  
			 * 
			 * Parameters:
			 * 	event - the event to bind.  Available events on an Endpoint are:
			 *         - *click*						:	notification that a Endpoint was clicked.  
			 *         - *dblclick*						:	notification that a Endpoint was double clicked.
			 *         - *mouseenter*					:	notification that the mouse is over a Endpoint. 
			 *         - *mouseexit*					:	notification that the mouse exited a Endpoint.
			 * 		   - *contextmenu*                  :   notification that the user right-clicked on the Endpoint.
			 *         
			 *  callback - function to callback. This function will be passed the Endpoint that caused the event, and also the original event.    
			 */
			
			/*
		     * Function: setPaintStyle
		     * Sets the Endpoint's paint style and then repaints the Endpoint.
		     * 
		     * Parameters:
		     * 	style - Style to use.
		     */

		     /*
		     * Function: getPaintStyle
		     * Gets the Endpoint's paint style. This is not necessarily the paint style in use at the time;
		     * this is the paint style for the Endpoint when the mouse it not hovering over it.
		     */
			
			/*
		     * Function: setHoverPaintStyle
		     * Sets the paint style to use when the mouse is hovering over the Endpoint. This is null by default.
		     * The hover paint style is applied as extensions to the paintStyle; it does not entirely replace
		     * it.  This is because people will most likely want to change just one thing when hovering, say the
		     * color for example, but leave the rest of the appearance the same.
		     * 
		     * Parameters:
		     * 	style - Style to use when the mouse is hovering.
		     *  doNotRepaint - if true, the Endpoint will not be repainted.  useful when setting things up initially.
		     */
			
			/*
		     * Function: setHover
		     * Sets/unsets the hover state of this Endpoint.
		     * 
		     * Parameters:
		     * 	hover - hover state boolean
		     * 	ignoreAttachedElements - if true, does not notify any attached elements of the change in hover state.  used mostly to avoid infinite loops.
		     */

		     /*
		     * Function: getParameter
		     * Gets the named parameter; returns null if no parameter with that name is set. Parameters may have been set on the Endpoint in the 'addEndpoint' call, or they may have been set with the setParameter function.
		     *
		     * Parameters:
		     *   key - Parameter name.
		     */

		     /*
		     * Function: setParameter
		     * Sets the named parameter to the given value.
		     *
		     * Parameters:
		     *   key - Parameter name.
		     *   value - Parameter value.
		     */
			
// ***************************** END OF PLACEHOLDERS FOR NATURAL DOCS *************************************************
			
			var visible = true, __enabled = !(params.enabled === false);
			/*
				Function: isVisible
				Returns whether or not the Endpoint is currently visible.
			*/
			this.isVisible = function() { return visible; };
			/*
				Function: setVisible
				Sets whether or not the Endpoint is currently visible.

				Parameters:
					visible - whether or not the Endpoint should be visible.
					doNotChangeConnections - Instructs jsPlumb to not pass the visible state on to any attached Connections. defaults to false.
					doNotNotifyOtherEndpoint - Instructs jsPlumb to not pass the visible state on to Endpoints at the other end of any attached Connections. defaults to false. 
			*/
			this.setVisible = function(v, doNotChangeConnections, doNotNotifyOtherEndpoint) {
				visible = v;
				if (self.canvas) self.canvas.style.display = v ? "block" : "none";
				self[v ? "showOverlays" : "hideOverlays"]();
				if (!doNotChangeConnections) {
					for (var i = 0; i < self.connections.length; i++) {
						self.connections[i].setVisible(v);
						if (!doNotNotifyOtherEndpoint) {
							var oIdx = self === self.connections[i].endpoints[0] ? 1 : 0;
							// only change the other endpoint if this is its only connection.
							if (self.connections[i].endpoints[oIdx].connections.length == 1) self.connections[i].endpoints[oIdx].setVisible(v, true, true);
						}
					}
				}
			};			

			/*
				Function: isEnabled
				Returns whether or not the Endpoint is enabled for drag/drop connections.
			*/
			this.isEnabled = function() { return __enabled; };

			/*
				Function: setEnabled
				Sets whether or not the Endpoint is enabled for drag/drop connections.
			*/
			this.setEnabled = function(e) { __enabled = e; };

			var _element = params.source,  _uuid = params.uuid, floatingEndpoint = null,  inPlaceCopy = null;
			if (_uuid) endpointsByUUID[_uuid] = self;
			var _elementId = _getAttribute(_element, "id");
			this.elementId = _elementId;
			this.element = _element;
			
			var _connectionCost = params.connectionCost;
			this.getConnectionCost = function() { return _connectionCost; };
			this.setConnectionCost = function(c) {
				_connectionCost = c; 
			};
			
			var _connectionsBidirectional = params.connectionsBidirectional === false ? false : true;
			this.areConnectionsBidirectional = function() { return _connectionsBidirectional; };
			this.setConnectionsBidirectional = function(b) { _connectionsBidirectional = b; };
			
			self.anchor = params.anchor ? _currentInstance.makeAnchor(params.anchor, _elementId, _currentInstance) : params.anchors ? _currentInstance.makeAnchor(params.anchors, _elementId, _currentInstance) : _currentInstance.makeAnchor("TopCenter", _elementId, _currentInstance);
				
			// ANCHOR MANAGER
			if (!params._transient) // in place copies, for example, are transient.  they will never need to be retrieved during a paint cycle, because they dont move, and then they are deleted.
				_currentInstance.anchorManager.add(self, _elementId);

			var _endpoint = null, originalEndpoint = null;
			this.setEndpoint = function(ep) {
				var endpointArgs = {
	                _jsPlumb:self._jsPlumb,
	                parent:params.parent,
	                container:params.container,
	                tooltip:params.tooltip,
	                connectorTooltip:params.connectorTooltip,
	                endpoint:self
	            };
				if (_isString(ep)) 
					_endpoint = new jsPlumb.Endpoints[renderMode][ep](endpointArgs);
				else if (_isArray(ep)) {
					endpointArgs = jsPlumb.extend(ep[1], endpointArgs);
					_endpoint = new jsPlumb.Endpoints[renderMode][ep[0]](endpointArgs);
				}
				else {
					_endpoint = ep.clone();
				}

				// assign a clone function using a copy of endpointArgs. this is used when a drag starts: the endpoint that was dragged is cloned,
				// and the clone is left in its place while the original one goes off on a magical journey. 
				// the copy is to get around a closure problem, in which endpointArgs ends up getting shared by
				// the whole world.
				var argsForClone = jsPlumb.extend({}, endpointArgs);						
				_endpoint.clone = function() {
					var o = new Object();
					_endpoint.constructor.apply(o, [argsForClone]);
					return o;
				};

				self.endpoint = _endpoint;
				self.type = self.endpoint.type;
			};
			 
			this.setEndpoint(params.endpoint || _currentInstance.Defaults.Endpoint || jsPlumb.Defaults.Endpoint || "Dot");							
			originalEndpoint = _endpoint;

			// override setHover to pass it down to the underlying endpoint
			var _sh = self.setHover;
			self.setHover = function() {
				self.endpoint.setHover.apply(self.endpoint, arguments);
				_sh.apply(self, arguments);
			};
            // endpoint delegates to first connection for hover, if there is one.
            var internalHover = function(state) {
              if (self.connections.length > 0)
                self.connections[0].setHover(state, false);
              else
                self.setHover(state);
            };
			
			// bind listeners from endpoint to self, with the internal hover function defined above.
            _bindListeners(self.endpoint, self, internalHover);
			
			this.setPaintStyle(params.paintStyle || 
							   params.style || 
							   _currentInstance.Defaults.EndpointStyle || 
							   jsPlumb.Defaults.EndpointStyle, true);
			this.setHoverPaintStyle(params.hoverPaintStyle || 
									_currentInstance.Defaults.EndpointHoverStyle || 
									jsPlumb.Defaults.EndpointHoverStyle, true);
			this.paintStyleInUse = this.getPaintStyle();
			var originalPaintStyle = this.getPaintStyle();
			this.connectorStyle = params.connectorStyle;
			this.connectorHoverStyle = params.connectorHoverStyle;
			this.connectorOverlays = params.connectorOverlays;
			this.connector = params.connector;
			this.connectorTooltip = params.connectorTooltip;			
			this.isSource = params.isSource || false;
			this.isTarget = params.isTarget || false;
			
			var _maxConnections = params.maxConnections || _currentInstance.Defaults.MaxConnections; // maximum number of connections this endpoint can be the source of.
						
			this.getAttachedElements = function() {
				return self.connections;
			};
			
			/*
			 * Property: canvas
			 * The Endpoint's Canvas.
			 */
			this.canvas = this.endpoint.canvas;
			/*
			 * Property: connections
			 * List of Connections this Endpoint is attached to.
			 */
			this.connections = params.connections || [];
			/*
			 * Property: scope
			 * Scope descriptor for this Endpoint.
			 */
			this.scope = params.scope || DEFAULT_SCOPE;
			this.timestamp = null;
			self.isReattach = params.reattach || false;
            self.connectionsDetachable = _currentInstance.Defaults.ConnectionsDetachable;
            if (params.connectionsDetachable === false || params.detachable === false)
                self.connectionsDetachable = false;
			var dragAllowedWhenFull = params.dragAllowedWhenFull || true;

			this.computeAnchor = function(params) {
				return self.anchor.compute(params);
			};
			/*
			 * Function: addConnection
			 *   Adds a Connection to this Endpoint.
			 *   
			 * Parameters:
			 *   connection - the Connection to add.
			 */
			this.addConnection = function(connection) {
				self.connections.push(connection);
			};			
			/*
			 * Function: detach
			 *   Detaches the given Connection from this Endpoint.
			 *   
			 * Parameters:
			 *   connection - the Connection to detach.
			 *   ignoreTarget - optional; tells the Endpoint to not notify the Connection target that the Connection was detached.  The default behaviour is to notify the target.
			 */
			this.detach = function(connection, ignoreTarget, forceDetach, fireEvent, originalEvent) {
				var idx = _findWithFunction(self.connections, function(c) { return c.id == connection.id}), 
					actuallyDetached = false;
                fireEvent = (fireEvent !== false);
				if (idx >= 0) {		
					// 1. does the connection have a before detach (note this also checks jsPlumb's bound
					// detach handlers; but then Endpoint's check will, too, hmm.)
					if (forceDetach || connection._forceDetach || connection.isDetachable() || connection.isDetachAllowed(connection)) {
						// get the target endpoint
						var t = connection.endpoints[0] == self ? connection.endpoints[1] : connection.endpoints[0];
						// it would be nice to check with both endpoints that it is ok to detach. but 
						// for this we'll have to get a bit fancier: right now if you use the same beforeDetach
						// interceptor for two endpoints (which is kind of common, because it's part of the
						// endpoint definition), then it gets fired twice.  so in fact we need to loop through
						// each beforeDetach and see if it returns false, at which point we exit.  but if it
						// returns true, we have to check the next one.  however we need to track which ones
						// have already been run, and not run them again.
						if (forceDetach || connection._forceDetach || (self.isDetachAllowed(connection) /*&& t.isDetachAllowed(connection)*/)) {
					
							self.connections.splice(idx, 1);										
					
							// this avoids a circular loop
							if (!ignoreTarget) {
							
								t.detach(connection, true, forceDetach);
								// check connection to see if we want to delete the endpoints associated with it.
								// we only detach those that have just this connection; this scenario is most
								// likely if we got to this bit of code because it is set by the methods that
								// create their own endpoints, like .connect or .makeTarget. the user is
								// not likely to have interacted with those endpoints.
								if (connection.endpointsToDeleteOnDetach){
									for (var i = 0; i < connection.endpointsToDeleteOnDetach.length; i++) {
										var cde = connection.endpointsToDeleteOnDetach[i];
										if (cde && cde.connections.length == 0) 
											_currentInstance.deleteEndpoint(cde);							
									}
								}
							}
							_removeElements(connection.connector.getDisplayElements(), connection.parent);
							_removeWithFunction(connectionsByScope[connection.scope], function(c) {
								return c.id == connection.id;
							});
							actuallyDetached = true;
                            var doFireEvent = (!ignoreTarget && fireEvent)
							fireDetachEvent(connection, doFireEvent, originalEvent);
						}
					}
				}
				return actuallyDetached;
			};			

			/*
			 * Function: detachAll
			 *   Detaches all Connections this Endpoint has.
			 *
			 * Parameters:
			 *  fireEvent   -   whether or not to fire the detach event.  defaults to false.
			 */
			this.detachAll = function(fireEvent, originalEvent) {
				while (self.connections.length > 0) {
					self.detach(self.connections[0], false, true, fireEvent, originalEvent);
				}
			};
			/*
			 * Function: detachFrom
			 *   Removes any connections from this Endpoint that are connected to the given target endpoint.
			 *   
			 * Parameters:
			 *   targetEndpoint     - Endpoint from which to detach all Connections from this Endpoint.
			 *   fireEvent          - whether or not to fire the detach event. defaults to false.
			 */
			this.detachFrom = function(targetEndpoint, fireEvent, originalEvent) {
				var c = [];
				for ( var i = 0; i < self.connections.length; i++) {
					if (self.connections[i].endpoints[1] == targetEndpoint
							|| self.connections[i].endpoints[0] == targetEndpoint) {
						c.push(self.connections[i]);
					}
				}
				for ( var i = 0; i < c.length; i++) {
					if (self.detach(c[i], false, true, fireEvent, originalEvent))
						c[i].setHover(false, false);					
				}
			};			
			/*
			 * Function: detachFromConnection
			 *   Detach this Endpoint from the Connection, but leave the Connection alive. Used when dragging.
			 *   
			 * Parameters:
			 *   connection - Connection to detach from.
			 */
			this.detachFromConnection = function(connection) {
				var idx =  _findWithFunction(self.connections, function(c) { return c.id == connection.id});
				if (idx >= 0) {
					self.connections.splice(idx, 1);
				}
			};

			/*
			 * Function: getElement
			 *   Returns the DOM element this Endpoint is attached to.
			 */
			this.getElement = function() {
				return _element;
			};		
			
			/*
			 * Function: setElement
			 * Sets the DOM element this Endpoint is attached to.  
			 */
			this.setElement = function(el) {

				// TODO possibly have this object take charge of moving the UI components into the appropriate
				// parent.  this is used only by makeSource right now, and that function takes care of
				// moving the UI bits and pieces.  however it would s			
				var parentId = _getId(el);
				// remove the endpoint from the list for the current endpoint's element
				_removeWithFunction(endpointsByElement[self.elementId], function(e) {
					return e.id == self.id;
				});
				_element = _getElementObject(el);
				_elementId = _getId(_element);
				self.elementId = _elementId;
				// need to get the new parent now
				var newParentElement = _getParentFromParams({source:parentId}),
				curParent = jpcl.getParent(self.canvas);
				jpcl.removeElement(self.canvas, curParent);
				jpcl.appendElement(self.canvas, newParentElement);								
				
				// now move connection(s)...i would expect there to be only one but we will iterate.
				for (var i = 0; i < self.connections.length; i++) {
					self.connections[i].moveParent(newParentElement);
					self.connections[i].sourceId = _elementId;
					self.connections[i].source = _element;					
				}	
				_addToList(endpointsByElement, parentId, self);
				//_currentInstance.repaint(parentId);			
			
			};

			/*
			 * Function: getUuid
			 *   Returns the UUID for this Endpoint, if there is one. Otherwise returns null.
			 */
			this.getUuid = function() {
				return _uuid;
			};
			/**
			 * private but must be exposed.
			 */
			this.makeInPlaceCopy = function() {
				var loc = self.anchor.getCurrentLocation(self),
					o = self.anchor.getOrientation(self),
					inPlaceAnchor = {
						compute:function() { return [ loc[0], loc[1] ]},
						getCurrentLocation : function() { return [ loc[0], loc[1] ]},
						getOrientation:function() { return o; }
					};

				return _newEndpoint( { 
					anchor : inPlaceAnchor, 
					source : _element, 
					paintStyle : this.getPaintStyle(), 
					endpoint : _endpoint,
					_transient:true,
                    scope:self.scope
				});
			};
			/*
			 * Function: isConnectedTo
			 *   Returns whether or not this endpoint is connected to the given Endpoint.
			 *   
			 * Parameters:
			 *   endpoint - Endpoint to test.
			 */
			this.isConnectedTo = function(endpoint) {
				var found = false;
				if (endpoint) {
					for ( var i = 0; i < self.connections.length; i++) {
						if (self.connections[i].endpoints[1] == endpoint) {
							found = true;
							break;
						}
					}
				}
				return found;
			};

			/**
			 * private but needs to be exposed.
			 */
			this.isFloating = function() {
				return floatingEndpoint != null;
			};
			
			/**
			 * returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.
			 */
			this.connectorSelector = function() {
				var candidate = self.connections[0];
				if (self.isTarget && candidate) return candidate;
				else {
					return (self.connections.length < _maxConnections) || _maxConnections == -1 ? null : candidate;
				}
			};

			/*
			 * Function: isFull
			 *   Returns whether or not the Endpoint can accept any more Connections.
			 */
			this.isFull = function() {
				return !(self.isFloating() || _maxConnections < 1 || self.connections.length < _maxConnections);				
			};
			/*
			 * Function: setDragAllowedWhenFull
			 *   Sets whether or not connections can be dragged from this Endpoint once it is full. You would use this in a UI in 
			 *   which you're going to provide some other way of breaking connections, if you need to break them at all. This property 
			 *   is by default true; use it in conjunction with the 'reattach' option on a connect call.
			 *   
			 * Parameters:
			 *   allowed - whether drag is allowed or not when the Endpoint is full.
			 */
			this.setDragAllowedWhenFull = function(allowed) {
				dragAllowedWhenFull = allowed;
			};
			/*
			 * Function: setStyle
			 *   Sets the paint style of the Endpoint.  This is a JS object of the same form you supply to a jsPlumb.addEndpoint or jsPlumb.connect call.
			 *   TODO move setStyle into EventGenerator, remove it from here. is Connection's method currently setPaintStyle ? wire that one up to
			 *   setStyle and deprecate it if so.
			 *   
			 * Parameters:
			 *   style - Style object to set, for example {fillStyle:"blue"}.
			 *   
			 *  @deprecated use setPaintStyle instead.
			 */
			this.setStyle = self.setPaintStyle;

			/**
			 * a deep equals check. everything must match, including the anchor,
			 * styles, everything. TODO: finish Endpoint.equals
			 */
			this.equals = function(endpoint) {
				return this.anchor.equals(endpoint.anchor);
			};
			
			// a helper function that tries to find a connection to the given element, and returns it if so. if elementWithPrecedence is null,
			// or no connection to it is found, we return the first connection in our list.
			var findConnectionToUseForDynamicAnchor = function(elementWithPrecedence) {
				var idx = 0;
				if (elementWithPrecedence != null) {
					for (var i = 0; i < self.connections.length; i++) {
						if (self.connections[i].sourceId == elementWithPrecedence || self.connections[i].targetId == elementWithPrecedence) {
							idx = i;
							break;
						}
					}
				}
				
				return self.connections[idx];
			};

			/*
			 * Function: paint
			 *   Paints the Endpoint, recalculating offset and anchor positions if necessary. This does NOT paint
			 *   any of the Endpoint's connections.
			 *   
			 * Parameters:
			 *   timestamp - optional timestamp advising the Endpoint of the current paint time; if it has painted already once for this timestamp, it will not paint again.
			 *   canvas - optional Canvas to paint on.  Only used internally by jsPlumb in certain obscure situations.
			 *   connectorPaintStyle - paint style of the Connector attached to this Endpoint. Used to get a fillStyle if nothing else was supplied.
			 */
			this.paint = function(params) {
				params = params || {};
				var timestamp = params.timestamp,
                    recalc = !(params.recalc === false);
				if (!timestamp || self.timestamp !== timestamp) {			
					_updateOffset({ elId:_elementId, timestamp:timestamp, recalc:recalc });
					var xy = params.offset || offsets[_elementId];
					if(xy) {
						var ap = params.anchorPoint,connectorPaintStyle = params.connectorPaintStyle;
						if (ap == null) {
							var wh = params.dimensions || sizes[_elementId];
							if (xy == null || wh == null) {
								_updateOffset( { elId : _elementId, timestamp : timestamp });
								xy = offsets[_elementId];
								wh = sizes[_elementId];
							}
							var anchorParams = { xy : [ xy.left, xy.top ], wh : wh, element : self, timestamp : timestamp };
							if (recalc && self.anchor.isDynamic && self.connections.length > 0) {
								var c = findConnectionToUseForDynamicAnchor(params.elementWithPrecedence),
								oIdx = c.endpoints[0] == self ? 1 : 0,
								oId = oIdx == 0 ? c.sourceId : c.targetId,
								oOffset = offsets[oId], oWH = sizes[oId];
								anchorParams.txy = [ oOffset.left, oOffset.top ];
								anchorParams.twh = oWH;
								anchorParams.tElement = c.endpoints[oIdx];
							}
							ap = self.anchor.compute(anchorParams);
						}
											
						// switched _endpoint to self here; continuous anchors, for instance, look for the
						// endpoint's id, but here "_endpoint" is the renderer, not the actual endpoint.
						// TODO need to verify this does not break anything.
						//var d = _endpoint.compute(ap, self.anchor.getOrientation(_endpoint), self.paintStyleInUse, connectorPaintStyle || self.paintStyleInUse);
						var d = _endpoint.compute(ap, self.anchor.getOrientation(self), self.paintStyleInUse, connectorPaintStyle || self.paintStyleInUse);
						_endpoint.paint(d, self.paintStyleInUse, self.anchor);					
						self.timestamp = timestamp;

						/* paint overlays*/
						for ( var i = 0; i < self.overlays.length; i++) {
							var o = self.overlays[i];
							if (o.isVisible) self.overlayPlacements[i] = o.draw(self.endpoint, self.paintStyleInUse, d);
						}
					}
				}
			};

            this.repaint = this.paint;

			/**
			 * @deprecated
			 */
			this.removeConnection = this.detach; // backwards compatibility

			// is this a connection source? we make it draggable and have the
			// drag listener maintain a connection with a floating endpoint.
			if (jsPlumb.CurrentLibrary.isDragSupported(_element)) {
				var placeholderInfo = { id:null, element:null },
                    jpc = null,
                    existingJpc = false,
                    existingJpcParams = null,
                    _dragHandler = _makeConnectionDragHandler(placeholderInfo);

				var start = function() {	
				// drag might have started on an endpoint that is not actually a source, but which has
				// one or more connections.
					jpc = self.connectorSelector();
                    var _continue = true;
                    // if not enabled, return
                    if (!self.isEnabled()) _continue = false;
					// if no connection and we're not a source, return.
					if (jpc == null && !params.isSource) _continue = false;
                    // otherwise if we're full and not allowed to drag, also return false.
                    if (params.isSource && self.isFull() && !dragAllowedWhenFull) _continue = false;
                    // if the connection was setup as not detachable or one of its endpoints
                    // was setup as connectionsDetachable = false, or Defaults.ConnectionsDetachable
                    // is set to false...
                    if (jpc != null && !jpc.isDetachable()) _continue = false;

                    if (_continue === false) {
                        // this is for mootools and yui. returning false from this causes jquery to stop drag.
                        // the events are wrapped in both mootools and yui anyway, but i don't think returning
                        // false from the start callback would stop a drag.
                        if (jsPlumb.CurrentLibrary.stopDrag) jsPlumb.CurrentLibrary.stopDrag();
                        _dragHandler.stopDrag();
                        return false;
                    }

					// if we're not full but there was a connection, make it null. we'll create a new one.
					if (jpc && !self.isFull() && params.isSource) jpc = null;

					_updateOffset( { elId : _elementId });
					inPlaceCopy = self.makeInPlaceCopy();
					inPlaceCopy.paint();																
					
					_makeDraggablePlaceholder(placeholderInfo, self.parent);
					
					// set the offset of this div to be where 'inPlaceCopy' is, to start with.
					// TODO merge this code with the code in both Anchor and FloatingAnchor, because it
					// does the same stuff.
					var ipcoel = _getElementObject(inPlaceCopy.canvas),
					    ipco = jsPlumb.CurrentLibrary.getOffset(ipcoel),
					    po = adjustForParentOffsetAndScroll([ipco.left, ipco.top], inPlaceCopy.canvas);
					jsPlumb.CurrentLibrary.setOffset(placeholderInfo.element, {left:po[0], top:po[1]});															
					
					// when using makeSource and a parent, we first draw the source anchor on the source element, then
					// move it to the parent.  note that this happens after drawing the placeholder for the
					// first time.
					if (self.parentAnchor) self.anchor = _currentInstance.makeAnchor(self.parentAnchor, self.elementId, _currentInstance);

					// store the id of the dragging div and the source element. the drop function will pick these up.					
					_setAttribute(_getElementObject(self.canvas), "dragId", placeholderInfo.id);
					_setAttribute(_getElementObject(self.canvas), "elId", _elementId);

					// create a floating endpoint.
					// here we test to see if a dragProxy was specified in this endpoint's constructor params, and
					// if so, we create that endpoint instead of cloning ourselves.
					if (params.proxy) {
				/*		var floatingAnchor = new FloatingAnchor( { reference : self.anchor, referenceCanvas : self.canvas });

						floatingEndpoint = _newEndpoint({ 
							paintStyle : params.proxy.paintStyle,
							endpoint : params.proxy.endpoint,
							anchor : floatingAnchor, 
							source : placeholderInfo.element, 
							scope:"__floating" 
						});		
						
						//$(self.canvas).hide();									
						*/
						self.setPaintStyle(params.proxy.paintStyle);
						// if we do this, we have to cleanup the old one. like just remove its display parts												
						//self.setEndpoint(params.proxy.endpoint);

					}
				//	else {
						floatingEndpoint = _makeFloatingEndpoint(self.getPaintStyle(), self.anchor, _endpoint, self.canvas, placeholderInfo.element);
				//	}
					
					if (jpc == null) {                                                                                                                                                         
						self.anchor.locked = true;
                        self.setHover(false, false);
                        // TODO the hover call above does not reset any target endpoint's hover
                        // states.
						// create a connection. one end is this endpoint, the other is a floating endpoint.
						jpc = _newConnection({
							sourceEndpoint : self,
							targetEndpoint : floatingEndpoint,
							source : self.endpointWillMoveTo || _getElementObject(_element),  // for makeSource with parent option.  ensure source element is represented correctly.
							target : placeholderInfo.element,
							anchors : [ self.anchor, floatingEndpoint.anchor ],
							paintStyle : params.connectorStyle, // this can be null. Connection will use the default.
							hoverPaintStyle:params.connectorHoverStyle,
							connector : params.connector, // this can also be null. Connection will use the default.
							overlays : params.connectorOverlays 
						});

					} else {
						existingJpc = true;
						jpc.connector.setHover(false, false);
						// if existing connection, allow to be dropped back on the source endpoint (issue 51).
						_initDropTarget(_getElementObject(inPlaceCopy.canvas), false, true);
						// new anchor idx
						var anchorIdx = jpc.endpoints[0].id == self.id ? 0 : 1;
						jpc.floatingAnchorIndex = anchorIdx;					// save our anchor index as the connection's floating index.						
						self.detachFromConnection(jpc);							// detach from the connection while dragging is occurring.
						
						// store the original scope (issue 57)
						var c = _getElementObject(self.canvas),
						    dragScope = jsPlumb.CurrentLibrary.getDragScope(c);
						_setAttribute(c, "originalScope", dragScope);
						// now we want to get this endpoint's DROP scope, and set it for now: we can only be dropped on drop zones
						// that have our drop scope (issue 57).
						var dropScope = jsPlumb.CurrentLibrary.getDropScope(c);
						jsPlumb.CurrentLibrary.setDragScope(c, dropScope);
				
						// now we replace ourselves with the temporary div we created above:
						if (anchorIdx == 0) {
							existingJpcParams = [ jpc.source, jpc.sourceId, i, dragScope ];
							jpc.source = placeholderInfo.element;
							jpc.sourceId = placeholderInfo.id;
						} else {
							existingJpcParams = [ jpc.target, jpc.targetId, i, dragScope ];
							jpc.target = placeholderInfo.element;
							jpc.targetId = placeholderInfo.id;
						}

						// lock the other endpoint; if it is dynamic it will not move while the drag is occurring.
						jpc.endpoints[anchorIdx == 0 ? 1 : 0].anchor.locked = true;
						// store the original endpoint and assign the new floating endpoint for the drag.
						jpc.suspendedEndpoint = jpc.endpoints[anchorIdx];
                        jpc.suspendedEndpoint.setHover(false);
						jpc.endpoints[anchorIdx] = floatingEndpoint;

						// fire an event that informs that a connection is being dragged
						fireConnectionDraggingEvent(jpc);

					}
					// register it and register connection on it.
					floatingConnections[placeholderInfo.id] = jpc;
					floatingEndpoint.addConnection(jpc);
					// only register for the target endpoint; we will not be dragging the source at any time
					// before this connection is either discarded or made into a permanent connection.
					_addToList(endpointsByElement, placeholderInfo.id, floatingEndpoint);
					// tell jsplumb about it
					_currentInstance.currentlyDragging = true;
				};

				var jpcl = jsPlumb.CurrentLibrary,
				    dragOptions = params.dragOptions || {},
				    defaultOpts = jsPlumb.extend( {}, jpcl.defaultDragOptions),
				    startEvent = jpcl.dragEvents["start"],
				    stopEvent = jpcl.dragEvents["stop"],
				    dragEvent = jpcl.dragEvents["drag"];
				
				dragOptions = jsPlumb.extend(defaultOpts, dragOptions);
				dragOptions.scope = dragOptions.scope || self.scope;
				dragOptions[startEvent] = _wrap(dragOptions[startEvent], start);
				// extracted drag handler function so can be used by makeSource
				dragOptions[dragEvent] = _wrap(dragOptions[dragEvent], _dragHandler.drag);
				dragOptions[stopEvent] = _wrap(dragOptions[stopEvent],
					function() {
						var originalEvent = jpcl.getDropEvent(arguments);
						_currentInstance.currentlyDragging = false;						
						_removeWithFunction(endpointsByElement[placeholderInfo.id], function(e) {
							return e.id == floatingEndpoint.id;
						});
						_removeElements( [ placeholderInfo.element[0], floatingEndpoint.canvas ], _element); // TODO: clean up the connection canvas (if the user aborted)
						_removeElement(inPlaceCopy.canvas, _element);
						_currentInstance.anchorManager.clearFor(placeholderInfo.id);						
						var idx = jpc.floatingAnchorIndex == null ? 1 : jpc.floatingAnchorIndex;
						jpc.endpoints[idx == 0 ? 1 : 0].anchor.locked = false;
						self.setPaintStyle(originalPaintStyle); // reset to original; may have been changed by drag proxy.
						if (jpc.endpoints[idx] == floatingEndpoint) {
							// if the connection was an existing one:
							if (existingJpc && jpc.suspendedEndpoint) {
								// fix for issue35, thanks Sylvain Gizard: when firing the detach event make sure the
								// floating endpoint has been replaced.
								if (idx == 0) {
									jpc.source = existingJpcParams[0];
									jpc.sourceId = existingJpcParams[1];
								} else {
									jpc.target = existingJpcParams[0];
									jpc.targetId = existingJpcParams[1];
								}
								
								// restore the original scope (issue 57)
								jsPlumb.CurrentLibrary.setDragScope(existingJpcParams[2], existingJpcParams[3]);
								jpc.endpoints[idx] = jpc.suspendedEndpoint;
								if (self.isReattach || jpc._forceDetach || !jpc.endpoints[idx == 0 ? 1 : 0].detach(jpc, false, false, true, originalEvent)) {									
									jpc.setHover(false);
									jpc.floatingAnchorIndex = null;
									jpc.suspendedEndpoint.addConnection(jpc);
									_currentInstance.repaint(existingJpcParams[1]);
								}
                                jpc._forceDetach = null;
							} else {
								// TODO this looks suspiciously kind of like an Endpoint.detach call too.
								// i wonder if this one should post an event though.  maybe this is good like this.
								_removeElements(jpc.connector.getDisplayElements(), self.parent);
								self.detachFromConnection(jpc);								
							}																
						}
						self.anchor.locked = false;												
						self.paint({recalc:false});
						jpc.setHover(false, false);

						fireConnectionDragStopEvent(jpc);

						jpc = null;						
						inPlaceCopy = null;							
						delete endpointsByElement[floatingEndpoint.elementId];
						floatingEndpoint.anchor = null;
                        floatingEndpoint = null;
						_currentInstance.currentlyDragging = false;


					});
				
				var i = _getElementObject(self.canvas);				
				jsPlumb.CurrentLibrary.initDraggable(i, dragOptions, true);
			}

			// pulled this out into a function so we can reuse it for the inPlaceCopy canvas; you can now drop detached connections
			// back onto the endpoint you detached it from.
			var _initDropTarget = function(canvas, forceInit, isTransient, endpoint) {
				if ((params.isTarget || forceInit) && jsPlumb.CurrentLibrary.isDropSupported(_element)) {
					var dropOptions = params.dropOptions || _currentInstance.Defaults.DropOptions || jsPlumb.Defaults.DropOptions;
					dropOptions = jsPlumb.extend( {}, dropOptions);
					dropOptions.scope = dropOptions.scope || self.scope;
					var dropEvent = jsPlumb.CurrentLibrary.dragEvents['drop'],
					    overEvent = jsPlumb.CurrentLibrary.dragEvents['over'],
					    outEvent = jsPlumb.CurrentLibrary.dragEvents['out'],
					drop = function() {

						var originalEvent = jsPlumb.CurrentLibrary.getDropEvent(arguments),
							draggable = _getElementObject(jsPlumb.CurrentLibrary.getDragObject(arguments)),
							id = _getAttribute(draggable, "dragId"),
							elId = _getAttribute(draggable, "elId"),						
							scope = _getAttribute(draggable, "originalScope"),
							jpc = floatingConnections[id];

						if (jpc != null) {
							var idx = jpc.floatingAnchorIndex == null ? 1 : jpc.floatingAnchorIndex, oidx = idx == 0 ? 1 : 0;
							
							// restore the original scope if necessary (issue 57)						
							if (scope) jsPlumb.CurrentLibrary.setDragScope(draggable, scope);							
							
							var endpointEnabled = endpoint != null ? endpoint.isEnabled() : true;

							if (!self.isFull() && !(idx == 0 && !self.isSource) && !(idx == 1 && !self.isTarget) && endpointEnabled) {
							
								var _doContinue = true;

	                            // the second check here is for the case that the user is dropping it back
	                            // where it came from.
								if (jpc.suspendedEndpoint && jpc.suspendedEndpoint.id != self.id) {
									if (idx == 0) {
										jpc.source = jpc.suspendedEndpoint.element;
										jpc.sourceId = jpc.suspendedEndpoint.elementId;
									} else {
										jpc.target = jpc.suspendedEndpoint.element;
										jpc.targetId = jpc.suspendedEndpoint.elementId;
									}

									if (!jpc.isDetachAllowed(jpc) || !jpc.endpoints[idx].isDetachAllowed(jpc) || !jpc.suspendedEndpoint.isDetachAllowed(jpc) || !_currentInstance.checkCondition("beforeDetach", jpc))
										_doContinue = false;								
								}
				
								// these have to be set before testing for beforeDrop.
								if (idx == 0) {
									jpc.source = self.element;
									jpc.sourceId = self.elementId;
								} else {
									jpc.target = self.element;
									jpc.targetId = self.elementId;
								}
																
								// now check beforeDrop.  this will be available only on Endpoints that are setup to
								// have a beforeDrop condition (although, secretly, under the hood all Endpoints and 
								// the Connection have them, because they are on jsPlumbUIComponent.  shhh!), because
								// it only makes sense to have it on a target endpoint.
								_doContinue = _doContinue && self.isDropAllowed(jpc.sourceId, jpc.targetId, jpc.scope, jpc, self);
														
								if (_doContinue) {
									// remove this jpc from the current endpoint
									jpc.endpoints[idx].detachFromConnection(jpc);
									if (jpc.suspendedEndpoint) jpc.suspendedEndpoint.detachFromConnection(jpc);
									jpc.endpoints[idx] = self;
									self.addConnection(jpc);
									
									// copy our parameters in to the connection:
									var params = self.getParameters();
									for (var aParam in params)
										jpc.setParameter(aParam, params[aParam]);

									if (!jpc.suspendedEndpoint) {  
										//_initDraggableIfNecessary(self.element, params.draggable, {});
										if (params.draggable)
											jsPlumb.CurrentLibrary.initDraggable(self.element, dragOptions, true);
									}
									else {
										var suspendedElement = jpc.suspendedEndpoint.getElement(), suspendedElementId = jpc.suspendedEndpoint.elementId;
										// fire a detach event
										fireDetachEvent({
											source : idx == 0 ? suspendedElement : jpc.source, 
											target : idx == 1 ? suspendedElement : jpc.target,
											sourceId : idx == 0 ? suspendedElementId : jpc.sourceId, 
											targetId : idx == 1 ? suspendedElementId : jpc.targetId,
											sourceEndpoint : idx == 0 ? jpc.suspendedEndpoint : jpc.endpoints[0], 
											targetEndpoint : idx == 1 ? jpc.suspendedEndpoint : jpc.endpoints[1],
											connection : jpc
										}, true, originalEvent);
									}

	                                // finalise will inform the anchor manager and also add to
	                                // connectionsByScope if necessary.
	                                _finaliseConnection(jpc, null, originalEvent);
								}
								else {
	                                // otherwise just put it back on the endpoint it was on before the drag.
									if (jpc.suspendedEndpoint) {
	                            //        self.detachFrom(jpc);
	                                    jpc.endpoints[idx] = jpc.suspendedEndpoint;
										jpc.setHover(false);
	                                    jpc._forceDetach = true;
	                                    if (idx == 0) {
									        jpc.source = jpc.suspendedEndpoint.element;
									        jpc.sourceId = jpc.suspendedEndpoint.elementId;
								        } else {
									        jpc.target = jpc.suspendedEndpoint.element;
									        jpc.targetId = jpc.suspendedEndpoint.elementId;;
								        }
									    jpc.suspendedEndpoint.addConnection(jpc);

	                                    jpc.endpoints[0].repaint();
	                                    jpc.repaint();
										_currentInstance.repaint(jpc.source.elementId);
	                                    jpc._forceDetach = false;
									}
								}

	                            jpc.floatingAnchorIndex = null;
							}
							_currentInstance.currentlyDragging = false;
							delete floatingConnections[id];						
						}
					};
					
					dropOptions[dropEvent] = _wrap(dropOptions[dropEvent], drop);
					dropOptions[overEvent] = _wrap(dropOptions[overEvent], function() {
						if (self.isTarget) {
							var draggable = jsPlumb.CurrentLibrary.getDragObject(arguments),
								id = _getAttribute( _getElementObject(draggable), "dragId"),
								jpc = floatingConnections[id];
							if (jpc != null) {
								var idx = jpc.floatingAnchorIndex == null ? 1 : jpc.floatingAnchorIndex;
								jpc.endpoints[idx].anchor.over(self.anchor);
							}
						}
					});	
					dropOptions[outEvent] = _wrap(dropOptions[outEvent], function() {
						if (self.isTarget) {
							var draggable = jsPlumb.CurrentLibrary.getDragObject(arguments),
								id = _getAttribute( _getElementObject(draggable), "dragId"),
								jpc = floatingConnections[id];
							if (jpc != null) {
								var idx = jpc.floatingAnchorIndex == null ? 1 : jpc.floatingAnchorIndex;
								jpc.endpoints[idx].anchor.out();
							}
						}
					});
					jsPlumb.CurrentLibrary.initDroppable(canvas, dropOptions, true, isTransient);
				}
			};
			
			// initialise the endpoint's canvas as a drop target.  this will be ignored if the endpoint is not a target or drag is not supported.
			_initDropTarget(_getElementObject(self.canvas), true, !(params._transient || self.anchor.isFloating), self);

			return self;
		};					
	};		

	var jsPlumb = window.jsPlumb = new jsPlumbInstance();
	jsPlumb.getInstance = function(_defaults) {
		var j = new jsPlumbInstance(_defaults);
		j.init();
		return j;
	};	
	
	var _curryAnchor = function(x, y, ox, oy, type, fnInit) {
		return function(params) {
			params = params || {};
			//var a = jsPlumb.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);
			var a = params.jsPlumbInstance.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);
			a.type = type;
			if (fnInit) fnInit(a, params);
			return a;
		};
	};
	jsPlumb.Anchors["TopCenter"] 		= _curryAnchor(0.5, 0, 0,-1, "TopCenter");
	jsPlumb.Anchors["BottomCenter"] 	= _curryAnchor(0.5, 1, 0, 1, "BottomCenter");
	jsPlumb.Anchors["LeftMiddle"] 		= _curryAnchor(0, 0.5, -1, 0, "LeftMiddle");
	jsPlumb.Anchors["RightMiddle"] 		= _curryAnchor(1, 0.5, 1, 0, "RightMiddle");
	jsPlumb.Anchors["Center"] 			= _curryAnchor(0.5, 0.5, 0, 0, "Center");
	jsPlumb.Anchors["TopRight"] 		= _curryAnchor(1, 0, 0,-1, "TopRight");
	jsPlumb.Anchors["BottomRight"] 		= _curryAnchor(1, 1, 0, 1, "BottomRight");
	jsPlumb.Anchors["TopLeft"] 			= _curryAnchor(0, 0, 0, -1, "TopLeft");
	jsPlumb.Anchors["BottomLeft"] 		= _curryAnchor(0, 1, 0, 1, "BottomLeft");
		
	// TODO test that this does not break with the current instance idea
	jsPlumb.Defaults.DynamicAnchors = function(params) {
		return params.jsPlumbInstance.makeAnchors(["TopCenter", "RightMiddle", "BottomCenter", "LeftMiddle"], params.elementId, params.jsPlumbInstance);
	};
	jsPlumb.Anchors["AutoDefault"]  = function(params) { 
		var a = params.jsPlumbInstance.makeDynamicAnchor(jsPlumb.Defaults.DynamicAnchors(params));
		a.type = "AutoDefault";
		return a;
	};
	
	jsPlumb.Anchors["Assign"] = _curryAnchor(0,0,0,0,"Assign", function(anchor, params) {
		// find what to use as the "position finder". the user may have supplied a String which represents
		// the id of a position finder in jsPlumb.AnchorPositionFinders, or the user may have supplied the
		// position finder as a function.  we find out what to use and then set it on the anchor.
		var pf = params.position || "Fixed";
		anchor.positionFinder = pf.constructor == String ? params.jsPlumbInstance.AnchorPositionFinders[pf] : pf;
		// always set the constructor params; the position finder might need them later (the Grid one does,
		// for example)
		anchor.constructorParams = params;
	});

	// Continuous anchor is just curried through to the 'get' method of the continuous anchor
	// factory.
	jsPlumb.Anchors["Continuous"] = function(params) {
		return params.jsPlumbInstance.continuousAnchorFactory.get(params);
	};

    // these are the default anchor positions finders, which are used by the makeTarget function.  supply
    // a position finder argument to that function allows you to specify where the resulting anchor will
    // be located
	jsPlumb.AnchorPositionFinders = {
		"Fixed": function(dp, ep, es, params) {
			return [ (dp.left - ep.left) / es[0], (dp.top - ep.top) / es[1] ];	
		},
		"Grid":function(dp, ep, es, params) {
			var dx = dp.left - ep.left, dy = dp.top - ep.top,
				gx = es[0] / (params.grid[0]), gy = es[1] / (params.grid[1]),
				mx = Math.floor(dx / gx), my = Math.floor(dy / gy);
			return [ ((mx * gx) + (gx / 2)) / es[0], ((my * gy) + (gy / 2)) / es[1] ];
		}
	};
})();
/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the default Connectors, Endpoint and Overlay definitions.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */

(function() {	
				
	/**
	 * 
	 * Helper class to consume unused mouse events by components that are DOM elements and
	 * are used by all of the different rendering modes.
	 * 
	 */
	jsPlumb.DOMElementComponent = function(params) {
		jsPlumb.jsPlumbUIComponent.apply(this, arguments);
		// when render mode is canvas, these functions may be called by the canvas mouse handler.  
		// this component is safe to pipe this stuff to /dev/null.
		this.mousemove = 
		this.dblclick  = 
		this.click = 
		this.mousedown = 
		this.mouseup = function(e) { };					
	};
	                                   
    /**
     * Class: Connectors.Straight
     * The Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.
     */
    jsPlumb.Connectors.Straight = function() {
    	this.type = "Straight";
		var self = this,
		currentPoints = null,
		_m, _m2, _b, _dx, _dy, _theta, _theta2, _sx, _sy, _tx, _ty, _segment, _length;

        /**
         * Computes the new size and position of the canvas.         
         */
        this.compute = function(sourcePos, targetPos, sourceEndpoint, targetEndpoint, sourceAnchor, targetAnchor, lineWidth, minWidth) {
        	var w = Math.abs(sourcePos[0] - targetPos[0]),
            h = Math.abs(sourcePos[1] - targetPos[1]),
            // these are padding to ensure the whole connector line appears
            xo = 0.45 * w, yo = 0.45 * h;
            // these are padding to ensure the whole connector line appears
            w *= 1.9; h *=1.9;
            
            var x = Math.min(sourcePos[0], targetPos[0]) - xo;
            var y = Math.min(sourcePos[1], targetPos[1]) - yo;
            
            // minimum size is 2 * line Width if minWidth was not given.
            var calculatedMinWidth = Math.max(2 * lineWidth, minWidth);
            
            if (w < calculatedMinWidth) { 
        		w = calculatedMinWidth; 
        		x = sourcePos[0]  + ((targetPos[0] - sourcePos[0]) / 2) - (calculatedMinWidth / 2);
        		xo = (w - Math.abs(sourcePos[0]-targetPos[0])) / 2;
        	}
            if (h < calculatedMinWidth) {         
        		h = calculatedMinWidth; 
        		y = sourcePos[1]  + ((targetPos[1] - sourcePos[1]) / 2) - (calculatedMinWidth / 2);
        		yo = (h - Math.abs(sourcePos[1]-targetPos[1])) / 2;
        	}
                            
            _sx = sourcePos[0] < targetPos[0] ?  xo : w-xo;
            _sy = sourcePos[1] < targetPos[1] ? yo:h-yo;
            _tx = sourcePos[0] < targetPos[0] ? w-xo : xo;
            _ty = sourcePos[1] < targetPos[1] ? h-yo : yo;
            currentPoints = [ x, y, w, h, _sx, _sy, _tx, _ty ];                        
            _dx = _tx - _sx, _dy = _ty - _sy;
			//_m = _dy / _dx, _m2 = -1 / _m;
            _m = jsPlumbUtil.gradient({x:_sx, y:_sy}, {x:_tx, y:_ty}), _m2 = -1 / _m;
			_b = -1 * ((_m * _sx) - _sy);
			_theta = Math.atan(_m); _theta2 = Math.atan(_m2);
            //_segment = jsPlumbUtil.segment({x:_sx, y:_sy}, {x:_tx, y:_ty});
            _length = Math.sqrt((_dx * _dx) + (_dy * _dy));
                             
            return currentPoints;
        };
        
        
        /**
         * returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from
         * 0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.
         */
        this.pointOnPath = function(location) {
        	if (location == 0)
                return { x:_sx, y:_sy };
            else if (location == 1)
                return { x:_tx, y:_ty };
            else
                return jsPlumbUtil.pointOnLine({x:_sx, y:_sy}, {x:_tx, y:_ty}, location * _length);
        };
        
        /**
         * returns the gradient of the connector at the given point - which for us is constant.
         */
        this.gradientAtPoint = function(location) {
            return _m;
        };
        
        /**
         * returns the point on the connector's path that is 'distance' along the length of the path from 'location', where 
         * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.
         * this hands off to jsPlumbUtil to do the maths, supplying two points and the distance.
         */
        this.pointAlongPathFrom = function(location, distance) {            
        	var p = self.pointOnPath(location),
                farAwayPoint = location == 1 ? {
                    x:_sx + ((_tx - _sx) * 10),
                    y:_sy + ((_sy - _ty) * 10)
                } : {x:_tx, y:_ty };

            return jsPlumbUtil.pointOnLine(p, farAwayPoint, distance);
        };
    };
                
    
    /**
     * Class:Connectors.Bezier
     * This Connector draws a Bezier curve with two control points.  You can provide a 'curviness' value which gets applied to jsPlumb's
     * internal voodoo machine and ends up generating locations for the two control points.  See the constructor documentation below.
     */
    /**
     * Function:Constructor
     * 
     * Parameters:
     * 	curviness - How 'curvy' you want the curve to be! This is a directive for the placement of control points, not endpoints of the curve, so your curve does not 
     * actually touch the given point, but it has the tendency to lean towards it.  The larger this value, the greater the curve is pulled from a straight line.
     * Optional; defaults to 150.
     * stub - optional value for a distance to travel from the connector's endpoint before beginning the Bezier curve. defaults to 0.
     * 
     */
    jsPlumb.Connectors.Bezier = function(params) {
    	var self = this;
    	params = params || {};
    	this.majorAnchor = params.curviness || 150;        
        this.minorAnchor = 10;
        var currentPoints = null;
        this.type = "Bezier";
        
        this._findControlPoint = function(point, sourceAnchorPosition, targetAnchorPosition, sourceEndpoint, targetEndpoint, sourceAnchor, targetAnchor) {
        	// determine if the two anchors are perpendicular to each other in their orientation.  we swap the control 
        	// points around if so (code could be tightened up)
        	var soo = sourceAnchor.getOrientation(sourceEndpoint), 
        		too = targetAnchor.getOrientation(targetEndpoint),
        		perpendicular = soo[0] != too[0] || soo[1] == too[1],
            	p = [],            
            	ma = self.majorAnchor, mi = self.minorAnchor;                
            	
            if (!perpendicular) {
                if (soo[0] == 0) // X
                    p.push(sourceAnchorPosition[0] < targetAnchorPosition[0] ? point[0] + mi : point[0] - mi);
                else p.push(point[0] - (ma * soo[0]));
                                 
                if (soo[1] == 0) // Y
                	p.push(sourceAnchorPosition[1] < targetAnchorPosition[1] ? point[1] + mi : point[1] - mi);
                else p.push(point[1] + (ma * too[1]));
            }
             else {
                if (too[0] == 0) // X
                	p.push(targetAnchorPosition[0] < sourceAnchorPosition[0] ? point[0] + mi : point[0] - mi);
                else p.push(point[0] + (ma * too[0]));
                
                if (too[1] == 0) // Y
                	p.push(targetAnchorPosition[1] < sourceAnchorPosition[1] ? point[1] + mi : point[1] - mi);
                else p.push(point[1] + (ma * soo[1]));
             }

            return p;                
        };        

        var _CP, _CP2, _sx, _tx, _ty, _sx, _sy, _canvasX, _canvasY, _w, _h, _sStubX, _sStubY, _tStubX, _tStubY;

        this.compute = function(sourcePos, targetPos, sourceEndpoint, targetEndpoint, sourceAnchor, targetAnchor, lineWidth, minWidth) {
        	lineWidth = lineWidth || 0;
            _w = Math.abs(sourcePos[0] - targetPos[0]) + lineWidth; 
            _h = Math.abs(sourcePos[1] - targetPos[1]) + lineWidth;
            _canvasX = Math.min(sourcePos[0], targetPos[0])-(lineWidth/2);
            _canvasY = Math.min(sourcePos[1], targetPos[1])-(lineWidth/2);
            _sx = sourcePos[0] < targetPos[0] ? _w - (lineWidth/2): (lineWidth/2);
            _sy = sourcePos[1] < targetPos[1] ? _h - (lineWidth/2) : (lineWidth/2);
            _tx = sourcePos[0] < targetPos[0] ? (lineWidth/2) : _w - (lineWidth/2);
            _ty = sourcePos[1] < targetPos[1] ? (lineWidth/2) : _h - (lineWidth/2);
                        
            _CP = self._findControlPoint([_sx,_sy], sourcePos, targetPos, sourceEndpoint, targetEndpoint, sourceAnchor, targetAnchor);
            _CP2 = self._findControlPoint([_tx,_ty], targetPos, sourcePos, targetEndpoint, sourceEndpoint, targetAnchor, sourceAnchor);                
            var minx1 = Math.min(_sx,_tx), minx2 = Math.min(_CP[0], _CP2[0]), minx = Math.min(minx1,minx2),
            	maxx1 = Math.max(_sx,_tx), maxx2 = Math.max(_CP[0], _CP2[0]), maxx = Math.max(maxx1,maxx2);
            
            if (maxx > _w) _w = maxx;
            if (minx < 0) {
                _canvasX += minx; var ox = Math.abs(minx);
                _w += ox; _CP[0] += ox; _sx += ox; _tx +=ox; _CP2[0] += ox;                
            }                

            var miny1 = Math.min(_sy,_ty), miny2 = Math.min(_CP[1], _CP2[1]), miny = Math.min(miny1,miny2),
            	maxy1 = Math.max(_sy,_ty), maxy2 = Math.max(_CP[1], _CP2[1]), maxy = Math.max(maxy1,maxy2);
            	
            if (maxy > _h) _h = maxy;
            if (miny < 0) {
                _canvasY += miny; var oy = Math.abs(miny);
                _h += oy; _CP[1] += oy; _sy += oy; _ty +=oy; _CP2[1] += oy;                
            }
            
            if (minWidth && _w < minWidth) {
            	var posAdjust = (minWidth - _w) / 2;
        		_w = minWidth;        		
        		_canvasX -= posAdjust; _sx = _sx + posAdjust ; _tx = _tx + posAdjust; _CP[0] =  _CP[0] + posAdjust; _CP2[0] = _CP2[0] + posAdjust;
        	}
            
            if (minWidth && _h < minWidth) {
            	var posAdjust = (minWidth - _h) / 2;
        		_h = minWidth;        		
        		_canvasY -= posAdjust; _sy = _sy + posAdjust ; _ty = _ty + posAdjust; _CP[1] =  _CP[1] + posAdjust; _CP2[1] = _CP2[1] + posAdjust;
        	}

            currentPoints = [_canvasX, _canvasY, _w, _h,
                             _sx, _sy, _tx, _ty,
                             _CP[0], _CP[1], _CP2[0], _CP2[1] ];
            
            return currentPoints;            
        };        
        
        var _makeCurve = function() {
        	return [	
	        	{ x:_sx, y:_sy },
	        	{ x:_CP[0], y:_CP[1] },
	        	{ x:_CP2[0], y:_CP2[1] },
	        	{ x:_tx, y:_ty }
         	];
        };     
        
        /**
         * returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from
         * 0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.
         */
        this.pointOnPath = function(location) {
            return jsBezier.pointOnCurve(_makeCurve(), location);
        };
        
        /**
         * returns the gradient of the connector at the given point.
         */
        this.gradientAtPoint = function(location) {
            return jsBezier.gradientAtPoint(_makeCurve(), location);        	
        };	              
        
        /**
         * for Bezier curves this method is a little tricky, cos calculating path distance algebraically is notoriously difficult.
         * this method is iterative, jumping forward .05% of the path at a time and summing the distance between this point and the previous
         * one, until the sum reaches 'distance'. the method may turn out to be computationally expensive; we'll see.
         * another drawback of this method is that if the connector gets quite long, .05% of the length of it is not necessarily smaller
         * than the desired distance, in which case the loop returns immediately and the arrow is mis-shapen. so a better strategy might be to
         * calculate the step as a function of distance/distance between endpoints.  
         */
        this.pointAlongPathFrom = function(location, distance) {
            return jsBezier.pointAlongCurveFrom(_makeCurve(), location, distance);
        };           
    };        
    
    
    /**
     * Class: Connectors.Flowchart
     * Provides 'flowchart' connectors, consisting of vertical and horizontal line segments.
     */
    /**
     * Function: Constructor
     * 
     * Parameters:
     * 	stub - minimum length for the stub at each end of the connector. defaults to 30 pixels. 
     *  gap  - gap to leave between the end of the connector and the element on which the endpoint resides. if you make this larger than stub then you will see some odd looking behaviour.  defaults to 0 pixels.
     */
    jsPlumb.Connectors.Flowchart = function(params) {
    	this.type = "Flowchart";
    	params = params || {};
        var self = this, 
        	minStubLength = params.stub || params.minStubLength /* bwds compat. */ || 30, 
            gap = params.gap || 0,
        	segments = [],
            totalLength = 0,
        	segmentProportions = [],
        	segmentProportionalLengths = [],
        	points = [],
        	swapX, swapY,
            maxX = 0, maxY = 0,
		/**
		 * recalculates the points at which the segments begin and end, proportional to the total length travelled
		 * by all the segments that constitute the connector.   we use this to help with pointOnPath calculations.
		 */
		updateSegmentProportions = function(startX, startY, endX, endY) {
			var curLoc = 0;
			for (var i = 0; i < segments.length; i++) {
				segmentProportionalLengths[i] = segments[i][5] / totalLength;
				segmentProportions[i] = [curLoc, (curLoc += (segments[i][5] / totalLength)) ];
			}
		},
		appendSegmentsToPoints = function() {
			points.push(segments.length);
			for (var i = 0; i < segments.length; i++) {
				points.push(segments[i][0]);
				points.push(segments[i][1]);
			}
		},		
		/**
		 * helper method to add a segment.
		 */
		addSegment = function(x, y, sx, sy, tx, ty) {
			var lx = segments.length == 0 ? sx : segments[segments.length - 1][0],
			    ly = segments.length == 0 ? sy : segments[segments.length - 1][1],
                m = x == lx ? Infinity : 0,
				l = Math.abs(x == lx ? y - ly : x - lx);
			segments.push([x, y, lx, ly, m, l]);
            totalLength += l;
            
            maxX = Math.max(maxX, x);
            maxY = Math.max(maxY, y);
		},
		/**
		 * returns [segment, proportion of travel in segment, segment index] for the segment 
		 * that contains the point which is 'location' distance along the entire path, where 
		 * 'location' is a decimal between 0 and 1 inclusive. in this connector type, paths 
		 * are made up of a list of segments, each of which contributes some fraction to
		 * the total length.  
		 */
		findSegmentForLocation = function(location) {
			var idx = segmentProportions.length - 1, inSegmentProportion = 1;
			for (var i = 0; i < segmentProportions.length; i++) {
				if (segmentProportions[i][1] >= location) {
					idx = i;
					inSegmentProportion = (location - segmentProportions[i][0]) / segmentProportionalLengths[i];                    
 					break;
				}
			}
			return { segment:segments[idx], proportion:inSegmentProportion, index:idx };
		};
		
		this.compute = function(sourcePos, targetPos, sourceEndpoint, targetEndpoint, 
            sourceAnchor, targetAnchor, lineWidth, minWidth, sourceInfo, targetInfo) {
            
            segments = [];
            segmentProportions = [];
            totalLength = 0;
            segmentProportionalLengths = [];
            maxX = maxY = 0;
            
            swapX = targetPos[0] < sourcePos[0]; 
            swapY = targetPos[1] < sourcePos[1];
            
            var lw = lineWidth || 1,
                offx = (lw / 2) + (minStubLength * 2), 
                offy = (lw / 2) + (minStubLength * 2),
                so = sourceAnchor.orientation || sourceAnchor.getOrientation(sourceEndpoint), 
                to = targetAnchor.orientation || targetAnchor.getOrientation(targetEndpoint),
                x = swapX ? targetPos[0] : sourcePos[0], 
                y = swapY ? targetPos[1] : sourcePos[1],
                w = Math.abs(targetPos[0] - sourcePos[0]) + 2*offx, 
                h = Math.abs(targetPos[1] - sourcePos[1]) + 2*offy;

            // if either anchor does not have an orientation set, we derive one from their relative
            // positions.  we fix the axis to be the one in which the two elements are further apart, and
            // point each anchor at the other element.  this is also used when dragging a new connection.
            if (so[0] == 0 && so[1] == 0 || to[0] == 0 && to[1] == 0) {
                var index = w > h ? 0 : 1, oIndex = [1,0][index];
                so = []; to = [];
                so[index] = sourcePos[index] > targetPos[index] ? -1 : 1;
                to[index] = sourcePos[index] > targetPos[index] ? 1 : -1;
                so[oIndex] = 0;
                to[oIndex] = 0;
            }

            if (w < minWidth) {      
                offx += (minWidth - w) / 2;
                w = minWidth;
            }
            if (h < minWidth) {             
                offy += (minWidth - h) / 2;
                h = minWidth;
            }

            var sx = swapX ? (w - offx) +( gap * so[0])  : offx + (gap * so[0]), 
                sy = swapY ? (h - offy) + (gap * so[1])  : offy + (gap * so[1]), 
                tx = swapX ? offx + (gap * to[0]) : (w - offx) + (gap * to[0]),
                ty = swapY ? offy + (gap * to[1]) : (h - offy) + (gap * to[1]),
                startStubX = sx + (so[0] * minStubLength), 
                startStubY = sy + (so[1] * minStubLength),
                endStubX = tx + (to[0] * minStubLength), 
                endStubY = ty + (to[1] * minStubLength),
                isXGreaterThanStubTimes2 = Math.abs(sx - tx) > 2 * minStubLength,
                isYGreaterThanStubTimes2 = Math.abs(sy - ty) > 2 * minStubLength,
                midx = startStubX + ((endStubX - startStubX) / 2),
                midy = startStubY + ((endStubY - startStubY) / 2),
                oProduct = ((so[0] * to[0]) + (so[1] * to[1])),
                opposite = oProduct == -1,
                perpendicular = oProduct == 0,
                orthogonal = oProduct == 1; 
            
            x -= offx; y -= offy;
            points = [x, y, w, h, sx, sy, tx, ty];
            var extraPoints = [];
      
            addSegment(startStubX, startStubY, sx, sy, tx, ty);                               
                      
            var sourceAxis = so[0] == 0 ? "y" : "x",
                anchorOrientation = opposite ? "opposite" : orthogonal ? "orthogonal" : "perpendicular",
                segment = jsPlumbUtil.segment([sx, sy], [tx, ty]),
                flipSourceSegments = so[sourceAxis == "x" ? 0 : 1] == -1,
                flipSegments = {
                    "x":[null, 4, 3, 2, 1],
                    "y":[null, 2, 1, 4, 3]
                }        
                
            if (flipSourceSegments)                
                segment = flipSegments[sourceAxis][segment];                                    

            var findClearedLine = function(start, mult, anchorPos, dimension) {
                return start + (mult * (( 1 - anchorPos) * dimension) + minStubLength);
                //mx = so[0] == 0 ? startStubX + ((1 - sourceAnchor.x) * sourceInfo.width) + minStubLength : startStubX,
            },

            lineCalculators = {
                oppositex : function() {
                    if (sourceEndpoint.elementId == targetEndpoint.elementId) {
                        var _y = startStubY + ((1 - sourceAnchor.y) * sourceInfo.height) + minStubLength;
                        return [ [ startStubX, _y ], [ endStubX, _y ]];
                    }
                    else if (isXGreaterThanStubTimes2 && (segment == 1 || segment == 2)) {
                        return [[ midx, sy ], [ midx, ty ]];
                    }    
                    else {
                        return [[ startStubX, midy ], [endStubX, midy ]];                
                    }
                },
                orthogonalx : function() {
                    if (segment == 1 || segment == 2) {
                        return [ [ endStubX, startStubY  ]];
                    }
                    else {
                        return [ [ startStubX, endStubY ]];
                    }
                },
                perpendicularx : function() {                
                    var my = (ty + sy) / 2;
                    if ((segment == 1 && to[1] == 1) || (segment == 2 && to[1] == -1)) {                  
                        if (Math.abs(tx - sx) > minStubLength)
                            return [ [endStubX, startStubY ]];            
                        else
                            return [ [startStubX, startStubY ], [ startStubX, my ], [ endStubX, my ]];                                
                    }  
                    else if ((segment == 3 && to[1] == -1) || (segment == 4 && to[1] == 1)) {                    
                        return [ [ startStubX, my ], [ endStubX, my ]];
                    }
                    else if ((segment == 3 && to[1] == 1) || (segment == 4 && to[1] == -1)) {                
                        return [ [ startStubX, endStubY ]];
                    }
                    else if ((segment == 1 && to[1] == -1) || (segment == 2 && to[1] == 1)) {                
                        if (Math.abs(tx - sx) > minStubLength)                    
                            return [ [ midx, startStubY ], [ midx, endStubY ]];                    
                        else
                            return [ [ startStubX, endStubY ]];                                        
                    }
                },
                oppositey : function() {
                    if (sourceEndpoint.elementId == targetEndpoint.elementId) {
                        var _x = startStubX + ((1 - sourceAnchor.x) * sourceInfo.width) + minStubLength;
                        return [ [ _x, startStubY ], [ _x, endStubY ]];
                    }
                    else if (isYGreaterThanStubTimes2 && (segment == 2 || segment == 3)) {
                        return [[ sx, midy ], [ tx, midy ]];
                    }    
                    else {
                        return [[ midx, startStubY ], [midx, endStubY ]];                
                    }
                },
                orthogonaly : function() {
                    if (segment == 2 || segment == 3) {
                        return [ [ startStubX, endStubY  ]];
                    }
                    else {
                        return [ [ endStubX, startStubY ]];
                    }
                },
                perpendiculary : function() {                
                    var mx = (tx + sx) / 2;
                    if ((segment == 2 && to[0] == -1) || (segment == 3 && to[0] == 1)) {                    
                        if (Math.abs(tx - sx) > minStubLength)
                            return [ [startStubX, endStubY ]];                    
                        else
                            return [ [startStubX, midy ], [ endStubX, midy ]];                                        
                    }  
                    else if ((segment == 1 && to[0] == -1) || (segment == 4 && to[0] == 1)) {
                        var mx = (tx + sx) / 2;
                        return [ [ mx, startStubY ], [ mx, endStubY ]];
                    }
                    else if ((segment == 1 && to[0] == 1) || (segment == 4 && to[0] == -1)) {                
                        return [ [ endStubX, startStubY ]];
                    }
                    else if ((segment == 2 && to[0] == 1) || (segment == 3 && to[0] == -1)) {                
                        if (Math.abs(ty - sy) > minStubLength)                    
                            return [ [ startStubX, midy ], [ endStubX, midy ]];                  
                        else
                            return [ [ endStubX, startStubY ]];                                    
                    }
                }
            };                                                 

            var p = lineCalculators[anchorOrientation + sourceAxis]();
            if (p) {
                for (var i = 0; i < p.length; i++) {
                    addSegment(p[i][0], p[i][1], sx, sy, tx, ty);
                }
            }                       
                             

            addSegment(endStubX, endStubY, sx, sy, tx, ty);
            addSegment(tx, ty, sx, sy, tx, ty);
            
            appendSegmentsToPoints();
            updateSegmentProportions(sx, sy, tx, ty);                        
            
            // adjust the max values of the canvas if we have a value that is larger than what we previously set.
            // 
            if (maxY > points[3]) points[3] = maxY + (lineWidth * 2);
            if (maxX > points[2]) points[2] = maxX + (lineWidth * 2);
            
            return points;
        };
		
		/**
         * returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from
         * 0 to 1 inclusive. for this connector we must first figure out which segment the given point lies in, and then compute the x,y position
         * from our knowledge of the segment's start and end points.
         */
        this.pointOnPath = function(location) {            
        	return self.pointAlongPathFrom(location, 0);
        };
        
        /**
         * returns the gradient of the connector at the given point; the gradient will be either 0 or Infinity, depending on the direction of the
         * segment the point falls in. segment gradients are calculated in the compute method.  
         */
        this.gradientAtPoint = function(location) { 
        	return segments[findSegmentForLocation(location)["index"]][4];
        };
        
        /**
         * returns the point on the connector's path that is 'distance' along the length of the path from 'location', where 
         * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.  when you consider this concept from the point of view
         * of this connector, it starts to become clear that there's a problem with the overlay paint code: given that this connector makes several
         * 90 degree turns, it's entirely possible that an arrow overlay could be forced to paint itself around a corner, which would look stupid. this is
         * because jsPlumb uses this method (and pointOnPath) so determine the locations of the various points that go to make up an overlay.  a better
         * solution would probably be to just use pointOnPath along with gradientAtPoint, and draw the overlay so that its axis ran along
         * a tangent to the connector.  for straight line connectors this would obviously mean the overlay was painted directly on the connector, since a 
         * tangent to a straight line is the line itself, which is what we want; for this connector, and for beziers, the results would probably be better.  an additional
         * advantage is, of course, that there's less computation involved doing it that way. 
         */
        this.pointAlongPathFrom = function(location, distance) {
        	var s = findSegmentForLocation(location), seg = s.segment, p = s.proportion, sl = segments[s.index][5], m = segments[s.index][4];
        	var e = {         		
        		x 	: m == Infinity ? seg[2] : seg[2] > seg[0] ? seg[0] + ((1 - p) * sl) - distance : seg[2] + (p * sl) + distance,
        		y 	: m == 0 ? seg[3] : seg[3] > seg[1] ? seg[1] + ((1 - p) * sl) - distance  : seg[3] + (p * sl) + distance,
        		segmentInfo : s
        	};
        	
        	return e;
        };
    };

 // ********************************* END OF CONNECTOR TYPES *******************************************************************
    
 // ********************************* ENDPOINT TYPES *******************************************************************
    
    /**
     * Class: Endpoints.Dot
     * A round endpoint, with default radius 10 pixels.
     */    	
    	
	/**
	 * Function: Constructor
	 * 
	 * Parameters:
	 * 
	 * 	radius	-	radius of the endpoint.  defaults to 10 pixels.
	 */
	jsPlumb.Endpoints.Dot = function(params) {
		this.type = "Dot";
		var self = this;
		params = params || {};				
		this.radius = params.radius || 10;
		this.defaultOffset = 0.5 * this.radius;
		this.defaultInnerRadius = this.radius / 3;			
		
		this.compute = function(anchorPoint, orientation, endpointStyle, connectorPaintStyle) {
			var r = endpointStyle.radius || self.radius,
				x = anchorPoint[0] - r,
				y = anchorPoint[1] - r;
			return [ x, y, r * 2, r * 2, r ];
		};
	};
	
	/**
	 * Class: Endpoints.Rectangle
	 * A Rectangular Endpoint, with default size 20x20.
	 */
	/**
	 * Function: Constructor
	 * 
	 * Parameters:
	 * 
	 * 	width	- width of the endpoint. defaults to 20 pixels.
	 * 	height	- height of the endpoint. defaults to 20 pixels.	
	 */
	jsPlumb.Endpoints.Rectangle = function(params) {
		this.type = "Rectangle";
		var self = this;
		params = params || {};
		this.width = params.width || 20;
		this.height = params.height || 20;
		
		this.compute = function(anchorPoint, orientation, endpointStyle, connectorPaintStyle) {
			var width = endpointStyle.width || self.width,
				height = endpointStyle.height || self.height,
				x = anchorPoint[0] - (width/2),
				y = anchorPoint[1] - (height/2);
			return [ x, y, width, height];
		};
	};
	

    var DOMElementEndpoint = function(params) {
        jsPlumb.DOMElementComponent.apply(this, arguments);
        var self = this;

        var displayElements = [  ];
        this.getDisplayElements = function() { 
            return displayElements; 
        };
        
        this.appendDisplayElement = function(el) {
            displayElements.push(el);
        };            
    };
	/**
	 * Class: Endpoints.Image
	 * Draws an image as the Endpoint.
	 */
	/**
	 * Function: Constructor
	 * 
	 * Parameters:
	 * 
	 * 	src	-	location of the image to use.
	 */
	jsPlumb.Endpoints.Image = function(params) {
				
		this.type = "Image";
		DOMElementEndpoint.apply(this, arguments);
		
		var self = this, 
			initialized = false,
			widthToUse = params.width,
			heightToUse = params.height,
            _onload = null,
            _endpoint = params.endpoint;
			
		this.img = new Image();
		self.ready = false;

		this.img.onload = function() {
			self.ready = true;
			widthToUse = widthToUse || self.img.width;
			heightToUse = heightToUse || self.img.height;
            if (_onload) {
                _onload(self);
            }
		};

        /*
            Function: setImage
            Sets the Image to use in this Endpoint.  

            Parameters:
            img         -   may be a URL or an Image object
            onload      -   optional; a callback to execute once the image has loaded.
        */
        _endpoint.setImage = function(img, onload) {
            var s = img.constructor == String ? img : img.src;
            _onload = onload;
            self.img.src = img;

            if (self.canvas != null)
                self.canvas.setAttribute("src", img);
        };

        _endpoint.setImage(params.src || params.url, params.onload);

		this.compute = function(anchorPoint, orientation, endpointStyle, connectorPaintStyle) {
			self.anchorPoint = anchorPoint;
			if (self.ready) return [anchorPoint[0] - widthToUse / 2, anchorPoint[1] - heightToUse / 2, 
									widthToUse, heightToUse];
			else return [0,0,0,0];
		};
		
		self.canvas = document.createElement("img"), initialized = false;
		self.canvas.style["margin"] = 0;
		self.canvas.style["padding"] = 0;
		self.canvas.style["outline"] = 0;
		self.canvas.style["position"] = "absolute";
		var clazz = params.cssClass ? " " + params.cssClass : "";
		self.canvas.className = jsPlumb.endpointClass + clazz;
		if (widthToUse) self.canvas.setAttribute("width", widthToUse);
		if (heightToUse) self.canvas.setAttribute("height", heightToUse);		
		jsPlumb.appendElement(self.canvas, params.parent);
		self.attachListeners(self.canvas, self);
		
		var actuallyPaint = function(d, style, anchor) {
			if (!initialized) {
				self.canvas.setAttribute("src", self.img.src);
                self.appendDisplayElement(self.canvas);
				initialized = true;
			}
			var x = self.anchorPoint[0] - (widthToUse / 2),
				y = self.anchorPoint[1] - (heightToUse / 2);
			jsPlumb.sizeCanvas(self.canvas, x, y, widthToUse, heightToUse);
		};
		
		this.paint = function(d, style, anchor) {
			if (self.ready) {
    			actuallyPaint(d, style, anchor);
			}
			else { 
				window.setTimeout(function() {    					
					self.paint(d, style, anchor);
				}, 200);
			}
		};				
	};
	
	/**
	 * Class: Endpoints.Blank
	 * An Endpoint that paints nothing (visible) on the screen.  Supports cssClass and hoverClass parameters like all Endpoints.
	 */
	jsPlumb.Endpoints.Blank = function(params) {
		var self = this;
		this.type = "Blank";
		DOMElementEndpoint.apply(this, arguments);		
		this.compute = function(anchorPoint, orientation, endpointStyle, connectorPaintStyle) {
			return [anchorPoint[0], anchorPoint[1],10,0];
		};
		
		self.canvas = document.createElement("div");
		self.canvas.style.display = "block";
		self.canvas.style.width = "1px";
		self.canvas.style.height = "1px";
		self.canvas.style.background = "transparent";
		self.canvas.style.position = "absolute";
		self.canvas.className = self._jsPlumb.endpointClass;
		jsPlumb.appendElement(self.canvas, params.parent);
		
		this.paint = function(d, style, anchor) {
			jsPlumb.sizeCanvas(self.canvas, d[0], d[1], d[2], d[3]);	
		};
	};
	
	/**
	 * Class: Endpoints.Triangle
	 * A triangular Endpoint.  
	 */
	/**
	 * Function: Constructor
	 * 
	 * Parameters:
	 * 
	 * 	width	-	width of the triangle's base.  defaults to 55 pixels.
	 * 	height	-	height of the triangle from base to apex.  defaults to 55 pixels.
	 */
	jsPlumb.Endpoints.Triangle = function(params) {
		this.type = "Triangle";
		params = params || {  };
		params.width = params.width || 55;
		params.height = params.height || 55;
		this.width = params.width;
		this.height = params.height;
		this.compute = function(anchorPoint, orientation, endpointStyle, connectorPaintStyle) {
			var width = endpointStyle.width || self.width,
			height = endpointStyle.height || self.height,
			x = anchorPoint[0] - (width/2),
			y = anchorPoint[1] - (height/2);
			return [ x, y, width, height ];
		};
	};
// ********************************* END OF ENDPOINT TYPES *******************************************************************
	

// ********************************* OVERLAY DEFINITIONS ***********************************************************************    

	var AbstractOverlay = function(params) {
		var visible = true, self = this;
        this.isAppendedAtTopLevel = true;
		this.component = params.component;
		this.loc = params.location == null ? 0.5 : params.location;
        this.endpointLoc = params.endpointLocation == null ? [ 0.5, 0.5] : params.endpointLocation;
		this.setVisible = function(val) { 
			visible = val;
			self.component.repaint();
		};
    	this.isVisible = function() { return visible; };
    	this.hide = function() { self.setVisible(false); };
    	this.show = function() { self.setVisible(true); };
    	
    	this.incrementLocation = function(amount) {
    		self.loc += amount;
    		self.component.repaint();
    	};
    	this.setLocation = function(l) {
    		self.loc = l;
    		self.component.repaint();
    	};
    	this.getLocation = function() {
    		return self.loc;
    	};
	};
	
	
	/**
	 * Class: Overlays.Arrow
	 * 
	 * An arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length
	 * of the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction
	 * of the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line
	 * across the tail.  
	 */
	/**
	 * Function: Constructor
	 * 
	 * Parameters:
	 * 
	 * 	length - distance in pixels from head to tail baseline. default 20.
	 * 	width - width in pixels of the tail baseline. default 20.
	 * 	fillStyle - style to use when filling the arrow.  defaults to "black".
	 * 	strokeStyle - style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.
	 * 	lineWidth - line width to use when stroking the arrow. defaults to 1, but only used if strokeStyle is not null.
	 * 	foldback - distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.
	 * 	location - distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.
	 * 	direction - indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.
	 */
	jsPlumb.Overlays.Arrow = function(params) {
		this.type = "Arrow";
		AbstractOverlay.apply(this, arguments);
        this.isAppendedAtTopLevel = false;
		params = params || {};
		var self = this;
		
    	this.length = params.length || 20;
    	this.width = params.width || 20;
    	this.id = params.id;
    	var direction = (params.direction || 1) < 0 ? -1 : 1,
    	    paintStyle = params.paintStyle || { lineWidth:1 },
    	    // how far along the arrow the lines folding back in come to. default is 62.3%.
    	    foldback = params.foldback || 0.623;

    	    	
    	this.computeMaxSize = function() { return self.width * 1.5; };
    	
    	this.cleanup = function() { };  // nothing to clean up for Arrows
    	
    	this.draw = function(connector, currentConnectionPaintStyle, connectorDimensions) {

            var hxy, mid, txy, tail, cxy;
            if (connector.pointAlongPathFrom) {

                if (self.loc == 1) {
                    hxy = connector.pointOnPath(self.loc);
                    mid = connector.pointAlongPathFrom(self.loc, -1);                    
                    txy = jsPlumbUtil.pointOnLine(hxy, mid, self.length);
                }
                else if (self.loc == 0) {
                    txy = connector.pointOnPath(self.loc);
                    mid = connector.pointAlongPathFrom(self.loc, 1);
                    hxy = jsPlumbUtil.pointOnLine(txy, mid, self.length);
                }
                else {
    			    hxy = connector.pointAlongPathFrom(self.loc, direction * self.length / 2),
                    mid = connector.pointOnPath(self.loc),
                    txy = jsPlumbUtil.pointOnLine(hxy, mid, self.length);
                }

                tail = jsPlumbUtil.perpendicularLineTo(hxy, txy, self.width);
                cxy = jsPlumbUtil.pointOnLine(hxy, txy, foldback * self.length);

    			var minx = Math.min(hxy.x, tail[0].x, tail[1].x),
    				maxx = Math.max(hxy.x, tail[0].x, tail[1].x),
    				miny = Math.min(hxy.y, tail[0].y, tail[1].y),
    				maxy = Math.max(hxy.y, tail[0].y, tail[1].y);
    			
    			var d = { hxy:hxy, tail:tail, cxy:cxy },
    			    strokeStyle = paintStyle.strokeStyle || currentConnectionPaintStyle.strokeStyle,
    			    fillStyle = paintStyle.fillStyle || currentConnectionPaintStyle.strokeStyle,
    			    lineWidth = paintStyle.lineWidth || currentConnectionPaintStyle.lineWidth;
    			
    			self.paint(connector, d, lineWidth, strokeStyle, fillStyle, connectorDimensions);							
			
			    return [ minx, maxx, miny, maxy]; 
            }
            else return [0,0,0,0];
    	};
    };          
    
    /**
     * Class: Overlays.PlainArrow
	 * 
	 * A basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some
	 * point along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does
	 * a 'call' to Arrow with foldback set appropriately.       
	 */
    /**
     * Function: Constructor
     * See <Overlays.Arrow> for allowed parameters for this overlay.
     */
    jsPlumb.Overlays.PlainArrow = function(params) {
    	params = params || {};    	
    	var p = jsPlumb.extend(params, {foldback:1});
    	jsPlumb.Overlays.Arrow.call(this, p);
    	this.type = "PlainArrow";
    };
        
    /**
     * Class: Overlays.Diamond
     * 
	 * A diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just
	 * happens that in this case, that point is greater than the length of the the arrow.    
	 * 
	 *      this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the
	 *      center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of
	 *      stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value
	 *      would be -l/4 in this case - move along one quarter of the total length.
	 */
    /**
     * Function: Constructor
     * See <Overlays.Arrow> for allowed parameters for this overlay.
     */
    jsPlumb.Overlays.Diamond = function(params) {
    	params = params || {};    	
    	var l = params.length || 40,
    	    p = jsPlumb.extend(params, {length:l/2, foldback:2});
    	jsPlumb.Overlays.Arrow.call(this, p);
    	this.type = "Diamond";
    };
    
    
    
    /**
     * Class: Overlays.Label
     * A Label overlay. For all different renderer types (SVG/Canvas/VML), jsPlumb draws a Label overlay as a styled DIV.  Version 1.3.0 of jsPlumb
     * introduced the ability to set css classes on the label; this is now the preferred way for you to style a label.  The 'labelStyle' parameter
     * is still supported in 1.3.0 but its usage is deprecated.  Under the hood, jsPlumb just turns that object into a bunch of CSS directive that it 
     * puts on the Label's 'style' attribute, so the end result is the same. 
     */
    /**
     * Function: Constructor
     * 
     * Parameters:
     * 	cssClass - optional css class string to append to css class. This string is appended "as-is", so you can of course have multiple classes
     *             defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.
     * 	label - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your
     *         label function returns null.  empty strings _will_ be painted.
     * 	location - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.
     * 	
     */
    jsPlumb.Overlays.Label = function(params) {
    	this.type = "Label";
    	jsPlumb.DOMElementComponent.apply(this, arguments);
    	AbstractOverlay.apply(this, arguments);
    	this.labelStyle = params.labelStyle || jsPlumb.Defaults.LabelStyle;
        this.id = params.id;
        this.cachedDimensions = null;             // setting on 'this' rather than using closures uses a lot less memory.  just don't monkey with it!
	    var label = params.label || "",
            self = this,
    	    initialised = false,
    	    div = document.createElement("div"),
            labelText = null;
    	div.style["position"] 	= 	"absolute";    	
    	
    	var clazz = params["_jsPlumb"].overlayClass + " " + 
    		(self.labelStyle.cssClass ? self.labelStyle.cssClass : 
    		params.cssClass ? params.cssClass : "");
    	
    	div.className =	clazz;
    	
    	jsPlumb.appendElement(div, params.component.parent);
    	jsPlumb.getId(div);		
    	self.attachListeners(div, self);
    	self.canvas = div;
    	
    	//override setVisible
    	var osv = self.setVisible;
    	self.setVisible = function(state) {
    		osv(state); // call superclass
    		div.style.display = state ? "block" : "none";
    	};
    	
    	this.getElement = function() {
    		return div;
    	};
    	
    	this.cleanup = function() {
    		if (div != null) jsPlumb.CurrentLibrary.removeElement(div);
    	};
    	
    	/*
    	 * Function: setLabel
    	 * sets the label's, um, label.  you would think i'd call this function
    	 * 'setText', but you can pass either a Function or a String to this, so
    	 * it makes more sense as 'setLabel'.
    	 */
    	this.setLabel = function(l) {
    		label = l;
    		labelText = null;
    		self.component.repaint();
    	};
    	
    	this.getLabel = function() {
    		return label;
    	};
    	
    	this.paint = function(component, d, componentDimensions) {
			if (!initialised) {	
				component.appendDisplayElement(div);
				self.attachListeners(div, component);
				initialised = true;
			}
			div.style.left = (componentDimensions[0] + d.minx) + "px";
			div.style.top = (componentDimensions[1] + d.miny) + "px";			
    	};
    	
    	this.getTextDimensions = function() {
    		if (typeof label == "function") {
    			var lt = label(self);
    			div.innerHTML = lt.replace(/\r\n/g, "<br/>");
    		}
    		else {
    			if (labelText == null) {
    				labelText = label;
    				div.innerHTML = labelText.replace(/\r\n/g, "<br/>");
    			}
    		}
    		var de = jsPlumb.CurrentLibrary.getElementObject(div),
    		s = jsPlumb.CurrentLibrary.getSize(de);
    		return {width:s[0], height:s[1]};
    	};
    	
    	this.computeMaxSize = function(connector) {
    		var td = self.getTextDimensions(connector);
    		return td.width ? Math.max(td.width, td.height) * 1.5 : 0;
    	};    	
    	
	    this.draw = function(component, currentConnectionPaintStyle, componentDimensions) {
	    	var td = self.getTextDimensions(component);
	    	if (td.width !=  null) {
				var cxy = {x:0,y:0};
                if (component.pointOnPath)
                    cxy = component.pointOnPath(self.loc);  // a connection
                else {
                    var locToUse = self.loc.constructor == Array ? self.loc : self.endpointLoc;
                    cxy = { x:locToUse[0] * componentDimensions[2],
                            y:locToUse[1] * componentDimensions[3] };      
                } 
                           
				minx = cxy.x - (td.width / 2),
				miny = cxy.y - (td.height / 2);
				
				self.paint(component, {
					minx:minx,
					miny:miny,
					td:td,
					cxy:cxy
				}, componentDimensions);
				
				return [minx, minx+td.width, miny, miny+td.height];
        	}
	    	else return [0,0,0,0];
	    };
	    
	    this.reattachListeners = function(connector) {
	    	if (div) {
	    		self.reattachListenersForElement(div, self, connector);
	    	}
	    };
    };

    // this is really just a test overlay, so its undocumented and doesnt take any parameters. but i was loth to delete it.
    jsPlumb.Overlays.GuideLines = function() {
        var self = this;
        self.length = 50;
        self.lineWidth = 5;
        this.type = "GuideLines";
		AbstractOverlay.apply(this, arguments);
        jsPlumb.jsPlumbUIComponent.apply(this, arguments);
        this.draw = function(connector, currentConnectionPaintStyle, connectorDimensions) {

            var head = connector.pointAlongPathFrom(self.loc, self.length / 2),
                mid = connector.pointOnPath(self.loc),
                tail = jsPlumbUtil.pointOnLine(head, mid, self.length),
                tailLine = jsPlumbUtil.perpendicularLineTo(head, tail, 40),
                headLine = jsPlumbUtil.perpendicularLineTo(tail, head, 20);

            self.paint(connector, [head, tail, tailLine, headLine], self.lineWidth, "red", null, connectorDimensions);

            return [Math.min(head.x, tail.x), Math.min(head.y, tail.y), Math.max(head.x, tail.x), Math.max(head.y,tail.y)];
        };

        this.computeMaxSize = function() { return 50; };

    	this.cleanup = function() { };  // nothing to clean up for GuideLines
    };

 // ********************************* END OF OVERLAY DEFINITIONS ***********************************************************************
    
 // ********************************* OVERLAY CANVAS RENDERERS***********************************************************************
    
 // ********************************* END OF OVERLAY CANVAS RENDERERS ***********************************************************************
})();/*
 * jsPlumb
 *
 * Title:jsPlumb 1.3.9
 *
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.
 *
 * This file contains the state machine connectors.
 *
 * Thanks to Brainstorm Mobile Solutions for supporting the development of these.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (simon.porritt@gmail.com)
 *
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 *
 * Dual licensed under the MIT and GPL2 licenses.
 */

;(function() {

	var Line = function(x1, y1, x2, y2) {

		this.m = (y2 - y1) / (x2 - x1);
		this.b = -1 * ((this.m * x1) - y1);
	
		this.rectIntersect = function(x,y,w,h) {
			var results = [];
		
			// 	try top face
			// 	the equation of the top face is y = (0 * x) + b; y = b.
			var xInt = (y - this.b) / this.m;
			// test that the X value is in the line's range.
			if (xInt >= x && xInt <= (x + w)) results.push([ xInt, (this.m * xInt) + this.b ]);
		
			// try right face
			var yInt = (this.m * (x + w)) + this.b;
			if (yInt >= y && yInt <= (y + h)) results.push([ (yInt - this.b) / this.m, yInt ]);
		
			// 	bottom face
			var xInt = ((y + h) - this.b) / this.m;
			// test that the X value is in the line's range.
			if (xInt >= x && xInt <= (x + w)) results.push([ xInt, (this.m * xInt) + this.b ]);
		
			// try left face
			var yInt = (this.m * x) + this.b;
			if (yInt >= y && yInt <= (y + h)) results.push([ (yInt - this.b) / this.m, yInt ]);

			if (results.length == 2) {
				var midx = (results[0][0] + results[1][0]) / 2, midy = (results[0][1] + results[1][1]) / 2;
				results.push([ midx,midy ]);
				// now calculate the segment inside the rectangle where the midpoint lies.
				var xseg = midx <= x + (w / 2) ? -1 : 1,
					yseg = midy <= y + (h / 2) ? -1 : 1;
				results.push([xseg, yseg]);
				return results;
			}
		
			return null;

		};
	},
	_segment = function(x1, y1, x2, y2) {
		if (x1 <= x2 && y2 <= y1) return 1;
		else if (x1 <= x2 && y1 <= y2) return 2;
		else if (x2 <= x1 && y2 >= y1) return 3;
		return 4;
	},
		
		// the control point we will use depends on the faces to which each end of the connection is assigned, specifically whether or not the
		// two faces are parallel or perpendicular.  if they are parallel then the control point lies on the midpoint of the axis in which they
		// are parellel and varies only in the other axis; this variation is proportional to the distance that the anchor points lie from the
		// center of that face.  if the two faces are perpendicular then the control point is at some distance from both the midpoints; the amount and
		// direction are dependent on the orientation of the two elements. 'seg', passed in to this method, tells you which segment the target element
		// lies in with respect to the source: 1 is top right, 2 is bottom right, 3 is bottom left, 4 is top left.
		//
		// sourcePos and targetPos are arrays of info about where on the source and target each anchor is located.  their contents are:
		//
		// 0 - absolute x
		// 1 - absolute y
		// 2 - proportional x in element (0 is left edge, 1 is right edge)
		// 3 - proportional y in element (0 is top edge, 1 is bottom edge)
		// 	
	_findControlPoint = function(midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {

        // TODO (maybe)
        // - if anchor pos is 0.5, make the control point take into account the relative position of the elements.
        if (distance <= proximityLimit) return [midx, midy];

        if (segment == 1) {
            if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];
            else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];
            else return [ midx + (-1 * dx) , midy + (-1 * dy) ];
        }
        else if (segment == 2) {
            if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];
            else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];
            else return [ midx + (1 * dx) , midy + (-1 * dy) ];
        }
        else if (segment == 3) {
            if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];
            else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];
            else return [ midx + (-1 * dx) , midy + (-1 * dy) ];
        }
        else if (segment == 4) {
            if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];
            else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];
            else return [ midx + (1 * dx) , midy + (-1 * dy) ];
        }
	};

	/*
		Function: StateMachine constructor
		
		Allowed parameters:
			curviness 		-	measure of how "curvy" the connectors will be.  this is translated as the distance that the
								Bezier curve's control point is from the midpoint of the straight line connecting the two
								endpoints, and does not mean that the connector is this wide.  The Bezier curve never reaches
								its control points; they act as gravitational masses. defaults to 10.
			margin			-	distance from element to start and end connectors, in pixels.  defaults to 5.
			proximityLimit  -   sets the distance beneath which the elements are consider too close together to bother with fancy
			                    curves. by default this is 80 pixels.
			loopbackRadius	-	the radius of a loopback connector.  optional; defaults to 25.
	*/
	jsPlumb.Connectors.StateMachine = function(params) {
		var self = this,
		currentPoints = null,
		_sx, _sy, _tx, _ty, _controlPoint = [],
		curviness = params.curviness || 10,
		margin = params.margin || 5,
		proximityLimit = params.proximityLimit || 80,
		clockwise = params.orientation && params.orientation == "clockwise",
		loopbackRadius = params.loopbackRadius || 25,
		isLoopback = false;

		this.type = "StateMachine";
		params = params || {};		
		
		this.compute = function(sourcePos, targetPos, sourceEndpoint, targetEndpoint, sourceAnchor, targetAnchor, lineWidth, minWidth) {

			var w = Math.abs(sourcePos[0] - targetPos[0]),
   	 	       	h = Math.abs(sourcePos[1] - targetPos[1]),
	   	     	// these are padding to ensure the whole connector line appears
   	   	   		xo = 0.45 * w, yo = 0.45 * h;
   		   		// these are padding to ensure the whole connector line appears
            	w *= 1.9; h *= 1.9;
                //ensure at least one pixel width
                lineWidth = lineWidth || 1;
            	var x = Math.min(sourcePos[0], targetPos[0]) - xo,
        		    y = Math.min(sourcePos[1], targetPos[1]) - yo;
		
			if (sourceEndpoint.elementId != targetEndpoint.elementId) {
                            
                isLoopback = false;
                            
        		_sx = sourcePos[0] < targetPos[0] ?  xo : w-xo;
            	_sy = sourcePos[1] < targetPos[1] ? yo:h-yo;
            	_tx = sourcePos[0] < targetPos[0] ? w-xo : xo;
            	_ty = sourcePos[1] < targetPos[1] ? h-yo : yo;
            
            	// now adjust for the margin
            	if (sourcePos[2] == 0) _sx -= margin;
            	if (sourcePos[2] == 1) _sx += margin;
            	if (sourcePos[3] == 0) _sy -= margin;
            	if (sourcePos[3] == 1) _sy += margin;
            	if (targetPos[2] == 0) _tx -= margin;
            	if (targetPos[2] == 1) _tx += margin;
            	if (targetPos[3] == 0) _ty -= margin;
            	if (targetPos[3] == 1) _ty += margin;

            	//
	            // these connectors are quadratic bezier curves, having a single control point. if both anchors 
    	        // are located at 0.5 on their respective faces, the control point is set to the midpoint and you
        	    // get a straight line.  this is also the case if the two anchors are within 'proximityLimit', since
           	 	// it seems to make good aesthetic sense to do that. outside of that, the control point is positioned 
           	 	// at 'curviness' pixels away along the normal to the straight line connecting the two anchors.
	            // 
   	        	// there may be two improvements to this.  firstly, we might actually support the notion of avoiding nodes
            	// in the UI, or at least making a good effort at doing so.  if a connection would pass underneath some node,
            	// for example, we might increase the distance the control point is away from the midpoint in a bid to
            	// steer it around that node.  this will work within limits, but i think those limits would also be the likely
            	// limits for, once again, aesthetic good sense in the layout of a chart using these connectors.
            	//
            	// the second possible change is actually two possible changes: firstly, it is possible we should gradually
            	// decrease the 'curviness' as the distance between the anchors decreases; start tailing it off to 0 at some
            	// point (which should be configurable).  secondly, we might slightly increase the 'curviness' for connectors
            	// with respect to how far their anchor is from the center of its respective face. this could either look cool,
            	// or stupid, and may indeed work only in a way that is so subtle as to have been a waste of time.
            	//

				var _midx = (_sx + _tx) / 2, _midy = (_sy + _ty) / 2, 
            	    m2 = (-1 * _midx) / _midy, theta2 = Math.atan(m2),
            	    dy =  (m2 == Infinity || m2 == -Infinity) ? 0 : Math.abs(curviness / 2 * Math.sin(theta2)),
				    dx =  (m2 == Infinity || m2 == -Infinity) ? 0 : Math.abs(curviness / 2 * Math.cos(theta2)),
				    segment = _segment(_sx, _sy, _tx, _ty),
				    distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2));
			
            	// calculate the control point.  this code will be where we'll put in a rudimentary element avoidance scheme; it
            	// will work by extending the control point to force the curve to be, um, curvier.
				_controlPoint = _findControlPoint(_midx,
                                                  _midy,
                                                  segment,
                                                  sourcePos,
                                                  targetPos,
                                                  curviness, curviness,
                                                  distance,
                                                  proximityLimit);

	            	
            	var requiredWidth = Math.max(Math.abs(_controlPoint[0] - _sx) * 3, Math.abs(_controlPoint[0] - _tx) * 3, Math.abs(_tx-_sx), 2 * lineWidth, minWidth),
            		requiredHeight = Math.max(Math.abs(_controlPoint[1] - _sy) * 3, Math.abs(_controlPoint[1] - _ty) * 3, Math.abs(_ty-_sy), 2 * lineWidth, minWidth);

            	if (w < requiredWidth) {      	
            		var dw = requiredWidth - w;            		
            		x -= (dw / 2);
            		_sx += (dw / 2);
            		_tx  += (dw / 2);
            		w = requiredWidth;
                    _controlPoint[0] += (dw / 2);
            	}
            	
            	if (h < requiredHeight) {
            		var dh = requiredHeight - h;
            		y -= (dh / 2);
            		_sy += (dh / 2);
            		_ty += (dh / 2);
            		h = requiredHeight;
                    _controlPoint[1] += (dh / 2);
            	}
            	currentPoints = [ x, y, w, h, _sx, _sy, _tx, _ty, _controlPoint[0], _controlPoint[1] ];                                        
            }
            else {
            	isLoopback = true;
            	// a loopback connector.  draw an arc from one anchor to the other.
            	// i guess we'll do this the same way as the others.  just the control point will be a fair distance away.
        		var x1 = sourcePos[0], x2 = sourcePos[0], y1 = sourcePos[1] - margin, y2 = sourcePos[1] - margin, 				
					cx = x1, cy = y1 - loopbackRadius;
				
				// canvas sizing stuff, to ensure the whole painted area is visible.
				w = ((2 * lineWidth) + (4 * loopbackRadius)), h = ((2 * lineWidth) + (4 * loopbackRadius));
				x = cx - loopbackRadius - lineWidth - loopbackRadius, y = cy - loopbackRadius - lineWidth - loopbackRadius;
				currentPoints = [ x, y, w, h, cx-x, cy-y, loopbackRadius, clockwise, x1-x, y1-y, x2-x, y2-y];
            }
                
            return currentPoints;
        };
        
        var _makeCurve = function() {
        	return [	
	        	{ x:_tx, y:_ty },
	        	{ x:_controlPoint[0], y:_controlPoint[1] },
	        	{ x:_controlPoint[0] + 1, y:_controlPoint[1] + 1},	        	
	        	{ x:_sx, y:_sy }
         	];
        };     
        
        /**
         * returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from
         * 0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.
         */
        this.pointOnPath = function(location) {   
			if (isLoopback) {

                if (location > 0 && location < 1) location = 1- location;
                
// current points are [ x, y, width, height, center x, center y, radius, clockwise, startx, starty, endx, endy ]				
				// so the path length is the circumference of the circle
				//var len = 2 * Math.PI * currentPoints[6],
				// map 'location' to an angle. 0 is PI/2 when the connector is on the top face; if we
				// support other faces it will have to be calculated for each one. 1 is also PI/2.
				// 0.5 is -PI/2.
				var startAngle = (location * 2 * Math.PI) + (Math.PI / 2),
					startX = currentPoints[4] + (currentPoints[6] * Math.cos(startAngle)),
					startY = currentPoints[5] + (currentPoints[6] * Math.sin(startAngle));					

                return {x:startX, y:startY};
					
			}
        	else return jsBezier.pointOnCurve(_makeCurve(), location);
        };
        
        /**
         * returns the gradient of the connector at the given point.
         */
        this.gradientAtPoint = function(location) {
			if (isLoopback)
				return Math.atan(location * 2 * Math.PI);
        	else
                return jsBezier.gradientAtPoint(_makeCurve(), location);
        };	        
        
        /**
         * for Bezier curves this method is a little tricky, cos calculating path distance algebraically is notoriously difficult.
         * this method is iterative, jumping forward .05% of the path at a time and summing the distance between this point and the previous
         * one, until the sum reaches 'distance'. the method may turn out to be computationally expensive; we'll see.
         * another drawback of this method is that if the connector gets quite long, .05% of the length of it is not necessarily smaller
         * than the desired distance, in which case the loop returns immediately and the arrow is mis-shapen. so a better strategy might be to
         * calculate the step as a function of distance/distance between endpoints.  
         */
        this.pointAlongPathFrom = function(location, distance) {        	
			if (isLoopback) {

                if (location > 0 && location < 1) location = 1- location;

				var circumference = 2 * Math.PI * currentPoints[6],
					arcSpan = distance / circumference * 2 * Math.PI,
					startAngle = (location * 2 * Math.PI) - arcSpan + (Math.PI / 2),	
					
					startX = currentPoints[4] + (currentPoints[6] * Math.cos(startAngle)),
					startY = currentPoints[5] + (currentPoints[6] * Math.sin(startAngle));	

				return {x:startX, y:startY};
			}
        	return jsBezier.pointAlongCurveFrom(_makeCurve(), location, distance);
        };                       
	
	};
	
	/*
     * Canvas state machine renderer. 
     */
    jsPlumb.Connectors.canvas.StateMachine = function(params) {   	 
    	params = params || {};
		var self = this, drawGuideline = params.drawGuideline || true, avoidSelector = params.avoidSelector;
		jsPlumb.Connectors.StateMachine.apply(this, arguments);
		jsPlumb.CanvasConnector.apply(this, arguments);
	
		
		this._paint = function(dimensions) {
			
			if (dimensions.length == 10) {
		        self.ctx.beginPath();
				self.ctx.moveTo(dimensions[4], dimensions[5]);
				self.ctx.bezierCurveTo(dimensions[8], dimensions[9], dimensions[8], dimensions[9], dimensions[6], dimensions[7]);
				self.ctx.stroke();            				
			}
			else {
				// a loopback connector
				self.ctx.save();
				self.ctx.beginPath();        	
	        	var startAngle = 0,                     // Starting point on circle
	        	endAngle   = 2 * Math.PI, // End point on circle
	        	clockwise  = dimensions[7]; // clockwise or anticlockwise 
	        	self.ctx.arc(dimensions[4],dimensions[5],dimensions[6],0, endAngle, clockwise);
				self.ctx.stroke();
				self.ctx.closePath();
				self.ctx.restore();
			}
	    };	    
	    
	    this.createGradient = function(dim, ctx) {
        	return ctx.createLinearGradient(dim[4], dim[5], dim[6], dim[7]);
        };
    };
    
    /*
     * SVG State Machine renderer
     */
    jsPlumb.Connectors.svg.StateMachine = function() {   	 
		var self = this;
		jsPlumb.Connectors.StateMachine.apply(this, arguments);
		jsPlumb.SvgConnector.apply(this, arguments);
		this.getPath = function(d) { 	
				
			if (d.length == 10) 
				return "M " + d[4] + " " + d[5] + " C " + d[8] + " " + d[9] + " " + d[8] + " " + d[9] + " " + d[6] + " " + d[7]; 
			else {
				// loopback
				return "M" + (d[8] + 4) + " " + d[9] + " A " + d[6] + " " + d[6] + " 0 1,0 " + (d[8]-4) + " " + d[9];			
			}
		};	    	    
    };
    
    /*
     * VML state machine renderer
     */
    jsPlumb.Connectors.vml.StateMachine = function() {
		jsPlumb.Connectors.StateMachine.apply(this, arguments);	
		jsPlumb.VmlConnector.apply(this, arguments);
		var _conv = jsPlumb.vml.convertValue;
		this.getPath = function(d) {	
			if (d.length == 10) {
				return "m" + _conv(d[4]) + "," + _conv(d[5]) + 
					   " c" + _conv(d[8]) + "," + _conv(d[9]) + "," + _conv(d[8]) + "," + _conv(d[9]) + "," + _conv(d[6]) + "," + _conv(d[7]) + " e";
			}
			else {
				// loopback
				var left = _conv(d[8] - d[6]),
					top = _conv(d[9] - (2 * d[6])),
					right = left + _conv(2 * d[6]),
					bottom = top + _conv(2 * d[6]),
					posString = left + "," + top + "," + right + "," + bottom;
					
				var o = "ar " + posString + "," + _conv(d[8]) + ","
						+ _conv(d[9]) + "," + _conv(d[8]) + "," + _conv(d[9]) + " e";
				
				 return o;
			}
		};
	};

})();

/*
    	// now for a rudimentary avoidance scheme. TODO: how to set this in a cross-library way?
        //      if (avoidSelector) {
		//		    var testLine = new Line(sourcePos[0] + _sx,sourcePos[1] + _sy,sourcePos[0] + _tx,sourcePos[1] + _ty);
		//		    var sel = jsPlumb.getSelector(avoidSelector);
		//		    for (var i = 0; i < sel.length; i++) {
		//			    var id = jsPlumb.getId(sel[i]);
		//			    if (id != sourceEndpoint.elementId && id != targetEndpoint.elementId) {
		//				    o = jsPlumb.getOffset(id), s = jsPlumb.getSize(id);
//
//						    if (o && s) {
//							    var collision = testLine.rectIntersect(o.left,o.top,s[0],s[1]);
//							    if (collision) {
								    // set the control point to be a certain distance from the midpoint of the two points that
								    // the line crosses on the rectangle.
								    // TODO where will this 75 number come from?
					//			    _controlX = collision[2][0] + (75 * collision[3][0]);
				//	/			    _controlY = collision[2][1] + (75 * collision[3][1]);
//							    }
//						    }
					//  }
	//			    }
              //}
    *//*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the VML renderers.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */

;(function() {
	
	// http://ajaxian.com/archives/the-vml-changes-in-ie-8
	// http://www.nczonline.net/blog/2010/01/19/internet-explorer-8-document-and-browser-modes/
	// http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/
	
	var vmlAttributeMap = {
		"stroke-linejoin":"joinstyle",
		"joinstyle":"joinstyle",		
		"endcap":"endcap",
		"miterlimit":"miterlimit"
	},
	jsPlumbStylesheet = null;
	
	if (document.createStyleSheet) {			
		
		var ruleClasses = [
				".jsplumb_vml", "jsplumb\\:textbox", "jsplumb\\:oval", "jsplumb\\:rect", 
				"jsplumb\\:stroke", "jsplumb\\:shape", "jsplumb\\:group"
			],
			rule = "behavior:url(#default#VML);position:absolute;";

		jsPlumbStylesheet = document.createStyleSheet();

		for (var i = 0; i < ruleClasses.length; i++)
			jsPlumbStylesheet.addRule(ruleClasses[i], rule);

		// in this page it is also mentioned that IE requires the extra arg to the namespace
		// http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/
		// but someone commented saying they didn't need it, and it seems jsPlumb doesnt need it either.
		// var iev = document.documentMode;
		//if (!iev || iev < 8)
			document.namespaces.add("jsplumb", "urn:schemas-microsoft-com:vml");
		//else
		//	document.namespaces.add("jsplumb", "urn:schemas-microsoft-com:vml", "#default#VML");
	}
	
	jsPlumb.vml = {};
	
	var scale = 1000,

    _groupMap = {},
    _getGroup = function(container, connectorClass) {
        var id = jsPlumb.getId(container),
            g = _groupMap[id];
        if(!g) {
            g = _node("group", [0,0,scale, scale], {"class":connectorClass});
            //g.style.position=absolute;
            //g["coordsize"] = "1000,1000";
            g.style.backgroundColor="red";
            _groupMap[id] = g;
            jsPlumb.appendElement(g, container);  // todo if this gets reinstated, remember to use the current jsplumb instance.
            //document.body.appendChild(g);
        }
        return g;
    },
	_atts = function(o, atts) {
		for (var i in atts) { 
			// IE8 fix: setattribute does not work after an element has been added to the dom!
			// http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/
			//o.setAttribute(i, atts[i]);

			/*There is an additional problem when accessing VML elements by using get/setAttribute. The simple solution is following:

			if (document.documentMode==8) {
			ele.opacity=1;
			} else {
			ele.setAttribute(‘opacity’,1);
			}
			*/

			o[i] = atts[i];
		}
	},
	_node = function(name, d, atts, parent, _jsPlumb) {
		atts = atts || {};
		var o = document.createElement("jsplumb:" + name);				
		_jsPlumb.appendElement(o, parent);
		o.className = (atts["class"] ? atts["class"] + " " : "") + "jsplumb_vml";
		_pos(o, d);
		_atts(o, atts);
		return o;
	},
	_pos = function(o,d) {
		o.style.left = d[0] + "px";		
		o.style.top =  d[1] + "px";
		o.style.width= d[2] + "px";
		o.style.height= d[3] + "px";
		o.style.position = "absolute";
	},
	_conv = jsPlumb.vml.convertValue = function(v) {
		return Math.floor(v * scale);
	},	
	// tests if the given style is "transparent" and then sets the appropriate opacity node to 0 if so,
	// or 1 if not.  TODO in the future, support variable opacity.
	_maybeSetOpacity = function(styleToWrite, styleToCheck, type, component) {
		if ("transparent" === styleToCheck)
			component.setOpacity(type, "0.0");
		else
			component.setOpacity(type, "1.0");
	},
	_applyStyles = function(node, style, component, _jsPlumb) {
		var styleToWrite = {};
		if (style.strokeStyle) {
			styleToWrite["stroked"] = "true";
			var strokeColor = jsPlumbUtil.convertStyle(style.strokeStyle, true);
			styleToWrite["strokecolor"] = strokeColor;
			_maybeSetOpacity(styleToWrite, strokeColor, "stroke", component);
			styleToWrite["strokeweight"] = style.lineWidth + "px";
		}
		else styleToWrite["stroked"] = "false";
		
		if (style.fillStyle) {
			styleToWrite["filled"] = "true";
			var fillColor = jsPlumbUtil.convertStyle(style.fillStyle, true);
			styleToWrite["fillcolor"] = fillColor;
			_maybeSetOpacity(styleToWrite, fillColor, "fill", component);
		}
		else styleToWrite["filled"] = "false";
		
		if(style["dashstyle"]) {
			if (component.strokeNode == null) {
				component.strokeNode = _node("stroke", [0,0,0,0], { dashstyle:style["dashstyle"] }, node, _jsPlumb);				
			}
			else
				component.strokeNode.dashstyle = style["dashstyle"];
		}					
		else if (style["stroke-dasharray"] && style["lineWidth"]) {
			var sep = style["stroke-dasharray"].indexOf(",") == -1 ? " " : ",",
			parts = style["stroke-dasharray"].split(sep),
			styleToUse = "";
			for(var i = 0; i < parts.length; i++) {
				styleToUse += (Math.floor(parts[i] / style.lineWidth) + sep);
			}
			if (component.strokeNode == null) {
				component.strokeNode = _node("stroke", [0,0,0,0], { dashstyle:styleToUse }, node, _jsPlumb);
				//node.appendChild(component.strokeNode);
			}
			else
				component.strokeNode.dashstyle = styleToUse;
		}
		
		_atts(node, styleToWrite);
	},
	/*
	 * Base class for Vml endpoints and connectors. Extends jsPlumbUIComponent. 
	 */
	VmlComponent = function() {				
		var self = this;		
		jsPlumb.jsPlumbUIComponent.apply(this, arguments);		
		this.opacityNodes = {
			"stroke":null,
			"fill":null
		};
		this.initOpacityNodes = function(vml) {
			self.opacityNodes["stroke"] = _node("stroke", [0,0,1,1], {opacity:"0.0"}, vml, self._jsPlumb);
			self.opacityNodes["fill"] = _node("fill", [0,0,1,1], {opacity:"0.0"}, vml, self._jsPlumb);							
		};
		this.setOpacity = function(type, value) {
			var node = self.opacityNodes[type];
			if (node) node["opacity"] = "" + value;
		};
		var displayElements = [ ];
		this.getDisplayElements = function() { 
			return displayElements; 
		};
		
		this.appendDisplayElement = function(el, doNotAppendToCanvas) {
			if (!doNotAppendToCanvas) self.canvas.parentNode.appendChild(el);
			displayElements.push(el);
		};
	},	
	/*
	 * Base class for Vml connectors. extends VmlComponent.
	 */
	VmlConnector = jsPlumb.VmlConnector = function(params) {
		var self = this;
		self.strokeNode = null;
		self.canvas = null;
		VmlComponent.apply(this, arguments);
		var clazz = self._jsPlumb.connectorClass + (params.cssClass ? (" " + params.cssClass) : "");
		this.paint = function(d, style, anchor) {
			if (style != null) {				
				var path = self.getPath(d), p = { "path":path };				

                //*
				if (style.outlineColor) {
					var outlineWidth = style.outlineWidth || 1,
					outlineStrokeWidth = style.lineWidth + (2 * outlineWidth),
					outlineStyle = {
						strokeStyle : jsPlumbUtil.convertStyle(style.outlineColor),
						lineWidth : outlineStrokeWidth
					};
					for (var aa in vmlAttributeMap) outlineStyle[aa] = style[aa];
					
					if (self.bgCanvas == null) {						
						p["class"] = clazz;
						p["coordsize"] = (d[2] * scale) + "," + (d[3] * scale);
						self.bgCanvas = _node("shape", d, p, params.parent, self._jsPlumb);						
						_pos(self.bgCanvas, d);
						self.appendDisplayElement(self.bgCanvas, true);	
						self.attachListeners(self.bgCanvas, self);					
						self.initOpacityNodes(self.bgCanvas, ["stroke"]);		
					}
					else {
						p["coordsize"] = (d[2] * scale) + "," + (d[3] * scale);
						_pos(self.bgCanvas, d);
						_atts(self.bgCanvas, p);
					}
					
					_applyStyles(self.bgCanvas, outlineStyle, self);
				}
				//*/
				
				if (self.canvas == null) {										
					p["class"] = clazz;
					p["coordsize"] = (d[2] * scale) + "," + (d[3] * scale);
					if (self.tooltip) p["label"] = self.tooltip;
					self.canvas = _node("shape", d, p, params.parent, self._jsPlumb);					                
                    //var group = _getGroup(params.parent);                   // test of append everything to a group
                    //group.appendChild(self.canvas);                           // sort of works but not exactly;
					//params["_jsPlumb"].appendElement(self.canvas, params.parent);    //before introduction of groups

					self.appendDisplayElement(self.canvas, true);										
					self.attachListeners(self.canvas, self);					
					self.initOpacityNodes(self.canvas, ["stroke"]);		
				}
				else {
					p["coordsize"] = (d[2] * scale) + "," + (d[3] * scale);
					_pos(self.canvas, d);
					_atts(self.canvas, p);
				}
				
				_applyStyles(self.canvas, style, self, self._jsPlumb);
			}
		};
		
		//self.appendDisplayElement(self.canvas);
		
		this.reattachListeners = function() {
			if (self.canvas) self.reattachListenersForElement(self.canvas, self);
		};
	},		
	/*
	 * 
	 * Base class for Vml Endpoints. extends VmlComponent.
	 * 
	 */
	VmlEndpoint = window.VmlEndpoint = function(params) {
		VmlComponent.apply(this, arguments);
		var vml = null, self = this, opacityStrokeNode = null, opacityFillNode = null;
		self.canvas = document.createElement("div");
		self.canvas.style["position"] = "absolute";

		var clazz = self._jsPlumb.endpointClass + (params.cssClass ? (" " + params.cssClass) : "");

		//var group = _getGroup(params.parent);
        //group.appendChild(self.canvas);
		params["_jsPlumb"].appendElement(self.canvas, params.parent);

        if (self.tooltip) self.canvas.setAttribute("label", self.tooltip);
		
		this.paint = function(d, style, anchor) {
			var p = { };					
			
			jsPlumb.sizeCanvas(self.canvas, d[0], d[1], d[2], d[3]);
			if (vml == null) {
				p["class"] = clazz;
				vml = self.getVml([0,0, d[2], d[3]], p, anchor, self.canvas, self._jsPlumb);				
				self.attachListeners(vml, self);

				self.appendDisplayElement(vml, true);
				self.appendDisplayElement(self.canvas, true);
				
				self.initOpacityNodes(vml, ["fill"]);			
			}
			else {				
				_pos(vml, [0,0, d[2], d[3]]);
				_atts(vml, p);
			}
			
			_applyStyles(vml, style, self);
		};
		
		this.reattachListeners = function() {
			if (vml) self.reattachListenersForElement(vml, self);
		};
	};
	
	jsPlumb.Connectors.vml.Bezier = function() {
		jsPlumb.Connectors.Bezier.apply(this, arguments);	
		VmlConnector.apply(this, arguments);
		this.getPath = function(d) {			
			return "m" + _conv(d[4]) + "," + _conv(d[5]) + 
				   " c" + _conv(d[8]) + "," + _conv(d[9]) + "," + _conv(d[10]) + "," + _conv(d[11]) + "," + _conv(d[6]) + "," + _conv(d[7]) + " e";
		};
	};
	
	jsPlumb.Connectors.vml.Straight = function() {
		jsPlumb.Connectors.Straight.apply(this, arguments);	
		VmlConnector.apply(this, arguments);
		this.getPath = function(d) {
			return "m" + _conv(d[4]) + "," + _conv(d[5]) + " l" + _conv(d[6]) + "," + _conv(d[7]) + " e";
		};
	};
	
	jsPlumb.Connectors.vml.Flowchart = function() {
    	jsPlumb.Connectors.Flowchart.apply(this, arguments);
		VmlConnector.apply(this, arguments);
    	this.getPath = function(dimensions) {
    		var p = "m " + _conv(dimensions[4]) + "," + _conv(dimensions[5]) + " l";
	        // loop through extra points
	        for (var i = 0; i < dimensions[8]; i++) {
	        	p = p + " " + _conv(dimensions[9 + (i*2)]) + "," + _conv(dimensions[10 + (i*2)]);
	        }
	        // finally draw a line to the end
	        p = p  + " " + _conv(dimensions[6]) + "," +  _conv(dimensions[7]) + " e";
	        return p;
    	};
    };
	
	jsPlumb.Endpoints.vml.Dot = function() {
		jsPlumb.Endpoints.Dot.apply(this, arguments);
		VmlEndpoint.apply(this, arguments);
		this.getVml = function(d, atts, anchor, parent, _jsPlumb) { return _node("oval", d, atts, parent, _jsPlumb); };
	};
	
	jsPlumb.Endpoints.vml.Rectangle = function() {
		jsPlumb.Endpoints.Rectangle.apply(this, arguments);
		VmlEndpoint.apply(this, arguments);
		this.getVml = function(d, atts, anchor, parent, _jsPlumb) { return _node("rect", d, atts, parent, _jsPlumb); };
	};
	
	/*
	 * VML Image Endpoint is the same as the default image endpoint.
	 */
	jsPlumb.Endpoints.vml.Image = jsPlumb.Endpoints.Image;
	
	/**
	 * placeholder for Blank endpoint in vml renderer.
	 */
	jsPlumb.Endpoints.vml.Blank = jsPlumb.Endpoints.Blank;
	
	/**
	 * VML Label renderer. uses the default label renderer (which adds an element to the DOM)
	 */
	jsPlumb.Overlays.vml.Label  = jsPlumb.Overlays.Label;
	
	var AbstractVmlArrowOverlay = function(superclass, originalArgs) {
    	superclass.apply(this, originalArgs);
    	VmlComponent.apply(this, originalArgs);
    	var self = this, path = null;
    	self.canvas = null; 
    	self.isAppendedAtTopLevel = true;
    	var getPath = function(d, connectorDimensions) {    		
    		return "m " + _conv(d.hxy.x) + "," + _conv(d.hxy.y) +
    		       " l " + _conv(d.tail[0].x) + "," + _conv(d.tail[0].y) + 
    		       " " + _conv(d.cxy.x) + "," + _conv(d.cxy.y) + 
    		       " " + _conv(d.tail[1].x) + "," + _conv(d.tail[1].y) + 
    		       " x e";
    	};
    	this.paint = function(connector, d, lineWidth, strokeStyle, fillStyle, connectorDimensions) {
    		var p = {};
			if (strokeStyle) {
				p["stroked"] = "true";
				p["strokecolor"] = jsPlumbUtil.convertStyle(strokeStyle, true);    				
			}
			if (lineWidth) p["strokeweight"] = lineWidth + "px";
			if (fillStyle) {
				p["filled"] = "true";
				p["fillcolor"] = fillStyle;
			}
			var xmin = Math.min(d.hxy.x, d.tail[0].x, d.tail[1].x, d.cxy.x),
			ymin = Math.min(d.hxy.y, d.tail[0].y, d.tail[1].y, d.cxy.y),
			xmax = Math.max(d.hxy.x, d.tail[0].x, d.tail[1].x, d.cxy.x),
			ymax = Math.max(d.hxy.y, d.tail[0].y, d.tail[1].y, d.cxy.y),
			w = Math.abs(xmax - xmin),
			h = Math.abs(ymax - ymin),
			dim = [xmin, ymin, w, h];
			
			// for VML, we create overlays using shapes that have the same dimensions and
			// coordsize as their connector - overlays calculate themselves relative to the
			// connector (it's how it's been done since the original canvas implementation, because
			// for canvas that makes sense).
			p["path"] = getPath(d, connectorDimensions);
			p["coordsize"] = (connectorDimensions[2] * scale) + "," + (connectorDimensions[3] * scale);
			
			dim[0] = connectorDimensions[0];
			dim[1] = connectorDimensions[1];
			dim[2] = connectorDimensions[2];
			dim[3] = connectorDimensions[3];
			
    		if (self.canvas == null) {
    			//p["class"] = jsPlumb.overlayClass; // TODO currentInstance?
				self.canvas = _node("shape", dim, p, connector.canvas.parentNode, connector._jsPlumb);								
				connector.appendDisplayElement(self.canvas, true);
				self.attachListeners(self.canvas, connector);
				self.attachListeners(self.canvas, self);
			}
			else {				
				_pos(self.canvas, dim);
				_atts(self.canvas, p);
			}    		
    	};
    	
    	this.reattachListeners = function() {
			if (self.canvas) self.reattachListenersForElement(self.canvas, self);
		};

		this.cleanup = function() {
    		if (self.canvas != null) jsPlumb.CurrentLibrary.removeElement(self.canvas);
    	};
    };
	
	jsPlumb.Overlays.vml.Arrow = function() {
    	AbstractVmlArrowOverlay.apply(this, [jsPlumb.Overlays.Arrow, arguments]);    	
    };
    
    jsPlumb.Overlays.vml.PlainArrow = function() {
    	AbstractVmlArrowOverlay.apply(this, [jsPlumb.Overlays.PlainArrow, arguments]);    	
    };
    
    jsPlumb.Overlays.vml.Diamond = function() {
    	AbstractVmlArrowOverlay.apply(this, [jsPlumb.Overlays.Diamond, arguments]);    	
    };
})();/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the SVG renderers.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */

/**
 * SVG support for jsPlumb.
 * 
 * things to investigate:
 * 
 * gradients:  https://developer.mozilla.org/en/svg_in_html_introduction
 * css:http://tutorials.jenkov.com/svg/svg-and-css.html
 * text on a path: http://www.w3.org/TR/SVG/text.html#TextOnAPath
 * pointer events: https://developer.mozilla.org/en/css/pointer-events
 *
 * IE9 hover jquery: http://forum.jquery.com/topic/1-6-2-broke-svg-hover-events
 *
 */
;(function() {
	
	var svgAttributeMap = {
		"joinstyle":"stroke-linejoin",
		"stroke-linejoin":"stroke-linejoin",		
		"stroke-dashoffset":"stroke-dashoffset",
		"stroke-linecap":"stroke-linecap"
	},
	STROKE_DASHARRAY = "stroke-dasharray",
	DASHSTYLE = "dashstyle",
	LINEAR_GRADIENT = "linearGradient",
	RADIAL_GRADIENT = "radialGradient",
	FILL = "fill",
	STOP = "stop",
	STROKE = "stroke",
	STROKE_WIDTH = "stroke-width",
	STYLE = "style",
	NONE = "none",
	JSPLUMB_GRADIENT = "jsplumb_gradient_",
	LINE_WIDTH = "lineWidth",
	ns = {
		svg:"http://www.w3.org/2000/svg",
		xhtml:"http://www.w3.org/1999/xhtml"
	},
	_attr = function(node, attributes) {
		for (var i in attributes)
			node.setAttribute(i, "" + attributes[i]);
	},	
	_node = function(name, attributes) {
		var n = document.createElementNS(ns.svg, name);
		attributes = attributes || {};
		attributes["version"] = "1.1";
		attributes["xmlns"] = ns.xhtml;
		_attr(n, attributes);
		return n;
	},
	_pos = function(d) { return "position:absolute;left:" + d[0] + "px;top:" + d[1] + "px"; },	
	_clearGradient = function(parent) {
		for (var i = 0; i < parent.childNodes.length; i++) {
			if (parent.childNodes[i].tagName == LINEAR_GRADIENT || parent.childNodes[i].tagName == RADIAL_GRADIENT)
				parent.removeChild(parent.childNodes[i]);
		}
	},		
	_updateGradient = function(parent, node, style, dimensions, uiComponent) {
		var id = JSPLUMB_GRADIENT + uiComponent._jsPlumb.idstamp();
		// first clear out any existing gradient
		_clearGradient(parent);
		// this checks for an 'offset' property in the gradient, and in the absence of it, assumes
		// we want a linear gradient. if it's there, we create a radial gradient.
		// it is possible that a more explicit means of defining the gradient type would be
		// better. relying on 'offset' means that we can never have a radial gradient that uses
		// some default offset, for instance.
		// issue 244 suggested the 'gradientUnits' attribute; without this, straight/flowchart connectors with gradients would
		// not show gradients when the line was perfectly horizontal or vertical.
		if (!style.gradient.offset) {
			var g = _node(LINEAR_GRADIENT, {id:id, gradientUnits:"userSpaceOnUse"});
			parent.appendChild(g);
		}
		else {
			var g = _node(RADIAL_GRADIENT, {
				id:id
			});
			parent.appendChild(g);
		}
		
		// the svg radial gradient seems to treat stops in the reverse 
		// order to how canvas does it.  so we want to keep all the maths the same, but
		// iterate the actual style declarations in reverse order, if the x indexes are not in order.
		for (var i = 0; i < style.gradient.stops.length; i++) {
			// Straight Connectors and Bezier connectors act slightly differently; this code is a bit of a kludge.  but next version of
			// jsplumb will be replacing both Straight and Bezier to be generic instances of 'Connector', which has a list of segments.
			// so, not too concerned about leaving this in for now.
			var styleToUse = i;
			if (dimensions.length == 8) 
				styleToUse = dimensions[4] < dimensions[6] ? i: style.gradient.stops.length - 1 - i;
			else
				styleToUse = dimensions[4] < dimensions[6] ? style.gradient.stops.length - 1 - i : i;
			var stopColor = jsPlumbUtil.convertStyle(style.gradient.stops[styleToUse][1], true);
			var s = _node(STOP, {"offset":Math.floor(style.gradient.stops[i][0] * 100) + "%", "stop-color":stopColor});
			g.appendChild(s);
		}
		var applyGradientTo = style.strokeStyle ? STROKE : FILL;
		node.setAttribute(STYLE, applyGradientTo + ":url(#" + id + ")");
	},
	_applyStyles = function(parent, node, style, dimensions, uiComponent) {
		
		if (style.gradient) {
			_updateGradient(parent, node, style, dimensions, uiComponent);			
		}
		else {
			// make sure we clear any existing gradient
			_clearGradient(parent);
			node.setAttribute(STYLE, "");
		}
		
		node.setAttribute(FILL, style.fillStyle ? jsPlumbUtil.convertStyle(style.fillStyle, true) : NONE);
		node.setAttribute(STROKE, style.strokeStyle ? jsPlumbUtil.convertStyle(style.strokeStyle, true) : NONE);		
		if (style.lineWidth) {
			node.setAttribute(STROKE_WIDTH, style.lineWidth);
		}
	
		// in SVG there is a stroke-dasharray attribute we can set, and its syntax looks like
		// the syntax in VML but is actually kind of nasty: values are given in the pixel
		// coordinate space, whereas in VML they are multiples of the width of the stroked
		// line, which makes a lot more sense.  for that reason, jsPlumb is supporting both
		// the native svg 'stroke-dasharray' attribute, and also the 'dashstyle' concept from
		// VML, which will be the preferred method.  the code below this converts a dashstyle
		// attribute given in terms of stroke width into a pixel representation, by using the
		// stroke's lineWidth. 
		if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {
			var sep = style[DASHSTYLE].indexOf(",") == -1 ? " " : ",",
			parts = style[DASHSTYLE].split(sep),
			styleToUse = "";
			parts.forEach(function(p) {
				styleToUse += (Math.floor(p * style.lineWidth) + sep);
			});
			node.setAttribute(STROKE_DASHARRAY, styleToUse);
		}		
		else if(style[STROKE_DASHARRAY]) {
			node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);
		}
		
		// extra attributes such as join type, dash offset.
		for (var i in svgAttributeMap) {
			if (style[i]) {
				node.setAttribute(svgAttributeMap[i], style[i]);
			}
		}
	},
	_decodeFont = function(f) {
		var r = /([0-9].)(p[xt])\s(.*)/;
		var bits = f.match(r);
		return {size:bits[1] + bits[2], font:bits[3]};		
	},
	_classManip = function(el, add, clazz) {
		var classesToAddOrRemove = clazz.split(" "),
			className = el.className,
			curClasses = className.baseVal.split(" ");
			
		for (var i = 0; i < classesToAddOrRemove.length; i++) {
			if (add) {
				if (curClasses.indexOf(classesToAddOrRemove[i]) == -1)
					curClasses.push(classesToAddOrRemove[i]);
			}
			else {
				var idx = curClasses.indexOf(classesToAddOrRemove[i]);
				if (idx != -1)
					curClasses.splice(idx, 1);
			}
		}
		
		el.className.baseVal = curClasses.join(" ");
	},
	_addClass = function(el, clazz) {
		_classManip(el, true, clazz);
	},
	_removeClass = function(el, clazz) {
		_classManip(el, false, clazz);
	};
	
	/**
		utility methods for other objects to use.
	*/
	jsPlumbUtil.svg = {
		addClass:_addClass,
		removeClass:_removeClass,
		node:_node,
		attr:_attr,
		pos:_pos
	};
	
	/*
	 * Base class for SVG components.
	 */
	//var SvgComponent = function(cssClass, originalArgs, pointerEventsSpec) {
	var SvgComponent = function(params) {
		var self = this,
		pointerEventsSpec = params.pointerEventsSpec || "all";
		jsPlumb.jsPlumbUIComponent.apply(this, params.originalArgs);
		self.canvas = null, self.path = null, self.svg = null; 
	
		var clazz = params.cssClass + " " + (params.originalArgs[0].cssClass || ""),		
			svgParams = {
				"style":"",
				"width":0,
				"height":0,
				"pointer-events":pointerEventsSpec,
				"position":"absolute"
			};
		if (self.tooltip) svgParams["title"] = self.tooltip;
		self.svg = _node("svg", svgParams);
		if (params.useDivWrapper) {
			self.canvas = document.createElement("div");
			self.canvas.style["position"] = "absolute";
			jsPlumb.sizeCanvas(self.canvas,0,0,1,1);
			self.canvas.className = clazz;
			if (self.tooltip) self.canvas.setAttribute("title", self.tooltip);
		}
		else {
			_attr(self.svg, { "class":clazz });
			self.canvas = self.svg;
		}
			
		params._jsPlumb.appendElement(self.canvas, params.originalArgs[0]["parent"]);
		if (params.useDivWrapper) self.canvas.appendChild(self.svg);
		
		// TODO this displayElement stuff is common between all components, across all
		// renderers.  would be best moved to jsPlumbUIComponent.
		var displayElements = [ self.canvas ];
		this.getDisplayElements = function() { 
			return displayElements; 
		};
		
		this.appendDisplayElement = function(el) {
			displayElements.push(el);
		};
		
		this.paint = function(d, style, anchor) {	   
			if (style != null) {
				var x = d[0], y = d[1];
				if (params.useDivWrapper) {
					jsPlumb.sizeCanvas(self.canvas, d[0], d[1], d[2], d[3]);
					x = 0, y = 0;
				}
		    	_attr(self.svg, {
	    			"style":_pos([x, y, d[2], d[3]]),
	    			"width": d[2],
	    			"height": d[3]
	    		});
		    	self._paint.apply(this, arguments);		    			    	
			}
	    };	
	};
	
	/*
	 * Base class for SVG connectors.
	 */
	var SvgConnector = jsPlumb.SvgConnector = function(params) {
		var self = this;
		SvgComponent.apply(this, [ { 
			cssClass:params["_jsPlumb"].connectorClass, 
			originalArgs:arguments, 
			pointerEventsSpec:"none", 
			tooltip:params.tooltip,
			_jsPlumb:params["_jsPlumb"] 
		} ]);
		this._paint = function(d, style) {
			var p = self.getPath(d), a = { "d":p }, outlineStyle = null;									
			a["pointer-events"] = "all";
			
			// outline style.  actually means drawing an svg object underneath the main one.
			if (style.outlineColor) {
				var outlineWidth = style.outlineWidth || 1,
				outlineStrokeWidth = style.lineWidth + (2 * outlineWidth),
				outlineStyle = jsPlumb.CurrentLibrary.extend({}, style);
				outlineStyle.strokeStyle = jsPlumbUtil.convertStyle(style.outlineColor);
				outlineStyle.lineWidth = outlineStrokeWidth;
				
				if (self.bgPath == null) {
					self.bgPath = _node("path", a);
			    	self.svg.appendChild(self.bgPath);
		    		self.attachListeners(self.bgPath, self);
				}
				else {
					_attr(self.bgPath, a);
				}
				
				_applyStyles(self.svg, self.bgPath, outlineStyle, d, self);
			}
			
			
			// test - see below
	    	//	a["clip-path"]= "url(#testClip)"; 
			
	    	if (self.path == null) {
		    	self.path = _node("path", a);
		    	self.svg.appendChild(self.path);
	    		self.attachListeners(self.path, self);	    	
	    		
	    		/*
	    		this is a test of a clip path.  i'm looking into using one of these to animate a jsplumb connection.
	    		you could do this by walking along the line, stepping along a little at a time, and setting the clip
	    		path to extend as far as that point.
	    		
	    		self.clip = _node("clipPath", {id:"testClip", clipPathUnits:"objectBoundingBox"});
	    		self.svg.appendChild(self.clip);
	    		self.clip.appendChild(_node("rect", {
	    			x:"0",y:"0",width:"0.5",height:"1" 
	    		}));
	    		*/
	    	}
	    	else {
	    		_attr(self.path, a);
	    	}
	    		    	
	    	_applyStyles(self.svg, self.path, style, d, self);
		};
		
		this.reattachListeners = function() {
			if (self.bgPath) self.reattachListenersForElement(self.bgPath, self);
			if (self.path) self.reattachListenersForElement(self.path, self);
		};
			
	};		

	/*
	 * SVG Bezier Connector
	 */
	jsPlumb.Connectors.svg.Bezier = function(params) {	
		jsPlumb.Connectors.Bezier.apply(this, arguments);
		SvgConnector.apply(this, arguments);	
		this.getPath = function(d) {
			var _p = "M " + d[4] + " " + d[5];						
			_p += (" C " + d[8] + " " + d[9] + " " + d[10] + " " + d[11] + " " + d[6] + " " + d[7]);			
			return _p;
		};
	};
	
	/*
	 * SVG straight line Connector
	 */
	jsPlumb.Connectors.svg.Straight = function(params) {			
		jsPlumb.Connectors.Straight.apply(this, arguments);
		SvgConnector.apply(this, arguments);	    		    
	    this.getPath = function(d) { return "M " + d[4] + " " + d[5] + " L " + d[6] + " " + d[7]; };	    
	};
	
	jsPlumb.Connectors.svg.Flowchart = function() {
    	var self = this;
    	jsPlumb.Connectors.Flowchart.apply(this, arguments);
		SvgConnector.apply(this, arguments);
    	this.getPath = function(dimensions) {
    		var p = "M " + dimensions[4] + "," + dimensions[5];
	        // loop through extra points
	        for (var i = 0; i < dimensions[8]; i++) {
	        	p = p + " L " + dimensions[9 + (i*2)] + " " + dimensions[10 + (i*2)];
	        }
	        // finally draw a line to the end
	        p = p  + " " + dimensions[6] + "," +  dimensions[7];
	        return p;
    	};
    };
    
    /*
	 * Base class for SVG endpoints.
	 */
	var SvgEndpoint = window.SvgEndpoint = function(params) {
		var self = this;
		SvgComponent.apply(this, [ {
			cssClass:params["_jsPlumb"].endpointClass, 
			originalArgs:arguments, 
			pointerEventsSpec:"all",
			useDivWrapper:true,
			_jsPlumb:params["_jsPlumb"]
		} ]);
		this._paint = function(d, style) {
			var s = jsPlumb.extend({}, style);
			if (s.outlineColor) {
				s.strokeWidth = s.outlineWidth;
				s.strokeStyle = jsPlumbUtil.convertStyle(s.outlineColor, true);
			}
			
			if (self.node == null) {
				self.node = self.makeNode(d, s);
				self.svg.appendChild(self.node);
				self.attachListeners(self.node, self);
			}
			_applyStyles(self.svg, self.node, s, d, self);
			_pos(self.node, d);
		};
		
		this.reattachListeners = function() {
			if (self.node) self.reattachListenersForElement(self.node, self);
		};
	};
	
	/*
	 * SVG Dot Endpoint
	 */
	jsPlumb.Endpoints.svg.Dot = function() {
		jsPlumb.Endpoints.Dot.apply(this, arguments);
		SvgEndpoint.apply(this, arguments);		
		this.makeNode = function(d, style) { 
			return _node("circle", {
					"cx"	:	d[2] / 2,
					"cy"	:	d[3] / 2,
					"r"		:	d[2] / 2
				});			
		};
	};
	
	/*
	 * SVG Rectangle Endpoint 
	 */
	jsPlumb.Endpoints.svg.Rectangle = function() {
		jsPlumb.Endpoints.Rectangle.apply(this, arguments);
		SvgEndpoint.apply(this, arguments);		
		this.makeNode = function(d, style) {
			return _node("rect", {
				"width":d[2],
				"height":d[3]
			});
		};			
	};		
	
	/*
	 * SVG Image Endpoint is the default image endpoint.
	 */
	jsPlumb.Endpoints.svg.Image = jsPlumb.Endpoints.Image;
	/*
	 * Blank endpoint in svg renderer is the default Blank endpoint.
	 */
	jsPlumb.Endpoints.svg.Blank = jsPlumb.Endpoints.Blank;	
	/*
	 * Label endpoint in svg renderer is the default Label endpoint.
	 */
	jsPlumb.Overlays.svg.Label = jsPlumb.Overlays.Label;
		
	var AbstractSvgArrowOverlay = function(superclass, originalArgs) {
    	superclass.apply(this, originalArgs);
    	jsPlumb.jsPlumbUIComponent.apply(this, originalArgs);
        this.isAppendedAtTopLevel = false;
    	var self = this, path = null;
    	this.paint = function(connector, d, lineWidth, strokeStyle, fillStyle) {
    		if (path == null) {
    			path = _node("path", {
    				"pointer-events":"all"	
    			});
    			connector.svg.appendChild(path);
    			
    			self.attachListeners(path, connector);
    			self.attachListeners(path, self);
    		}
    		var clazz = originalArgs && (originalArgs.length == 1) ? (originalArgs[0].cssClass || "") : "";
    		
    		_attr(path, { 
    			"d"		:	makePath(d),
    			"class" :	clazz,
    			stroke 	: 	strokeStyle ? strokeStyle : null,
    			fill 	: 	fillStyle ? fillStyle : null
    		});    		
    	};
    	var makePath = function(d) {
    		return "M" + d.hxy.x + "," + d.hxy.y +
    				" L" + d.tail[0].x + "," + d.tail[0].y + 
    				" L" + d.cxy.x + "," + d.cxy.y + 
    				" L" + d.tail[1].x + "," + d.tail[1].y + 
    				" L" + d.hxy.x + "," + d.hxy.y;
    	};
    	this.reattachListeners = function() {
			if (path) self.reattachListenersForElement(path, self);
		};
		this.cleanup = function() {
    		if (path != null) jsPlumb.CurrentLibrary.removeElement(path);
    	};
    };
    
    jsPlumb.Overlays.svg.Arrow = function() {
    	AbstractSvgArrowOverlay.apply(this, [jsPlumb.Overlays.Arrow, arguments]);    	
    };
    
    jsPlumb.Overlays.svg.PlainArrow = function() {
    	AbstractSvgArrowOverlay.apply(this, [jsPlumb.Overlays.PlainArrow, arguments]);    	
    };
    
    jsPlumb.Overlays.svg.Diamond = function() {
    	AbstractSvgArrowOverlay.apply(this, [jsPlumb.Overlays.Diamond, arguments]);    	
    };

    // a test
    jsPlumb.Overlays.svg.GuideLines = function() {
        var path = null, self = this, path2 = null, p1_1, p1_2;
        jsPlumb.Overlays.GuideLines.apply(this, arguments);
        this.paint = function(connector, d, lineWidth, strokeStyle, fillStyle) {
    		if (path == null) {
    			path = _node("path");
    			connector.svg.appendChild(path);
    			self.attachListeners(path, connector);
    			self.attachListeners(path, self);

                p1_1 = _node("path");
    			connector.svg.appendChild(p1_1);
    			self.attachListeners(p1_1, connector);
    			self.attachListeners(p1_1, self);

                p1_2 = _node("path");
    			connector.svg.appendChild(p1_2);
    			self.attachListeners(p1_2, connector);
    			self.attachListeners(p1_2, self);

    		}

    		_attr(path, {
    			"d"		:	makePath(d[0], d[1]),
    			stroke 	: 	"red",
    			fill 	: 	null
    		});

            _attr(p1_1, {
    			"d"		:	makePath(d[2][0], d[2][1]),
    			stroke 	: 	"blue",
    			fill 	: 	null
    		});

            _attr(p1_2, {
    			"d"		:	makePath(d[3][0], d[3][1]),
    			stroke 	: 	"green",
    			fill 	: 	null
    		});
    	};

        var makePath = function(d1, d2) {
            return "M " + d1.x + "," + d1.y +
                   " L" + d2.x + "," + d2.y;
        };

    };
})();/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the HTML5 canvas renderers.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */

;(function() {
	
// ********************************* CANVAS RENDERERS FOR CONNECTORS AND ENDPOINTS *******************************************************************
		
	// TODO refactor to renderer common script.  put a ref to jsPlumb.sizeCanvas in there too.
	var _connectionBeingDragged = null,
	    _hasClass = function(el, clazz) { return jsPlumb.CurrentLibrary.hasClass(_getElementObject(el), clazz); },
	    _getElementObject = function(el) { return jsPlumb.CurrentLibrary.getElementObject(el); },
	    _getOffset = function(el) { return jsPlumb.CurrentLibrary.getOffset(_getElementObject(el)); },
	    _pageXY = function(el) { return jsPlumb.CurrentLibrary.getPageXY(el); },
	    _clientXY = function(el) { return jsPlumb.CurrentLibrary.getClientXY(el); };
	
	/*
	 * Class:CanvasMouseAdapter
	 * Provides support for mouse events on canvases.  
	 */
	var CanvasMouseAdapter = function() {
		var self = this;
		self.overlayPlacements = [];
		jsPlumb.jsPlumbUIComponent.apply(this, arguments);
		jsPlumbUtil.EventGenerator.apply(this, arguments);
		/**
		 * returns whether or not the given event is ojver a painted area of the canvas. 
		 */
	    this._over = function(e) {		    			  		    	
	    	var o = _getOffset(_getElementObject(self.canvas)),
	    	pageXY = _pageXY(e),
	    	x = pageXY[0] - o.left, y = pageXY[1] - o.top;
	    	if (x > 0 && y > 0 && x < self.canvas.width && y < self.canvas.height) {
		    	// first check overlays
		    	for ( var i = 0; i < self.overlayPlacements.length; i++) {
		    		var p = self.overlayPlacements[i];
		    		if (p && (p[0] <= x && p[1] >= x && p[2] <= y && p[3] >= y))
		    			return true;
		    	}
		    	
		    	// then the canvas
		    	var d = self.canvas.getContext("2d").getImageData(parseInt(x), parseInt(y), 1, 1);
		    	return d.data[0] != 0 || d.data[1] != 0 || d.data[2] != 0 || d.data[3] != 0;		  
	    	}
	    	return false;
	    };
	    
	    var _mouseover = false, _mouseDown = false, _posWhenMouseDown = null, _mouseWasDown = false,
	    _nullSafeHasClass = function(el, clazz) {
	    	return el != null && _hasClass(el, clazz);
	    };
	    this.mousemove = function(e) {		    
	    	var pageXY = _pageXY(e), clientXY = _clientXY(e),	   
	    	ee = document.elementFromPoint(clientXY[0], clientXY[1]),
	    	eventSourceWasOverlay = _nullSafeHasClass(ee, "_jsPlumb_overlay");	    	
			var _continue = _connectionBeingDragged == null && (_nullSafeHasClass(ee, "_jsPlumb_endpoint") || _nullSafeHasClass(ee, "_jsPlumb_connector"));
			if (!_mouseover && _continue && self._over(e)) {
				_mouseover = true;
				self.fire("mouseenter", self, e);		
				return true;
			}
			// TODO here there is a remote chance that the overlay the mouse moved onto
			// is actually not an overlay for the current component. a more thorough check would
			// be to ensure the overlay belonged to the current component.  
			else if (_mouseover && (!self._over(e) || !_continue) && !eventSourceWasOverlay) {
				_mouseover = false;
				self.fire("mouseexit", self, e);				
			}
			self.fire("mousemove", self, e);
	    };
	    		    		    
	    this.click = function(e) {	    		
	    	if (_mouseover && self._over(e) && !_mouseWasDown) 
	    		self.fire("click", self, e);		    	
	    	_mouseWasDown = false;
	    };
	    
	    this.dblclick = function(e) {
	    	if (_mouseover && self._over(e) && !_mouseWasDown) 
	    		self.fire("dblclick", self, e);		    	
	    	_mouseWasDown = false;
	    };
	    
	    this.mousedown = function(e) {
	    	if(self._over(e) && !_mouseDown) {
	    		_mouseDown = true;	    		
	    		_posWhenMouseDown = _getOffset(_getElementObject(self.canvas));
	    		self.fire("mousedown", self, e);
	    	}
	    };
	    
	    this.mouseup = function(e) {
	    	_mouseDown = false;
	    	self.fire("mouseup", self, e);
	    };

        this.contextmenu = function(e) {
          if (_mouseover && self._over(e) && !_mouseWasDown)
            self.fire("contextmenu", self, e);
          _mouseWasDown = false;
        };
	};
	
	var _newCanvas = function(params) {
		var canvas = document.createElement("canvas");
		params["_jsPlumb"].appendElement(canvas, params.parent);
		canvas.style.position = "absolute";
		if (params["class"]) canvas.className = params["class"];
		// set an id. if no id on the element and if uuid was supplied it
		// will be used, otherwise we'll create one.
		params["_jsPlumb"].getId(canvas, params.uuid);
		if (params.tooltip) canvas.setAttribute("title", params.tooltip);

		return canvas;
	};	

	var CanvasComponent = function(params) {
		CanvasMouseAdapter.apply(this, arguments);

		var displayElements = [ ];
		this.getDisplayElements = function() { return displayElements; };
		this.appendDisplayElement = function(el) { displayElements.push(el); };
	};
	
	/**
	 * Class:CanvasConnector
	 * Superclass for Canvas Connector renderers.
	 */
	var CanvasConnector = jsPlumb.CanvasConnector = function(params) {
		
		CanvasComponent.apply(this, arguments);
		
		var _paintOneStyle = function(dim, aStyle) {
			self.ctx.save();
			jsPlumb.extend(self.ctx, aStyle);
			if (aStyle.gradient) {
				var g = self.createGradient(dim, self.ctx);
				for ( var i = 0; i < aStyle.gradient.stops.length; i++)
					g.addColorStop(aStyle.gradient.stops[i][0], aStyle.gradient.stops[i][1]);
				self.ctx.strokeStyle = g;
			}
			self._paint(dim, aStyle);
			self.ctx.restore();
		};

		var self = this,
		clazz = self._jsPlumb.connectorClass + " " + (params.cssClass || "");
		self.canvas = _newCanvas({ 
			"class":clazz, 
			_jsPlumb:self._jsPlumb,
			parent:params.parent,
			tooltip:params.tooltip
		});	
		self.ctx = self.canvas.getContext("2d");
		
		self.appendDisplayElement(self.canvas);
		
		self.paint = function(dim, style) {						
			if (style != null) {																				
				jsPlumb.sizeCanvas(self.canvas, dim[0], dim[1], dim[2], dim[3]);				
				if (style.outlineColor != null) {
					var outlineWidth = style.outlineWidth || 1,
					outlineStrokeWidth = style.lineWidth + (2 * outlineWidth),
					outlineStyle = {
						strokeStyle:style.outlineColor,
						lineWidth:outlineStrokeWidth
					};
					_paintOneStyle(dim, outlineStyle);
				}
				_paintOneStyle(dim, style);
			}
		};				
	};		
	
	/**
	 * Class:CanvasEndpoint
	 * Superclass for Canvas Endpoint renderers.
	 */
	var CanvasEndpoint = function(params) {
		var self = this;				
		CanvasComponent.apply(this, arguments);		
		var clazz = self._jsPlumb.endpointClass + " " + (params.cssClass || ""),
			canvasParams = { 
			"class":clazz, 
			_jsPlumb:self._jsPlumb,
			parent:params.parent,
			tooltip:self.tooltip
		};
		self.canvas = _newCanvas(canvasParams);	
		self.ctx = self.canvas.getContext("2d");

		self.appendDisplayElement(self.canvas);
		
		this.paint = function(d, style, anchor) {
			jsPlumb.sizeCanvas(self.canvas, d[0], d[1], d[2], d[3]);			
			if (style.outlineColor != null) {
				var outlineWidth = style.outlineWidth || 1,
				outlineStrokeWidth = style.lineWidth + (2 * outlineWidth);
				var outlineStyle = {
					strokeStyle:style.outlineColor,
					lineWidth:outlineStrokeWidth
				};
			}
			
			self._paint.apply(this, arguments);
		};
	};
	
	jsPlumb.Endpoints.canvas.Dot = function(params) {		
		jsPlumb.Endpoints.Dot.apply(this, arguments);
		CanvasEndpoint.apply(this, arguments);
		var self = this,		
		parseValue = function(value) {
			try { return parseInt(value); }
			catch(e) {
				if (value.substring(value.length - 1) == '%')
					return parseInt(value.substring(0, value - 1));
			}
		},					    	
		calculateAdjustments = function(gradient) {
			var offsetAdjustment = self.defaultOffset, innerRadius = self.defaultInnerRadius;
			gradient.offset && (offsetAdjustment = parseValue(gradient.offset));
        	gradient.innerRadius && (innerRadius = parseValue(gradient.innerRadius));
        	return [offsetAdjustment, innerRadius];
		};
		this._paint = function(d, style, anchor) {
			if (style != null) {			
				var ctx = self.canvas.getContext('2d'), orientation = anchor.getOrientation(self);
				jsPlumb.extend(ctx, style);							
	            if (style.gradient) {            	
	            	var adjustments = calculateAdjustments(style.gradient), 
	            	yAdjust = orientation[1] == 1 ? adjustments[0] * -1 : adjustments[0],
	            	xAdjust = orientation[0] == 1 ? adjustments[0] * -1:  adjustments[0],
	            	g = ctx.createRadialGradient(d[4], d[4], d[4], d[4] + xAdjust, d[4] + yAdjust, adjustments[1]);
		            for (var i = 0; i < style.gradient.stops.length; i++)
		            	g.addColorStop(style.gradient.stops[i][0], style.gradient.stops[i][1]);
		            ctx.fillStyle = g;
	            }				
				ctx.beginPath();    		
				ctx.arc(d[4], d[4], d[4], 0, Math.PI*2, true);
				ctx.closePath();				
				if (style.fillStyle || style.gradient) ctx.fill();
				if (style.strokeStyle) ctx.stroke();
			}
    	};
	};	
		
	jsPlumb.Endpoints.canvas.Rectangle = function(params) {
		
		var self = this;
		jsPlumb.Endpoints.Rectangle.apply(this, arguments);
		CanvasEndpoint.apply(this, arguments);				
		
    	this._paint = function(d, style, anchor) {
				
			var ctx = self.canvas.getContext("2d"), orientation = anchor.getOrientation(self);
			jsPlumb.extend(ctx, style);
			
			/* canvas gradient */
		    if (style.gradient) {
		    	// first figure out which direction to run the gradient in (it depends on the orientation of the anchors)
		    	var y1 = orientation[1] == 1 ? d[3] : orientation[1] == 0 ? d[3] / 2 : 0;
				var y2 = orientation[1] == -1 ? d[3] : orientation[1] == 0 ? d[3] / 2 : 0;
				var x1 = orientation[0] == 1 ? d[2] : orientation[0] == 0 ? d[2] / 2 : 0;
				var x2 = orientation[0] == -1 ? d[2] : orientation[0] == 0 ? d[2] / 2 : 0;
			    var g = ctx.createLinearGradient(x1,y1,x2,y2);
			    for (var i = 0; i < style.gradient.stops.length; i++)
	            	g.addColorStop(style.gradient.stops[i][0], style.gradient.stops[i][1]);
	            ctx.fillStyle = g;
		    }
			
			ctx.beginPath();
			ctx.rect(0, 0, d[2], d[3]);
			ctx.closePath();				
			if (style.fillStyle || style.gradient) ctx.fill();
			if (style.strokeStyle) ctx.stroke();
    	};
	};		
	
	jsPlumb.Endpoints.canvas.Triangle = function(params) {
	        			
		var self = this;
		jsPlumb.Endpoints.Triangle.apply(this, arguments);
		CanvasEndpoint.apply(this, arguments);			
		
    	this._paint = function(d, style, anchor)
		{    		
			var width = d[2], height = d[3], x = d[0], y = d[1],			
			ctx = self.canvas.getContext('2d'),
			offsetX = 0, offsetY = 0, angle = 0,
			orientation = anchor.getOrientation(self);
			
			if( orientation[0] == 1 ) {
				offsetX = width;
				offsetY = height;
				angle = 180;
			}
			if( orientation[1] == -1 ) {
				offsetX = width;
				angle = 90;
			}
			if( orientation[1] == 1 ) {
				offsetY = height;
				angle = -90;
			}
			
			ctx.fillStyle = style.fillStyle;
			
			ctx.translate(offsetX, offsetY);
			ctx.rotate(angle * Math.PI/180);

			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(width/2, height/2);
			ctx.lineTo(0, height);
			ctx.closePath();
			if (style.fillStyle || style.gradient) ctx.fill();
			if (style.strokeStyle) ctx.stroke();				
    	};
	};	
	
	/*
	 * Canvas Image Endpoint: uses the default version, which creates an <img> tag.
	 */
	jsPlumb.Endpoints.canvas.Image = jsPlumb.Endpoints.Image;
	
	/*
	 * Blank endpoint in all renderers is just the default Blank endpoint.
	 */
	jsPlumb.Endpoints.canvas.Blank = jsPlumb.Endpoints.Blank;
	
	/*
     * Canvas Bezier Connector. Draws a Bezier curve onto a Canvas element.
     */
    jsPlumb.Connectors.canvas.Bezier = function() {
    	var self = this;
    	jsPlumb.Connectors.Bezier.apply(this, arguments); 
    	CanvasConnector.apply(this, arguments);
    	this._paint = function(dimensions, style) {
        	self.ctx.beginPath();
        	self.ctx.moveTo(dimensions[4], dimensions[5]);
        	self.ctx.bezierCurveTo(dimensions[8], dimensions[9], dimensions[10], dimensions[11], dimensions[6], dimensions[7]);	            
        	self.ctx.stroke();            
        };
        
        // TODO i doubt this handles the case that source and target are swapped.
        this.createGradient = function(dim, ctx, swap) {
        	return /*(swap) ? self.ctx.createLinearGradient(dim[4], dim[5], dim[6], dim[7]) : */self.ctx.createLinearGradient(dim[6], dim[7], dim[4], dim[5]);
        };
    };
    
    /*
     * Canvas straight line Connector. Draws a straight line onto a Canvas element.
     */
    jsPlumb.Connectors.canvas.Straight = function() {   	 
		var self = this,
			segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ];

		jsPlumb.Connectors.Straight.apply(this, arguments);
		CanvasConnector.apply(this, arguments);
		this._paint = function(dimensions, style) {

			self.ctx.beginPath();

			if (style.dashstyle && style.dashstyle.split(" ").length == 2) {			
				// only a very simple dashed style is supported - having two values, which define the stroke length 
				// (as a multiple of the stroke width) and then the space length (also as a multiple of stroke width). 
				var ds = style.dashstyle.split(" ");
				if (ds.length != 2) ds = [2, 2];
				var dss = [ ds[0] * style.lineWidth, ds[1] * style.lineWidth ],
					m = (dimensions[6] - dimensions[4]) / (dimensions[7] - dimensions[5]),
					s = jsPlumbUtil.segment([dimensions[4], dimensions[5]], [ dimensions[6], dimensions[7] ]),
					sm = segmentMultipliers[s],
					theta = Math.atan(m),
					l = Math.sqrt(Math.pow(dimensions[6] - dimensions[4], 2) + Math.pow(dimensions[7] - dimensions[5], 2)),
					repeats = Math.floor(l / (dss[0] + dss[1])),
					curPos = [dimensions[4], dimensions[5]];

				
				// TODO: the question here is why could we not support this in all connector types? it's really
				// just a case of going along and asking jsPlumb for the next point on the path a few times, until it
				// reaches the end. every type of connector supports that method, after all.  but right now its only the
				// bezier connector that gives you back the new location on the path along with the x,y coordinates, which
				// we would need. we'd start out at loc=0 and ask for the point along the path that is dss[0] pixels away.
				// we then ask for the point that is (dss[0] + dss[1]) pixels away; and from that one we need not just the
				// x,y but the location, cos we're gonna plug that location back in in order to find where that dash ends.
				//
				// it also strikes me that it should be trivial to support arbitrary dash styles (having more or less than two
				// entries). you'd just iterate that array using a step size of 2, and generify the (rss[0] + rss[1])
				// computation to be sum(rss[0]..rss[n]).

				for (var i = 0; i < repeats; i++) {
					self.ctx.moveTo(curPos[0], curPos[1]);

					var nextEndX = curPos[0] + (Math.abs(Math.sin(theta) * dss[0]) * sm[0]),
						nextEndY = curPos[1] + (Math.abs(Math.cos(theta) * dss[0]) * sm[1]),
						nextStartX = curPos[0] + (Math.abs(Math.sin(theta) * (dss[0] + dss[1]))  * sm[0]),
						nextStartY = curPos[1] + (Math.abs(Math.cos(theta) * (dss[0] + dss[1])) * sm[1])

					self.ctx.lineTo(nextEndX, nextEndY);
					curPos = [nextStartX, nextStartY];					
				}

				// now draw the last bit
				self.ctx.moveTo(curPos[0], curPos[1]);
				self.ctx.lineTo(dimensions[6], dimensions[7]);		

			}	        
	        else {
		        self.ctx.moveTo(dimensions[4], dimensions[5]);
	        	self.ctx.lineTo(dimensions[6], dimensions[7]);
	        }
	        	      
	        self.ctx.stroke();            
	    };
	    
	    // TODO this does not handle the case that src and target are swapped.
	    this.createGradient = function(dim, ctx) {
        	return ctx.createLinearGradient(dim[4], dim[5], dim[6], dim[7]);
        };
    };
    
    jsPlumb.Connectors.canvas.Flowchart = function() {
    	var self = this;
    	jsPlumb.Connectors.Flowchart.apply(this, arguments);
		CanvasConnector.apply(this, arguments);
    	this._paint = function(dimensions, style) {
	        self.ctx.beginPath();
	        self.ctx.moveTo(dimensions[4], dimensions[5]);
	        // loop through extra points
	        for (var i = 0; i < dimensions[8]; i++) {
	        	self.ctx.lineTo(dimensions[9 + (i*2)], dimensions[10 + (i*2)]);
	        }
	        // finally draw a line to the end
	        self.ctx.lineTo(dimensions[6], dimensions[7]);
	        self.ctx.stroke();
    	};
    	
    	this.createGradient = function(dim, ctx) {
        	return ctx.createLinearGradient(dim[4], dim[5], dim[6], dim[7]);
        };
    };
    
// ********************************* END OF CANVAS RENDERERS *******************************************************************    
    
    jsPlumb.Overlays.canvas.Label = jsPlumb.Overlays.Label;
    
    /**
     * a placeholder right now, really just exists to mirror the fact that there are SVG and VML versions of this. 
     */
    var CanvasOverlay = function() { 
    	jsPlumb.jsPlumbUIComponent.apply(this, arguments);
    };
    
    var AbstractCanvasArrowOverlay = function(superclass, originalArgs) {
    	superclass.apply(this, originalArgs);
    	CanvasOverlay.apply(this, originalArgs);
    	this.paint = function(connector, d, lineWidth, strokeStyle, fillStyle) {
    		var ctx = connector.ctx;
    		
			ctx.lineWidth = lineWidth;
			ctx.beginPath();
			ctx.moveTo(d.hxy.x, d.hxy.y);
			ctx.lineTo(d.tail[0].x, d.tail[0].y);
			ctx.lineTo(d.cxy.x, d.cxy.y);
			ctx.lineTo(d.tail[1].x, d.tail[1].y);
			ctx.lineTo(d.hxy.x, d.hxy.y);
			ctx.closePath();						
						
			if (strokeStyle) {
				ctx.strokeStyle = strokeStyle;
				ctx.stroke();
			}
			if (fillStyle) {
				ctx.fillStyle = fillStyle;			
				ctx.fill();
			}
    	};
    }; 
    
    jsPlumb.Overlays.canvas.Arrow = function() {
    	AbstractCanvasArrowOverlay.apply(this, [jsPlumb.Overlays.Arrow, arguments]);    	
    };
    
    jsPlumb.Overlays.canvas.PlainArrow = function() {
    	AbstractCanvasArrowOverlay.apply(this, [jsPlumb.Overlays.PlainArrow, arguments]);    	
    };
    
    jsPlumb.Overlays.canvas.Diamond = function() {
    	AbstractCanvasArrowOverlay.apply(this, [jsPlumb.Overlays.Diamond, arguments]);    	
    };		
})();/*
 * jsPlumb
 * 
 * Title:jsPlumb 1.3.9
 * 
 * Provides a way to visually connect elements on an HTML page, using either SVG, Canvas
 * elements, or VML.  
 * 
 * This file contains the jQuery adapter.
 *
 * Copyright (c) 2010 - 2012 Simon Porritt (http://jsplumb.org)
 * 
 * http://jsplumb.org
 * http://github.com/sporritt/jsplumb
 * http://code.google.com/p/jsplumb
 * 
 * Dual licensed under the MIT and GPL2 licenses.
 */ 
/* 
 * the library specific functions, such as find offset, get id, get attribute, extend etc.  
 * the full list is:
 * 
 * addClass				adds a class to the given element
 * animate				calls the underlying library's animate functionality
 * appendElement		appends a child element to a parent element.
 * bind					binds some event to an element
 * dragEvents			a dictionary of event names
 * extend				extend some js object with another.  probably not overly necessary; jsPlumb could just do this internally.
 * getAttribute			gets some attribute from an element
 * getDragObject		gets the object that is being dragged, by extracting it from the arguments passed to a drag callback
 * getDragScope			gets the drag scope for a given element.
 * getDropScope			gets the drop scope for a given element.
 * getElementObject		turns an id or dom element into an element object of the underlying library's type.
 * getOffset			gets an element's offset
 * getPageXY			gets the page event's xy location.
 * getParent			gets the parent of some element.
 * getScrollLeft		gets an element's scroll left.  TODO: is this actually used?  will it be?
 * getScrollTop			gets an element's scroll top.  TODO: is this actually used?  will it be?
 * getSize				gets an element's size.
 * getUIPosition		gets the position of some element that is currently being dragged, by extracting it from the arguments passed to a drag callback.
 * hasClass				returns whether or not the given element has the given class.
 * initDraggable		initializes an element to be draggable 
 * initDroppable		initializes an element to be droppable
 * isDragSupported		returns whether or not drag is supported for some element.
 * isDropSupported		returns whether or not drop is supported for some element.
 * removeClass			removes a class from a given element.
 * removeElement		removes some element completely from the DOM.
 * setAttribute			sets an attribute on some element.
 * setDraggable			sets whether or not some element should be draggable.
 * setDragScope			sets the drag scope for a given element.
 * setOffset			sets the offset of some element.
 * trigger				triggers some event on an element.
 * unbind				unbinds some listener from some element.
 */
(function($) {	
	
	//var getBoundingClientRectSupported = "getBoundingClientRect" in document.documentElement;

	jsPlumb.CurrentLibrary = {					        
		
		/**
		 * adds the given class to the element object.
		 */
		addClass : function(el, clazz) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			try {
				if (el[0].className.constructor == SVGAnimatedString) {
					jsPlumb.util.svg.addClass(el[0], clazz);
				}
			}
			catch (e) {
				// SVGAnimatedString not supported; no problem.
			}
			el.addClass(clazz);
		},
		
		/**
		 * animates the given element.
		 */
		animate : function(el, properties, options) {
			el.animate(properties, options);
		},				
		
		/**
		 * appends the given child to the given parent.
		 */
		appendElement : function(child, parent) {
			jsPlumb.CurrentLibrary.getElementObject(parent).append(child);			
		},   

		/**
		* executes ana ajax call.
		*/
		ajax : function(params) {
			params = params || {};
			params.type = params.type || "get";
			$.ajax(params);
		},
		
		/**
		 * event binding wrapper.  it just so happens that jQuery uses 'bind' also.  yui3, for example,
		 * uses 'on'.
		 */
		bind : function(el, event, callback) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			el.bind(event, callback);
		},
		
		/**
         * mapping of drag events for jQuery
         */
		dragEvents : {
			'start':'start', 'stop':'stop', 'drag':'drag', 'step':'step',
			'over':'over', 'out':'out', 'drop':'drop', 'complete':'complete'
		},
				
		/**
		 * wrapper around the library's 'extend' functionality (which it hopefully has.
		 * otherwise you'll have to do it yourself). perhaps jsPlumb could do this for you
		 * instead.  it's not like its hard.
		 */
		extend : function(o1, o2) {
			return $.extend(o1, o2);
		},
		
		/**
		 * gets the named attribute from the given element object.  
		 */
		getAttribute : function(el, attName) {
			return el.attr(attName);
		},
		
		getClientXY : function(eventObject) {
			return [eventObject.clientX, eventObject.clientY];
		},
		
		getDocumentElement : function() { return document; },
		
		/**
		 * takes the args passed to an event function and returns you an object representing that which is being dragged.
		 */
		getDragObject : function(eventArgs) {
			return eventArgs[1].draggable;
		},
		
		getDragScope : function(el) {
			return el.draggable("option", "scope");
		},

		getDropEvent : function(args) {
			return args[0];
		},
		
		getDropScope : function(el) {
			return el.droppable("option", "scope");		
		},

		/**
		* gets a DOM element from the given input, which might be a string (in which case we just do document.getElementById),
		* a selector (in which case we return el[0]), or a DOM element already (we assume this if it's not either of the other
		* two cases).  this is the opposite of getElementObject below.
		*/
		getDOMElement : function(el) {
			if (typeof(el) == "string") return document.getElementById(el);
			else if (el.context) return el[0];
			else return el;
		},
	
		/**
		 * gets an "element object" from the given input.  this means an object that is used by the
		 * underlying library on which jsPlumb is running.  'el' may already be one of these objects,
		 * in which case it is returned as-is.  otherwise, 'el' is a String, the library's lookup 
		 * function is used to find the element, using the given String as the element's id.
		 * 
		 */		
		getElementObject : function(el) {			
			return typeof(el) == "string" ? $("#" + el) : $(el);
		},
		
		/**
		  * gets the offset for the element object.  this should return a js object like this:
		  *
		  * { left:xxx, top: xxx }
		 */
		getOffset : function(el) {
			return el.offset();
		},
		
		getPageXY : function(eventObject) {
			return [eventObject.pageX, eventObject.pageY];
		},
		
		getParent : function(el) {
			return jsPlumb.CurrentLibrary.getElementObject(el).parent();
		},
														
		getScrollLeft : function(el) {
			return el.scrollLeft();
		},
		
		getScrollTop : function(el) {
			return el.scrollTop();
		},
		
		getSelector : function(spec) {
			return $(spec);
		},
		
		/**
		 * gets the size for the element object, in an array : [ width, height ].
		 */
		getSize : function(el) {
			return [el.outerWidth(), el.outerHeight()];
		},

        getTagName : function(el) {
            var e = jsPlumb.CurrentLibrary.getElementObject(el);
            return e.length > 0 ? e[0].tagName : null;
        },
		
		/**
		 * takes the args passed to an event function and returns you an object that gives the
		 * position of the object being moved, as a js object with the same params as the result of
		 * getOffset, ie: { left: xxx, top: xxx }.
		 * 
		 * different libraries have different signatures for their event callbacks.  
		 * see getDragObject as well
		 */
		getUIPosition : function(eventArgs) {
			
			// this code is a workaround for the case that the element being dragged has a margin set on it. jquery UI passes
			// in the wrong offset if the element has a margin (it doesn't take the margin into account).  the getBoundingClientRect
			// method, which is in pretty much all browsers now, reports the right numbers.  but it introduces a noticeable lag, which
			// i don't like.
            
			/*if ( getBoundingClientRectSupported ) {
				var r = eventArgs[1].helper[0].getBoundingClientRect();
				return { left : r.left, top: r.top };
			} else {*/
			if (eventArgs.length == 1) {
				ret = { left: eventArgs[0].pageX, top:eventArgs[0].pageY };
			}
			else {
				var ui = eventArgs[1], _offset = ui.offset;			
				ret = _offset || ui.absolutePosition;
			}
            return ret;
		},		
		
		hasClass : function(el, clazz) {
			return el.hasClass(clazz);
		},
		
		/**
		 * initialises the given element to be draggable.
		 */
		initDraggable : function(el, options, isPlumbedComponent) {
			options = options || {};
			// remove helper directive if present.  
			options.helper = null;
			if (isPlumbedComponent)
				options['scope'] = options['scope'] || jsPlumb.Defaults.Scope;
			el.draggable(options);
		},
		
		/**
		 * initialises the given element to be droppable.
		 */
		initDroppable : function(el, options) {
			options['scope'] = options['scope'] || jsPlumb.Defaults.Scope;
			el.droppable(options);
		},
		
		isAlreadyDraggable : function(el) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			return el.hasClass("ui-draggable");
		},
		
		/**
		 * returns whether or not drag is supported (by the library, not whether or not it is disabled) for the given element.
		 */
		isDragSupported : function(el, options) {
			return el.draggable;
		},				
						
		/**
		 * returns whether or not drop is supported (by the library, not whether or not it is disabled) for the given element.
		 */
		isDropSupported : function(el, options) {
			return el.droppable;
		},							
		
		/**
		 * removes the given class from the element object.
		 */
		removeClass : function(el, clazz) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			try {
				if (el[0].className.constructor == SVGAnimatedString) {
					jsPlumb.util.svg.removeClass(el[0], clazz);
				}
			}
			catch (e) {
				// SVGAnimatedString not supported; no problem.
			}
			el.removeClass(clazz);
		},
		
		removeElement : function(element, parent) {			
			jsPlumb.CurrentLibrary.getElementObject(element).remove();
		},
		
		/**
		 * sets the named attribute on the given element object.  
		 */
		setAttribute : function(el, attName, attValue) {
			el.attr(attName, attValue);
		},
		
		/**
		 * sets the draggable state for the given element
		 */
		setDraggable : function(el, draggable) {
			el.draggable("option", "disabled", !draggable);
		},
		
		/**
		 * sets the drag scope.  probably time for a setDragOption method (roll this and the one above together)
		 * @param el
		 * @param scope
		 */
		setDragScope : function(el, scope) {
			el.draggable("option", "scope", scope);
		},
		
		setOffset : function(el, o) {
			jsPlumb.CurrentLibrary.getElementObject(el).offset(o);
		},
		
		/**
		 * note that jquery ignores the name of the event you wanted to trigger, and figures it out for itself.
		 * the other libraries do not.  yui, in fact, cannot even pass an original event.  we have to pull out stuff
		 * from the originalEvent to put in an options object for YUI. 
		 * @param el
		 * @param event
		 * @param originalEvent
		 */
		trigger : function(el, event, originalEvent) {
			//originalEvent.stopPropagation();
			//jsPlumb.CurrentLibrary.getElementObject(el).trigger(originalEvent);
            var h = jQuery._data(jsPlumb.CurrentLibrary.getElementObject(el)[0], "handle");
            h(originalEvent);
            //originalEvent.stopPropagation();
		},
		
		/**
		 * event unbinding wrapper.  it just so happens that jQuery uses 'unbind' also.  yui3, for example,
		 * uses..something else.
		 */
		unbind : function(el, event, callback) {
			el = jsPlumb.CurrentLibrary.getElementObject(el);
			el.unbind(event, callback);
		}
	};
	
	$(document).ready(jsPlumb.init);
	
})(jQuery);

(function(){if("undefined"==typeof Math.sgn)Math.sgn=function(a){return 0==a?0:0<a?1:-1};var l={subtract:function(a,b){return{x:a.x-b.x,y:a.y-b.y}},dotProduct:function(a,b){return a.x*b.x+a.y*b.y},square:function(a){return Math.sqrt(a.x*a.x+a.y*a.y)},scale:function(a,b){return{x:a.x*b,y:a.y*b}}},w=Math.pow(2,-65),u=function(a,b){for(var f=[],d=b.length-1,h=2*d-1,g=[],c=[],k=[],i=[],m=[[1,0.6,0.3,0.1],[0.4,0.6,0.6,0.4],[0.1,0.3,0.6,1]],e=0;e<=d;e++)g[e]=l.subtract(b[e],a);for(e=0;e<=d-1;e++)c[e]=l.subtract(b[e+
1],b[e]),c[e]=l.scale(c[e],3);for(e=0;e<=d-1;e++)for(var n=0;n<=d;n++)k[e]||(k[e]=[]),k[e][n]=l.dotProduct(c[e],g[n]);for(e=0;e<=h;e++)i[e]||(i[e]=[]),i[e].y=0,i[e].x=parseFloat(e)/h;h=d-1;for(g=0;g<=d+h;g++){e=Math.max(0,g-h);for(c=Math.min(g,d);e<=c;e++)j=g-e,i[e+j].y+=k[j][e]*m[j][e]}d=b.length-1;i=q(i,2*d-1,f,0);h=l.subtract(a,b[0]);k=l.square(h);for(e=m=0;e<i;e++)h=l.subtract(a,r(b,d,f[e],null,null)),h=l.square(h),h<k&&(k=h,m=f[e]);h=l.subtract(a,b[d]);h=l.square(h);h<k&&(k=h,m=1);return{location:m,
distance:k}},q=function(a,b,f,d){var h=[],g=[],c=[],k=[],i=0,m,e;e=Math.sgn(a[0].y);for(var n=1;n<=b;n++)m=Math.sgn(a[n].y),m!=e&&i++,e=m;switch(i){case 0:return 0;case 1:if(64<=d)return f[0]=(a[0].x+a[b].x)/2,1;var o,i=a[0].y-a[b].y;m=a[b].x-a[0].x;e=a[0].x*a[b].y-a[b].x*a[0].y;n=max_distance_below=0;for(o=1;o<b;o++){var l=i*a[o].x+m*a[o].y+e;l>n?n=l:l<max_distance_below&&(max_distance_below=l)}o=m;n=(1*(e-n)-0*o)*(1/(0*o-1*i));o=m;i=(1*(e-max_distance_below)-0*o)*(1/(0*o-1*i));m=Math.min(n,i);if(Math.max(n,
i)-m<w)return c=a[b].x-a[0].x,k=a[b].y-a[0].y,f[0]=0+1*(c*(a[0].y-0)-k*(a[0].x-0))*(1/(0*c-1*k)),1}r(a,b,0.5,h,g);a=q(h,b,c,d+1);b=q(g,b,k,d+1);for(d=0;d<a;d++)f[d]=c[d];for(d=0;d<b;d++)f[d+a]=k[d];return a+b},r=function(a,b,f,d,h){for(var g=[[]],c=0;c<=b;c++)g[0][c]=a[c];for(a=1;a<=b;a++)for(c=0;c<=b-a;c++)g[a]||(g[a]=[]),g[a][c]||(g[a][c]={}),g[a][c].x=(1-f)*g[a-1][c].x+f*g[a-1][c+1].x,g[a][c].y=(1-f)*g[a-1][c].y+f*g[a-1][c+1].y;if(null!=d)for(c=0;c<=b;c++)d[c]=g[c][0];if(null!=h)for(c=0;c<=b;c++)h[c]=
g[b-c][c];return g[b][0]},v={},x=function(a){var b=v[a];if(!b){var b=[],f=function(a){return function(){return a}},d=function(){return function(a){return a}},h=function(){return function(a){return 1-a}},g=function(a){return function(b){for(var c=1,d=0;d<a.length;d++)c*=a[d](b);return c}};b.push(new function(){return function(b){return Math.pow(b,a)}});for(var c=1;c<a;c++){for(var k=[new f(a)],i=0;i<a-c;i++)k.push(new d);for(i=0;i<c;i++)k.push(new h);b.push(new g(k))}b.push(new function(){return function(b){return Math.pow(1-
b,a)}});v[a]=b}return b},p=function(a,b){for(var f=x(a.length-1),d=0,h=0,g=0;g<a.length;g++)d+=a[g].x*f[g](b),h+=a[g].y*f[g](b);return{x:d,y:h}},s=function(a,b,f){for(var d=p(a,b),h=0,g=0<f?1:-1,c=null;h<Math.abs(f);)b+=0.005*g,c=p(a,b),h+=Math.sqrt(Math.pow(c.x-d.x,2)+Math.pow(c.y-d.y,2)),d=c;return{point:c,location:b}},t=function(a,b){var f=p(a,b),d=p(a.slice(0,a.length-1),b),h=d.y-f.y,f=d.x-f.x;return 0==h?Infinity:Math.atan(h/f)};window.jsBezier={distanceFromCurve:u,gradientAtPoint:t,gradientAtPointAlongCurveFrom:function(a,
b,f){b=s(a,b,f);if(1<b.location)b.location=1;if(0>b.location)b.location=0;return t(a,b.location)},nearestPointOnCurve:function(a,b){var f=u(a,b);return{point:r(b,b.length-1,f.location,null,null),location:f.location}},pointOnCurve:p,pointAlongCurveFrom:function(a,b,f){return s(a,b,f).point},perpendicularToCurveAt:function(a,b,f,d){b=s(a,b,null==d?0:d);a=t(a,b.location);d=Math.atan(-1/a);a=f/2*Math.sin(d);f=f/2*Math.cos(d);return[{x:b.point.x+f,y:b.point.y+a},{x:b.point.x-f,y:b.point.y-a}]}}})();;

$.fn.vectorMap('addMap', 'world_mill_en', {
    "insets": [{
        "width": 900.0,
        "top": 0,
        "height": 440.7063107441331,
        "bbox": [{
            "y": -12651089.408837218,
            "x": -19971805.562327016
        },
        {
            "y": 6919135.471157653,
            "x": 19994044.625421535
        }],
        "left": 0
    }],
    "paths": {
        "BD": {
            "path": "M652.71,228.85l-0.04,1.38l-0.46,-0.21l-0.42,0.3l0.05,0.65l-0.17,-1.37l-0.48,-1.26l-1.08,-1.6l-0.23,-0.13l-2.31,-0.11l-0.31,0.36l0.21,0.98l-0.6,1.11l-0.8,-0.4l-0.37,0.09l-0.23,0.3l-0.54,-0.21l-0.78,-0.19l-0.38,-2.04l-0.83,-1.89l0.4,-1.5l-0.16,-0.35l-1.24,-0.57l0.36,-0.62l1.5,-0.95l0.02,-0.49l-1.62,-1.26l0.64,-1.31l1.7,1.0l0.12,0.04l0.96,0.11l0.19,1.62l0.25,0.26l2.38,0.37l2.32,-0.04l1.06,0.33l-0.92,1.79l-0.97,0.13l-0.23,0.16l-0.77,1.51l0.05,0.35l1.37,1.37l0.5,-0.14l0.35,-1.46l0.24,-0.0l1.24,3.92Z",
            "name": "Bangladesh"
        },
        "BE": {
            "path": "M429.28,143.95l1.76,0.25l0.13,-0.01l2.16,-0.64l1.46,1.34l1.26,0.71l-0.23,1.8l-0.44,0.08l-0.24,0.25l-0.2,1.36l-1.8,-1.22l-0.23,-0.05l-1.14,0.23l-1.62,-1.43l-1.15,-1.31l-0.21,-0.1l-0.95,-0.04l-0.21,-0.68l1.66,-0.54Z",
            "name": "Belgium"
        },
        "BF": {
            "path": "M413.48,260.21l-1.22,-0.46l-0.13,-0.02l-1.17,0.1l-0.15,0.06l-0.73,0.53l-0.87,-0.41l-0.39,-0.75l-0.13,-0.13l-0.98,-0.48l-0.14,-1.2l0.63,-0.99l0.05,-0.18l-0.05,-0.73l1.9,-2.01l0.08,-0.14l0.35,-1.65l0.49,-0.44l1.05,0.3l0.21,-0.02l1.05,-0.52l0.13,-0.13l0.3,-0.58l1.87,-1.1l0.11,-0.1l0.43,-0.72l2.23,-1.01l1.21,-0.32l0.51,0.4l0.19,0.06l1.25,-0.01l-0.14,0.89l0.01,0.13l0.34,1.16l0.06,0.11l1.35,1.59l0.07,1.13l0.24,0.28l2.64,0.53l-0.05,1.39l-0.42,0.59l-1.11,0.21l-0.22,0.17l-0.46,0.99l-0.69,0.23l-2.12,-0.05l-1.14,-0.2l-0.19,0.03l-0.72,0.36l-1.07,-0.17l-4.35,0.12l-0.29,0.29l-0.06,1.44l0.25,1.45Z",
            "name": "Burkina Faso"
        },
        "BG": {
            "path": "M477.63,166.84l0.51,0.9l0.33,0.14l0.9,-0.21l1.91,0.47l3.68,0.16l0.17,-0.05l1.2,-0.75l2.78,-0.67l1.72,1.05l1.02,0.24l-0.97,0.97l-0.91,2.17l0.0,0.24l0.56,1.19l-1.58,-0.3l-0.16,0.01l-2.55,0.95l-0.2,0.28l-0.02,1.23l-1.92,0.24l-1.68,-0.99l-0.27,-0.02l-1.94,0.8l-1.52,-0.07l-0.15,-1.72l-0.12,-0.21l-0.99,-0.76l0.18,-0.18l0.02,-0.39l-0.17,-0.22l0.33,-0.75l0.91,-0.91l0.01,-0.42l-1.16,-1.25l-0.18,-0.89l0.24,-0.27Z",
            "name": "Bulgaria"
        },
        "BA": {
            "path": "M468.39,164.66l0.16,0.04l0.43,-0.0l-0.43,0.93l0.06,0.34l1.08,1.06l-0.28,1.09l-0.5,0.13l-0.47,0.28l-0.86,0.74l-0.1,0.16l-0.28,1.29l-1.81,-0.94l-0.9,-1.22l-1.0,-0.73l-1.1,-1.1l-0.55,-0.96l-1.11,-1.3l0.3,-0.75l0.59,0.46l0.42,-0.04l0.46,-0.54l1.0,-0.06l2.11,0.5l1.72,-0.03l1.06,0.64Z",
            "name": "Bosnia and Herzegovina"
        },
        "BN": {
            "path": "M707.34,273.57l0.76,-0.72l1.59,-1.03l-0.18,1.93l-0.9,-0.06l-0.28,0.14l-0.31,0.51l-0.68,-0.78Z",
            "name": "Brunei"
        },
        "BO": {
            "path": "M263.83,340.79l-0.23,-0.12l-2.86,-0.11l-0.28,0.17l-0.77,1.67l-1.17,-1.51l-0.18,-0.11l-3.28,-0.64l-0.28,0.1l-2.02,2.3l-1.43,0.29l-0.91,-3.35l-1.31,-2.88l0.75,-2.41l-0.09,-0.32l-1.23,-1.03l-0.31,-1.76l-0.05,-0.12l-1.12,-1.6l1.49,-2.62l0.01,-0.28l-1.0,-2.0l0.48,-0.72l0.02,-0.29l-0.37,-0.78l0.87,-1.13l0.06,-0.18l0.05,-2.17l0.12,-1.71l0.5,-0.8l0.01,-0.3l-1.9,-3.58l1.3,0.15l1.34,-0.05l0.23,-0.12l0.51,-0.7l2.12,-0.99l1.31,-0.93l2.81,-0.37l-0.21,1.51l0.01,0.13l0.29,0.91l-0.19,1.64l0.11,0.27l2.72,2.27l0.15,0.07l2.71,0.41l0.92,0.88l0.12,0.07l1.64,0.49l1.0,0.71l0.18,0.06l1.5,-0.02l1.24,0.64l0.1,1.31l0.05,0.14l0.44,0.68l0.02,0.73l-0.44,0.03l-0.27,0.39l0.96,2.99l0.28,0.21l4.43,0.1l-0.28,1.12l0.0,0.15l0.27,1.02l0.15,0.19l1.27,0.67l0.52,1.42l-0.42,1.91l-0.66,1.1l-0.04,0.2l0.21,1.3l-0.19,0.13l-0.01,-0.27l-0.15,-0.24l-2.33,-1.33l-0.14,-0.04l-2.38,-0.03l-4.36,0.76l-0.21,0.16l-1.2,2.29l-0.03,0.13l-0.06,1.37l-0.79,2.53l-0.05,-0.08Z",
            "name": "Bolivia"
        },
        "JP": {
            "path": "M781.17,166.78l1.8,0.67l0.28,-0.04l1.38,-1.01l0.43,2.67l-3.44,0.77l-0.18,0.12l-2.04,2.79l-3.71,-1.94l-0.42,0.15l-1.29,3.11l-2.32,0.04l-0.3,-2.63l1.12,-2.1l2.51,-0.16l0.28,-0.25l0.73,-4.22l0.58,-1.9l2.59,2.84l2.0,1.1ZM773.66,187.36l-0.92,2.24l-0.01,0.2l0.4,1.3l-1.18,1.81l-3.06,1.28l-4.35,0.17l-0.19,0.08l-3.4,3.06l-1.36,-0.87l-0.1,-1.95l-0.34,-0.28l-4.35,0.62l-2.99,1.33l-2.87,0.05l-0.28,0.2l0.09,0.33l2.37,1.93l-1.57,4.44l-1.35,0.97l-0.9,-0.79l0.57,-2.32l-0.15,-0.34l-1.5,-0.77l-0.81,-1.53l2.04,-0.75l0.14,-0.1l1.28,-1.72l2.47,-1.43l1.84,-1.92l4.83,-0.82l2.62,0.57l0.33,-0.16l2.45,-4.77l1.38,1.14l0.38,0.0l5.1,-4.02l0.09,-0.11l1.57,-3.57l0.02,-0.16l-0.42,-3.22l0.94,-1.67l2.27,-0.47l1.26,3.82l-0.07,2.23l-2.26,2.86l-0.06,0.19l0.04,2.93ZM757.85,196.18l0.22,0.66l-1.11,1.33l-0.8,-0.7l-0.33,-0.04l-1.28,0.65l-0.14,0.15l-0.54,1.34l-1.17,-0.57l0.02,-1.03l1.2,-1.45l1.24,0.28l0.29,-0.1l0.9,-1.03l1.51,0.5Z",
            "name": "Japan"
        },
        "BI": {
            "path": "M494.7,295.83l-0.14,-2.71l-0.04,-0.13l-0.34,-0.62l0.93,0.12l0.3,-0.16l0.67,-1.25l0.9,0.11l0.11,0.76l0.08,0.16l0.46,0.48l0.02,0.56l-0.55,0.48l-0.96,1.29l-0.82,0.82l-0.61,0.07Z",
            "name": "Burundi"
        },
        "BJ": {
            "path": "M427.4,268.94l-1.58,0.22l-0.52,-1.45l0.11,-5.73l-0.08,-0.21l-0.43,-0.44l-0.09,-1.13l-0.09,-0.19l-1.52,-1.52l0.24,-1.01l0.7,-0.23l0.18,-0.16l0.45,-0.97l1.07,-0.21l0.19,-0.12l0.53,-0.73l0.73,-0.65l0.68,-0.0l1.69,1.3l-0.08,0.67l0.02,0.14l0.52,1.38l-0.44,0.9l-0.01,0.24l0.2,0.52l-1.1,1.42l-0.76,0.76l-0.08,0.13l-0.47,1.59l0.05,1.69l-0.13,3.79Z",
            "name": "Benin"
        },
        "BT": {
            "path": "M650.38,213.78l0.88,0.75l-0.13,1.24l-1.77,0.07l-2.1,-0.18l-1.57,0.4l-2.02,-0.91l-0.02,-0.24l1.54,-1.87l1.18,-0.6l1.67,0.59l1.32,0.08l1.01,0.67Z",
            "name": "Bhutan"
        },
        "JM": {
            "path": "M226.67,238.37l1.64,0.23l1.2,0.56l0.11,0.19l-1.25,0.03l-0.14,0.04l-0.65,0.37l-1.24,-0.37l-1.17,-0.77l0.11,-0.22l0.86,-0.15l0.52,0.08Z",
            "name": "Jamaica"
        },
        "BW": {
            "path": "M484.91,331.96l0.53,0.52l0.82,1.53l2.83,2.86l0.14,0.08l0.85,0.22l0.03,0.81l0.74,1.66l0.21,0.17l1.87,0.39l1.17,0.87l-3.13,1.71l-2.3,2.01l-0.07,0.1l-0.82,1.74l-0.66,0.88l-1.24,0.19l-0.24,0.2l-0.65,1.98l-1.4,0.55l-1.9,-0.12l-1.2,-0.74l-1.06,-0.32l-0.22,0.02l-1.22,0.62l-0.14,0.14l-0.58,1.21l-1.16,0.79l-1.18,1.13l-1.5,0.23l-0.4,-0.68l0.22,-1.53l-0.04,-0.19l-1.48,-2.54l-0.11,-0.11l-0.53,-0.31l-0.0,-7.25l2.18,-0.08l0.29,-0.3l0.07,-9.0l1.63,-0.08l3.69,-0.86l0.84,0.93l0.38,0.05l1.53,-0.97l0.79,-0.03l1.3,-0.53l0.23,0.1l0.92,1.96Z",
            "name": "Botswana"
        },
        "BR": {
            "path": "M259.49,274.87l1.42,0.25l1.97,0.62l0.28,-0.05l0.67,-0.55l1.76,-0.38l2.8,-0.94l0.12,-0.08l0.92,-0.96l0.05,-0.33l-0.15,-0.32l0.73,-0.06l0.36,0.35l-0.27,0.93l0.17,0.36l0.76,0.34l0.44,0.9l-0.58,0.73l-0.06,0.13l-0.4,2.13l0.03,0.19l0.62,1.22l0.17,1.11l0.11,0.19l1.54,1.18l0.15,0.06l1.23,0.12l0.29,-0.15l0.2,-0.36l0.71,-0.11l1.13,-0.44l0.79,-0.63l1.25,0.19l0.65,-0.08l1.32,0.2l0.32,-0.18l0.23,-0.51l-0.05,-0.31l-0.31,-0.37l0.11,-0.31l0.75,0.17l0.13,0.0l1.1,-0.24l1.34,0.5l1.08,0.51l0.33,-0.05l0.67,-0.58l0.27,0.05l0.28,0.57l0.31,0.17l1.2,-0.18l0.17,-0.08l1.03,-1.05l0.76,-1.82l1.39,-2.16l0.49,-0.07l0.52,1.17l1.4,4.37l0.2,0.2l1.14,0.35l0.05,1.39l-1.8,1.97l0.01,0.42l0.78,0.75l0.18,0.08l4.16,0.37l0.08,2.25l0.5,0.22l1.78,-1.54l2.98,0.85l4.07,1.5l1.07,1.28l-0.37,1.23l0.36,0.38l2.83,-0.75l4.8,1.3l3.75,-0.09l3.6,2.02l3.27,2.84l1.93,0.72l2.13,0.11l0.76,0.66l1.22,4.56l-0.96,4.03l-1.22,1.58l-3.52,3.51l-1.63,2.91l-1.75,2.09l-0.5,0.04l-0.26,0.19l-0.72,1.99l0.18,4.76l-0.95,5.56l-0.74,0.96l-0.06,0.15l-0.43,3.39l-2.49,3.34l-0.06,0.13l-0.4,2.56l-1.9,1.07l-0.13,0.16l-0.51,1.38l-2.59,0.0l-3.94,1.01l-1.82,1.19l-2.85,0.81l-3.01,2.17l-2.12,2.65l-0.06,0.13l-0.36,2.0l0.01,0.13l0.4,1.42l-0.45,2.63l-0.53,1.23l-1.76,1.53l-2.76,4.79l-2.16,2.15l-1.69,1.29l-0.09,0.12l-1.12,2.6l-1.3,1.26l-0.45,-1.02l0.99,-1.18l0.01,-0.37l-1.5,-1.95l-1.98,-1.54l-2.58,-1.77l-0.2,-0.05l-0.81,0.07l-2.42,-2.05l-0.25,-0.07l-0.77,0.14l2.75,-3.07l2.8,-2.61l1.67,-1.09l2.11,-1.49l0.13,-0.24l0.05,-2.15l-0.07,-0.2l-1.26,-1.54l-0.35,-0.09l-0.64,0.27l0.3,-0.95l0.34,-1.57l0.01,-1.52l-0.16,-0.26l-0.9,-0.48l-0.27,-0.01l-0.86,0.39l-0.65,-0.08l-0.23,-0.8l-0.23,-2.39l-0.04,-0.12l-0.47,-0.79l-0.14,-0.12l-1.69,-0.71l-0.25,0.01l-0.93,0.47l-2.29,-0.44l0.15,-3.3l-0.03,-0.15l-0.62,-1.22l0.57,-0.39l0.13,-0.3l-0.22,-1.37l0.67,-1.13l0.44,-2.04l-0.01,-0.17l-0.59,-1.61l-0.14,-0.16l-1.25,-0.66l-0.22,-0.82l0.35,-1.41l-0.28,-0.37l-4.59,-0.1l-0.78,-2.41l0.34,-0.02l0.28,-0.31l-0.03,-1.1l-0.05,-0.16l-0.45,-0.68l-0.1,-1.4l-0.16,-0.24l-1.45,-0.76l-0.14,-0.03l-1.48,0.02l-1.04,-0.73l-1.62,-0.48l-0.93,-0.9l-0.16,-0.08l-2.72,-0.41l-2.53,-2.12l0.18,-1.54l-0.01,-0.13l-0.29,-0.91l0.26,-1.83l-0.34,-0.34l-3.28,0.43l-0.14,0.05l-1.3,0.93l-2.16,1.01l-0.12,0.09l-0.47,0.65l-1.12,0.05l-1.84,-0.21l-0.12,0.01l-1.33,0.41l-0.82,-0.21l0.16,-3.6l-0.48,-0.26l-1.97,1.43l-1.96,-0.06l-0.86,-1.23l-0.22,-0.13l-1.23,-0.11l0.34,-0.69l-0.05,-0.33l-1.36,-1.5l-0.92,-2.0l0.45,-0.32l0.13,-0.25l-0.0,-0.87l1.34,-0.64l0.17,-0.32l-0.23,-1.23l0.56,-0.77l0.05,-0.13l0.16,-1.03l2.7,-1.61l2.01,-0.47l0.16,-0.09l0.24,-0.27l2.11,0.11l0.31,-0.25l1.13,-6.87l0.06,-1.12l-0.4,-1.53l-0.1,-0.15l-1.0,-0.82l0.01,-1.45l1.08,-0.32l0.39,0.2l0.44,-0.24l0.08,-0.96l-0.25,-0.32l-1.22,-0.22l-0.02,-1.01l4.57,0.05l0.22,-0.09l0.6,-0.63l0.44,0.5l0.47,1.42l0.45,0.16l0.27,-0.18l1.21,1.16l0.23,0.08l1.95,-0.16l0.23,-0.14l0.43,-0.67l1.76,-0.55l1.05,-0.42l0.18,-0.2l0.25,-0.92l1.65,-0.66l0.18,-0.35l-0.14,-0.53l-0.26,-0.22l-1.91,-0.19l-0.29,-1.33l0.1,-1.64l-0.15,-0.28l-0.44,-0.25Z",
            "name": "Brazil"
        },
        "BS": {
            "path": "M227.51,216.69l0.3,0.18l-0.24,1.07l0.03,-1.04l-0.09,-0.21ZM226.5,224.03l-0.13,0.03l-0.54,-1.3l-0.09,-0.12l-0.78,-0.64l0.4,-1.26l0.33,0.05l0.79,2.0l0.01,1.24ZM225.76,216.5l-2.16,0.34l-0.07,-0.41l0.85,-0.16l1.36,0.07l0.02,0.16Z",
            "name": "The Bahamas"
        },
        "BY": {
            "path": "M480.08,135.28l2.09,0.02l0.13,-0.03l2.72,-1.3l0.16,-0.19l0.55,-1.83l1.94,-1.06l0.15,-0.31l-0.2,-1.33l1.33,-0.52l2.58,-1.3l2.39,0.8l0.3,0.75l0.37,0.17l1.22,-0.39l2.18,0.75l0.2,1.36l-0.48,0.85l0.01,0.32l1.57,2.26l0.92,0.6l-0.1,0.41l0.19,0.35l1.61,0.57l0.48,0.6l-0.64,0.49l-1.91,-0.11l-0.18,0.05l-0.48,0.32l-0.1,0.39l0.57,1.1l0.51,1.78l-1.79,0.17l-0.18,0.08l-0.77,0.73l-0.09,0.19l-0.13,1.31l-0.75,-0.22l-2.11,0.15l-0.56,-0.66l-0.39,-0.06l-0.8,0.49l-0.79,-0.4l-0.13,-0.03l-1.94,-0.07l-2.76,-0.79l-2.58,-0.27l-1.98,0.07l-0.15,0.05l-1.31,0.86l-0.8,0.09l-0.04,-1.16l-0.03,-0.12l-0.63,-1.28l1.22,-0.56l0.17,-0.27l0.01,-1.35l-0.04,-0.15l-0.66,-1.24l-0.08,-1.12Z",
            "name": "Belarus"
        },
        "BZ": {
            "path": "M198.03,239.7l0.28,0.19l0.43,-0.1l0.82,-1.42l0.0,0.07l0.29,0.29l0.16,0.0l-0.02,0.35l-0.39,1.08l0.02,0.25l0.16,0.29l-0.23,0.8l0.04,0.24l0.09,0.14l-0.25,1.12l-0.38,0.53l-0.33,0.06l-0.21,0.15l-0.41,0.74l-0.25,0.0l0.17,-2.58l0.01,-2.2Z",
            "name": "Belize"
        },
        "RU": {
            "path": "M688.57,38.85l0.63,2.39l0.44,0.19l2.22,-1.23l7.18,0.07l5.54,2.49l1.85,1.77l-0.55,2.34l-2.64,1.42l-6.57,2.76l-1.95,1.5l0.12,0.53l3.09,0.68l3.69,1.23l0.21,-0.01l1.98,-0.81l1.16,2.84l0.5,0.08l1.03,-1.18l3.86,-0.74l7.79,0.78l0.56,2.05l0.27,0.22l10.47,0.71l0.32,-0.29l0.13,-3.34l4.98,0.8l3.96,-0.02l3.88,2.43l1.06,2.79l-1.38,1.83l0.01,0.38l3.15,3.64l0.1,0.08l3.94,1.86l0.4,-0.14l2.28,-4.56l3.75,1.94l0.22,0.02l4.18,-1.22l4.76,1.4l0.26,-0.04l1.74,-1.23l3.98,0.63l0.32,-0.41l-1.71,-4.1l3.0,-1.86l22.39,3.04l2.06,2.67l0.1,0.08l6.55,3.51l0.17,0.03l10.08,-0.86l4.86,0.73l1.91,1.72l-0.29,3.13l0.18,0.31l3.08,1.26l0.19,0.01l3.32,-0.9l4.37,-0.11l4.78,0.87l4.61,-0.48l4.26,3.82l0.32,0.05l3.1,-1.4l0.12,-0.45l-1.91,-2.67l0.92,-1.64l7.78,1.22l5.22,-0.26l7.12,2.1l9.6,5.22l6.4,4.15l-0.2,2.44l0.14,0.28l1.69,1.04l0.45,-0.31l-0.51,-2.66l6.31,0.58l4.52,3.61l-2.1,1.52l-4.02,0.42l-0.27,0.29l-0.06,3.83l-0.81,0.67l-2.14,-0.11l-1.91,-1.39l-3.19,-1.13l-0.51,-1.63l-0.21,-0.2l-2.54,-0.67l-0.13,-0.0l-2.69,0.5l-1.12,-1.19l0.48,-1.36l-0.38,-0.39l-3.0,0.98l-0.17,0.44l1.02,1.76l-1.27,1.55l-3.09,1.71l-3.15,-0.29l-0.3,0.18l0.07,0.34l2.22,2.1l1.47,3.22l1.15,1.09l0.25,1.41l-0.48,0.76l-4.47,-0.81l-0.17,0.02l-6.97,2.9l-2.2,0.44l-0.11,0.05l-3.83,2.68l-3.63,2.32l-0.1,0.11l-0.76,1.4l-3.3,-2.4l-0.3,-0.03l-6.31,2.85l-0.99,-1.21l-0.4,-0.06l-2.32,1.54l-3.23,-0.49l-0.33,0.2l-0.79,2.39l-2.97,3.51l-0.07,0.21l0.09,1.47l0.22,0.27l2.62,0.74l-0.3,4.7l-2.06,0.12l-0.26,0.2l-1.07,2.94l0.04,0.27l0.83,1.19l-4.03,1.63l-0.18,0.21l-0.83,3.72l-3.55,0.79l-0.23,0.23l-0.73,3.32l-3.22,2.76l-0.76,-1.88l-1.07,-4.88l-1.39,-7.59l1.17,-4.76l2.05,-2.08l0.09,-0.19l0.11,-1.46l3.67,-0.77l0.15,-0.08l4.47,-4.61l4.29,-3.82l4.48,-3.01l0.11,-0.14l2.01,-5.43l-0.31,-0.4l-3.04,0.33l-0.24,0.17l-1.47,3.11l-5.98,3.94l-1.91,-4.36l-0.33,-0.17l-6.46,1.3l-0.15,0.08l-6.27,6.33l-0.01,0.41l1.7,1.87l-5.04,0.87l-3.51,0.34l0.16,-2.32l-0.26,-0.32l-3.89,-0.56l-0.19,0.04l-3.02,1.77l-7.63,-0.63l-8.24,1.1l-0.16,0.07l-8.11,7.09l-9.6,8.31l0.16,0.52l3.79,0.42l1.16,2.03l0.17,0.14l2.43,0.76l0.31,-0.08l1.5,-1.61l2.49,0.2l3.46,3.6l0.08,2.67l-1.91,3.26l-0.04,0.14l-0.21,3.91l-1.11,5.09l-3.73,4.55l-0.87,2.21l-6.73,7.14l-1.59,1.77l-3.23,1.72l-1.38,0.03l-1.48,-1.39l-0.37,-0.03l-3.36,2.22l-0.11,0.14l-0.16,0.42l-0.01,-1.09l1.0,-0.06l0.28,-0.27l0.36,-3.6l-0.61,-2.51l1.85,-0.94l2.94,0.53l0.32,-0.15l1.71,-3.1l0.84,-3.38l0.97,-1.18l1.32,-2.88l-0.34,-0.42l-4.14,0.95l-2.18,1.25l-3.51,-0.0l-0.95,-2.81l-0.1,-0.14l-2.97,-2.3l-0.11,-0.05l-4.19,-1.0l-0.89,-3.08l-0.87,-2.03l-0.95,-1.46l-1.54,-3.37l-0.12,-0.14l-2.27,-1.28l-3.83,-1.02l-3.37,0.1l-3.11,0.61l-0.13,0.06l-2.07,1.69l0.04,0.49l1.23,0.72l0.03,1.53l-1.34,1.05l-2.26,3.51l-0.05,0.17l0.02,1.27l-3.25,1.9l-2.87,-1.17l-0.14,-0.02l-2.86,0.26l-1.22,-1.02l-0.12,-0.06l-1.5,-0.35l-0.23,0.04l-3.62,2.27l-3.24,0.53l-2.28,0.79l-3.08,-0.51l-2.24,0.03l-1.49,-1.61l-2.45,-1.57l-0.11,-0.04l-2.6,-0.43l-3.17,0.43l-2.31,0.59l-3.31,-1.28l-0.45,-2.31l-0.21,-0.23l-2.94,-0.85l-2.26,-0.39l-2.77,-1.36l-0.37,0.09l-2.59,3.45l-0.03,0.32l0.91,1.74l-2.15,2.01l-3.47,-0.79l-2.44,-0.12l-1.59,-1.46l-0.2,-0.08l-2.55,-0.05l-2.12,-0.98l-0.24,-0.01l-3.85,1.57l-4.74,2.79l-2.59,0.55l-0.79,0.21l-1.21,-1.81l-0.29,-0.13l-3.05,0.41l-0.96,-1.25l-0.14,-0.1l-1.65,-0.6l-1.15,-1.82l-0.13,-0.12l-1.38,-0.6l-0.19,-0.02l-3.49,0.82l-3.35,-1.85l-0.38,0.08l-1.08,1.4l-5.36,-8.17l-3.02,-2.52l0.72,-0.85l0.01,-0.38l-0.37,-0.08l-6.22,3.21l-1.98,0.16l0.17,-1.51l-0.2,-0.31l-3.22,-1.17l-0.19,-0.0l-2.3,0.74l-0.72,-3.27l-0.24,-0.23l-4.5,-0.75l-0.21,0.04l-2.2,1.42l-6.21,1.27l-0.11,0.05l-1.16,0.81l-9.3,1.19l-0.18,0.09l-1.15,1.17l-0.02,0.39l1.56,2.01l-2.02,0.74l-0.16,0.42l0.35,0.68l-2.18,1.49l0.02,0.51l3.83,2.16l-0.45,1.13l-3.31,-0.13l-0.25,0.12l-0.57,0.77l-2.97,-1.59l-0.15,-0.04l-3.97,0.07l-0.13,0.03l-2.53,1.32l-2.84,-1.28l-5.52,-2.3l-0.12,-0.02l-3.91,0.09l-0.16,0.05l-5.17,3.6l-0.13,0.21l-0.25,1.89l-2.17,-1.6l-0.44,0.1l-2.0,3.59l0.06,0.37l0.55,0.5l-1.32,2.23l0.04,0.36l2.13,2.17l0.23,0.09l1.7,-0.08l1.42,1.89l-0.23,1.5l0.19,0.32l0.94,0.38l-0.89,1.44l-2.3,0.49l-0.17,0.11l-2.49,3.2l0.0,0.37l2.2,2.81l-0.23,1.93l0.06,0.22l2.56,3.32l-1.27,1.02l-0.4,0.66l-0.8,-0.15l-1.65,-1.75l-0.18,-0.09l-0.66,-0.09l-1.45,-0.64l-0.72,-1.16l-0.18,-0.13l-2.34,-0.63l-0.17,0.0l-1.32,0.41l-0.31,-0.4l-0.12,-0.09l-3.49,-1.48l-3.67,-0.49l-2.1,-0.52l-0.3,0.1l-0.12,0.14l-2.96,-2.4l-2.89,-1.19l-1.69,-1.42l1.27,-0.35l0.16,-0.1l2.08,-2.61l-0.04,-0.41l-1.02,-0.9l3.21,-1.12l0.2,-0.31l-0.07,-0.69l-0.37,-0.26l-1.86,0.42l0.05,-0.86l1.11,-0.76l2.35,-0.23l0.25,-0.19l0.39,-1.07l0.0,-0.19l-0.51,-1.64l0.95,-1.58l0.04,-0.16l-0.03,-0.95l-0.22,-0.28l-3.69,-1.06l-1.43,0.02l-1.45,-1.44l-0.29,-0.08l-1.83,0.49l-2.88,-1.04l0.04,-0.42l-0.04,-0.18l-0.89,-1.43l-0.23,-0.14l-1.77,-0.14l-0.13,-0.66l0.52,-0.56l0.01,-0.4l-1.6,-1.9l-0.27,-0.1l-2.55,0.32l-0.71,-0.16l-0.3,0.1l-0.53,0.63l-0.58,-0.08l-0.56,-1.97l-0.48,-0.94l0.17,-0.11l1.92,0.11l0.2,-0.06l0.97,-0.74l0.05,-0.42l-0.72,-0.91l-0.13,-0.1l-1.43,-0.51l0.09,-0.36l-0.13,-0.33l-0.97,-0.59l-1.43,-2.06l0.44,-0.77l0.04,-0.19l-0.25,-1.64l-0.2,-0.24l-2.45,-0.84l-0.19,-0.0l-1.05,0.34l-0.25,-0.62l-0.18,-0.17l-2.5,-0.84l-0.74,-1.93l-0.21,-1.7l-0.13,-0.21l-0.92,-0.63l0.83,-0.89l0.07,-0.27l-0.71,-3.26l1.69,-2.01l0.03,-0.34l-0.24,-0.41l2.63,-1.9l-0.01,-0.49l-2.31,-1.57l5.08,-4.61l2.33,-2.24l1.01,-2.08l-0.09,-0.37l-3.52,-2.56l0.94,-2.38l-0.04,-0.29l-2.14,-2.86l1.61,-3.35l-0.01,-0.29l-2.81,-4.58l2.19,-3.04l-0.06,-0.42l-3.7,-2.76l0.32,-2.67l1.87,-0.38l4.26,-1.77l2.46,-1.47l3.96,2.58l0.12,0.05l6.81,1.04l9.37,4.87l1.81,1.92l0.15,2.55l-2.61,2.06l-3.95,1.07l-11.1,-3.15l-0.17,0.0l-1.84,0.53l-0.1,0.53l3.97,2.97l0.15,1.77l0.16,4.14l0.19,0.27l3.21,1.22l1.94,1.03l0.44,-0.22l0.32,-1.94l-0.07,-0.25l-1.32,-1.52l1.25,-1.2l5.87,2.45l0.24,-0.01l2.11,-0.98l0.13,-0.42l-1.55,-2.75l5.52,-3.84l2.13,0.22l2.28,1.42l0.43,-0.12l1.46,-2.87l-0.04,-0.33l-1.97,-2.37l1.14,-2.38l-0.02,-0.3l-1.42,-2.07l6.15,1.22l1.14,1.92l-2.74,0.46l-0.25,0.3l0.02,2.36l0.12,0.24l1.97,1.44l0.25,0.05l3.87,-0.91l0.22,-0.23l0.58,-2.55l5.09,-1.98l8.67,-3.69l1.22,0.14l-2.06,2.2l0.18,0.5l3.11,0.45l0.23,-0.07l1.71,-1.41l4.59,-0.12l0.12,-0.03l3.53,-1.72l2.7,2.48l0.42,-0.01l2.85,-2.88l-0.0,-0.43l-2.42,-2.35l1.0,-1.13l7.2,1.31l3.42,1.36l9.06,4.97l0.39,-0.08l1.67,-2.27l-0.04,-0.4l-2.46,-2.23l-0.06,-0.82l-0.26,-0.27l-2.64,-0.38l0.69,-1.76l0.0,-0.22l-1.32,-3.47l-0.07,-1.27l4.52,-4.09l0.08,-0.11l1.6,-4.18l1.67,-0.84l6.33,1.2l0.46,2.31l-2.31,3.67l0.05,0.38l1.49,1.41l0.77,3.04l-0.56,6.05l0.09,0.24l2.62,2.54l-0.99,2.65l-4.87,5.96l0.17,0.48l2.86,0.61l0.31,-0.13l0.94,-1.42l2.67,-1.04l0.18,-0.19l0.64,-2.01l2.11,-1.98l0.05,-0.37l-1.38,-2.32l1.11,-2.74l-0.24,-0.41l-2.53,-0.33l-0.53,-2.16l1.96,-4.42l-0.05,-0.32l-3.03,-3.48l4.21,-2.94l0.12,-0.3l-0.52,-3.04l0.72,-0.06l1.18,2.35l-0.97,4.39l0.2,0.35l2.68,0.84l0.37,-0.38l-1.05,-3.07l3.89,-1.71l5.05,-0.24l4.55,2.62l0.36,-0.05l0.05,-0.36l-2.19,-3.84l-0.23,-4.78l4.07,-0.92l5.98,0.21l5.47,-0.64l0.2,-0.48l-1.88,-2.37l2.65,-2.99l2.75,-0.13l0.12,-0.03l4.82,-2.48l6.56,-0.67l0.23,-0.14l0.76,-1.27l6.33,-0.46l1.97,1.11l0.28,0.01l5.55,-2.71l4.53,0.08l0.29,-0.21l0.67,-2.18l2.29,-2.15l5.75,-2.13l3.48,1.4l-2.7,1.03l-0.19,0.31l0.26,0.26l5.47,0.78ZM871.83,65.73l0.25,-0.15l1.99,0.01l3.3,1.2l-0.08,0.22l-2.41,1.03l-5.73,0.49l-0.31,-1.0l2.99,-1.8ZM797.64,48.44l-2.22,1.51l-3.85,-0.43l-4.35,-1.85l0.42,-1.13l4.42,0.72l5.59,1.17ZM783.82,46.06l-1.71,3.25l-9.05,-0.14l-4.11,1.15l-4.64,-3.04l1.21,-3.13l3.11,-0.91l6.53,0.22l8.66,2.59ZM780.37,145.71l2.28,5.23l-3.09,-0.89l-0.37,0.19l-1.54,4.65l0.04,0.27l2.38,3.17l-0.05,1.4l-1.41,-1.41l-0.46,0.04l-1.23,1.81l-0.33,-1.86l0.28,-3.1l-0.28,-3.41l0.58,-2.46l0.11,-4.39l-0.03,-0.13l-1.44,-3.2l0.21,-4.39l2.19,-1.49l0.09,-0.41l-0.81,-1.3l0.48,-0.21l0.56,1.94l0.86,3.23l-0.05,3.36l1.03,3.35ZM780.16,57.18l-3.4,0.03l-5.06,-0.53l1.97,-1.59l2.95,-0.42l3.35,1.75l0.18,0.77ZM683.84,31.18l-13.29,1.97l4.16,-6.56l1.88,-0.58l1.77,0.34l6.08,3.02l-0.6,1.8ZM670.94,28.02l-5.18,0.65l-6.89,-1.58l-4.03,-2.07l-1.88,-3.98l-0.18,-0.16l-2.8,-0.93l5.91,-3.62l5.25,-1.29l4.73,2.88l5.63,5.44l-0.57,4.66ZM564.37,68.98l-0.85,0.23l-7.93,-0.57l-0.6,-1.84l-0.21,-0.2l-4.34,-1.18l-0.3,-2.08l2.34,-0.92l0.19,-0.29l-0.08,-2.43l4.85,-4.0l-0.12,-0.52l-1.68,-0.43l5.47,-3.94l0.11,-0.33l-0.6,-2.02l5.36,-2.55l8.22,-3.27l8.29,-0.96l4.34,-1.94l4.67,-0.65l1.45,1.72l-1.43,1.37l-8.8,2.52l-7.65,2.42l-7.92,4.84l-3.73,4.75l-3.92,4.58l-0.07,0.23l0.51,3.88l0.11,0.2l4.32,3.39ZM548.86,18.57l-3.28,0.75l-2.25,0.44l-0.22,0.19l-0.3,0.81l-2.67,0.86l-2.27,-1.14l1.2,-1.51l-0.23,-0.49l-3.14,-0.1l2.48,-0.54l3.55,-0.07l0.44,1.36l0.49,0.12l1.4,-1.35l2.2,-0.9l3.13,1.08l-0.54,0.49ZM477.5,133.25l-4.21,0.05l-2.69,-0.34l0.39,-1.03l3.24,-1.06l2.51,0.58l0.85,0.43l-0.2,0.71l-0.0,0.15l0.12,0.52Z",
            "name": "Russia"
        },
        "RW": {
            "path": "M497.03,288.12l0.78,1.11l-0.12,1.19l-0.49,0.21l-1.25,-0.15l-0.3,0.16l-0.67,1.24l-1.01,-0.13l0.16,-0.92l0.22,-0.12l0.15,-0.24l0.09,-1.37l0.49,-0.48l0.42,0.18l0.25,-0.01l1.26,-0.65Z",
            "name": "Rwanda"
        },
        "RS": {
            "path": "M469.75,168.65l0.21,-0.21l0.36,-1.44l-0.08,-0.29l-1.06,-1.03l0.54,-1.16l-0.28,-0.43l-0.26,0.0l0.55,-0.67l-0.01,-0.39l-0.77,-0.86l-0.45,-0.89l1.56,-0.67l1.39,0.12l1.22,1.1l0.26,0.91l0.16,0.19l1.38,0.66l0.17,1.12l0.14,0.21l1.46,0.9l0.35,-0.03l0.62,-0.54l0.09,0.06l-0.28,0.25l-0.03,0.42l0.29,0.34l-0.44,0.5l-0.07,0.26l0.22,1.12l0.07,0.14l1.02,1.1l-0.81,0.84l-0.42,0.96l0.04,0.3l0.12,0.15l-0.15,0.16l-1.04,0.04l-0.39,0.08l0.33,-0.81l-0.29,-0.41l-0.21,0.01l-0.39,-0.45l-0.13,-0.09l-0.32,-0.11l-0.27,-0.4l-0.14,-0.11l-0.4,-0.16l-0.31,-0.37l-0.34,-0.09l-0.45,0.17l-0.18,0.18l-0.29,0.84l-0.96,-0.65l-0.81,-0.33l-0.32,-0.37l-0.22,-0.18Z",
            "name": "Republic of Serbia"
        },
        "LT": {
            "path": "M478.13,133.31l-0.14,-0.63l0.25,-0.88l-0.15,-0.35l-1.17,-0.58l-2.43,-0.57l-0.45,-2.51l2.58,-0.97l4.14,0.22l2.3,-0.32l0.26,0.54l0.22,0.17l1.26,0.22l2.25,1.6l0.19,1.23l-1.87,1.01l-0.14,0.18l-0.54,1.83l-2.54,1.21l-2.18,-0.02l-0.52,-0.91l-0.18,-0.14l-1.11,-0.32Z",
            "name": "Lithuania"
        },
        "LU": {
            "path": "M435.95,147.99l0.33,0.49l-0.11,1.07l-0.39,0.04l-0.29,-0.15l0.21,-1.4l0.25,-0.05Z",
            "name": "Luxembourg"
        },
        "LR": {
            "path": "M401.37,273.67l-0.32,0.01l-2.48,-1.15l-2.24,-1.89l-2.14,-1.38l-1.47,-1.42l0.44,-0.59l0.05,-0.13l0.12,-0.65l1.07,-1.3l1.08,-1.09l0.52,-0.07l0.43,-0.18l0.84,1.24l-0.15,0.89l0.07,0.25l0.49,0.54l0.22,0.1l0.71,0.01l0.27,-0.16l0.42,-0.83l0.19,0.02l-0.06,0.52l0.23,1.12l-0.5,1.03l0.06,0.35l0.73,0.69l0.14,0.08l0.71,0.15l0.92,0.91l0.06,0.76l-0.17,0.22l-0.06,0.15l-0.17,1.8Z",
            "name": "Liberia"
        },
        "RO": {
            "path": "M477.94,155.19l1.02,-0.64l1.49,0.33l1.52,0.01l1.09,0.73l0.32,0.01l0.81,-0.46l1.8,-0.3l0.18,-0.1l0.54,-0.64l0.86,0.0l0.64,0.26l0.71,0.87l0.8,1.35l1.39,1.81l0.07,1.25l-0.26,1.3l0.01,0.15l0.45,1.42l0.15,0.18l1.12,0.57l0.25,0.01l1.05,-0.45l0.86,0.4l0.03,0.43l-0.92,0.51l-0.63,-0.24l-0.4,0.22l-0.64,3.41l-1.12,-0.24l-1.78,-1.09l-0.23,-0.04l-2.95,0.71l-1.25,0.77l-3.55,-0.16l-1.89,-0.47l-0.14,-0.0l-0.75,0.17l-0.61,-1.07l-0.3,-0.36l0.36,-0.32l-0.04,-0.48l-0.62,-0.38l-0.36,0.03l-0.62,0.54l-1.15,-0.71l-0.18,-1.14l-0.17,-0.22l-1.4,-0.67l-0.24,-0.86l-0.09,-0.14l-0.96,-0.87l1.49,-0.44l0.16,-0.11l1.51,-2.14l1.15,-2.09l1.44,-0.63Z",
            "name": "Romania"
        },
        "GW": {
            "path": "M383.03,256.73l-1.12,-0.88l-0.14,-0.06l-0.94,-0.15l-0.43,-0.54l0.01,-0.27l-0.13,-0.26l-0.68,-0.48l-0.05,-0.16l0.99,-0.31l0.77,0.08l0.15,-0.02l0.61,-0.26l4.25,0.1l-0.02,0.44l-0.19,0.18l-0.08,0.29l0.17,0.66l-0.17,0.14l-0.44,0.0l-0.16,0.05l-0.57,0.37l-0.66,-0.04l-0.24,0.1l-0.92,1.03Z",
            "name": "Guinea Bissau"
        },
        "GT": {
            "path": "M195.13,249.89l-1.05,-0.35l-1.5,-0.04l-1.06,-0.47l-1.19,-0.93l0.04,-0.53l0.27,-0.55l-0.03,-0.31l-0.24,-0.32l1.02,-1.77l3.04,-0.01l0.3,-0.28l0.06,-0.88l-0.19,-0.3l-0.3,-0.11l-0.23,-0.45l-0.11,-0.12l-0.9,-0.58l-0.35,-0.33l0.37,-0.0l0.3,-0.3l0.0,-1.15l4.05,0.02l-0.02,1.74l-0.2,2.89l0.3,0.32l0.67,-0.0l0.75,0.42l0.4,-0.11l-0.62,0.53l-1.17,0.7l-0.13,0.16l-0.18,0.49l0.0,0.21l0.14,0.34l-0.35,0.44l-0.49,0.13l-0.2,0.41l0.03,0.06l-0.27,0.16l-0.86,0.64l-0.12,0.22ZM199.35,245.38l0.07,-0.13l0.05,0.02l-0.13,0.11Z",
            "name": "Guatemala"
        },
        "GR": {
            "path": "M487.2,174.55l-0.64,1.54l-0.43,0.24l-1.41,-0.08l-1.28,-0.28l-0.14,0.0l-3.03,0.77l-0.13,0.51l1.39,1.34l-0.78,0.29l-1.2,0.0l-1.23,-1.42l-0.47,0.02l-0.47,0.65l-0.04,0.27l0.56,1.76l0.06,0.11l1.02,1.12l-0.66,0.45l-0.04,0.46l1.39,1.35l1.15,0.79l0.02,1.06l-1.91,-0.63l-0.36,0.42l0.56,1.12l-1.2,0.23l-0.22,0.4l0.8,2.14l-1.15,0.02l-1.89,-1.15l-0.89,-2.19l-0.43,-1.91l-0.05,-0.11l-0.98,-1.35l-1.24,-1.62l-0.13,-0.63l1.07,-1.32l0.06,-0.14l0.13,-0.81l0.68,-0.36l0.16,-0.25l0.03,-0.54l1.4,-0.23l0.12,-0.05l0.87,-0.6l1.26,0.05l0.25,-0.11l0.34,-0.43l0.33,-0.07l1.81,0.08l0.13,-0.02l1.87,-0.77l1.64,0.97l0.19,0.04l2.28,-0.28l0.26,-0.29l0.02,-0.95l0.56,0.36ZM480.44,192.0l1.05,0.74l0.01,0.0l-1.26,-0.23l0.2,-0.51ZM481.76,192.79l1.86,-0.15l1.53,0.17l-0.02,0.19l0.34,0.3l-2.28,0.15l0.01,-0.13l-0.25,-0.31l-1.19,-0.22ZM485.65,193.28l0.65,-0.16l-0.05,0.12l-0.6,0.04Z",
            "name": "Greece"
        },
        "GQ": {
            "path": "M444.81,282.04l-0.21,-0.17l0.74,-2.4l3.56,0.05l0.02,2.42l-3.34,-0.02l-0.76,0.13Z",
            "name": "Equatorial Guinea"
        },
        "GY": {
            "path": "M271.34,264.25l1.43,0.81l1.44,1.53l0.06,1.19l0.28,0.28l0.84,0.05l2.13,1.92l-0.34,1.93l-1.37,0.59l-0.17,0.34l0.12,0.51l-0.43,1.21l0.03,0.26l1.11,1.82l0.26,0.14l0.56,0.0l0.32,1.29l1.25,1.78l-0.08,0.01l-1.34,-0.21l-0.24,0.06l-0.78,0.64l-1.06,0.41l-0.76,0.1l-0.22,0.15l-0.18,0.32l-0.95,-0.1l-1.38,-1.05l-0.19,-1.13l-0.6,-1.18l0.37,-1.96l0.65,-0.83l0.03,-0.32l-0.57,-1.17l-0.15,-0.14l-0.62,-0.27l0.25,-0.85l-0.08,-0.3l-0.58,-0.58l-0.24,-0.09l-1.15,0.1l-1.41,-1.58l0.48,-0.49l0.09,-0.22l-0.04,-0.92l1.31,-0.34l0.73,-0.52l0.04,-0.44l-0.75,-0.82l0.16,-0.66l1.74,-1.3Z",
            "name": "Guyana"
        },
        "GE": {
            "path": "M525.41,174.19l0.26,-0.88l-0.0,-0.17l-0.63,-2.06l-0.1,-0.15l-1.45,-1.12l-0.11,-0.05l-1.31,-0.33l-0.66,-0.69l1.97,0.48l3.65,0.49l3.3,1.41l0.39,0.5l0.33,0.1l1.43,-0.45l2.14,0.58l0.7,1.14l0.13,0.12l1.06,0.47l-0.18,0.11l-0.08,0.43l1.08,1.41l-0.06,0.06l-1.16,-0.15l-1.82,-0.84l-0.31,0.04l-0.55,0.44l-3.29,0.44l-2.32,-1.41l-0.17,-0.04l-2.25,0.12Z",
            "name": "Georgia"
        },
        "GB": {
            "path": "M412.82,118.6l-2.31,3.4l-0.0,0.33l0.31,0.13l2.52,-0.49l2.34,0.02l-0.56,2.51l-2.22,3.13l0.22,0.47l2.43,0.21l2.35,4.35l0.17,0.14l1.58,0.51l1.49,3.78l0.73,1.37l0.2,0.15l2.76,0.59l-0.25,1.75l-1.18,0.91l-0.08,0.39l0.87,1.49l-1.96,1.51l-3.31,-0.02l-4.15,0.88l-1.07,-0.59l-0.35,0.04l-1.55,1.44l-2.17,-0.35l-0.22,0.05l-1.61,1.15l-0.78,-0.38l3.31,-3.12l2.18,-0.7l0.21,-0.31l-0.26,-0.27l-3.78,-0.54l-0.48,-0.9l2.3,-0.92l0.13,-0.46l-1.29,-1.71l0.39,-1.83l3.46,0.29l0.32,-0.24l0.37,-1.99l-0.06,-0.24l-1.71,-2.17l-0.18,-0.11l-2.91,-0.58l-0.43,-0.68l0.82,-1.4l-0.03,-0.35l-0.82,-0.97l-0.46,0.01l-0.85,1.05l-0.11,-2.6l-0.05,-0.16l-1.19,-1.7l0.86,-3.53l1.81,-2.75l1.88,0.26l2.38,-0.24ZM406.39,132.84l-1.09,1.92l-1.65,-0.62l-1.26,0.02l0.41,-1.46l0.0,-0.16l-0.42,-1.51l1.62,-0.11l2.39,1.92Z",
            "name": "United Kingdom"
        },
        "GA": {
            "path": "M448.76,294.47l-2.38,-2.34l-1.63,-2.04l-1.46,-2.48l0.06,-0.66l0.54,-0.81l0.61,-1.82l0.46,-1.69l0.63,-0.11l3.62,0.03l0.3,-0.3l-0.02,-2.75l0.88,-0.12l1.47,0.32l0.13,0.0l1.39,-0.3l-0.13,0.87l0.03,0.19l0.7,1.29l0.3,0.16l1.74,-0.19l0.36,0.29l-1.01,2.7l0.05,0.29l1.13,1.42l0.25,1.82l-0.3,1.56l-0.64,0.99l-1.93,-0.09l-1.26,-1.13l-0.5,0.17l-0.16,0.91l-1.48,0.27l-0.12,0.05l-0.86,0.63l-0.08,0.39l0.81,1.42l-1.48,1.08Z",
            "name": "Gabon"
        },
        "GN": {
            "path": "M399.83,265.31l-0.69,-0.06l-0.3,0.16l-0.43,0.85l-0.39,-0.01l-0.3,-0.33l0.14,-0.87l-0.05,-0.22l-1.05,-1.54l-0.37,-0.11l-0.61,0.27l-0.84,0.12l0.02,-0.54l-0.04,-0.17l-0.35,-0.57l0.07,-0.63l-0.03,-0.17l-0.57,-1.11l-0.7,-0.9l-0.24,-0.12l-2.0,-0.0l-0.19,0.07l-0.51,0.42l-0.6,0.05l-0.21,0.11l-0.43,0.55l-0.3,0.7l-1.04,0.86l-0.91,-1.24l-1.0,-1.02l-0.69,-0.37l-0.52,-0.42l-0.3,-1.11l-0.37,-0.56l-0.1,-0.1l-0.4,-0.23l0.77,-0.85l0.62,0.04l0.18,-0.05l0.58,-0.38l0.46,-0.0l0.19,-0.07l0.39,-0.34l0.1,-0.3l-0.17,-0.67l0.15,-0.14l0.09,-0.2l0.03,-0.57l0.87,0.02l1.76,0.6l0.13,0.01l0.55,-0.06l0.22,-0.13l0.08,-0.12l1.18,0.17l0.17,-0.02l0.09,0.56l0.3,0.25l0.4,-0.0l0.14,-0.03l0.56,-0.29l0.23,0.05l0.63,0.59l0.15,0.07l1.07,0.2l0.24,-0.06l0.65,-0.52l0.77,-0.32l0.55,-0.32l0.3,0.04l0.44,0.45l0.34,0.74l0.84,0.87l-0.35,0.45l-0.06,0.15l-0.1,0.82l0.42,0.31l0.35,-0.16l0.05,0.04l-0.1,0.59l0.09,0.27l0.42,0.4l-0.06,0.02l-0.18,0.21l-0.2,0.86l0.03,0.21l0.56,1.02l0.52,1.71l-0.65,0.21l-0.15,0.12l-0.24,0.35l-0.03,0.28l0.16,0.41l-0.1,0.76l-0.12,0.0Z",
            "name": "Guinea"
        },
        "GM": {
            "path": "M379.18,251.48l0.15,-0.55l2.51,-0.07l0.21,-0.09l0.48,-0.52l0.58,-0.03l0.91,0.58l0.16,0.05l0.78,0.01l0.14,-0.03l0.59,-0.31l0.16,0.24l-0.71,0.38l-0.94,-0.04l-1.02,-0.51l-0.3,0.01l-0.86,0.55l-0.37,0.02l-0.14,0.04l-0.53,0.31l-1.81,-0.04Z",
            "name": "Gambia"
        },
        "GL": {
            "path": "M304.13,6.6l8.19,-3.63l8.72,0.28l0.19,-0.06l3.12,-2.28l8.75,-0.61l19.94,0.8l14.93,4.75l-3.92,2.01l-9.52,0.27l-13.48,0.6l-0.27,0.2l0.09,0.33l1.26,1.09l0.22,0.07l8.81,-0.67l7.49,2.07l0.19,-0.01l4.68,-1.78l1.76,1.84l-2.59,3.26l-0.01,0.36l0.34,0.11l6.35,-2.2l12.09,-2.32l7.31,1.14l1.17,2.13l-9.9,4.05l-1.43,1.32l-7.91,0.98l-0.26,0.31l0.29,0.29l5.25,0.25l-2.63,3.72l-2.02,3.61l-0.04,0.15l0.08,6.05l0.07,0.19l2.61,3.0l-3.4,0.2l-4.12,1.66l-0.04,0.54l4.5,2.67l0.53,3.9l-2.39,0.42l-0.19,0.48l2.91,3.83l-5.0,0.32l-0.27,0.22l0.12,0.33l2.69,1.84l-0.65,1.35l-3.36,0.71l-3.46,0.01l-0.21,0.51l3.05,3.15l0.02,1.53l-4.54,-1.79l-0.32,0.06l-1.29,1.26l0.11,0.5l3.33,1.15l3.17,2.74l0.85,3.29l-4.0,0.78l-1.83,-1.66l-3.1,-2.64l-0.36,-0.02l-0.13,0.33l0.8,2.92l-2.76,2.26l-0.09,0.33l0.28,0.2l6.59,0.19l2.47,0.18l-5.86,3.38l-6.76,3.43l-7.26,1.48l-2.73,0.02l-0.16,0.05l-2.67,1.72l-3.44,4.42l-5.28,2.86l-1.73,0.18l-3.33,1.01l-3.59,0.96l-0.15,0.1l-2.15,2.52l-0.07,0.19l-0.03,2.76l-1.21,2.49l-4.03,3.1l-0.1,0.33l0.98,2.94l-2.31,6.57l-3.21,0.21l-3.6,-3.0l-0.19,-0.07l-4.9,-0.02l-2.29,-1.97l-1.69,-3.78l-4.31,-4.86l-1.23,-2.52l-0.34,-3.58l-0.08,-0.17l-3.35,-3.67l0.85,-2.92l-0.09,-0.31l-1.5,-1.34l2.33,-4.7l3.67,-1.57l0.15,-0.13l1.02,-1.93l0.52,-3.47l-0.44,-0.31l-2.85,1.57l-1.33,0.64l-2.12,0.59l-2.81,-1.32l-0.15,-2.79l0.88,-2.17l2.09,-0.06l5.07,1.2l0.34,-0.17l-0.11,-0.37l-4.3,-2.9l-2.24,-1.58l-0.25,-0.05l-2.38,0.62l-1.7,-0.93l2.62,-4.1l-0.03,-0.36l-1.51,-1.75l-1.97,-3.3l-3.01,-5.21l-0.1,-0.11l-3.04,-1.85l0.03,-1.94l-0.18,-0.28l-6.82,-3.01l-5.35,-0.38l-6.69,0.21l-6.03,0.37l-2.81,-1.59l-3.84,-2.9l5.94,-1.5l5.01,-0.28l0.28,-0.29l-0.26,-0.31l-10.68,-1.38l-5.38,-2.1l0.27,-1.68l9.3,-2.6l9.18,-2.68l0.19,-0.16l0.97,-2.05l-0.18,-0.42l-6.29,-1.91l1.81,-1.9l8.58,-4.05l3.6,-0.63l0.23,-0.4l-0.92,-2.37l5.59,-1.5l7.66,-0.95l7.58,-0.05l2.65,1.84l0.31,0.02l6.52,-3.29l5.85,2.24l3.55,0.49l5.17,1.95l0.38,-0.16l-0.13,-0.39l-5.77,-3.16l0.29,-2.26Z",
            "name": "Greenland"
        },
        "KW": {
            "path": "M540.87,207.81l0.41,0.94l-0.18,0.51l0.0,0.21l0.65,1.66l-1.15,0.05l-0.54,-1.12l-0.24,-0.17l-1.73,-0.2l1.44,-2.06l1.33,0.18Z",
            "name": "Kuwait"
        },
        "GH": {
            "path": "M423.16,269.88l-3.58,1.34l-1.41,0.87l-2.13,0.69l-1.91,-0.61l0.09,-0.75l-0.03,-0.17l-1.04,-2.07l0.62,-2.7l1.04,-2.08l0.03,-0.19l-1.0,-5.46l0.05,-1.12l4.04,-0.11l1.08,0.18l0.18,-0.03l0.72,-0.36l0.75,0.13l-0.11,0.48l0.06,0.26l0.98,1.22l-0.0,1.77l0.24,1.99l0.05,0.13l0.55,0.81l-0.52,2.14l0.19,1.37l0.69,1.66l0.38,0.62Z",
            "name": "Ghana"
        },
        "OM": {
            "path": "M568.16,231.0l-0.08,0.1l-0.84,1.61l-0.93,-0.11l-0.27,0.11l-0.58,0.73l-0.4,1.32l-0.01,0.14l0.29,1.61l-0.07,0.09l-1.0,-0.01l-0.16,0.04l-1.56,0.97l-0.14,0.2l-0.23,1.17l-0.41,0.4l-1.44,-0.02l-0.17,0.05l-0.98,0.65l-0.13,0.25l0.01,0.87l-0.97,0.57l-1.27,-0.22l-0.19,0.03l-1.63,0.84l-0.88,0.11l-2.55,-5.57l7.2,-2.49l0.19,-0.19l1.67,-5.23l-0.03,-0.25l-1.1,-1.78l0.05,-0.89l0.68,-1.03l0.05,-0.16l0.01,-0.89l0.96,-0.44l0.07,-0.5l-0.32,-0.26l0.16,-1.31l0.85,-0.01l1.03,1.67l0.09,0.09l1.4,0.96l0.11,0.05l1.82,0.34l1.37,0.45l1.75,2.32l0.13,0.1l0.7,0.26l-0.0,0.3l-1.25,2.19l-1.01,0.8ZM561.88,218.47l-0.01,0.02l-0.15,-0.29l0.3,-0.38l-0.14,0.65Z",
            "name": "Oman"
        },
        "_3": {
            "path": "M543.2,261.06l-1.07,1.46l-1.65,1.99l-1.91,0.01l-8.08,-2.95l-0.89,-0.84l-0.9,-1.19l-0.81,-1.23l0.44,-0.73l0.76,-1.12l0.49,0.28l0.52,1.05l1.13,1.06l0.2,0.08l1.24,0.01l2.42,-0.65l2.77,-0.31l2.17,-0.78l1.31,-0.19l0.84,-0.43l1.03,-0.06l-0.01,4.54Z",
            "name": "Somaliland"
        },
        "_2": {
            "path": "M384.23,230.37l0.07,-0.06l0.28,-0.89l0.99,-1.13l0.07,-0.13l0.8,-3.54l3.4,-2.8l0.09,-0.13l0.76,-2.17l0.07,5.5l-2.07,0.21l-0.24,0.17l-0.61,1.36l-0.02,0.16l0.43,3.46l-4.01,-0.01ZM391.82,218.2l0.07,-0.06l0.75,-1.93l1.86,-0.25l0.94,0.34l1.14,0.0l0.18,-0.06l0.73,-0.56l1.41,-0.08l-0.0,2.72l-7.08,-0.12Z",
            "name": "Western Sahara"
        },
        "_1": {
            "path": "M472.71,172.84l-0.07,-0.43l-0.16,-0.22l-0.53,-0.27l-0.38,-0.58l0.3,-0.43l0.51,-0.19l0.18,-0.18l0.3,-0.87l0.12,-0.04l0.22,0.26l0.12,0.09l0.38,0.15l0.28,0.41l0.15,0.12l0.34,0.12l0.43,0.5l0.15,0.07l-0.12,0.3l-0.27,0.32l-0.03,0.18l-0.31,0.06l-1.48,0.47l-0.15,0.17Z",
            "name": "Kosovo"
        },
        "_0": {
            "path": "M503.54,192.92l0.09,-0.17l0.41,0.01l-0.08,0.01l-0.42,0.15ZM504.23,192.76l1.02,0.02l0.4,-0.13l-0.09,0.29l0.03,0.08l-0.35,0.16l-0.24,-0.04l-0.06,-0.1l-0.18,-0.17l-0.19,-0.08l-0.33,-0.02Z",
            "name": "Northern Cyprus"
        },
        "JO": {
            "path": "M510.26,200.93l0.28,-0.57l2.53,1.0l0.27,-0.02l4.57,-2.77l0.84,2.84l-0.28,0.25l-4.95,1.37l-0.14,0.49l2.24,2.48l-0.5,0.28l-0.13,0.14l-0.35,0.78l-1.76,0.35l-0.2,0.14l-0.57,0.94l-0.94,0.73l-2.45,-0.38l-0.03,-0.12l1.23,-4.32l-0.04,-1.1l0.34,-0.75l0.03,-0.12l0.0,-1.63Z",
            "name": "Jordan"
        },
        "HR": {
            "path": "M455.49,162.73l1.53,0.09l0.24,-0.1l0.29,-0.34l0.64,0.38l0.14,0.04l0.98,0.06l0.32,-0.3l-0.01,-0.66l0.67,-0.25l0.19,-0.22l0.21,-1.11l1.72,-0.72l0.65,0.32l1.94,1.37l2.07,0.6l0.22,-0.02l0.67,-0.33l0.47,0.94l0.67,0.76l-0.63,0.77l-0.91,-0.55l-0.16,-0.04l-1.69,0.04l-2.2,-0.51l-1.17,0.07l-0.21,0.11l-0.36,0.42l-0.67,-0.53l-0.46,0.12l-0.52,1.29l0.05,0.31l1.21,1.42l0.58,0.99l1.15,1.14l0.95,0.68l0.92,1.23l0.1,0.09l1.75,0.91l-1.87,-0.89l-1.5,-1.11l-2.23,-0.88l-1.77,-1.9l0.12,-0.06l0.1,-0.47l-1.07,-1.22l-0.04,-0.94l-0.21,-0.27l-1.61,-0.49l-0.35,0.14l-0.53,0.93l-0.41,-0.57l0.04,-0.73Z",
            "name": "Croatia"
        },
        "HT": {
            "path": "M237.82,234.68l1.35,0.1l1.95,0.37l0.18,1.15l-0.16,0.83l-0.51,0.37l-0.06,0.44l0.57,0.68l-0.02,0.22l-1.31,-0.35l-1.26,0.17l-1.49,-0.18l-0.15,0.02l-1.03,0.43l-1.02,-0.61l0.09,-0.36l2.04,0.32l1.9,0.21l0.19,-0.05l0.9,-0.58l0.05,-0.47l-1.05,-1.03l0.02,-0.86l-0.23,-0.3l-1.13,-0.29l0.18,-0.23Z",
            "name": "Haiti"
        },
        "HU": {
            "path": "M461.96,157.92l0.68,-1.66l-0.03,-0.29l-0.15,-0.22l0.84,-0.0l0.3,-0.26l0.12,-0.84l0.88,0.57l0.98,0.38l0.16,0.01l2.1,-0.39l0.23,-0.21l0.14,-0.45l0.88,-0.1l1.06,-0.43l0.13,0.1l0.28,0.04l1.18,-0.4l0.14,-0.1l0.52,-0.67l0.63,-0.15l2.6,0.95l0.26,-0.03l0.38,-0.23l1.12,0.7l0.1,0.49l-1.31,0.57l-0.14,0.13l-1.18,2.14l-1.44,2.04l-1.85,0.55l-1.51,-0.13l-0.14,0.02l-1.92,0.82l-0.85,0.42l-1.91,-0.55l-1.83,-1.31l-0.74,-0.37l-0.44,-0.97l-0.26,-0.18Z",
            "name": "Hungary"
        },
        "HN": {
            "path": "M202.48,251.87l-0.33,-0.62l-0.18,-0.14l-0.5,-0.15l0.13,-0.76l-0.11,-0.28l-0.34,-0.28l-0.6,-0.23l-0.18,-0.01l-0.81,0.22l-0.16,-0.24l-0.72,-0.39l-0.51,-0.48l-0.12,-0.07l-0.31,-0.09l0.24,-0.3l0.04,-0.3l-0.16,-0.4l0.1,-0.28l1.14,-0.69l1.0,-0.86l0.09,0.04l0.3,-0.05l0.47,-0.39l0.49,-0.03l0.14,0.13l0.29,0.06l0.31,-0.1l1.16,0.22l1.24,-0.08l0.81,-0.28l0.29,-0.25l0.63,0.1l0.69,0.18l0.65,-0.06l0.49,-0.2l1.04,0.32l0.38,0.06l0.7,0.44l0.71,0.56l0.92,0.41l0.1,0.11l-0.11,-0.01l-0.23,0.09l-0.3,0.3l-0.76,0.29l-0.58,0.0l-0.15,0.04l-0.45,0.26l-0.31,-0.07l-0.37,-0.34l-0.28,-0.07l-0.26,0.07l-0.18,0.15l-0.23,0.43l-0.04,-0.0l-0.33,0.28l-0.03,0.4l-0.76,0.61l-0.45,0.3l-0.15,0.16l-0.51,-0.36l-0.41,0.06l-0.45,0.56l-0.41,-0.01l-0.59,0.06l-0.27,0.31l0.04,0.96l-0.07,0.0l-0.25,0.16l-0.24,0.45l-0.42,0.06Z",
            "name": "Honduras"
        },
        "PR": {
            "path": "M254.95,238.31l1.15,0.21l0.2,0.23l-0.36,0.36l-1.76,-0.01l-1.2,0.07l-0.09,-0.69l0.17,-0.18l1.89,0.01Z",
            "name": "Puerto Rico"
        },
        "PS": {
            "path": "M509.66,201.06l-0.0,1.44l-0.29,0.63l-0.59,0.19l0.02,-0.11l0.52,-0.31l-0.02,-0.53l-0.41,-0.2l0.36,-1.28l0.41,0.17Z",
            "name": "West Bank"
        },
        "PT": {
            "path": "M398.65,173.6l0.75,-0.63l0.7,-0.3l0.51,1.2l0.28,0.18l1.48,-0.0l0.2,-0.08l0.33,-0.3l1.16,0.08l0.52,1.11l-0.95,0.66l-0.13,0.24l-0.03,2.2l-0.33,0.35l-0.08,0.18l-0.08,1.17l-0.86,0.19l-0.2,0.44l0.93,1.64l-0.64,1.79l0.07,0.31l0.72,0.72l-0.24,0.56l-0.9,1.05l-0.07,0.26l0.17,0.77l-0.73,0.54l-1.18,-0.36l-0.16,-0.0l-0.85,0.21l0.31,-1.81l-0.23,-1.87l-0.23,-0.25l-0.99,-0.24l-0.49,-0.91l0.18,-1.72l0.93,-0.99l0.08,-0.16l0.17,-1.17l0.52,-1.76l-0.04,-1.36l-0.51,-1.14l-0.09,-0.8Z",
            "name": "Portugal"
        },
        "PY": {
            "path": "M264.33,341.43l0.93,-2.96l0.07,-1.42l1.1,-2.1l4.19,-0.73l2.22,0.04l2.12,1.21l0.07,0.76l0.7,1.38l-0.16,3.48l0.24,0.31l2.64,0.5l0.19,-0.03l0.9,-0.45l1.47,0.62l0.38,0.64l0.23,2.35l0.3,1.07l0.25,0.21l0.93,0.12l0.16,-0.02l0.8,-0.37l0.61,0.33l-0.0,1.25l-0.33,1.53l-0.5,1.57l-0.39,2.26l-2.14,1.94l-1.85,0.4l-2.74,-0.4l-2.13,-0.62l2.26,-3.75l0.03,-0.24l-0.36,-1.18l-0.17,-0.19l-2.55,-1.03l-3.04,-1.95l-2.07,-0.43l-4.4,-4.12Z",
            "name": "Paraguay"
        },
        "PA": {
            "path": "M213.65,263.79l0.18,-0.43l0.02,-0.18l-0.06,-0.28l0.23,-0.18l-0.01,-0.48l-0.4,-0.29l-0.01,-0.62l0.57,-0.13l0.68,0.69l-0.04,0.39l0.26,0.33l1.0,0.11l0.27,-0.1l0.49,0.44l0.24,0.07l1.34,-0.22l1.04,-0.62l1.49,-0.5l0.86,-0.73l0.99,0.11l0.18,0.28l1.35,0.08l1.02,0.4l0.78,0.72l0.71,0.53l-0.1,0.12l-0.05,0.3l0.53,1.34l-0.28,0.44l-0.6,-0.13l-0.36,0.22l-0.2,0.76l-0.41,-0.36l-0.44,-1.12l0.49,-0.53l-0.14,-0.49l-0.51,-0.14l-0.41,-0.72l-0.11,-0.11l-1.25,-0.7l-0.19,-0.04l-1.1,0.16l-0.22,0.15l-0.47,0.81l-0.9,0.56l-0.49,0.08l-0.22,0.17l-0.25,0.52l0.05,0.32l0.93,1.07l-0.41,0.21l-0.29,0.3l-0.81,0.09l-0.36,-1.26l-0.53,-0.1l-0.21,0.28l-0.5,-0.09l-0.44,-0.88l-0.22,-0.16l-0.99,-0.16l-0.61,-0.28l-0.13,-0.03l-1.0,0.0Z",
            "name": "Panama"
        },
        "PG": {
            "path": "M808.4,298.6l0.62,0.46l1.19,1.56l1.04,0.77l-0.18,0.37l-0.42,0.15l-0.92,-0.82l-1.05,-1.53l-0.27,-0.96ZM804.09,296.06l-0.3,0.26l-0.36,-1.11l-0.66,-1.06l-2.55,-1.89l-1.42,-0.59l0.17,-0.15l1.16,0.6l0.85,0.55l1.01,0.58l0.97,1.02l0.9,0.76l0.24,1.03ZM796.71,297.99l0.15,0.82l0.34,0.24l1.43,-0.19l0.19,-0.11l0.68,-0.82l1.36,-0.87l0.13,-0.31l-0.21,-1.13l1.04,-0.03l0.3,0.25l-0.04,1.17l-0.74,1.34l-1.17,0.18l-0.22,0.15l-0.35,0.62l-2.51,1.13l-1.21,-0.0l-1.99,-0.71l-1.19,-0.58l0.07,-0.28l1.98,0.32l1.46,-0.2l0.24,-0.21l0.25,-0.79ZM789.24,303.52l0.11,0.15l2.19,1.62l1.6,2.62l0.27,0.14l1.09,-0.06l-0.07,0.77l0.23,0.32l1.23,0.27l-0.14,0.09l0.05,0.53l2.39,0.95l-0.11,0.28l-1.33,0.14l-0.51,-0.55l-0.18,-0.09l-4.59,-0.65l-1.87,-1.55l-1.38,-1.35l-1.28,-2.17l-0.16,-0.13l-3.27,-1.1l-0.19,0.0l-2.12,0.72l-1.58,0.85l-0.15,0.31l0.28,1.63l-1.65,0.73l-1.37,-0.4l-2.3,-0.09l-0.08,-15.65l3.95,1.57l4.58,1.42l1.67,1.25l1.32,1.19l0.36,1.39l0.19,0.21l4.06,1.51l0.39,0.85l-1.9,0.22l-0.25,0.39l0.55,1.68Z",
            "name": "Papua New Guinea"
        },
        "PE": {
            "path": "M246.44,329.21l-0.63,1.25l-1.05,0.54l-2.25,-1.33l-0.19,-0.93l-0.16,-0.21l-4.95,-2.58l-4.46,-2.79l-1.87,-1.52l-0.94,-1.91l0.33,-0.6l-0.01,-0.31l-2.11,-3.33l-2.46,-4.66l-2.36,-5.02l-1.04,-1.18l-0.77,-1.81l-0.08,-0.11l-1.95,-1.64l-1.54,-0.88l0.61,-0.85l0.02,-0.31l-1.15,-2.27l0.69,-1.56l1.59,-1.26l0.12,0.42l-0.56,0.47l-0.11,0.25l0.07,0.92l0.36,0.27l0.97,-0.19l0.85,0.23l0.99,1.19l0.41,0.05l1.42,-1.03l0.11,-0.16l0.46,-1.64l1.45,-2.06l2.92,-0.96l0.11,-0.07l2.73,-2.62l0.84,-1.72l0.02,-0.18l-0.3,-1.65l0.28,-0.1l1.49,1.06l0.77,1.14l0.1,0.09l1.08,0.6l1.43,2.55l0.21,0.15l1.86,0.31l0.18,-0.03l1.25,-0.6l0.77,0.37l0.17,0.03l1.4,-0.2l1.57,0.96l-1.45,2.29l0.23,0.46l0.63,0.05l0.66,0.7l-1.51,-0.08l-0.24,0.1l-0.27,0.31l-1.96,0.46l-2.95,1.74l-0.14,0.21l-0.17,1.1l-0.6,0.82l-0.05,0.23l0.21,1.13l-1.31,0.63l-0.17,0.27l0.0,0.91l-0.53,0.37l-0.1,0.37l1.04,2.27l1.31,1.46l-0.44,0.9l0.24,0.43l1.52,0.13l0.87,1.23l0.24,0.13l2.21,0.07l0.18,-0.06l1.55,-1.13l-0.14,3.22l0.23,0.3l1.14,0.29l0.16,-0.0l1.18,-0.36l1.97,3.71l-0.45,0.71l-0.04,0.14l-0.12,1.8l-0.05,2.07l-0.92,1.2l-0.03,0.31l0.38,0.8l-0.48,0.72l-0.02,0.3l1.01,2.02l-1.5,2.64Z",
            "name": "Peru"
        },
        "PK": {
            "path": "M609.08,187.76l1.66,1.21l0.71,2.11l0.2,0.19l3.62,1.01l-1.98,1.95l-2.65,0.4l-3.75,-0.68l-0.26,0.08l-1.23,1.22l-0.07,0.31l0.89,2.46l0.88,1.92l0.1,0.12l1.67,1.14l-1.8,1.35l-0.12,0.25l0.04,1.85l-2.35,2.67l-1.59,2.79l-2.5,2.72l-2.76,-0.2l-0.24,0.09l-2.76,2.83l0.04,0.45l1.54,1.13l0.27,1.94l0.09,0.17l1.34,1.29l0.4,1.83l-5.14,-0.01l-0.22,0.09l-1.53,1.63l-1.52,-0.56l-0.76,-1.88l-1.93,-2.03l-0.25,-0.09l-4.6,0.5l-4.05,0.05l-3.1,0.33l0.77,-2.53l3.48,-1.33l0.19,-0.33l-0.21,-1.24l-0.19,-0.23l-1.01,-0.37l-0.06,-2.18l-0.17,-0.26l-2.32,-1.16l-0.96,-1.57l-0.56,-0.65l3.16,1.05l0.14,0.01l2.45,-0.4l1.44,0.33l0.3,-0.1l0.4,-0.47l1.58,0.22l0.14,-0.01l3.25,-1.14l0.2,-0.27l0.08,-2.23l1.23,-1.38l1.73,0.0l0.28,-0.2l0.22,-0.61l1.68,-0.32l0.86,0.24l0.27,-0.05l0.98,-0.78l0.11,-0.26l-0.13,-1.57l0.96,-1.52l1.51,-0.67l0.14,-0.41l-0.74,-1.4l1.86,0.07l0.26,-0.13l0.69,-1.01l0.05,-0.2l-0.09,-0.94l1.14,-1.09l0.09,-0.28l-0.29,-1.41l-0.51,-1.07l1.23,-1.05l2.6,-0.58l2.86,-0.33l1.33,-0.54l1.3,-0.29Z",
            "name": "Pakistan"
        },
        "PH": {
            "path": "M737.11,263.82l0.25,1.66l0.14,1.34l-0.54,1.46l-0.64,-1.79l-0.5,-0.1l-1.17,1.28l-0.05,0.32l0.74,1.71l-0.49,0.81l-2.6,-1.28l-0.61,-1.57l0.68,-1.07l-0.07,-0.4l-1.59,-1.19l-0.42,0.06l-0.69,0.91l-1.01,-0.08l-0.21,0.06l-1.58,1.2l-0.17,-0.3l0.87,-1.88l1.48,-0.66l1.18,-0.81l0.71,0.92l0.34,0.1l1.9,-0.69l0.18,-0.18l0.34,-0.94l1.57,-0.06l0.29,-0.32l-0.1,-1.38l1.41,0.83l0.36,2.06ZM734.94,254.42l0.56,2.24l-1.41,-0.49l-0.4,0.3l0.07,0.94l0.51,1.3l-0.54,0.26l-0.08,-1.34l-0.25,-0.28l-0.56,-0.1l-0.23,-0.91l1.03,0.14l0.34,-0.31l-0.03,-0.96l-0.06,-0.18l-1.14,-1.44l1.62,0.04l0.57,0.78ZM724.68,238.33l1.48,0.71l0.33,-0.04l0.44,-0.38l0.05,0.13l-0.37,0.97l0.01,0.23l0.81,1.75l-0.59,1.92l-1.37,0.79l-0.14,0.2l-0.39,2.07l0.01,0.14l0.56,2.04l0.23,0.21l1.33,0.28l0.14,-0.0l1.0,-0.27l2.82,1.28l-0.2,1.16l0.12,0.29l0.66,0.5l-0.13,0.56l-1.54,-0.99l-0.89,-1.29l-0.49,0.0l-0.44,0.65l-1.34,-1.28l-0.26,-0.08l-2.18,0.36l-0.96,-0.44l0.09,-0.72l0.69,-0.57l-0.01,-0.47l-0.75,-0.59l-0.47,0.14l-0.15,0.43l-0.86,-1.02l-0.34,-1.02l-0.07,-1.74l0.49,0.41l0.49,-0.21l0.26,-3.99l0.73,-2.1l1.23,0.0ZM731.12,258.92l-0.82,0.75l-0.83,1.64l-0.52,0.5l-1.17,-1.33l0.36,-0.47l0.62,-0.7l0.07,-0.15l0.24,-1.35l0.73,-0.08l-0.31,1.29l0.16,0.34l0.37,-0.09l1.21,-1.6l-0.12,1.24ZM726.66,255.58l0.85,0.45l0.14,0.03l1.28,-0.0l-0.03,0.62l-1.04,0.96l-1.15,0.55l-0.05,-0.71l0.17,-1.26l-0.01,-0.13l-0.16,-0.51ZM724.92,252.06l-0.45,1.5l-0.7,-0.83l-0.95,-1.43l1.44,0.06l0.67,0.7ZM717.48,261.28l-1.87,1.35l0.21,-0.3l1.81,-1.57l1.5,-1.75l0.97,-1.84l0.23,1.08l-1.56,1.33l-1.29,1.7Z",
            "name": "Philippines"
        },
        "PL": {
            "path": "M458.8,144.25l-0.96,-1.98l0.18,-1.06l-0.01,-0.15l-0.62,-1.8l-0.82,-1.11l0.56,-0.73l0.05,-0.28l-0.51,-1.51l1.48,-0.87l3.88,-1.58l3.06,-1.14l2.23,0.52l0.15,0.66l0.29,0.23l2.4,0.04l3.11,0.39l4.56,-0.05l1.12,0.32l0.51,0.89l0.1,1.45l0.03,0.12l0.66,1.23l-0.01,1.08l-1.33,0.61l-0.14,0.41l0.74,1.5l0.07,1.53l1.22,2.79l-0.19,0.66l-1.09,0.33l-0.14,0.09l-2.27,2.72l-0.04,0.31l0.35,0.8l-2.22,-1.16l-0.21,-0.02l-1.72,0.44l-1.1,-0.31l-0.21,0.02l-1.3,0.61l-1.11,-1.02l-0.32,-0.05l-0.81,0.35l-1.15,-1.61l-0.21,-0.12l-1.65,-0.17l-0.19,-0.82l-0.23,-0.23l-1.72,-0.37l-0.34,0.17l-0.25,0.56l-0.88,-0.44l0.12,-0.69l-0.25,-0.35l-1.78,-0.27l-1.08,-0.97Z",
            "name": "Poland"
        },
        "ZM": {
            "path": "M502.81,308.32l1.09,1.04l0.58,1.94l-0.39,0.66l-0.5,2.05l-0.0,0.14l0.45,1.95l-0.69,0.77l-0.06,0.11l-0.76,2.37l0.15,0.36l0.62,0.31l-6.85,1.9l-0.22,0.33l0.2,1.54l-1.62,0.3l-0.12,0.05l-1.43,1.02l-0.11,0.15l-0.25,0.73l-0.73,0.17l-0.14,0.08l-2.18,2.12l-1.33,1.6l-0.65,0.05l-0.83,-0.29l-2.75,-0.28l-0.24,-0.1l-0.15,-0.27l-0.99,-0.58l-0.12,-0.04l-1.73,-0.14l-1.88,0.54l-1.5,-1.48l-1.61,-2.01l0.11,-7.73l4.92,0.03l0.29,-0.37l-0.19,-0.79l0.34,-0.86l0.0,-0.21l-0.41,-1.11l0.26,-1.14l-0.01,-0.16l-0.12,-0.36l0.18,0.01l0.1,0.56l0.31,0.25l1.14,-0.06l1.44,0.21l0.76,1.05l0.19,0.12l2.01,0.35l0.19,-0.03l1.24,-0.65l0.44,1.03l0.22,0.18l1.81,0.34l0.85,0.99l1.02,1.39l0.24,0.12l1.92,0.02l0.3,-0.32l-0.21,-2.74l-0.47,-0.23l-0.53,0.36l-1.58,-0.89l-0.51,-0.34l0.29,-2.36l0.44,-2.99l-0.03,-0.18l-0.5,-0.99l0.61,-1.38l0.53,-0.24l3.26,-0.41l0.89,0.23l1.01,0.62l1.04,0.44l1.6,0.43l1.35,0.72Z",
            "name": "Zambia"
        },
        "EE": {
            "path": "M482.19,120.88l0.23,-1.68l-0.43,-0.31l-0.75,0.37l-1.34,-1.1l-0.18,-1.75l2.92,-0.95l3.07,-0.53l2.66,0.6l2.48,-0.1l0.18,0.31l-1.65,1.96l-0.06,0.26l0.71,3.25l-0.88,0.94l-1.85,-0.01l-2.08,-1.3l-1.14,-0.47l-0.2,-0.01l-1.69,0.51Z",
            "name": "Estonia"
        },
        "EG": {
            "path": "M508.07,208.8l-0.66,1.06l-0.53,2.03l-0.64,1.32l-0.32,0.26l-1.74,-1.85l-1.77,-3.86l-0.48,-0.09l-0.26,0.25l-0.07,0.32l1.04,2.88l1.55,2.76l1.89,4.18l0.94,1.48l0.83,1.54l2.08,2.73l-0.3,0.28l-0.1,0.23l0.08,1.72l0.11,0.22l2.91,2.37l-28.78,0.0l0.0,-19.06l-0.73,-2.2l0.61,-1.59l0.0,-0.2l-0.34,-1.04l0.73,-1.08l3.13,-0.04l2.36,0.72l2.48,0.81l1.15,0.43l0.23,-0.01l1.93,-0.87l1.02,-0.78l2.08,-0.21l1.59,0.31l0.62,1.24l0.52,0.03l0.46,-0.71l1.86,0.59l1.95,0.16l0.17,-0.04l0.92,-0.52l1.48,4.24Z",
            "name": "Egypt"
        },
        "ZA": {
            "path": "M467.06,373.27l-0.13,-0.29l0.01,-1.58l-0.02,-0.12l-0.71,-1.64l0.59,-0.37l0.14,-0.26l-0.07,-2.13l-0.05,-0.15l-1.63,-2.58l-1.25,-2.31l-1.71,-3.37l0.88,-0.98l0.7,0.52l0.39,1.08l0.23,0.19l1.1,0.19l1.55,0.51l0.14,0.01l1.35,-0.2l0.11,-0.04l2.24,-1.39l0.14,-0.25l0.0,-9.4l0.16,0.09l1.39,2.38l-0.22,1.53l0.04,0.19l0.56,0.94l0.3,0.14l1.79,-0.27l0.16,-0.08l1.23,-1.18l1.17,-0.79l0.1,-0.12l0.57,-1.19l1.02,-0.52l0.9,0.28l1.16,0.73l0.14,0.05l2.04,0.13l0.13,-0.02l1.6,-0.62l0.18,-0.19l0.63,-1.93l1.18,-0.19l0.19,-0.12l0.78,-1.05l0.81,-1.71l2.18,-1.91l3.44,-1.88l0.89,0.02l1.17,0.43l0.21,-0.0l0.76,-0.29l1.07,0.21l1.15,3.55l0.63,1.82l-0.44,2.9l0.1,0.52l-0.74,-0.29l-0.18,-0.01l-0.72,0.19l-0.21,0.2l-0.22,0.74l-0.66,0.97l-0.05,0.18l0.02,0.93l0.09,0.21l1.49,1.46l0.27,0.08l1.47,-0.29l0.22,-0.18l0.43,-1.01l1.29,0.02l-0.51,1.63l-0.29,2.2l-0.59,1.12l-2.2,1.78l-1.06,1.39l-0.72,1.44l-1.39,1.93l-2.81,2.84l-1.75,1.65l-1.85,1.24l-2.55,1.06l-1.23,0.14l-0.24,0.18l-0.22,0.54l-1.27,-0.35l-0.2,0.01l-1.15,0.5l-2.62,-0.52l-0.12,0.0l-1.46,0.33l-0.98,-0.14l-0.16,0.02l-2.55,1.1l-2.11,0.44l-1.59,1.07l-0.93,0.06l-0.97,-0.92l-0.19,-0.08l-0.72,-0.04l-1.0,-1.16l-0.25,0.05ZM493.72,359.24l-1.12,-0.86l-0.31,-0.03l-1.23,0.59l-1.36,1.07l-1.39,1.78l0.01,0.38l1.88,2.11l0.31,0.09l0.9,-0.27l0.18,-0.15l0.4,-0.77l1.28,-0.39l0.18,-0.16l0.42,-0.88l0.76,-1.32l-0.05,-0.37l-0.87,-0.82Z",
            "name": "South Africa"
        },
        "EC": {
            "path": "M220.2,293.48l1.25,-1.76l0.02,-0.31l-0.54,-1.09l-0.5,-0.06l-0.78,0.94l-1.03,-0.75l0.33,-0.46l0.05,-0.23l-0.38,-2.04l0.66,-0.28l0.17,-0.19l0.45,-1.52l0.93,-1.58l0.04,-0.2l-0.13,-0.78l1.19,-0.47l1.57,-0.91l2.35,1.34l0.17,0.04l0.28,-0.02l0.52,0.91l0.21,0.15l2.12,0.35l0.2,-0.03l0.55,-0.31l1.08,0.73l0.97,0.54l0.31,1.67l-0.71,1.49l-2.64,2.54l-2.95,0.97l-0.15,0.11l-1.53,2.18l-0.49,1.68l-1.1,0.8l-0.87,-1.05l-0.15,-0.1l-1.01,-0.27l-0.13,-0.0l-0.7,0.14l-0.03,-0.43l0.6,-0.5l0.1,-0.31l-0.26,-0.91Z",
            "name": "Ecuador"
        },
        "AL": {
            "path": "M470.27,171.7l0.38,0.19l0.45,-0.18l0.4,0.61l0.11,0.1l0.46,0.24l0.13,0.87l-0.3,0.95l-0.0,0.17l0.36,1.28l0.12,0.17l0.9,0.63l-0.03,0.44l-0.67,0.35l-0.16,0.22l-0.14,0.88l-0.96,1.18l-0.06,-0.03l-0.04,-0.48l-0.12,-0.22l-1.28,-0.92l-0.19,-1.25l0.2,-1.96l0.33,-0.89l-0.06,-0.3l-0.36,-0.41l-0.13,-0.75l0.66,-0.9Z",
            "name": "Albania"
        },
        "AO": {
            "path": "M461.62,299.93l0.55,1.67l0.73,1.54l1.56,2.18l0.28,0.12l1.66,-0.2l0.81,-0.34l1.28,0.33l0.33,-0.14l0.39,-0.67l0.56,-1.3l1.37,-0.09l0.27,-0.21l0.07,-0.23l0.67,-0.01l-0.13,0.53l0.29,0.37l2.74,-0.02l0.04,1.29l0.03,0.13l0.46,0.87l-0.35,1.52l0.18,1.55l0.07,0.16l0.75,0.85l-0.13,2.89l0.41,0.29l0.56,-0.21l1.11,0.05l1.5,-0.37l0.9,0.12l0.18,0.53l-0.27,1.15l0.01,0.17l0.4,1.08l-0.33,0.85l-0.01,0.18l0.12,0.51l-4.83,-0.03l-0.3,0.3l-0.12,8.13l0.07,0.19l1.69,2.1l1.27,1.25l-4.03,0.92l-5.93,-0.36l-1.66,-1.19l-0.18,-0.06l-10.15,0.11l-0.34,0.13l-1.35,-1.05l-0.17,-0.06l-1.62,-0.08l-1.6,0.45l-0.88,0.36l-0.17,-1.2l0.34,-2.19l0.85,-2.32l0.14,-1.13l0.79,-2.24l0.57,-1.0l1.42,-1.64l0.82,-1.15l0.05,-0.13l0.26,-1.88l-0.13,-1.51l-0.07,-0.16l-0.72,-0.87l-1.23,-2.91l0.09,-0.37l0.73,-0.95l0.05,-0.27l-1.27,-4.12l-1.19,-1.54l0.1,-0.2l0.86,-0.28l0.78,0.03l0.83,-0.29l7.12,0.03ZM451.81,298.94l-0.17,0.07l-0.5,-1.42l0.85,-0.92l0.53,-0.29l0.48,0.44l-0.56,0.32l-0.1,0.1l-0.41,0.65l-0.05,0.14l-0.07,0.91Z",
            "name": "Angola"
        },
        "KZ": {
            "path": "M598.42,172.08l-1.37,0.54l-3.3,2.09l-0.11,0.12l-1.01,1.97l-0.56,0.01l-0.6,-1.24l-0.26,-0.17l-2.95,-0.09l-0.46,-2.22l-0.29,-0.24l-0.91,-0.02l0.17,-2.72l-0.12,-0.26l-3.0,-2.22l-0.2,-0.06l-4.29,0.24l-2.8,0.42l-2.36,-2.7l-6.4,-3.65l-0.23,-0.03l-6.45,1.83l-0.22,0.29l0.1,10.94l-0.84,0.1l-1.65,-2.21l-0.11,-0.09l-1.69,-0.84l-0.2,-0.02l-2.84,0.63l-0.14,0.07l-0.71,0.64l-0.02,-0.11l0.57,-1.17l0.0,-0.26l-0.48,-1.05l-0.17,-0.16l-2.78,-0.99l-1.08,-2.62l-0.13,-0.15l-1.24,-0.7l-0.04,-0.48l2.07,0.25l0.34,-0.29l0.09,-2.03l1.84,-0.44l2.12,0.45l0.36,-0.25l0.45,-3.04l-0.45,-2.06l-0.31,-0.23l-2.44,0.15l-2.07,-0.75l-0.23,0.01l-2.88,1.38l-2.21,0.62l-0.96,-0.38l0.22,-1.39l-0.06,-0.23l-1.6,-2.12l-0.25,-0.12l-1.72,0.08l-1.87,-1.91l1.33,-2.24l-0.06,-0.38l-0.55,-0.5l1.72,-3.08l2.3,1.7l0.48,-0.2l0.29,-2.26l4.99,-3.48l3.76,-0.08l5.46,2.27l2.96,1.33l0.26,-0.01l2.59,-1.36l3.82,-0.06l3.13,1.67l0.38,-0.09l0.63,-0.85l3.36,0.14l0.29,-0.19l0.63,-1.57l-0.13,-0.37l-3.64,-2.05l2.0,-1.36l0.1,-0.38l-0.32,-0.62l2.09,-0.76l0.13,-0.47l-1.65,-2.13l0.89,-0.91l9.27,-1.18l0.13,-0.05l1.17,-0.82l6.2,-1.27l2.26,-1.43l4.19,0.7l0.74,3.39l0.38,0.22l2.52,-0.81l2.9,1.06l-0.18,1.63l0.32,0.33l2.52,-0.23l5.0,-2.58l0.03,0.39l3.16,2.62l5.57,8.48l0.49,0.02l1.18,-1.53l3.22,1.78l0.21,0.03l3.5,-0.83l1.21,0.52l1.16,1.82l0.15,0.12l1.67,0.61l1.01,1.32l0.28,0.11l3.04,-0.41l1.1,1.64l-1.68,1.89l-1.97,0.28l-0.26,0.29l-0.12,3.09l-1.2,1.23l-4.81,-1.01l-0.35,0.2l-1.77,5.51l-1.14,0.62l-4.92,1.23l-0.2,0.41l2.14,5.06l-1.45,0.67l-0.17,0.31l0.15,1.28l-1.05,-0.3l-1.21,-1.04l-0.17,-0.07l-3.73,-0.32l-4.15,-0.08l-0.92,0.31l-3.46,-1.24l-0.22,0.01l-1.42,0.63l-0.17,0.21l-0.32,1.49l-3.82,-0.97l-0.15,0.0l-1.65,0.43l-0.2,0.17l-0.51,1.21Z",
            "name": "Kazakhstan"
        },
        "ET": {
            "path": "M516.0,247.63l1.21,0.92l0.3,0.04l1.3,-0.53l0.46,0.41l0.19,0.08l1.65,0.03l2.05,0.96l0.67,0.88l1.07,0.79l1.0,1.45l0.7,0.68l-0.72,0.92l-0.85,1.19l-0.04,0.25l0.19,0.67l0.04,0.74l0.29,0.28l1.4,0.04l0.55,-0.15l0.23,0.19l-0.41,0.67l0.01,0.32l0.92,1.39l0.93,1.23l0.99,0.94l0.1,0.06l8.19,2.99l1.51,0.01l-6.51,6.95l-3.14,0.11l-0.18,0.06l-2.15,1.71l-1.51,0.04l-0.22,0.1l-0.6,0.69l-1.46,-0.0l-0.93,-0.78l-0.32,-0.04l-2.29,1.05l-0.12,0.1l-0.64,0.9l-1.44,-0.17l-0.51,-0.26l-0.17,-0.03l-0.56,0.07l-0.68,-0.02l-3.1,-2.08l-0.17,-0.05l-1.62,0.0l-0.68,-0.65l0.0,-1.28l-0.21,-0.29l-1.19,-0.38l-1.42,-2.63l-0.13,-0.12l-1.05,-0.53l-0.46,-1.0l-1.27,-1.23l-0.17,-0.08l-1.08,-0.13l0.53,-0.9l1.17,-0.05l0.26,-0.17l0.37,-0.77l0.03,-0.14l-0.03,-2.23l0.7,-2.49l1.08,-0.65l0.14,-0.19l0.24,-1.0l1.03,-1.85l1.47,-1.22l0.09,-0.12l1.02,-2.51l0.36,-1.96l2.62,0.48l0.33,-0.18l0.63,-1.55Z",
            "name": "Ethiopia"
        },
        "ZW": {
            "path": "M498.95,341.2l-1.16,-0.23l-0.16,0.01l-0.74,0.28l-1.11,-0.41l-1.02,-0.04l-1.52,-1.13l-0.12,-0.05l-1.79,-0.37l-0.65,-1.46l-0.01,-0.86l-0.22,-0.29l-0.99,-0.26l-2.74,-2.77l-0.77,-1.46l-0.52,-0.5l-0.72,-1.54l2.24,0.23l0.78,0.28l0.12,0.02l0.85,-0.06l0.21,-0.11l1.38,-1.66l2.11,-2.05l0.81,-0.18l0.22,-0.2l0.27,-0.8l1.29,-0.93l1.53,-0.28l0.11,0.66l0.3,0.25l2.02,-0.05l1.04,0.48l0.5,0.59l0.18,0.1l1.13,0.18l1.11,0.7l0.01,3.06l-0.49,1.82l-0.11,1.94l0.03,0.16l0.35,0.68l-0.24,1.3l-0.27,0.17l-0.12,0.15l-0.64,1.83l-2.49,2.8Z",
            "name": "Zimbabwe"
        },
        "ES": {
            "path": "M398.67,172.8l0.09,-1.45l-0.06,-0.2l-0.82,-1.05l3.16,-1.96l3.01,0.54l3.33,-0.02l2.64,0.52l2.14,-0.15l3.9,0.1l0.91,1.08l0.14,0.09l4.61,1.38l0.26,-0.04l0.77,-0.55l2.66,1.29l0.17,0.03l2.59,-0.35l0.1,1.28l-2.2,1.85l-3.13,0.62l-0.23,0.23l-0.21,0.92l-1.54,1.68l-0.97,2.4l0.02,0.26l0.85,1.46l-1.27,1.14l-0.09,0.14l-0.5,1.73l-1.73,0.53l-0.15,0.1l-1.68,2.1l-3.03,0.04l-2.38,-0.05l-0.17,0.05l-1.57,1.01l-0.9,1.01l-0.96,-0.19l-0.82,-0.86l-0.69,-1.6l-0.22,-0.18l-2.14,-0.41l-0.13,-0.62l0.83,-0.97l0.39,-0.86l-0.06,-0.33l-0.73,-0.73l0.63,-1.74l-0.02,-0.25l-0.8,-1.41l0.69,-0.15l0.23,-0.27l0.09,-1.29l0.33,-0.36l0.08,-0.2l0.03,-2.16l1.03,-0.72l0.1,-0.37l-0.7,-1.5l-0.25,-0.17l-1.46,-0.11l-0.22,0.07l-0.34,0.3l-1.17,0.0l-0.55,-1.29l-0.39,-0.16l-1.02,0.44l-0.45,0.36Z",
            "name": "Spain"
        },
        "ER": {
            "path": "M527.15,253.05l-0.77,-0.74l-1.01,-1.47l-1.14,-0.86l-0.62,-0.84l-0.11,-0.09l-2.18,-1.02l-0.12,-0.03l-1.61,-0.03l-0.52,-0.46l-0.31,-0.05l-1.31,0.54l-1.38,-1.06l-0.46,0.12l-0.69,1.68l-2.49,-0.46l-0.2,-0.76l1.06,-3.69l0.24,-1.65l0.66,-0.66l1.76,-0.4l0.16,-0.1l0.97,-1.13l1.24,2.55l0.68,2.34l0.09,0.14l1.4,1.27l3.39,2.4l1.37,1.43l2.14,2.34l0.94,0.6l-0.32,0.26l-0.85,-0.17Z",
            "name": "Eritrea"
        },
        "ME": {
            "path": "M469.05,172.9l-0.57,-0.8l-0.1,-0.09l-0.82,-0.46l0.16,-0.33l0.35,-1.57l0.72,-0.62l0.27,-0.16l0.48,0.38l0.35,0.4l0.12,0.08l0.79,0.32l0.66,0.43l-0.43,0.62l-0.28,0.11l-0.07,-0.25l-0.53,-0.1l-1.09,1.49l-0.05,0.23l0.06,0.32Z",
            "name": "Montenegro"
        },
        "MD": {
            "path": "M488.2,153.75l0.14,-0.11l1.49,-0.28l1.75,0.95l1.06,0.14l0.92,0.7l-0.15,0.9l0.15,0.31l0.8,0.46l0.33,1.2l0.09,0.14l0.72,0.66l-0.11,0.28l0.1,0.33l-0.06,0.02l-1.25,-0.08l-0.17,-0.29l-0.39,-0.12l-0.52,0.25l-0.16,0.36l0.13,0.42l-0.6,0.88l-0.43,1.03l-0.22,0.12l-0.32,-1.0l0.25,-1.34l-0.08,-1.38l-0.06,-0.17l-1.43,-1.87l-0.81,-1.36l-0.78,-0.95l-0.12,-0.09l-0.29,-0.12Z",
            "name": "Moldova"
        },
        "MG": {
            "path": "M544.77,316.45l0.64,1.04l0.6,1.62l0.4,3.04l0.63,1.21l-0.22,1.07l-0.15,0.26l-0.59,-1.05l-0.52,-0.01l-0.47,0.76l-0.04,0.23l0.46,1.84l-0.19,0.92l-0.61,0.53l-0.1,0.21l-0.16,2.15l-0.97,2.98l-1.24,3.59l-1.55,4.97l-0.96,3.67l-1.08,2.93l-1.94,0.61l-2.05,1.06l-3.2,-1.53l-0.62,-1.26l-0.18,-2.39l-0.87,-2.07l-0.22,-1.8l0.4,-1.69l1.01,-0.4l0.19,-0.28l0.01,-0.79l1.15,-1.91l0.04,-0.11l0.23,-1.66l-0.03,-0.17l-0.57,-1.21l-0.46,-1.58l-0.19,-2.25l0.82,-1.36l0.33,-1.51l1.11,-0.1l1.4,-0.53l0.9,-0.45l1.03,-0.03l0.21,-0.09l1.41,-1.45l2.12,-1.65l0.75,-1.29l0.03,-0.24l-0.17,-0.56l0.53,0.15l0.32,-0.1l1.38,-1.77l0.06,-0.18l0.04,-1.44l0.54,-0.74l0.62,0.77Z",
            "name": "Madagascar"
        },
        "MA": {
            "path": "M378.66,230.13l0.07,-0.75l0.93,-0.72l0.82,-1.37l0.04,-0.21l-0.14,-0.8l0.8,-1.74l1.33,-1.61l0.79,-0.4l0.14,-0.15l0.66,-1.55l0.08,-1.46l0.83,-1.52l1.6,-0.94l0.11,-0.11l1.56,-2.71l1.2,-0.99l2.24,-0.29l0.17,-0.08l1.95,-1.83l1.3,-0.77l2.09,-2.28l0.07,-0.26l-0.61,-3.34l0.92,-2.3l0.33,-1.44l1.52,-1.79l2.48,-1.27l1.86,-1.16l0.1,-0.11l1.67,-2.93l0.72,-1.59l1.54,0.01l1.43,1.14l0.21,0.06l2.33,-0.19l2.55,0.62l0.97,0.03l0.83,1.6l0.15,1.71l0.86,2.96l0.09,0.14l0.5,0.45l-0.31,0.73l-3.11,0.44l-0.16,0.07l-1.07,0.97l-1.36,0.23l-0.25,0.28l-0.1,1.85l-2.74,1.02l-0.14,0.11l-0.9,1.3l-1.93,0.69l-2.56,0.44l-4.04,2.01l-0.17,0.27l0.02,2.91l-0.08,0.0l-0.3,0.31l0.05,1.15l-1.25,0.07l-0.16,0.06l-0.73,0.55l-0.98,0.0l-0.85,-0.33l-0.15,-0.02l-2.11,0.29l-0.24,0.19l-0.76,1.95l-0.63,0.16l-0.21,0.19l-1.15,3.29l-3.42,2.81l-0.1,0.17l-0.81,3.57l-0.98,1.12l-0.3,0.85l-5.13,0.19Z",
            "name": "Morocco"
        },
        "UZ": {
            "path": "M587.83,186.48l0.06,-1.46l-0.19,-0.29l-3.31,-1.24l-2.57,-1.4l-1.63,-1.38l-2.79,-1.98l-1.2,-2.98l-0.12,-0.14l-0.84,-0.54l-0.18,-0.05l-2.61,0.13l-0.76,-0.48l-0.25,-2.25l-0.17,-0.24l-3.37,-1.6l-0.32,0.04l-2.08,1.73l-2.11,1.02l-0.16,0.35l0.31,1.14l-2.14,0.03l-0.09,-10.68l6.1,-1.74l6.25,3.57l2.36,2.72l0.27,0.1l2.92,-0.44l4.17,-0.23l2.78,2.06l-0.18,2.87l0.29,0.32l0.98,0.02l0.46,2.22l0.28,0.24l3.0,0.09l0.61,1.25l0.28,0.17l0.93,-0.02l0.26,-0.16l1.06,-2.06l3.21,-2.03l1.3,-0.5l0.19,0.08l-1.75,1.62l0.05,0.48l1.85,1.12l0.27,0.02l1.65,-0.69l2.4,1.27l-2.69,1.79l-1.79,-0.27l-0.89,0.06l-0.22,-0.52l0.48,-1.26l-0.34,-0.4l-3.35,0.69l-0.22,0.18l-0.78,1.87l-1.07,1.47l-1.93,-0.13l-0.29,0.16l-0.65,1.29l0.16,0.42l1.69,0.64l0.48,1.91l-1.25,2.6l-1.64,-0.53l-1.18,-0.03Z",
            "name": "Uzbekistan"
        },
        "MM": {
            "path": "M670.1,233.39l-1.46,1.11l-1.68,0.11l-0.26,0.19l-1.1,2.7l-0.95,0.42l-0.14,0.42l1.21,2.27l1.61,1.92l0.94,1.55l-0.82,1.99l-0.77,0.42l-0.13,0.39l0.64,1.35l1.62,1.97l0.26,1.32l-0.04,1.15l0.02,0.13l0.92,2.18l-1.3,2.23l-0.79,1.69l-0.1,-0.77l0.74,-1.87l-0.02,-0.26l-0.8,-1.42l0.2,-2.68l-0.06,-0.2l-0.98,-1.27l-0.8,-2.98l-0.45,-3.22l-1.11,-2.22l-0.45,-0.1l-1.64,1.28l-2.74,1.76l-1.26,-0.2l-1.27,-0.49l0.79,-2.93l0.0,-0.14l-0.52,-2.42l-1.93,-2.97l0.26,-0.8l-0.22,-0.39l-1.37,-0.31l-1.65,-1.98l-0.12,-1.5l0.41,0.19l0.42,-0.26l0.05,-1.7l1.08,-0.54l0.16,-0.34l-0.24,-1.0l0.5,-0.79l0.05,-0.15l0.08,-2.35l1.58,0.49l0.36,-0.15l1.12,-2.19l0.15,-1.34l1.35,-2.18l0.04,-0.17l-0.07,-1.35l2.97,-1.71l1.67,0.45l0.38,-0.33l-0.18,-1.46l0.7,-0.4l0.15,-0.32l-0.13,-0.72l0.94,-0.13l0.74,1.41l0.11,0.12l0.95,0.56l0.07,1.89l-0.09,2.08l-2.28,2.15l-0.09,0.19l-0.3,3.15l0.35,0.32l2.37,-0.39l0.53,2.17l0.2,0.21l1.3,0.42l-0.63,1.9l0.14,0.36l1.86,0.99l1.1,0.49l0.24,0.0l1.45,-0.6l0.04,0.51l-2.01,1.6l-0.56,0.96l-1.34,0.56Z",
            "name": "Myanmar"
        },
        "ML": {
            "path": "M390.79,248.2l0.67,-0.37l0.14,-0.18l0.36,-1.31l0.51,-0.04l1.68,0.69l0.21,0.0l1.34,-0.48l0.89,0.16l0.3,-0.13l0.29,-0.44l9.89,-0.04l0.29,-0.21l0.56,-1.8l-0.11,-0.33l-0.33,-0.24l-2.37,-22.1l3.41,-0.04l8.37,5.73l8.38,5.68l0.56,1.15l0.14,0.14l1.56,0.75l0.99,0.36l0.03,1.45l0.33,0.29l2.45,-0.22l0.01,5.52l-1.3,1.64l-0.06,0.15l-0.18,1.37l-1.99,0.36l-3.4,0.22l-0.19,0.09l-0.85,0.83l-1.48,0.09l-1.49,0.01l-0.54,-0.43l-0.26,-0.05l-1.38,0.36l-2.39,1.08l-0.13,0.12l-0.44,0.73l-1.88,1.11l-0.11,0.12l-0.3,0.57l-0.86,0.42l-1.1,-0.31l-0.28,0.07l-0.69,0.62l-0.09,0.16l-0.35,1.66l-1.93,2.04l-0.08,0.23l0.05,0.76l-0.63,0.99l-0.04,0.19l0.14,1.23l-0.81,0.29l-0.32,0.17l-0.27,-0.75l-0.39,-0.18l-0.65,0.26l-0.36,-0.04l-0.29,0.14l-0.37,0.6l-1.69,-0.02l-0.63,-0.34l-0.32,0.02l-0.12,0.09l-0.47,-0.45l0.1,-0.6l-0.09,-0.27l-0.31,-0.3l-0.33,-0.05l-0.05,0.02l0.02,-0.21l0.46,-0.59l-0.02,-0.39l-0.99,-1.02l-0.34,-0.74l-0.56,-0.56l-0.17,-0.09l-0.5,-0.07l-0.19,0.04l-0.58,0.35l-0.79,0.33l-0.65,0.51l-0.85,-0.16l-0.63,-0.59l-0.14,-0.07l-0.41,-0.08l-0.2,0.03l-0.59,0.31l-0.07,0.0l-0.1,-0.63l0.11,-0.85l-0.21,-0.98l-0.11,-0.17l-0.86,-0.66l-0.45,-1.34l-0.1,-1.36Z",
            "name": "Mali"
        },
        "MN": {
            "path": "M641.06,150.59l2.41,-0.53l4.76,-2.8l3.67,-1.49l2.06,0.96l0.12,0.03l2.5,0.05l1.59,1.45l0.19,0.08l2.47,0.12l3.59,0.81l0.27,-0.07l2.43,-2.28l0.06,-0.36l-0.93,-1.77l2.33,-3.1l2.66,1.3l2.26,0.39l2.75,0.8l0.44,2.3l0.19,0.22l3.56,1.38l0.18,0.01l2.35,-0.6l3.1,-0.42l2.4,0.41l2.37,1.52l1.49,1.63l0.23,0.1l2.29,-0.03l3.13,0.52l0.15,-0.01l2.28,-0.79l3.27,-0.53l0.11,-0.04l3.56,-2.23l1.31,0.31l1.26,1.05l0.22,0.07l2.45,-0.22l-0.98,1.96l-1.77,3.21l-0.01,0.28l0.64,1.31l0.35,0.16l1.35,-0.38l2.4,0.48l0.22,-0.04l1.78,-1.09l1.82,0.92l2.11,2.07l-0.17,0.68l-1.79,-0.31l-3.74,0.45l-1.85,0.96l-1.78,2.01l-3.74,1.18l-2.46,1.61l-2.45,-0.6l-1.42,-0.28l-0.31,0.13l-1.31,1.99l0.0,0.33l0.78,1.15l0.3,0.74l-1.58,0.93l-1.75,1.59l-2.83,1.03l-3.77,0.12l-4.05,1.05l-2.81,1.54l-0.95,-0.8l-0.19,-0.07l-2.96,0.0l-3.64,-1.8l-2.55,-0.48l-3.38,0.41l-5.13,-0.67l-2.66,0.06l-1.35,-1.65l-1.12,-2.78l-0.21,-0.18l-1.5,-0.33l-2.98,-1.89l-0.12,-0.04l-3.37,-0.43l-2.84,-0.51l-0.75,-1.13l0.93,-3.54l-0.04,-0.24l-1.73,-2.55l-0.15,-0.12l-3.52,-1.18l-1.99,-1.61l-0.54,-1.85Z",
            "name": "Mongolia"
        },
        "MK": {
            "path": "M472.73,173.87l0.08,0.01l0.32,-0.25l0.08,-0.44l1.29,-0.41l1.37,-0.28l1.03,-0.04l1.06,0.82l0.14,1.59l-0.22,0.04l-0.17,0.11l-0.32,0.4l-1.2,-0.05l-0.18,0.05l-0.9,0.61l-1.45,0.23l-0.85,-0.59l-0.3,-1.09l0.22,-0.71Z",
            "name": "Macedonia"
        },
        "MW": {
            "path": "M507.18,313.84l-0.67,1.85l-0.01,0.16l0.7,3.31l0.31,0.24l0.75,-0.03l0.78,0.71l0.99,1.75l0.2,3.03l-0.91,0.45l-0.14,0.15l-0.59,1.38l-1.24,-1.21l-0.17,-1.62l0.49,-1.12l0.02,-0.16l-0.15,-1.03l-0.13,-0.21l-0.99,-0.65l-0.26,-0.03l-0.53,0.18l-1.31,-1.12l-1.15,-0.59l0.66,-2.06l0.75,-0.84l0.07,-0.27l-0.47,-2.04l0.48,-1.94l0.4,-0.65l0.03,-0.24l-0.64,-2.15l-0.08,-0.13l-0.44,-0.42l1.34,0.26l1.25,1.73l0.67,3.3Z",
            "name": "Malawi"
        },
        "MR": {
            "path": "M390.54,247.66l-1.48,-1.58l-1.51,-1.88l-0.12,-0.09l-1.64,-0.67l-1.17,-0.74l-0.17,-0.05l-1.4,0.03l-0.12,0.03l-1.14,0.52l-1.15,-0.21l-0.26,0.08l-0.44,0.43l-0.11,-0.72l0.68,-1.29l0.31,-2.43l-0.28,-2.63l-0.29,-1.27l0.24,-1.24l-0.03,-0.2l-0.65,-1.24l-1.19,-1.05l0.32,-0.51l9.64,0.02l0.3,-0.34l-0.46,-3.71l0.51,-1.12l2.17,-0.22l0.27,-0.3l-0.08,-6.5l7.91,0.13l0.31,-0.3l0.01,-3.5l8.17,5.63l-2.89,0.04l-0.29,0.33l2.42,22.56l0.12,0.21l0.26,0.19l-0.43,1.38l-9.83,0.04l-0.25,0.13l-0.27,0.41l-0.77,-0.14l-0.15,0.01l-1.3,0.47l-1.64,-0.67l-0.14,-0.02l-0.79,0.06l-0.27,0.22l-0.39,1.39l-0.53,0.29Z",
            "name": "Mauritania"
        },
        "UG": {
            "path": "M500.74,287.17l-2.84,-0.02l-0.92,0.32l-1.37,0.71l-0.29,-0.12l0.02,-1.6l0.54,-0.89l0.04,-0.13l0.14,-1.96l0.49,-1.09l0.91,-1.24l0.97,-0.68l0.8,-0.89l-0.13,-0.49l-0.79,-0.27l0.13,-2.55l0.78,-0.52l1.45,0.51l0.18,0.01l1.97,-0.57l1.72,0.01l0.18,-0.06l1.29,-0.97l0.98,1.44l0.29,1.24l1.05,2.75l-0.84,1.68l-1.94,2.66l-0.06,0.18l0.02,2.36l-4.8,0.18Z",
            "name": "Uganda"
        },
        "MY": {
            "path": "M717.6,273.52l-1.51,0.7l-2.13,-0.41l-2.88,-0.0l-0.29,0.21l-0.84,2.77l-0.9,0.82l-0.08,0.12l-1.23,3.34l-1.81,0.47l-2.29,-0.68l-0.14,-0.01l-1.2,0.22l-0.14,0.07l-1.36,1.18l-1.47,-0.17l-0.12,0.01l-1.46,0.46l-1.51,-1.25l-0.24,-0.97l1.26,0.59l0.2,0.02l1.93,-0.47l0.22,-0.22l0.47,-1.98l0.9,-0.4l2.97,-0.54l0.17,-0.09l1.8,-1.98l1.02,-1.32l0.9,1.03l0.48,-0.04l0.43,-0.7l1.02,0.07l0.32,-0.27l0.25,-2.72l1.84,-1.67l1.23,-1.89l0.73,-0.01l1.12,1.11l0.1,0.99l0.18,0.24l1.66,0.71l1.85,0.67l-0.09,0.51l-1.45,0.11l-0.26,0.4l0.35,0.97ZM673.78,269.53l0.17,1.14l0.35,0.25l1.65,-0.3l0.18,-0.11l0.68,-0.86l0.31,0.13l1.41,1.45l0.99,1.59l0.13,1.57l-0.26,1.09l0.0,0.15l0.24,0.84l0.18,1.46l0.11,0.2l0.82,0.64l0.92,2.08l-0.03,0.52l-1.4,0.13l-2.29,-1.79l-2.86,-1.92l-0.27,-1.16l-0.07,-0.13l-1.39,-1.61l-0.33,-1.99l-0.05,-0.12l-0.84,-1.27l0.26,-1.72l-0.03,-0.18l-0.45,-0.87l0.13,-0.13l1.71,0.92Z",
            "name": "Malaysia"
        },
        "MX": {
            "path": "M133.41,213.83l0.61,0.09l0.27,-0.09l0.93,-1.01l0.08,-0.18l0.09,-1.22l-0.09,-0.23l-1.93,-1.94l-1.46,-0.77l-2.96,-5.62l-0.86,-2.1l2.44,-0.18l2.68,-0.25l-0.03,0.08l0.17,0.4l3.79,1.35l5.81,1.97l6.96,-0.02l0.3,-0.3l0.0,-0.84l3.91,0.0l0.87,0.93l1.27,0.87l1.44,1.17l0.79,1.37l0.62,1.49l0.12,0.14l1.35,0.85l2.08,0.82l0.35,-0.1l1.49,-2.04l1.81,-0.05l1.63,1.01l1.21,1.8l0.86,1.58l1.47,1.55l0.53,1.82l0.73,1.32l0.14,0.13l1.98,0.84l1.78,0.59l0.61,-0.03l-0.78,1.89l-0.45,1.96l-0.19,3.58l-0.24,1.27l0.01,0.14l0.43,1.43l0.78,1.31l0.49,1.98l0.06,0.12l1.63,1.9l0.61,1.51l0.98,1.28l0.16,0.11l2.58,0.67l0.98,1.02l0.31,0.08l2.17,-0.71l1.91,-0.26l1.87,-0.47l1.67,-0.49l1.59,-1.06l0.11,-0.14l0.6,-1.52l0.22,-2.21l0.35,-0.62l1.58,-0.64l2.59,-0.59l2.18,0.09l1.43,-0.2l0.39,0.36l-0.07,1.02l-1.28,1.48l-0.65,1.68l0.07,0.32l0.33,0.32l-0.79,2.49l-0.28,-0.3l-0.24,-0.09l-1.0,0.08l-0.24,0.15l-0.74,1.28l-0.19,-0.13l-0.28,-0.03l-0.3,0.12l-0.19,0.29l0.0,0.06l-4.34,-0.02l-0.3,0.3l-0.0,1.16l-0.83,0.0l-0.28,0.19l0.08,0.33l0.93,0.86l0.9,0.58l0.24,0.48l0.16,0.15l0.2,0.08l-0.03,0.38l-2.94,0.01l-0.26,0.15l-1.21,2.09l0.02,0.33l0.25,0.33l-0.21,0.44l-0.04,0.22l-2.42,-2.35l-1.36,-0.87l-2.04,-0.67l-0.13,-0.01l-1.4,0.19l-2.07,0.98l-1.14,0.23l-1.72,-0.66l-1.85,-0.48l-2.31,-1.16l-1.92,-0.38l-2.79,-1.18l-2.04,-1.2l-0.6,-0.66l-0.19,-0.1l-1.37,-0.15l-2.45,-0.78l-1.07,-1.18l-2.63,-1.44l-1.2,-1.56l-0.44,-0.93l0.5,-0.15l0.2,-0.39l-0.2,-0.58l0.46,-0.55l0.07,-0.19l0.01,-0.91l-0.06,-0.18l-0.81,-1.13l-0.25,-1.08l-0.86,-1.36l-2.21,-2.63l-2.53,-2.09l-1.2,-1.63l-0.11,-0.09l-2.08,-1.06l-0.34,-0.48l0.35,-1.53l-0.16,-0.34l-1.24,-0.61l-1.39,-1.23l-0.6,-1.81l-0.24,-0.2l-1.25,-0.2l-1.38,-1.35l-1.11,-1.25l-0.1,-0.76l-0.05,-0.13l-1.33,-2.04l-0.85,-2.02l0.04,-0.99l-0.14,-0.27l-1.81,-1.1l-0.2,-0.04l-0.74,0.11l-1.34,-0.72l-0.42,0.16l-0.4,1.12l-0.0,0.19l0.41,1.3l0.24,2.04l0.06,0.15l0.88,1.16l1.84,1.86l0.4,0.61l0.12,0.1l0.27,0.14l0.29,0.82l0.31,0.2l0.2,-0.02l0.43,1.51l0.09,0.14l0.72,0.65l0.51,0.91l1.58,1.4l0.8,2.42l0.77,1.23l0.66,1.19l0.13,1.34l0.28,0.27l1.08,0.08l0.92,1.1l0.83,1.08l-0.03,0.24l-0.88,0.81l-0.13,-0.0l-0.59,-1.42l-0.07,-0.11l-1.67,-1.53l-1.81,-1.28l-1.15,-0.61l0.07,-1.85l-0.38,-1.45l-0.12,-0.17l-2.91,-2.03l-0.39,0.04l-0.11,0.11l-0.42,-0.46l-0.11,-0.08l-1.49,-0.63l-1.09,-1.16Z",
            "name": "Mexico"
        },
        "VU": {
            "path": "M839.92,325.66l0.78,0.73l-0.18,0.07l-0.6,-0.8ZM839.13,322.74l0.27,1.36l-0.13,-0.06l-0.21,-0.02l-0.29,0.08l-0.22,-0.43l-0.03,-1.32l0.61,0.4Z",
            "name": "Vanuatu"
        },
        "FR": {
            "path": "M444.58,172.63l-0.68,1.92l-0.72,-0.38l-0.51,-1.79l0.43,-0.95l1.15,-0.83l0.33,2.04ZM429.71,147.03l1.77,1.57l0.26,0.07l1.16,-0.23l2.12,1.44l0.56,0.28l0.16,0.03l0.61,-0.06l1.09,0.78l0.13,0.05l3.18,0.53l-1.09,1.94l-0.3,2.16l-0.48,0.38l-1.0,-0.26l-0.37,0.32l0.07,0.66l-1.73,1.68l-0.09,0.21l-0.04,1.42l0.41,0.29l0.96,-0.4l0.67,1.07l-0.09,0.78l0.04,0.19l0.61,0.97l-0.71,0.78l-0.07,0.28l0.65,2.39l0.21,0.21l1.09,0.31l-0.2,0.95l-2.08,1.58l-4.81,-0.8l-0.13,0.01l-3.65,0.99l-0.22,0.24l-0.25,1.6l-2.59,0.35l-2.74,-1.33l-0.31,0.03l-0.79,0.57l-4.38,-1.31l-0.79,-0.94l1.16,-1.64l0.05,-0.15l0.48,-6.17l-0.06,-0.21l-2.58,-3.3l-1.89,-1.65l-0.11,-0.06l-3.64,-1.17l-0.2,-1.88l2.92,-0.63l4.14,0.82l0.35,-0.36l-0.65,-3.0l1.77,1.05l0.27,0.02l5.83,-2.54l0.17,-0.19l0.71,-2.54l1.75,-0.53l0.27,0.88l0.27,0.21l1.04,0.05l1.08,1.23Z",
            "name": "France"
        },
        "XK": {
	        "path": "M289.1,278.45l-0.85,0.84l-0.88,0.13l-0.25,-0.51l-0.21,-0.16l-0.56,-0.1l-0.25,0.07l-0.63,0.55l-0.62,-0.29l0.5,-0.88l0.21,-1.11l0.42,-1.05l-0.03,-0.28l-0.93,-1.42l-0.18,-1.54l1.13,-1.87l2.42,0.78l2.55,2.04l0.33,0.81l-1.4,2.16l-0.77,1.84Z",
	        "name": "French Guiana"
		},
        "FI": {
            "path": "M492.26,76.42l-0.38,3.12l0.12,0.28l3.6,2.69l-2.14,2.96l-0.01,0.33l2.83,4.61l-1.61,3.36l0.03,0.31l2.15,2.87l-0.96,2.44l0.1,0.35l3.51,2.55l-0.81,1.72l-2.28,2.19l-5.28,4.79l-4.51,0.31l-4.39,1.37l-3.87,0.75l-1.34,-1.89l-0.11,-0.09l-2.23,-1.14l0.53,-3.54l-0.01,-0.14l-1.17,-3.37l1.12,-2.13l2.23,-2.44l5.69,-4.33l1.65,-0.84l0.16,-0.31l-0.26,-1.73l-0.15,-0.22l-3.4,-1.91l-0.77,-1.47l-0.07,-6.45l-0.12,-0.24l-3.91,-2.94l-3.0,-1.92l0.97,-0.76l2.6,2.17l0.21,0.07l3.2,-0.21l2.63,1.03l0.3,-0.05l2.39,-1.94l0.09,-0.13l1.18,-3.12l3.63,-1.42l2.87,1.59l-0.98,2.87Z",
            "name": "Finland"
        },
        "FJ": {
            "path": "M869.98,327.07l-1.31,0.44l-0.14,-0.41l0.96,-0.41l0.85,-0.17l1.43,-0.78l-0.16,0.65l-1.64,0.67ZM867.58,329.12l0.54,0.47l-0.31,1.0l-1.32,0.3l-1.13,-0.26l-0.17,-0.78l0.72,-0.66l0.98,0.27l0.25,-0.04l0.43,-0.29Z",
            "name": "Fiji"
        },
        "FK": {
            "path": "M268.15,427.89l2.6,-1.73l1.98,0.77l0.31,-0.05l1.32,-1.17l1.58,1.18l-0.54,0.84l-3.1,0.92l-1.0,-1.04l-0.39,-0.04l-1.9,1.35l-0.86,-1.04Z",
            "name": "Falkland Islands"
        },
        "NI": {
            "path": "M202.1,252.6l0.23,-0.0l0.12,-0.11l0.68,-0.09l0.22,-0.15l0.23,-0.43l0.2,-0.01l0.28,-0.31l-0.04,-0.97l0.29,-0.03l0.5,0.02l0.25,-0.11l0.37,-0.46l0.51,0.35l0.4,-0.06l0.23,-0.28l0.45,-0.29l0.87,-0.7l0.11,-0.21l0.02,-0.26l0.23,-0.12l0.25,-0.48l0.29,0.27l0.14,0.07l0.5,0.12l0.22,-0.03l0.48,-0.28l0.66,-0.02l0.87,-0.33l0.36,-0.32l0.21,0.01l-0.11,0.48l0.0,0.14l0.22,0.8l-0.54,0.85l-0.27,1.03l-0.09,1.18l0.14,0.72l0.05,0.95l-0.24,0.15l-0.13,0.19l-0.23,1.09l0.0,0.14l0.14,0.53l-0.42,0.53l-0.06,0.24l0.12,0.69l0.08,0.15l0.18,0.19l-0.26,0.23l-0.49,-0.11l-0.35,-0.44l-0.16,-0.1l-0.79,-0.21l-0.23,0.03l-0.45,0.26l-1.51,-0.62l-0.31,0.05l-0.17,0.15l-1.81,-1.62l-0.6,-0.9l-1.04,-0.79l-0.77,-0.71Z",
            "name": "Nicaragua"
        },
        "NL": {
            "path": "M436.22,136.65l1.82,0.08l0.36,0.89l-0.6,2.96l-0.53,1.06l-1.32,0.0l-0.3,0.34l0.35,2.89l-0.83,-0.47l-1.56,-1.43l-0.29,-0.07l-2.26,0.67l-1.02,-0.15l0.68,-0.48l0.1,-0.12l2.14,-4.84l3.25,-1.35Z",
            "name": "Netherlands"
        },
        "NO": {
            "path": "M491.45,67.31l7.06,3.0l-2.52,0.94l-0.11,0.49l2.43,2.49l-3.82,1.59l-1.48,0.3l0.89,-2.61l-0.14,-0.36l-3.21,-1.78l-0.25,-0.02l-3.89,1.52l-0.17,0.17l-1.2,3.17l-2.19,1.78l-2.53,-0.99l-0.13,-0.02l-3.15,0.21l-2.69,-2.25l-0.38,-0.01l-1.43,1.11l-1.47,0.17l-0.26,0.26l-0.33,2.57l-4.42,-0.65l-0.33,0.22l-0.6,2.19l-2.17,-0.01l-0.27,0.16l-4.15,7.68l-3.88,5.76l-0.0,0.33l0.81,1.23l-0.7,1.27l-2.3,-0.06l-0.28,0.18l-1.63,3.72l-0.02,0.13l0.15,5.17l0.07,0.18l1.51,1.84l-0.79,4.24l-2.04,2.5l-0.92,1.75l-1.39,-1.88l-0.44,-0.05l-4.89,4.21l-3.16,0.81l-3.24,-1.74l-0.86,-3.82l-0.78,-8.6l2.18,-2.36l6.56,-3.28l5.0,-4.16l4.63,-5.74l5.99,-8.09l4.17,-3.23l6.84,-5.49l5.39,-1.92l4.06,0.24l0.23,-0.09l3.72,-3.67l4.51,0.19l4.4,-0.89ZM484.58,19.95l4.42,1.82l-3.25,2.68l-7.14,0.65l-7.16,-0.91l-0.39,-1.37l-0.28,-0.22l-3.48,-0.1l-2.25,-2.15l7.09,-1.48l3.55,1.36l0.28,-0.03l2.42,-1.66l6.18,1.41ZM481.99,33.92l-4.73,1.85l-3.76,-1.06l1.27,-1.02l0.04,-0.43l-1.18,-1.35l4.46,-0.94l0.89,1.83l0.17,0.15l2.83,0.96ZM466.5,23.95l7.64,3.87l-5.63,1.94l-0.19,0.19l-1.35,3.88l-2.08,0.96l-0.16,0.19l-1.14,4.18l-2.71,0.18l-4.94,-2.95l1.95,-1.63l-0.08,-0.51l-3.7,-1.54l-4.79,-4.54l-1.78,-4.01l6.29,-1.88l1.25,1.81l0.25,0.13l3.57,-0.08l0.26,-0.17l0.87,-1.79l3.41,-0.18l3.08,1.94Z",
            "name": "Norway"
        },
        "NA": {
            "path": "M461.88,357.98l-1.61,-1.77l-0.94,-1.9l-0.54,-2.58l-0.62,-1.95l-0.83,-4.05l-0.06,-3.13l-0.33,-1.5l-0.07,-0.14l-0.95,-1.06l-1.27,-2.12l-1.3,-3.1l-0.59,-1.71l-1.98,-2.46l-0.13,-1.67l0.99,-0.4l1.44,-0.42l1.48,0.07l1.42,1.11l0.31,0.03l0.32,-0.15l9.99,-0.11l1.66,1.18l0.16,0.06l6.06,0.37l4.69,-1.06l2.01,-0.57l1.5,0.14l0.63,0.37l-1.0,0.41l-0.7,0.01l-0.16,0.05l-1.38,0.88l-0.79,-0.88l-0.29,-0.09l-3.83,0.9l-1.84,0.08l-0.29,0.3l-0.07,8.99l-2.18,0.08l-0.29,0.3l-0.0,17.47l-2.04,1.27l-1.21,0.18l-1.51,-0.49l-0.99,-0.18l-0.36,-1.0l-0.1,-0.14l-0.99,-0.74l-0.4,0.04l-0.98,1.09Z",
            "name": "Namibia"
        },
        "NC": {
            "path": "M835.87,338.68l2.06,1.63l1.01,0.94l-0.49,0.32l-1.21,-0.62l-1.76,-1.16l-1.58,-1.36l-1.61,-1.79l-0.16,-0.41l0.54,0.02l1.32,0.83l1.08,0.87l0.79,0.73Z",
            "name": "New Caledonia"
        },
        "NE": {
            "path": "M426.67,254.17l0.03,-1.04l-0.24,-0.3l-2.66,-0.53l-0.06,-1.0l-0.07,-0.17l-1.37,-1.62l-0.3,-1.04l0.15,-0.94l1.37,-0.09l0.19,-0.09l0.85,-0.83l3.34,-0.22l2.22,-0.41l0.24,-0.26l0.2,-1.5l1.32,-1.65l0.07,-0.19l-0.01,-5.74l3.4,-1.13l7.24,-5.12l8.46,-4.95l3.76,1.08l1.35,1.39l0.36,0.05l1.39,-0.77l0.55,3.66l0.12,0.2l0.82,0.6l0.03,0.69l0.1,0.21l0.87,0.74l-0.47,0.99l-0.96,5.26l-0.13,3.25l-3.08,2.34l-0.1,0.15l-1.08,3.37l0.08,0.31l0.94,0.86l-0.01,1.51l0.29,0.3l1.25,0.05l-0.14,0.66l-0.51,0.11l-0.24,0.26l-0.06,0.57l-0.04,0.0l-1.59,-2.62l-0.21,-0.14l-0.59,-0.1l-0.23,0.05l-1.83,1.33l-1.79,-0.68l-1.42,-0.17l-0.17,0.03l-0.65,0.32l-1.39,-0.07l-0.19,0.06l-1.4,1.03l-1.12,0.05l-2.97,-1.29l-0.26,0.01l-1.12,0.59l-1.08,-0.04l-0.85,-0.88l-0.11,-0.07l-2.51,-0.95l-0.14,-0.02l-2.69,0.3l-0.16,0.07l-0.65,0.55l-0.1,0.16l-0.34,1.41l-0.69,0.98l-0.05,0.15l-0.13,1.72l-1.47,-1.13l-0.18,-0.06l-0.9,0.01l-0.2,0.08l-0.32,0.28Z",
            "name": "Niger"
        },
        "NG": {
            "path": "M442.0,272.7l-2.4,0.83l-0.88,-0.12l-0.19,0.04l-0.89,0.52l-1.78,-0.05l-1.23,-1.44l-0.88,-1.87l-1.77,-1.66l-0.21,-0.08l-3.78,0.03l0.13,-3.75l-0.06,-1.58l0.44,-1.47l0.74,-0.75l1.21,-1.56l0.04,-0.29l-0.22,-0.56l0.44,-0.9l0.01,-0.24l-0.54,-1.44l0.26,-2.97l0.72,-1.06l0.33,-1.37l0.51,-0.43l2.53,-0.28l2.38,0.9l0.89,0.91l0.2,0.09l1.28,0.04l0.15,-0.03l1.06,-0.56l2.9,1.26l0.13,0.02l1.28,-0.06l0.16,-0.06l1.39,-1.02l1.36,0.07l0.15,-0.03l0.64,-0.32l1.22,0.13l1.9,0.73l0.28,-0.04l1.86,-1.35l0.33,0.06l1.62,2.67l0.29,0.14l0.32,-0.04l0.73,0.74l-0.19,0.37l-0.12,0.74l-2.03,1.89l-0.07,0.11l-0.66,1.62l-0.35,1.28l-0.48,0.51l-0.07,0.12l-0.48,1.67l-1.26,0.98l-0.1,0.15l-0.38,1.24l-0.58,1.07l-0.2,0.91l-1.43,0.7l-1.26,-0.93l-0.19,-0.06l-0.95,0.04l-0.2,0.09l-1.41,1.39l-0.61,0.02l-0.26,0.17l-1.19,2.42l-0.61,1.67Z",
            "name": "Nigeria"
        },
        "NZ": {
            "path": "M857.9,379.62l1.85,3.1l0.33,0.14l0.22,-0.28l0.04,-1.41l0.57,0.4l0.35,2.06l0.17,0.22l2.02,0.94l1.78,0.26l0.22,-0.06l1.31,-1.01l0.84,0.22l-0.53,2.27l-0.67,1.5l-1.71,-0.05l-0.25,0.12l-0.67,0.89l-0.05,0.23l0.21,1.15l-0.31,0.46l-2.15,3.57l-1.6,0.99l-0.28,-0.51l-0.15,-0.13l-0.72,-0.3l1.27,-2.15l0.01,-0.29l-0.82,-1.63l-0.15,-0.14l-2.5,-1.09l0.05,-0.69l1.67,-0.94l0.15,-0.21l0.42,-2.24l-0.11,-1.95l-0.03,-0.12l-0.97,-1.85l0.05,-0.41l-0.09,-0.25l-1.18,-1.17l-1.94,-2.49l-0.86,-1.64l0.38,-0.09l1.24,1.43l0.12,0.08l1.81,0.68l0.67,2.39ZM853.93,393.55l0.57,1.24l0.44,0.12l1.51,-1.03l0.52,0.91l0.0,1.09l-0.88,1.31l-1.62,2.2l-1.26,1.2l-0.05,0.38l0.64,1.02l-1.4,0.03l-0.14,0.04l-2.14,1.16l-0.14,0.17l-0.67,2.0l-1.38,3.06l-3.07,2.19l-2.12,-0.06l-1.55,-0.99l-0.14,-0.05l-2.53,-0.2l-0.31,-0.84l1.25,-2.15l3.07,-2.97l1.62,-0.59l1.81,-1.17l2.18,-1.63l1.55,-1.65l1.08,-2.18l0.9,-0.72l0.11,-0.17l0.35,-1.56l1.37,-1.07l0.4,0.91Z",
            "name": "New Zealand"
        },
        "NP": {
            "path": "M641.26,213.53l-0.14,0.95l0.32,1.64l-0.21,0.78l-1.83,0.04l-2.98,-0.62l-1.86,-0.25l-1.37,-1.3l-0.18,-0.08l-3.38,-0.34l-3.21,-1.49l-2.38,-1.34l-2.16,-0.92l0.84,-2.2l1.51,-1.18l0.89,-0.57l1.83,0.77l2.5,1.76l1.39,0.41l0.78,1.21l0.17,0.13l1.91,0.53l2.0,1.17l2.92,0.66l2.63,0.24Z",
            "name": "Nepal"
        },
        "CI": {
            "path": "M413.53,272.08l-0.83,0.02l-1.79,-0.49l-1.64,0.03l-3.04,0.46l-1.73,0.72l-2.4,0.89l-0.12,-0.02l0.16,-1.7l0.19,-0.25l0.06,-0.2l-0.08,-0.99l-0.09,-0.19l-1.06,-1.05l-0.15,-0.08l-0.71,-0.15l-0.51,-0.48l0.45,-0.92l0.02,-0.19l-0.24,-1.16l0.07,-0.43l0.14,-0.0l0.3,-0.26l0.15,-1.1l-0.02,-0.15l-0.13,-0.34l0.09,-0.13l0.83,-0.27l0.19,-0.37l-0.62,-2.02l-0.55,-1.0l0.14,-0.59l0.35,-0.14l0.24,-0.16l0.53,0.29l0.14,0.04l1.93,0.02l0.26,-0.14l0.36,-0.58l0.39,0.01l0.43,-0.17l0.28,0.79l0.43,0.16l0.56,-0.31l0.89,-0.32l0.92,0.45l0.39,0.75l0.14,0.13l1.13,0.53l0.3,-0.03l0.81,-0.59l1.02,-0.08l1.49,0.57l0.62,3.33l-1.03,2.09l-0.65,2.84l0.02,0.2l1.05,2.08l-0.07,0.64Z",
            "name": "Ivory Coast"
        },
        "CH": {
            "path": "M444.71,156.27l0.05,0.3l-0.34,0.69l0.13,0.4l1.13,0.58l1.07,0.1l-0.12,0.81l-0.87,0.42l-1.75,-0.37l-0.34,0.18l-0.47,1.1l-0.86,0.07l-0.33,-0.38l-0.41,-0.04l-1.34,1.01l-1.02,0.13l-0.93,-0.58l-0.82,-1.32l-0.37,-0.12l-0.77,0.32l0.02,-0.84l1.74,-1.69l0.09,-0.25l-0.04,-0.38l0.73,0.19l0.26,-0.06l0.6,-0.48l2.02,0.02l0.24,-0.12l0.38,-0.51l2.31,0.84Z",
            "name": "Switzerland"
        },
        "CO": {
            "path": "M232.24,284.95l-0.94,-0.52l-1.22,-0.82l-0.31,-0.01l-0.62,0.35l-1.88,-0.31l-0.54,-0.95l-0.29,-0.15l-0.37,0.03l-2.34,-1.33l-0.15,-0.35l0.57,-0.11l0.24,-0.32l-0.1,-1.15l0.46,-0.71l1.11,-0.15l0.21,-0.13l1.05,-1.57l0.95,-1.31l-0.08,-0.43l-0.73,-0.47l0.4,-1.24l0.01,-0.16l-0.53,-2.15l0.44,-0.54l0.06,-0.24l-0.4,-2.13l-0.06,-0.13l-0.93,-1.22l0.21,-0.8l0.52,0.12l0.32,-0.13l0.47,-0.75l0.03,-0.27l-0.52,-1.32l0.09,-0.11l1.14,0.07l0.22,-0.08l1.82,-1.71l0.96,-0.25l0.22,-0.28l0.02,-0.81l0.43,-2.01l1.28,-1.04l1.48,-0.05l0.27,-0.19l0.12,-0.31l1.73,0.19l0.2,-0.05l1.96,-1.28l0.97,-0.56l1.16,-1.16l0.64,0.11l0.43,0.44l-0.31,0.55l-1.49,0.39l-0.19,0.16l-0.6,1.2l-0.97,0.74l-0.73,0.94l-0.06,0.13l-0.3,1.76l-0.68,1.44l0.23,0.43l1.1,0.14l0.27,0.97l0.08,0.13l0.49,0.49l0.17,0.85l-0.27,0.86l-0.01,0.14l0.09,0.53l0.2,0.23l0.52,0.18l0.54,0.79l0.27,0.13l3.18,-0.24l1.31,0.29l1.7,2.08l0.31,0.1l0.96,-0.26l1.75,0.13l1.41,-0.27l0.56,0.27l-0.36,1.07l-0.54,0.81l-0.05,0.13l-0.2,1.8l0.51,1.79l0.07,0.12l0.65,0.68l0.05,0.32l-1.16,1.14l0.05,0.47l0.86,0.52l0.6,0.79l0.31,1.01l-0.7,-0.81l-0.44,-0.01l-0.74,0.77l-4.75,-0.05l-0.3,0.31l0.03,1.57l0.25,0.29l1.2,0.21l-0.02,0.24l-0.1,-0.05l-0.22,-0.02l-1.41,0.41l-0.22,0.29l-0.01,1.82l0.11,0.23l1.04,0.85l0.35,1.3l-0.06,1.02l-1.02,6.26l-0.84,-0.89l-0.19,-0.09l-0.25,-0.02l1.35,-2.13l-0.1,-0.42l-1.92,-1.17l-0.2,-0.04l-1.41,0.2l-0.82,-0.39l-0.26,0.0l-1.29,0.62l-1.63,-0.27l-1.4,-2.5l-0.12,-0.12l-1.1,-0.61l-0.83,-1.2l-1.67,-1.19l-0.27,-0.04l-0.54,0.19Z",
            "name": "Colombia"
        },
        "CN": {
            "path": "M740.32,148.94l0.22,0.21l4.3,1.03l2.84,2.2l0.99,2.92l0.28,0.2l3.8,0.0l0.15,-0.04l2.13,-1.24l3.5,-0.8l-1.05,2.29l-0.95,1.13l-0.06,0.12l-0.85,3.41l-1.56,2.81l-2.83,-0.51l-0.19,0.03l-2.15,1.09l-0.15,0.34l0.65,2.59l-0.33,3.3l-1.03,0.07l-0.28,0.3l0.01,0.75l-1.09,-1.2l-0.48,0.05l-0.94,1.6l-3.76,1.26l-0.2,0.36l0.29,1.19l-1.67,-0.08l-1.11,-0.88l-0.42,0.05l-1.69,2.08l-2.71,1.57l-2.04,1.88l-3.42,0.84l-0.11,0.05l-1.8,1.34l-1.54,0.46l0.52,-0.53l0.06,-0.33l-0.44,-0.96l1.84,-1.84l0.02,-0.41l-1.32,-1.56l-0.36,-0.08l-2.23,1.08l-2.83,2.06l-1.52,1.85l-2.32,0.13l-0.2,0.09l-1.28,1.37l-0.03,0.37l1.32,1.97l0.18,0.13l1.83,0.43l0.07,1.08l0.18,0.26l1.98,0.84l0.3,-0.03l2.66,-1.96l2.06,1.04l0.12,0.03l1.4,0.07l0.27,1.0l-3.24,0.73l-0.17,0.11l-1.13,1.5l-2.38,1.4l-0.1,0.1l-1.29,1.99l0.1,0.42l2.6,1.5l0.97,2.72l1.52,2.56l1.66,2.08l-0.03,1.76l-1.4,0.67l-0.15,0.38l0.6,1.47l0.13,0.15l1.29,0.75l-0.35,2.0l-0.58,1.96l-1.22,0.21l-0.2,0.14l-1.83,2.93l-2.02,3.51l-2.29,3.13l-3.4,2.42l-3.42,2.18l-2.75,0.3l-0.15,0.06l-1.32,1.01l-0.68,-0.67l-0.41,-0.01l-1.37,1.27l-3.42,1.28l-2.62,0.4l-0.24,0.21l-0.8,2.57l-0.95,0.11l-0.53,-1.54l0.52,-0.89l-0.19,-0.44l-3.36,-0.84l-0.17,0.01l-1.09,0.4l-2.36,-0.64l-1.0,-0.9l0.35,-1.34l-0.23,-0.37l-2.22,-0.47l-1.15,-0.94l-0.36,-0.02l-2.08,1.37l-2.35,0.29l-1.98,-0.01l-0.13,0.03l-1.32,0.63l-1.28,0.38l-0.21,0.33l0.33,2.65l-0.78,-0.04l-0.14,-0.39l-0.07,-1.04l-0.41,-0.26l-1.72,0.71l-0.96,-0.43l-1.63,-0.86l0.65,-1.95l-0.19,-0.38l-1.43,-0.46l-0.56,-2.27l-0.34,-0.22l-2.26,0.38l0.25,-2.65l2.29,-2.15l0.09,-0.2l0.1,-2.21l-0.07,-2.09l-0.15,-0.25l-1.02,-0.6l-0.8,-1.52l-0.31,-0.16l-1.42,0.2l-2.16,-0.32l0.55,-0.74l0.01,-0.35l-1.17,-1.7l-0.41,-0.08l-1.67,1.07l-1.97,-0.63l-0.25,0.03l-2.89,1.73l-2.26,1.99l-1.82,0.3l-1.0,-0.66l-0.15,-0.05l-1.28,-0.06l-1.75,-0.61l-0.24,0.02l-1.35,0.69l-0.1,0.08l-1.2,1.45l-0.14,-1.41l-0.4,-0.25l-1.46,0.55l-2.83,-0.26l-2.77,-0.61l-1.99,-1.17l-1.91,-0.54l-0.78,-1.21l-0.17,-0.13l-1.36,-0.38l-2.54,-1.79l-2.01,-0.84l-0.28,0.02l-0.89,0.56l-3.31,-1.83l-2.35,-1.67l-0.57,-2.49l1.34,0.28l0.36,-0.28l0.08,-1.42l-0.05,-0.19l-0.93,-1.34l0.24,-2.18l-0.07,-0.22l-2.69,-3.32l-0.15,-0.1l-3.97,-1.11l-0.69,-2.05l-0.11,-0.15l-1.79,-1.3l-0.39,-0.73l-0.36,-1.57l0.08,-1.09l-0.18,-0.3l-1.52,-0.66l-0.22,-0.01l-0.51,0.18l-0.52,-2.21l0.59,-0.55l0.06,-0.35l-0.22,-0.44l2.12,-1.24l1.63,-0.55l2.58,0.39l0.31,-0.16l0.87,-1.75l3.05,-0.34l0.21,-0.12l0.84,-1.12l3.87,-1.59l0.15,-0.14l0.35,-0.68l0.03,-0.17l-0.17,-1.51l1.52,-0.7l0.15,-0.39l-2.12,-5.0l4.62,-1.15l1.35,-0.72l0.14,-0.17l1.72,-5.37l4.7,0.99l0.28,-0.08l1.39,-1.43l0.08,-0.2l0.11,-2.95l1.83,-0.26l0.18,-0.1l1.85,-2.08l0.61,-0.17l0.57,1.97l0.1,0.15l2.2,1.75l3.48,1.17l1.59,2.36l-0.93,3.53l0.04,0.24l0.9,1.35l0.2,0.13l2.98,0.53l3.32,0.43l2.97,1.89l1.49,0.35l1.08,2.67l1.52,1.88l0.24,0.11l2.74,-0.07l5.15,0.67l3.36,-0.41l2.39,0.43l3.67,1.81l0.13,0.03l2.92,-0.0l1.02,0.86l0.34,0.03l2.88,-1.59l3.98,-1.03l3.81,-0.13l3.02,-1.12l1.77,-1.61l1.73,-1.01l0.13,-0.37l-0.41,-1.01l-0.72,-1.07l1.09,-1.66l1.21,0.24l2.57,0.63l0.24,-0.04l2.46,-1.62l3.78,-1.19l0.13,-0.09l1.8,-2.03l1.66,-0.84l3.54,-0.41l1.93,0.35l0.34,-0.22l0.27,-1.12l-0.08,-0.29l-2.27,-2.22l-2.08,-1.07l-0.29,0.01l-1.82,1.12l-2.36,-0.47l-0.14,0.01l-1.18,0.34l-0.46,-0.94l1.69,-3.08l1.1,-2.21l2.75,1.12l0.26,-0.02l3.53,-2.06l0.15,-0.26l-0.02,-1.35l2.18,-3.39l1.35,-1.04l0.12,-0.24l-0.03,-1.85l-0.15,-0.25l-1.0,-0.58l1.68,-1.37l3.01,-0.59l3.25,-0.09l3.67,0.99l2.08,1.18l1.51,3.3l0.95,1.45l0.85,1.99l0.92,3.19ZM697.0,237.37l-1.95,1.12l-1.74,-0.68l-0.06,-1.9l1.08,-1.03l2.62,-0.7l1.23,0.05l0.37,0.65l-1.01,1.08l-0.54,1.4Z",
            "name": "China"
        },
        "CM": {
            "path": "M453.76,278.92l-0.26,-0.11l-0.18,-0.02l-1.42,0.31l-1.56,-0.33l-1.17,0.16l-3.7,-0.05l0.3,-1.63l-0.04,-0.21l-0.98,-1.66l-0.15,-0.13l-1.03,-0.38l-0.46,-1.01l-0.13,-0.14l-0.48,-0.27l0.02,-0.46l0.62,-1.72l1.1,-2.25l0.54,-0.02l0.2,-0.09l1.41,-1.39l0.73,-0.03l1.32,0.97l0.31,0.03l1.72,-0.85l0.16,-0.2l0.22,-1.0l0.57,-1.03l0.36,-1.18l1.26,-0.98l0.1,-0.15l0.49,-1.7l0.48,-0.51l0.07,-0.13l0.35,-1.3l0.63,-1.54l2.06,-1.92l0.09,-0.17l0.12,-0.79l0.24,-0.41l-0.04,-0.36l-0.89,-0.91l0.04,-0.45l0.28,-0.06l0.85,1.39l0.16,1.59l-0.09,1.66l0.04,0.17l1.09,1.84l-0.86,-0.02l-0.72,0.17l-1.07,-0.24l-0.34,0.17l-0.54,1.19l0.06,0.34l1.48,1.47l1.06,0.44l0.32,0.94l0.73,1.6l-0.32,0.57l-1.23,2.49l-0.54,0.41l-0.12,0.21l-0.19,1.95l0.24,1.08l-0.18,0.67l0.07,0.28l1.13,1.25l0.24,0.93l0.92,1.29l1.1,0.8l0.1,1.01l0.26,0.73l-0.12,0.93l-1.65,-0.49l-2.02,-0.66l-3.19,-0.11Z",
            "name": "Cameroon"
        },
        "CL": {
            "path": "M246.8,429.1l-1.14,0.78l-2.25,1.21l-0.16,0.23l-0.37,2.94l-0.75,0.06l-2.72,-1.07l-2.83,-2.34l-3.06,-1.9l-0.71,-1.92l0.67,-1.84l-0.02,-0.25l-1.22,-2.13l-0.31,-5.41l1.02,-2.95l2.59,-2.4l-0.13,-0.51l-3.32,-0.8l2.06,-2.4l0.07,-0.15l0.79,-4.77l2.44,0.95l0.4,-0.22l1.31,-6.31l-0.16,-0.33l-1.68,-0.8l-0.42,0.21l-0.72,3.47l-1.01,-0.27l0.74,-4.06l0.85,-5.46l1.12,-1.96l0.03,-0.22l-0.71,-2.82l-0.19,-2.94l0.76,-0.07l0.26,-0.2l1.53,-4.62l1.73,-4.52l1.07,-4.2l-0.56,-4.2l0.73,-2.2l0.01,-0.12l-0.29,-3.3l1.46,-3.34l0.45,-5.19l0.8,-5.52l0.78,-5.89l-0.18,-4.33l-0.49,-3.47l1.1,-0.56l0.13,-0.13l0.44,-0.88l0.9,1.29l0.32,1.8l0.1,0.18l1.16,0.97l-0.73,2.33l0.01,0.21l1.33,2.91l0.97,3.6l0.35,0.22l1.57,-0.31l0.16,0.34l-0.79,2.51l-2.61,1.25l-0.17,0.28l0.08,4.36l-0.48,0.79l0.01,0.33l0.6,0.84l-1.62,1.55l-1.67,2.6l-0.89,2.47l-0.02,0.13l0.23,2.56l-1.5,2.76l-0.03,0.21l1.15,4.8l0.11,0.17l0.54,0.42l-0.01,2.37l-1.4,2.7l-0.03,0.15l0.06,2.25l-1.8,1.78l-0.09,0.21l0.02,2.73l0.71,2.63l-1.33,0.94l-0.12,0.17l-0.67,2.64l-0.59,3.03l0.4,3.55l-0.84,0.51l-0.14,0.31l0.58,3.5l0.08,0.16l0.96,0.99l-0.7,1.08l0.11,0.43l1.04,0.55l0.19,0.8l-0.89,0.48l-0.16,0.31l0.26,1.77l-0.89,4.06l-1.31,2.67l-0.03,0.19l0.28,1.53l-0.73,1.88l-1.85,1.37l-0.12,0.26l0.22,3.46l0.06,0.16l0.88,1.19l0.28,0.12l1.32,-0.17l-0.04,2.13l0.04,0.15l1.04,1.95l0.24,0.16l5.94,0.44ZM248.79,430.71l0.0,7.41l0.3,0.3l2.67,0.0l1.01,0.06l-0.54,0.91l-1.99,1.01l-1.13,-0.1l-1.42,-0.27l-1.87,-1.06l-2.57,-0.49l-3.09,-1.9l-2.52,-1.83l-2.65,-2.93l0.93,0.32l3.54,2.29l3.32,1.23l0.34,-0.09l1.29,-1.57l0.83,-2.32l2.11,-1.28l1.43,0.32Z",
            "name": "Chile"
        },
        "CA": {
            "path": "M280.14,145.66l-1.66,2.88l0.06,0.37l0.37,0.03l1.5,-1.01l1.17,0.49l-0.64,0.83l0.13,0.46l2.22,0.89l0.28,-0.03l1.02,-0.7l2.09,0.83l-0.69,2.1l0.37,0.38l1.43,-0.45l0.27,1.43l0.74,1.88l-0.95,2.5l-0.88,0.09l-1.34,-0.48l0.49,-2.34l-0.14,-0.32l-0.7,-0.4l-0.36,0.04l-2.81,2.66l-0.63,-0.05l1.2,-1.01l-0.1,-0.52l-2.4,-0.77l-2.79,0.18l-4.65,-0.09l-0.22,-0.54l1.37,-0.99l0.01,-0.48l-0.82,-0.65l1.91,-1.79l2.57,-5.17l1.49,-1.81l2.04,-1.07l0.63,0.08l-0.27,0.51l-1.33,2.07ZM193.92,74.85l-0.01,4.24l0.19,0.28l0.33,-0.07l3.14,-3.22l2.65,2.5l-0.71,3.04l0.06,0.26l2.42,2.88l0.46,0.0l2.66,-3.14l1.83,-3.74l0.03,-0.12l0.13,-4.53l3.23,0.31l3.63,0.64l3.18,2.08l0.13,1.91l-1.79,2.22l-0.0,0.37l1.69,2.2l-0.28,1.8l-4.74,2.84l-3.33,0.62l-2.5,-1.21l-0.41,0.17l-0.73,2.05l-2.39,3.44l-0.74,1.78l-2.78,2.61l-3.48,0.26l-0.17,0.07l-1.98,1.68l-0.1,0.21l-0.15,2.33l-2.68,0.45l-0.17,0.09l-3.1,3.2l-2.75,4.38l-0.99,3.06l-0.14,4.31l0.25,0.31l3.5,0.58l1.07,3.24l1.18,2.76l0.34,0.18l3.43,-0.69l4.55,1.52l2.45,1.32l1.76,1.65l0.12,0.07l3.11,0.96l2.63,1.46l0.13,0.04l4.12,0.2l2.41,0.3l-0.36,2.81l0.8,3.51l1.81,3.78l0.08,0.1l3.73,3.17l0.34,0.03l1.93,-1.08l0.13,-0.15l1.35,-3.44l0.01,-0.18l-1.31,-5.38l-0.08,-0.14l-1.46,-1.5l3.68,-1.51l2.84,-2.46l1.45,-2.55l0.04,-0.17l-0.2,-2.39l-0.04,-0.12l-1.7,-3.07l-2.9,-2.64l2.79,-3.66l0.05,-0.27l-1.08,-3.38l-0.8,-5.75l1.45,-0.75l4.18,1.03l2.6,0.38l0.18,-0.03l1.93,-0.95l2.18,1.23l3.01,2.18l0.73,1.42l0.25,0.16l4.18,0.27l-0.06,2.95l0.83,4.7l0.22,0.24l2.19,0.55l1.75,2.08l0.38,0.07l3.63,-2.03l0.11,-0.11l2.38,-4.06l1.36,-1.43l1.76,3.01l3.26,4.68l2.68,4.19l-0.94,2.09l0.12,0.38l3.31,1.98l2.23,1.98l0.13,0.07l3.94,0.89l1.48,1.02l0.96,2.82l0.22,0.2l1.85,0.43l0.88,1.13l0.17,3.53l-1.68,1.16l-1.76,1.14l-4.08,1.17l-0.11,0.06l-3.08,2.65l-4.11,0.52l-5.35,-0.69l-3.76,-0.02l-2.62,0.23l-0.2,0.1l-2.05,2.29l-3.13,1.41l-0.11,0.08l-3.6,4.24l-2.87,2.92l-0.05,0.36l0.33,0.14l2.13,-0.52l0.15,-0.08l3.98,-4.15l5.16,-2.63l3.58,-0.31l1.82,1.3l-2.09,1.91l-0.09,0.29l0.8,3.46l0.82,2.37l0.15,0.17l3.25,1.56l0.16,0.03l4.14,-0.45l0.21,-0.12l2.03,-2.86l0.11,1.46l0.13,0.22l1.26,0.88l-2.7,1.78l-5.51,1.83l-2.52,1.26l-2.75,2.16l-1.52,-0.18l-0.08,-2.16l4.19,-2.47l0.14,-0.34l-0.3,-0.22l-4.01,0.1l-2.66,0.36l-1.45,-1.56l0.0,-4.16l-0.11,-0.23l-1.11,-0.91l-0.28,-0.05l-1.5,0.48l-0.7,-0.7l-0.45,0.02l-1.91,2.39l-0.8,2.5l-0.82,1.31l-0.95,0.43l-0.77,0.15l-0.23,0.2l-0.18,0.56l-8.2,0.02l-0.13,0.03l-1.19,0.61l-2.95,2.45l-0.78,1.13l-4.6,0.01l-0.12,0.02l-1.13,0.48l-0.13,0.44l0.37,0.55l0.2,0.82l-0.01,0.09l-3.1,1.42l-2.63,0.5l-2.84,1.57l-0.47,0.0l-0.72,-0.4l-0.18,-0.27l0.03,-0.15l0.52,-1.0l1.2,-1.71l0.73,-1.8l0.02,-0.17l-1.03,-5.47l-0.15,-0.21l-2.35,-1.32l0.16,-0.29l-0.05,-0.35l-0.37,-0.38l-0.22,-0.09l-0.56,0.0l-0.35,-0.34l-0.11,-0.65l-0.46,-0.2l-0.39,0.26l-0.2,-0.03l-0.11,-0.33l-0.48,-0.25l-0.21,-0.71l-0.15,-0.18l-3.97,-2.07l-4.8,-2.39l-0.25,-0.01l-2.19,0.89l-0.72,0.03l-3.04,-0.82l-0.14,-0.0l-1.94,0.4l-2.4,-0.98l-2.56,-0.51l-1.7,-0.19l-0.62,-0.44l-0.42,-1.67l-0.3,-0.23l-0.85,0.02l-0.29,0.3l-0.01,0.95l-69.26,-0.01l-4.77,-3.14l-1.78,-1.41l-4.51,-1.38l-1.3,-2.73l0.34,-1.96l-0.17,-0.33l-3.06,-1.37l-0.41,-2.58l-0.11,-0.18l-2.92,-2.4l-0.05,-1.53l1.32,-1.59l0.07,-0.2l-0.07,-2.21l-0.16,-0.26l-4.19,-2.22l-2.52,-4.02l-1.56,-2.6l-0.08,-0.09l-2.28,-1.64l-1.65,-1.48l-1.31,-1.89l-0.38,-0.1l-2.51,1.21l-2.28,1.92l-2.03,-2.22l-1.85,-1.71l-2.44,-1.04l-2.28,-0.12l0.03,-37.72l4.27,0.98l4.0,2.13l2.61,0.4l0.24,-0.07l2.17,-1.81l2.92,-1.33l3.63,0.53l0.18,-0.03l3.72,-1.94l3.89,-1.06l1.6,1.72l0.37,0.06l1.87,-1.04l0.14,-0.19l0.48,-1.83l1.37,0.38l4.18,3.96l0.41,0.0l2.89,-2.62l0.28,2.79l0.37,0.26l3.08,-0.73l0.17,-0.12l0.85,-1.16l2.81,0.24l3.83,1.86l5.86,1.61l3.46,0.75l2.44,-0.26l2.89,1.89l-3.12,1.89l-0.14,0.31l0.24,0.24l4.53,0.92l6.84,-0.5l2.04,-0.71l2.54,2.44l0.39,0.02l2.72,-2.16l-0.01,-0.48l-2.26,-1.61l1.27,-1.16l2.94,-0.19l1.94,-0.42l1.89,0.97l2.49,2.32l0.24,0.08l2.71,-0.33l4.35,1.9l0.17,0.02l3.86,-0.67l3.62,0.1l0.31,-0.33l-0.26,-2.44l1.9,-0.65l3.58,1.36l-0.01,3.84l0.23,0.29l0.34,-0.17l1.51,-3.23l1.81,0.1l0.31,-0.22l1.13,-4.37l-0.08,-0.29l-2.68,-2.73l-2.83,-1.76l0.19,-4.73l2.77,-3.15l3.06,0.69l2.44,1.97l3.24,4.88l-2.05,2.02l0.15,0.51l4.41,0.85ZM265.85,150.7l-0.84,0.04l-3.15,-0.99l-1.77,-1.17l0.19,-0.06l3.17,0.79l2.39,1.27l0.01,0.12ZM249.41,3.71l6.68,0.49l5.34,0.79l4.34,1.6l-0.08,1.24l-5.91,2.56l-6.03,1.21l-2.36,1.38l-0.14,0.34l0.29,0.22l4.37,-0.02l-4.96,3.01l-4.06,1.64l-0.11,0.08l-4.21,4.62l-5.07,0.92l-0.12,0.05l-1.53,1.1l-7.5,0.59l-0.28,0.28l0.24,0.31l2.67,0.54l-1.04,0.6l-0.09,0.44l1.89,2.49l-2.11,1.66l-3.83,1.52l-0.15,0.13l-1.14,2.01l-3.41,1.55l-0.16,0.36l0.35,1.19l0.3,0.22l3.98,-0.19l0.03,0.78l-6.42,2.99l-6.44,-1.41l-7.41,0.79l-3.72,-0.62l-4.48,-0.26l-0.25,-2.0l4.37,-1.13l0.21,-0.38l-1.14,-3.55l1.13,-0.28l6.61,2.29l0.35,-0.12l-0.04,-0.37l-3.41,-3.45l-0.14,-0.08l-3.57,-0.92l1.62,-1.7l4.36,-1.3l0.2,-0.18l0.71,-1.94l-0.12,-0.36l-3.45,-2.15l-0.88,-2.43l6.36,0.23l1.94,0.61l0.23,-0.02l3.91,-2.1l0.15,-0.32l-0.26,-0.24l-5.69,-0.67l-8.69,0.37l-4.3,-1.92l-2.12,-2.39l-2.82,-1.68l-0.44,-1.65l3.41,-1.06l2.93,-0.2l4.91,-0.99l3.69,-2.28l2.93,0.31l2.64,1.68l0.42,-0.1l1.84,-3.23l3.17,-0.96l4.45,-0.69l7.56,-0.26l1.26,0.64l0.18,0.03l7.2,-1.06l10.81,0.8ZM203.94,57.59l0.01,0.32l1.97,2.97l0.51,-0.01l2.26,-3.75l6.05,-1.89l4.08,4.72l-0.36,2.95l0.38,0.33l4.95,-1.36l0.11,-0.05l2.23,-1.77l5.37,2.31l3.32,2.14l0.3,1.89l0.36,0.25l4.48,-1.01l2.49,2.8l0.14,0.09l5.99,1.78l2.09,1.74l2.18,3.83l-4.29,1.91l-0.01,0.54l5.9,2.83l3.95,0.94l3.54,3.84l0.2,0.1l3.58,0.25l-0.67,2.51l-4.18,4.54l-2.84,-1.61l-3.91,-3.95l-0.26,-0.09l-3.24,0.52l-0.25,0.26l-0.32,2.37l0.1,0.26l2.63,2.38l3.42,1.89l0.96,1.0l1.57,3.8l-0.74,2.43l-2.85,-0.96l-6.26,-3.15l-0.38,0.09l0.04,0.39l3.54,3.4l2.55,2.31l0.23,0.78l-6.26,-1.43l-5.33,-2.25l-2.73,-1.73l0.67,-0.86l-0.09,-0.45l-7.38,-4.01l-0.44,0.27l0.03,0.89l-6.85,0.61l-1.8,-1.17l1.43,-2.6l4.56,-0.07l5.15,-0.52l0.23,-0.45l-0.76,-1.34l0.8,-1.89l3.21,-4.06l0.05,-0.29l-0.72,-1.95l-0.97,-1.47l-0.11,-0.1l-3.84,-2.1l-4.53,-1.33l1.09,-0.75l0.05,-0.45l-2.65,-2.75l-0.18,-0.09l-2.12,-0.24l-1.91,-1.47l-0.39,0.02l-1.27,1.25l-4.4,0.56l-9.06,-0.99l-5.28,-1.31l-4.01,-0.67l-1.72,-1.31l2.32,-1.85l0.1,-0.33l-0.28,-0.2l-3.3,-0.02l-0.74,-4.36l1.86,-4.09l2.46,-1.88l5.74,-1.15l-1.5,2.55ZM261.28,159.28l0.19,0.14l1.82,0.42l1.66,-0.05l-0.66,0.68l-0.75,0.16l-3.0,-1.25l-0.46,-0.77l0.51,-0.52l0.68,1.19ZM230.87,84.48l-2.48,0.19l-0.52,-1.74l0.96,-2.17l2.03,-0.53l1.71,1.04l0.02,1.6l-0.22,0.46l-1.5,1.16ZM229.52,58.19l0.14,0.82l-4.99,-0.22l-2.73,0.63l-0.59,-0.23l-2.61,-2.4l0.08,-1.38l0.94,-0.25l5.61,0.51l4.14,2.54ZM222.12,105.0l-0.79,1.63l-0.75,-0.22l-0.52,-0.91l0.04,-0.09l0.84,-1.01l0.74,0.06l0.44,0.55ZM183.77,38.22l2.72,1.65l0.16,0.04l4.83,-0.01l1.92,1.52l-0.51,1.75l0.18,0.36l2.84,1.14l1.56,1.19l0.16,0.06l3.37,0.22l3.65,0.42l4.07,-1.1l5.05,-0.43l3.96,0.35l2.53,1.8l0.48,1.79l-1.37,1.16l-3.6,1.03l-3.22,-0.59l-7.17,0.76l-5.1,0.09l-4.0,-0.6l-6.48,-1.56l-0.81,-2.57l-0.3,-2.49l-0.1,-0.19l-2.51,-2.25l-0.16,-0.07l-5.12,-0.63l-2.61,-1.45l0.75,-1.71l4.88,0.32ZM207.46,91.26l0.42,1.62l0.42,0.19l1.12,-0.55l1.35,0.99l2.74,1.39l2.73,1.2l0.2,1.74l0.35,0.26l1.72,-0.29l1.31,0.97l-1.72,0.96l-3.68,-0.9l-1.34,-1.71l-0.43,-0.04l-2.46,2.1l-3.23,1.85l-0.74,-1.98l-0.31,-0.19l-2.47,0.28l1.49,-1.34l0.1,-0.19l0.32,-3.15l0.79,-3.45l1.34,0.25ZM215.59,102.66l-2.73,2.0l-1.49,-0.08l-0.37,-0.7l1.61,-1.56l3.0,0.03l-0.02,0.3ZM202.79,24.07l0.11,0.12l2.54,1.53l-3.01,1.47l-4.55,4.07l-4.3,0.38l-5.07,-0.68l-2.51,-2.09l0.03,-1.72l1.86,-1.4l0.1,-0.34l-0.29,-0.2l-4.49,0.04l-2.63,-1.79l-1.45,-2.36l1.61,-2.38l1.65,-1.69l2.47,-0.4l0.19,-0.48l-0.72,-0.89l5.1,-0.26l3.1,3.05l0.13,0.07l4.21,1.25l3.99,1.06l1.92,3.65ZM187.5,59.3l-0.15,0.1l-2.59,3.4l-2.5,-0.15l-1.47,-3.92l0.04,-2.24l1.22,-1.92l2.34,-1.26l5.11,0.17l4.28,1.06l-3.36,3.86l-2.9,0.9ZM186.19,48.8l-1.15,1.63l-3.42,-0.35l-2.68,-1.15l1.11,-1.88l3.34,-1.27l2.01,1.63l0.79,1.38ZM185.78,35.41l-0.95,0.13l-4.48,-0.33l-0.4,-0.91l4.5,0.07l1.45,0.82l-0.1,0.21ZM180.76,32.56l-3.43,1.03l-1.85,-1.14l-1.01,-1.92l-0.16,-1.87l2.87,0.2l1.39,0.35l2.75,1.75l-0.55,1.6ZM181.03,76.32l-1.21,1.2l-3.19,-1.26l-0.18,-0.01l-1.92,0.45l-2.88,-1.67l1.84,-1.16l1.6,-1.77l2.45,1.17l1.45,0.77l2.05,2.28ZM169.72,54.76l2.83,0.97l0.14,0.01l4.25,-0.58l0.47,1.01l-2.19,2.16l0.07,0.48l3.61,1.95l-0.41,3.84l-3.87,1.68l-2.23,-0.36l-1.73,-1.75l-6.07,-3.53l0.03,-1.01l4.79,0.55l0.3,-0.16l-0.04,-0.34l-2.55,-2.89l2.59,-2.05ZM174.44,40.56l1.49,1.87l0.07,2.48l-1.07,3.52l-3.87,0.48l-2.41,-0.72l0.05,-2.72l-0.33,-0.3l-3.79,0.36l-0.13,-3.31l2.36,0.14l0.15,-0.03l3.7,-1.74l3.44,0.29l0.31,-0.22l0.03,-0.12ZM170.14,31.5l0.75,1.74l-3.52,-0.52l-4.19,-1.77l-4.65,-0.17l1.65,-1.11l-0.05,-0.52l-2.86,-1.26l-0.13,-1.58l4.52,0.7l6.66,1.99l1.84,2.5ZM134.64,58.08l-1.08,1.93l0.34,0.44l5.44,-1.41l3.37,2.32l0.37,-0.02l2.66,-2.28l2.03,1.38l2.01,4.53l0.53,0.04l1.26,-1.93l0.03,-0.27l-1.67,-4.55l1.82,-0.58l2.36,0.73l2.69,1.84l1.53,4.46l0.77,3.24l0.15,0.19l4.22,2.26l4.32,2.04l-0.21,1.51l-3.87,0.34l-0.19,0.5l1.45,1.54l-0.65,1.23l-4.3,-0.65l-4.4,-1.19l-2.97,0.28l-4.67,1.48l-6.31,0.65l-4.27,0.39l-1.26,-1.91l-0.15,-0.12l-3.42,-1.2l-0.16,-0.01l-2.05,0.45l-2.66,-3.02l1.2,-0.34l3.82,-0.76l3.58,0.19l3.27,-0.78l0.23,-0.29l-0.24,-0.29l-4.84,-1.06l-5.42,0.35l-3.4,-0.09l-0.97,-1.22l5.39,-1.7l0.21,-0.33l-0.3,-0.25l-3.82,0.06l-3.95,-1.1l1.88,-3.13l1.68,-1.81l6.54,-2.84l2.11,0.77ZM158.85,56.58l-1.82,2.62l-3.38,-2.9l0.49,-0.39l3.17,-0.18l1.54,0.86ZM149.71,42.7l1.0,1.87l0.37,0.14l2.17,-0.83l2.33,0.2l0.38,2.16l-1.38,2.17l-8.33,0.76l-6.34,2.15l-3.51,0.1l-0.22,-1.13l4.98,-2.12l0.17,-0.34l-0.31,-0.23l-11.27,0.6l-3.04,-0.78l3.14,-4.57l2.2,-1.35l6.87,1.7l4.4,3.0l0.14,0.05l4.37,0.39l0.27,-0.48l-3.41,-4.68l1.96,-1.62l2.28,0.53l0.79,2.32ZM145.44,29.83l-2.18,0.77l-3.79,-0.0l0.02,-0.31l2.34,-1.5l1.2,0.23l2.42,0.83ZM144.83,34.5l-4.44,1.46l-3.18,-1.48l1.6,-1.36l3.51,-0.53l3.1,0.75l-0.6,1.16ZM119.02,65.87l-6.17,2.07l-1.19,-1.82l-0.13,-0.11l-5.48,-2.32l0.92,-1.7l1.73,-3.44l2.16,-3.15l-0.02,-0.36l-2.09,-2.56l7.84,-0.71l3.59,1.02l6.32,0.27l2.35,1.37l2.25,1.71l-2.68,1.04l-6.21,3.41l-3.1,3.28l-0.08,0.21l0.0,1.81ZM129.66,35.4l-0.3,3.55l-1.77,1.67l-2.34,0.27l-4.62,2.2l-3.89,0.76l-2.83,-0.93l3.85,-3.52l5.04,-3.36l3.75,0.07l3.11,-0.7ZM111.24,152.74l-0.82,0.29l-3.92,-1.39l-0.7,-1.06l-0.12,-0.1l-2.15,-1.09l-0.41,-0.84l-0.2,-0.16l-2.44,-0.56l-0.84,-1.56l0.1,-0.36l2.34,0.64l1.53,0.5l2.28,0.34l0.78,1.04l1.24,1.55l0.09,0.08l2.42,1.3l0.81,1.39ZM88.54,134.82l0.14,0.02l2.0,-0.23l-0.67,3.48l0.06,0.24l1.78,2.22l-0.24,-0.0l-1.4,-1.42l-0.91,-1.53l-1.26,-1.08l-0.42,-1.35l0.09,-0.66l0.82,0.31Z",
            "name": "Canada"
        },
        "CG": {
            "path": "M453.66,296.61l-0.9,-0.82l-0.35,-0.04l-0.83,0.48l-0.77,0.83l-1.65,-2.13l1.66,-1.2l0.08,-0.39l-0.81,-1.43l0.59,-0.43l1.62,-0.29l0.24,-0.24l0.1,-0.58l0.94,0.84l0.19,0.08l2.21,0.11l0.27,-0.14l0.81,-1.29l0.32,-1.76l-0.27,-1.96l-0.06,-0.15l-1.08,-1.35l1.02,-2.74l-0.09,-0.34l-0.62,-0.5l-0.22,-0.06l-1.66,0.18l-0.55,-1.03l0.12,-0.73l2.85,0.09l1.98,0.65l2.0,0.59l0.38,-0.25l0.17,-1.3l1.26,-2.24l1.34,-1.19l1.54,0.38l1.35,0.12l-0.11,1.15l-0.74,1.34l-0.5,1.61l-0.31,2.22l0.12,1.41l-0.4,0.9l-0.06,0.88l-0.24,0.67l-1.57,1.15l-1.24,1.41l-1.09,2.43l-0.03,0.13l0.08,1.95l-0.55,0.69l-1.46,1.23l-1.32,1.41l-0.61,-0.29l-0.13,-0.57l-0.29,-0.23l-1.36,-0.02l-0.23,0.1l-0.72,0.81l-0.41,-0.16Z",
            "name": "Republic of the Congo"
        },
        "CF": {
            "path": "M459.41,266.56l1.9,-0.17l0.22,-0.12l0.36,-0.5l0.14,0.02l0.55,0.51l0.29,0.07l3.15,-0.96l0.12,-0.07l1.05,-0.97l1.29,-0.87l0.12,-0.33l-0.17,-0.61l0.38,-0.12l2.36,0.15l0.15,-0.03l2.36,-1.17l0.12,-0.1l1.78,-2.72l1.18,-0.96l1.23,-0.34l0.21,0.79l0.07,0.13l1.37,1.5l0.01,0.86l-0.39,1.0l-0.01,0.17l0.16,0.78l0.1,0.17l0.91,0.76l1.89,1.09l1.24,0.92l0.02,0.67l0.12,0.23l1.67,1.3l0.99,1.03l0.61,1.46l0.14,0.15l1.79,0.95l0.2,0.4l-0.44,0.14l-1.54,-0.06l-1.98,-0.26l-0.93,0.22l-0.19,0.14l-0.3,0.48l-0.57,0.05l-0.91,-0.49l-0.26,-0.01l-2.7,1.21l-1.04,-0.23l-0.21,0.03l-0.34,0.19l-0.12,0.13l-0.64,1.3l-1.67,-0.43l-1.77,-0.24l-1.58,-0.91l-2.06,-0.85l-0.27,0.02l-1.42,0.88l-0.97,1.27l-0.06,0.14l-0.19,1.46l-1.3,-0.11l-1.67,-0.42l-0.27,0.07l-1.55,1.41l-0.99,1.76l-0.14,-1.18l-0.13,-0.22l-1.1,-0.78l-0.86,-1.2l-0.2,-0.84l-0.07,-0.13l-1.07,-1.19l0.16,-0.59l0.0,-0.15l-0.24,-1.01l0.18,-1.77l0.5,-0.38l0.09,-0.11l1.18,-2.4Z",
            "name": "Central African Republic"
        },
        "CD": {
            "path": "M497.85,276.25l-0.14,2.77l0.2,0.3l0.57,0.19l-0.47,0.52l-1.0,0.71l-0.96,1.31l-0.56,1.22l-0.16,2.04l-0.54,0.89l-0.04,0.15l-0.02,1.76l-0.63,0.61l-0.09,0.2l-0.08,1.33l-0.2,0.11l-0.15,0.21l-0.23,1.37l0.03,0.2l0.6,1.08l0.16,2.96l0.44,2.29l-0.24,1.25l0.01,0.15l0.5,1.46l0.07,0.12l1.41,1.37l1.09,2.56l-0.51,-0.11l-3.45,0.45l-0.67,0.3l-0.15,0.15l-0.71,1.61l0.01,0.26l0.52,1.03l-0.43,2.9l-0.31,2.55l0.13,0.29l0.7,0.46l1.75,0.99l0.31,-0.01l0.26,-0.17l0.15,1.9l-1.44,-0.02l-0.94,-1.28l-0.94,-1.1l-0.17,-0.1l-1.76,-0.33l-0.5,-1.18l-0.42,-0.15l-1.44,0.75l-1.79,-0.32l-0.77,-1.05l-0.2,-0.12l-1.59,-0.23l-0.97,0.04l-0.1,-0.53l-0.27,-0.25l-0.86,-0.06l-1.13,-0.15l-1.62,0.37l-1.04,-0.06l-0.32,0.09l0.11,-2.56l-0.08,-0.21l-0.77,-0.87l-0.17,-1.41l0.36,-1.47l-0.03,-0.21l-0.48,-0.91l-0.04,-1.52l-0.3,-0.29l-2.65,0.02l0.13,-0.53l-0.29,-0.37l-1.28,0.01l-0.28,0.21l-0.07,0.24l-1.35,0.09l-0.26,0.18l-0.62,1.45l-0.25,0.42l-1.17,-0.3l-0.19,0.01l-0.79,0.34l-1.44,0.18l-1.41,-1.96l-0.7,-1.47l-0.61,-1.86l-0.28,-0.21l-7.39,-0.03l-0.92,0.3l-0.78,-0.03l-0.78,0.25l-0.11,-0.25l0.35,-0.15l0.18,-0.26l0.07,-1.02l0.33,-0.52l0.72,-0.42l0.52,0.2l0.33,-0.08l0.76,-0.86l0.99,0.02l0.11,0.48l0.16,0.2l0.94,0.44l0.35,-0.07l1.46,-1.56l1.44,-1.21l0.68,-0.85l0.06,-0.2l-0.08,-1.99l1.04,-2.33l1.1,-1.23l1.62,-1.19l0.11,-0.14l0.29,-0.8l0.08,-0.94l0.38,-0.82l0.03,-0.16l-0.13,-1.38l0.3,-2.16l0.47,-1.51l0.73,-1.31l0.04,-0.12l0.15,-1.51l0.21,-1.66l0.89,-1.16l1.16,-0.7l1.9,0.79l1.69,0.95l1.81,0.24l1.85,0.48l0.35,-0.16l0.71,-1.43l0.16,-0.09l1.03,0.23l0.19,-0.02l2.65,-1.19l0.86,0.46l0.17,0.03l0.81,-0.08l0.23,-0.14l0.31,-0.5l0.75,-0.17l1.83,0.26l1.64,0.06l0.72,-0.21l1.39,1.9l0.16,0.11l1.12,0.3l0.24,-0.04l0.58,-0.36l1.05,0.15l0.15,-0.02l1.15,-0.44l0.47,0.84l0.08,0.09l2.08,1.57Z",
            "name": "Democratic Republic of the Congo"
        },
        "CZ": {
            "path": "M463.29,152.22l-0.88,-0.47l-0.18,-0.03l-1.08,0.15l-1.86,-0.94l-0.21,-0.02l-0.88,0.24l-0.13,0.07l-1.25,1.17l-1.63,-0.91l-1.38,-1.36l-1.22,-0.75l-0.24,-1.24l-0.33,-0.75l1.53,-0.6l0.98,-0.84l1.74,-0.62l0.11,-0.07l0.47,-0.47l0.46,0.27l0.24,0.03l0.96,-0.3l1.06,0.95l0.15,0.07l1.57,0.24l-0.1,0.6l0.16,0.32l1.36,0.68l0.41,-0.15l0.28,-0.62l1.29,0.28l0.19,0.84l0.26,0.23l1.73,0.18l0.74,1.02l-0.17,0.0l-0.25,0.13l-0.32,0.49l-0.46,0.11l-0.22,0.23l-0.13,0.57l-0.32,0.1l-0.2,0.22l-0.03,0.14l-0.65,0.25l-1.05,-0.05l-0.28,0.17l-0.22,0.43Z",
            "name": "Czech Republic"
        },
        "CY": {
            "path": "M505.03,193.75l-1.51,0.68l-1.0,-0.3l-0.32,-0.63l0.69,-0.06l0.41,0.13l0.19,-0.0l0.62,-0.22l0.31,0.02l0.06,0.22l0.49,0.17l0.06,-0.01Z",
            "name": "Cyprus"
        },
        "CR": {
            "path": "M213.0,263.84l-0.98,-0.4l-0.3,-0.31l0.16,-0.24l0.05,-0.21l-0.09,-0.56l-0.1,-0.18l-0.76,-0.65l-0.99,-0.5l-0.74,-0.28l-0.13,-0.58l-0.12,-0.18l-0.66,-0.45l-0.34,-0.0l-0.13,0.31l0.13,0.59l-0.17,0.21l-0.34,-0.42l-0.14,-0.1l-0.7,-0.22l-0.23,-0.34l0.01,-0.62l0.31,-0.74l-0.14,-0.38l-0.3,-0.15l0.47,-0.4l1.48,0.6l0.26,-0.02l0.47,-0.27l0.58,0.15l0.35,0.44l0.17,0.11l0.74,0.17l0.27,-0.07l0.3,-0.27l0.52,1.09l0.97,1.02l0.77,0.71l-0.41,0.1l-0.23,0.3l0.01,1.02l0.12,0.24l0.2,0.14l-0.07,0.05l-0.11,0.3l0.08,0.37l-0.23,0.63Z",
            "name": "Costa Rica"
        },
        "CU": {
            "path": "M215.01,226.09l2.08,0.18l1.94,0.03l2.24,0.86l0.95,0.92l0.25,0.08l2.22,-0.28l0.79,0.55l3.68,2.81l0.19,0.06l0.77,-0.03l1.18,0.42l-0.12,0.47l0.27,0.37l1.78,0.1l1.59,0.9l-0.11,0.22l-1.5,0.3l-1.64,0.13l-1.75,-0.2l-2.69,0.19l1.0,-0.86l-0.03,-0.48l-1.02,-0.68l-0.13,-0.05l-1.52,-0.16l-0.74,-0.64l-0.57,-1.42l-0.3,-0.19l-1.36,0.1l-2.23,-0.67l-0.71,-0.52l-0.14,-0.06l-3.2,-0.4l-0.42,-0.25l0.56,-0.39l0.12,-0.33l-0.27,-0.22l-2.46,-0.13l-0.2,0.06l-1.72,1.31l-0.94,0.03l-0.25,0.15l-0.29,0.53l-1.04,0.24l-0.29,-0.07l0.7,-0.43l0.1,-0.11l0.5,-0.87l1.04,-0.54l1.23,-0.49l1.86,-0.25l0.62,-0.28Z",
            "name": "Cuba"
        },
        "SZ": {
            "path": "M500.95,353.41l-0.41,0.97l-1.16,0.23l-1.29,-1.26l-0.02,-0.71l0.63,-0.93l0.23,-0.7l0.47,-0.12l1.04,0.4l0.32,1.05l0.2,1.08Z",
            "name": "Swaziland"
        },
        "SY": {
            "path": "M510.84,199.83l0.09,-0.11l0.07,-0.2l-0.04,-1.08l0.56,-1.4l1.3,-1.01l0.1,-0.34l-0.41,-1.11l-0.24,-0.19l-0.89,-0.11l-0.2,-1.84l0.55,-1.05l1.3,-1.22l0.09,-0.19l0.09,-1.09l0.39,0.27l0.25,0.04l2.66,-0.77l1.35,0.52l2.06,-0.01l2.93,-1.08l1.35,0.04l2.14,-0.34l-0.83,1.16l-1.31,0.68l-0.16,0.3l0.23,2.03l-0.9,3.25l-5.43,2.87l-4.79,2.91l-2.32,-0.92Z",
            "name": "Syria"
        },
        "KG": {
            "path": "M599.04,172.15l0.38,-0.9l1.43,-0.37l4.04,1.02l0.37,-0.23l0.36,-1.64l1.17,-0.52l3.45,1.24l0.2,-0.0l0.86,-0.31l4.09,0.08l3.61,0.31l1.18,1.02l0.11,0.06l1.19,0.34l-0.13,0.26l-3.84,1.58l-0.13,0.1l-0.81,1.08l-3.08,0.34l-0.24,0.16l-0.85,1.7l-2.43,-0.37l-0.14,0.01l-1.79,0.61l-2.39,1.4l-0.12,0.39l0.25,0.49l-0.48,0.45l-4.57,0.43l-3.04,-0.94l-2.45,0.18l0.14,-1.02l2.42,0.44l0.27,-0.08l0.81,-0.81l1.76,0.27l0.21,-0.05l3.21,-2.14l-0.03,-0.51l-2.97,-1.57l-0.26,-0.01l-1.64,0.69l-1.38,-0.84l1.81,-1.67l-0.09,-0.5l-0.46,-0.18Z",
            "name": "Kyrgyz Republic"
        },
        "KE": {
            "path": "M523.3,287.04l0.06,0.17l1.29,1.8l-1.46,0.84l-0.11,0.11l-0.55,0.93l-0.81,0.16l-0.24,0.24l-0.34,1.69l-0.81,1.06l-0.46,1.58l-0.76,0.63l-3.3,-2.3l-0.16,-1.32l-0.15,-0.23l-9.35,-5.28l-0.02,-2.4l1.92,-2.63l0.91,-1.83l0.01,-0.24l-1.09,-2.86l-0.29,-1.24l-1.09,-1.63l2.93,-2.85l0.92,0.3l0.0,1.19l0.09,0.22l0.86,0.83l0.21,0.08l1.65,0.0l3.09,2.08l0.16,0.05l0.79,0.03l0.54,-0.06l0.58,0.28l1.67,0.2l0.28,-0.12l0.69,-0.98l2.04,-0.94l0.86,0.73l0.19,0.07l1.1,0.0l-1.82,2.36l-0.06,0.18l0.03,9.12Z",
            "name": "Kenya"
        },
        "SS": {
            "path": "M505.7,261.39l0.02,1.64l-0.27,0.55l-1.15,0.05l-0.24,0.15l-0.85,1.44l0.22,0.45l1.44,0.17l1.15,1.12l0.42,0.95l0.14,0.15l1.06,0.54l1.33,2.45l-3.06,2.98l-1.44,1.08l-1.75,0.01l-1.92,0.56l-1.5,-0.53l-0.27,0.03l-0.85,0.57l-1.98,-1.5l-0.56,-1.02l-0.37,-0.13l-1.32,0.5l-1.08,-0.15l-0.2,0.04l-0.56,0.35l-0.9,-0.24l-1.44,-1.97l-0.39,-0.77l-0.13,-0.13l-1.78,-0.94l-0.65,-1.5l-1.08,-1.12l-1.57,-1.22l-0.02,-0.68l-0.12,-0.23l-1.37,-1.02l-1.17,-0.68l0.2,-0.08l0.86,-0.48l0.14,-0.18l0.63,-2.22l0.6,-1.02l1.47,-0.28l0.35,0.56l1.29,1.48l0.14,0.09l0.69,0.22l0.22,-0.02l0.83,-0.4l1.58,0.08l0.26,0.39l0.25,0.13l2.49,0.0l0.3,-0.25l0.06,-0.35l1.13,-0.42l0.18,-0.18l0.22,-0.63l0.68,-0.38l1.95,1.37l0.23,0.05l1.29,-0.26l0.19,-0.12l1.23,-1.8l1.36,-1.37l0.08,-0.25l-0.21,-1.52l-0.06,-0.15l-0.25,-0.3l0.94,-0.08l0.26,-0.21l0.1,-0.32l0.6,0.09l-0.25,1.67l0.3,1.83l0.11,0.19l1.22,0.94l0.25,0.73l-0.04,1.2l0.26,0.31l0.09,0.01Z",
            "name": "South Sudan"
        },
        "SR": {
            "path": "M278.1,270.26l2.71,0.45l0.31,-0.14l0.19,-0.32l1.82,-0.16l2.25,0.56l-1.09,1.81l-0.04,0.19l0.2,1.72l0.05,0.13l0.9,1.35l-0.39,0.99l-0.21,1.09l-0.48,0.8l-1.2,-0.44l-0.17,-0.01l-1.12,0.24l-0.95,-0.21l-0.35,0.2l-0.25,0.73l0.05,0.29l0.3,0.35l-0.06,0.13l-1.01,-0.15l-1.42,-2.03l-0.32,-1.36l-0.29,-0.23l-0.63,-0.0l-0.95,-1.56l0.41,-1.16l0.01,-0.17l-0.08,-0.35l1.29,-0.56l0.18,-0.22l0.35,-1.97Z",
            "name": "Suriname"
        },
        "KH": {
            "path": "M680.28,257.89l-0.93,-1.2l-1.24,-2.56l-0.56,-2.9l1.45,-1.92l3.07,-0.46l2.26,0.35l2.03,0.98l0.38,-0.11l1.0,-1.55l1.86,0.79l0.52,1.51l-0.28,2.82l-4.05,1.88l-0.12,0.45l0.79,1.1l-2.2,0.17l-2.08,0.98l-1.89,-0.33Z",
            "name": "Cambodia"
        },
        "SV": {
            "path": "M197.02,248.89l0.18,-0.05l0.59,0.17l0.55,0.51l0.64,0.35l0.06,0.22l0.37,0.21l1.01,-0.28l0.38,0.13l0.16,0.13l-0.14,0.81l-0.18,0.38l-1.22,-0.03l-0.84,-0.23l-1.11,-0.52l-1.31,-0.15l-0.49,-0.38l0.02,-0.08l0.76,-0.57l0.46,-0.27l0.11,-0.35Z",
            "name": "El Salvador"
        },
        "SK": {
            "path": "M468.01,150.02l0.05,0.07l0.36,0.1l0.85,-0.37l1.12,1.02l0.33,0.05l1.38,-0.65l1.07,0.3l0.16,0.0l1.69,-0.43l1.95,1.02l-0.51,0.64l-0.45,1.2l-0.32,0.2l-2.55,-0.93l-0.17,-0.01l-0.82,0.2l-0.17,0.11l-0.53,0.68l-0.94,0.32l-0.14,-0.11l-0.29,-0.04l-1.18,0.48l-0.95,0.09l-0.26,0.21l-0.15,0.47l-1.84,0.34l-0.82,-0.31l-1.14,-0.73l-0.2,-0.89l0.42,-0.84l0.91,0.05l0.12,-0.02l0.86,-0.33l0.18,-0.21l0.03,-0.13l0.32,-0.1l0.2,-0.22l0.12,-0.55l0.39,-0.1l0.18,-0.13l0.3,-0.45l0.43,-0.0Z",
            "name": "Slovakia"
        },
        "KR": {
            "path": "M737.31,185.72l0.84,0.08l0.27,-0.12l0.89,-1.2l1.63,-0.13l1.1,-0.2l0.21,-0.16l0.12,-0.24l1.86,2.95l0.59,1.79l0.02,3.17l-0.84,1.38l-2.23,0.55l-1.95,1.14l-1.91,0.21l-0.22,-1.21l0.45,-2.07l-0.01,-0.17l-0.99,-2.67l1.54,-0.4l0.17,-0.46l-1.55,-2.24Z",
            "name": "South Korea"
        },
        "SI": {
            "path": "M455.77,159.59l1.79,0.21l0.18,-0.04l1.2,-0.68l2.12,-0.08l0.21,-0.1l0.38,-0.42l0.1,0.01l0.28,0.62l-1.71,0.71l-0.18,0.22l-0.21,1.1l-0.71,0.26l-0.2,0.28l0.01,0.55l-0.59,-0.04l-0.79,-0.47l-0.38,0.06l-0.36,0.41l-0.84,-0.05l0.05,-0.15l-0.56,-1.24l0.21,-1.17Z",
            "name": "Slovenia"
        },
        "KP": {
            "path": "M747.76,172.02l-0.23,-0.04l-0.26,0.08l-1.09,1.02l-0.78,1.06l-0.06,0.19l0.09,1.95l-1.12,0.57l-0.53,0.58l-0.88,0.82l-1.69,0.51l-1.09,0.79l-0.12,0.22l-0.07,1.17l-0.22,0.25l0.09,0.47l0.96,0.46l1.22,1.1l-0.19,0.37l-0.91,0.16l-1.75,0.14l-0.22,0.12l-0.87,1.18l-0.95,-0.09l-0.3,0.18l-0.97,-0.44l-0.39,0.13l-0.25,0.44l-0.29,0.09l-0.03,-0.2l-0.18,-0.23l-0.62,-0.25l-0.43,-0.29l0.52,-0.97l0.52,-0.3l0.13,-0.38l-0.18,-0.42l0.59,-1.47l0.01,-0.21l-0.16,-0.48l-0.22,-0.2l-1.41,-0.31l-0.82,-0.55l1.74,-1.62l2.73,-1.58l1.62,-1.96l0.96,0.76l0.17,0.06l2.17,0.11l0.31,-0.37l-0.32,-1.31l3.61,-1.21l0.16,-0.13l0.79,-1.34l1.25,1.38Z",
            "name": "North Korea"
        },
        "SO": {
            "path": "M543.8,256.48l0.61,-0.05l1.14,-0.37l1.31,-0.25l0.12,-0.05l1.11,-0.81l0.57,-0.0l0.03,0.39l-0.23,1.49l0.01,1.25l-0.52,0.92l-0.7,2.71l-1.19,2.79l-1.54,3.2l-2.13,3.66l-2.12,2.79l-2.92,3.39l-2.47,2.0l-3.76,2.5l-2.33,1.9l-2.77,3.06l-0.61,1.35l-0.28,0.29l-1.22,-1.69l-0.03,-8.92l2.12,-2.76l0.59,-0.68l1.47,-0.04l0.18,-0.06l2.15,-1.71l3.16,-0.11l0.21,-0.09l7.08,-7.55l1.76,-2.12l1.14,-1.57l0.06,-0.18l0.01,-4.67Z",
            "name": "Somalia"
        },
        "SN": {
            "path": "M379.28,250.34l-0.95,-1.82l-0.09,-0.1l-0.83,-0.6l0.62,-0.28l0.13,-0.11l1.21,-1.8l0.6,-1.31l0.71,-0.68l1.09,0.2l0.18,-0.02l1.17,-0.53l1.25,-0.03l1.17,0.73l1.59,0.65l1.47,1.83l1.59,1.7l0.12,1.56l0.49,1.46l0.1,0.14l0.85,0.65l0.18,0.82l-0.08,0.57l-0.13,0.05l-1.29,-0.19l-0.29,0.13l-0.11,0.16l-0.35,0.04l-1.83,-0.61l-5.84,-0.13l-0.12,0.02l-0.6,0.26l-0.87,-0.06l-1.01,0.32l-0.26,-1.26l1.9,0.04l0.16,-0.04l0.54,-0.32l0.37,-0.02l0.15,-0.05l0.78,-0.5l0.92,0.46l0.12,0.03l1.09,0.04l0.15,-0.03l1.08,-0.57l0.11,-0.44l-0.51,-0.74l-0.39,-0.1l-0.76,0.39l-0.62,-0.01l-0.92,-0.58l-0.18,-0.05l-0.79,0.04l-0.2,0.09l-0.48,0.51l-2.41,0.06Z",
            "name": "Senegal"
        },
        "SL": {
            "path": "M392.19,267.53l-0.44,-0.12l-1.73,-0.97l-1.24,-1.28l-0.4,-0.84l-0.27,-1.65l1.21,-1.0l0.09,-0.12l0.27,-0.66l0.32,-0.41l0.56,-0.05l0.16,-0.07l0.5,-0.41l1.75,0.0l0.59,0.77l0.49,0.96l-0.07,0.64l0.04,0.19l0.36,0.58l-0.03,0.84l0.24,0.2l-0.64,0.65l-1.13,1.37l-0.06,0.14l-0.12,0.66l-0.43,0.58Z",
            "name": "Sierra Leone"
        },
        "SB": {
            "path": "M826.74,311.51l0.23,0.29l-0.95,-0.01l-0.39,-0.63l0.65,0.27l0.45,0.09ZM825.01,308.52l-1.18,-1.39l-0.37,-1.06l0.24,0.0l0.82,1.84l0.49,0.6ZM823.21,309.42l-0.44,0.03l-1.43,-0.24l-0.32,-0.24l0.08,-0.5l1.29,0.31l0.72,0.47l0.11,0.18ZM817.9,303.81l2.59,1.44l0.3,0.41l-1.21,-0.66l-1.34,-0.89l-0.34,-0.3ZM813.77,302.4l0.48,0.34l0.1,0.08l-0.33,-0.17l-0.25,-0.25Z",
            "name": "Solomon Islands"
        },
        "SA": {
            "path": "M528.24,243.1l-0.2,-0.69l-0.07,-0.12l-0.69,-0.71l-0.18,-0.94l-0.12,-0.19l-1.24,-0.89l-1.28,-2.09l-0.7,-2.08l-0.07,-0.11l-1.73,-1.79l-0.11,-0.07l-1.03,-0.39l-1.57,-2.36l-0.27,-1.72l0.1,-1.53l-0.03,-0.15l-1.44,-2.93l-1.25,-1.13l-1.34,-0.56l-0.72,-1.33l0.11,-0.49l-0.02,-0.2l-0.7,-1.38l-0.08,-0.1l-0.68,-0.56l-0.97,-1.98l-2.8,-4.03l-0.25,-0.13l-0.85,0.01l0.29,-1.11l0.12,-0.97l0.23,-0.81l2.52,0.39l0.23,-0.06l1.08,-0.84l0.6,-0.95l1.78,-0.35l0.22,-0.17l0.37,-0.83l0.74,-0.42l0.08,-0.46l-2.17,-2.4l4.55,-1.26l0.12,-0.06l0.36,-0.32l2.83,0.71l3.67,1.91l7.04,5.5l0.17,0.06l4.64,0.22l2.06,0.24l0.55,1.15l0.28,0.17l1.56,-0.06l0.9,2.15l0.14,0.15l1.14,0.57l0.39,0.85l0.11,0.13l1.59,1.06l0.12,0.91l-0.23,0.83l0.01,0.18l0.32,0.9l0.07,0.11l0.68,0.7l0.33,0.86l0.37,0.65l0.09,0.1l0.76,0.53l0.25,0.04l0.45,-0.12l0.35,0.75l0.1,0.63l0.96,2.68l0.23,0.19l7.53,1.33l0.27,-0.09l0.24,-0.26l0.87,1.41l-1.58,4.96l-7.34,2.54l-7.28,1.02l-2.34,1.17l-0.12,0.1l-1.74,2.63l-0.86,0.32l-0.49,-0.68l-0.28,-0.12l-0.92,0.12l-2.32,-0.25l-0.41,-0.23l-0.15,-0.04l-2.89,0.06l-0.63,0.2l-0.91,-0.59l-0.43,0.11l-0.66,1.27l-0.03,0.21l0.21,0.89l-0.6,0.45Z",
            "name": "Saudi Arabia"
        },
        "SE": {
            "path": "M476.42,90.44l-0.15,0.1l-2.43,2.86l-0.07,0.24l0.36,2.31l-3.84,3.1l-4.83,3.38l-0.11,0.15l-1.82,5.45l0.03,0.26l1.78,2.68l2.27,1.99l-2.13,3.88l-2.49,0.82l-0.2,0.24l-0.95,6.05l-1.32,3.09l-2.82,-0.32l-0.3,0.16l-1.34,2.64l-2.48,0.14l-0.76,-3.15l-2.09,-4.04l-1.85,-5.01l1.03,-1.98l2.06,-2.53l0.06,-0.13l0.83,-4.45l-0.06,-0.25l-1.54,-1.86l-0.15,-5.0l1.52,-3.48l2.28,0.06l0.27,-0.16l0.87,-1.59l-0.01,-0.31l-0.8,-1.21l3.79,-5.63l4.07,-7.54l2.23,0.01l0.29,-0.22l0.59,-2.15l4.46,0.66l0.34,-0.26l0.34,-2.64l1.21,-0.14l3.24,2.08l3.78,2.85l0.06,6.37l0.03,0.14l0.67,1.29l-3.95,1.07Z",
            "name": "Sweden"
        },
        "SD": {
            "path": "M505.98,259.75l-0.31,-0.9l-0.1,-0.14l-1.2,-0.93l-0.27,-1.66l0.29,-1.83l-0.25,-0.34l-1.16,-0.17l-0.33,0.21l-0.11,0.37l-1.3,0.11l-0.21,0.49l0.55,0.68l0.18,1.29l-1.31,1.33l-1.18,1.72l-1.04,0.21l-2.0,-1.4l-0.32,-0.02l-0.95,0.52l-0.14,0.16l-0.21,0.6l-1.16,0.43l-0.19,0.23l-0.04,0.27l-2.08,0.0l-0.25,-0.39l-0.24,-0.13l-1.81,-0.09l-0.14,0.03l-0.8,0.38l-0.49,-0.16l-1.22,-1.39l-0.42,-0.67l-0.31,-0.14l-1.81,0.35l-0.2,0.14l-0.72,1.24l-0.61,2.14l-0.73,0.4l-0.62,0.22l-0.83,-0.68l-0.12,-0.6l0.38,-0.97l0.01,-1.14l-0.08,-0.2l-1.39,-1.53l-0.25,-0.97l0.03,-0.57l-0.11,-0.25l-0.81,-0.66l-0.03,-1.34l-0.04,-0.14l-0.52,-0.98l-0.31,-0.15l-0.42,0.07l0.12,-0.44l0.63,-1.03l0.03,-0.23l-0.24,-0.88l0.69,-0.66l0.02,-0.41l-0.4,-0.46l0.58,-1.39l1.04,-1.71l1.97,0.16l0.32,-0.3l-0.12,-10.24l0.02,-0.8l2.59,-0.01l0.3,-0.3l0.0,-4.92l29.19,0.0l0.68,2.17l-0.4,0.35l-0.1,0.27l0.36,2.69l0.93,3.15l0.12,0.16l2.05,1.4l-0.99,1.15l-1.75,0.4l-0.15,0.08l-0.79,0.79l-0.08,0.17l-0.24,1.69l-1.07,3.75l-0.0,0.16l0.25,0.96l-0.38,2.1l-0.98,2.41l-1.52,1.3l-1.07,1.94l-0.25,0.99l-1.08,0.64l-0.13,0.18l-0.46,1.65Z",
            "name": "Sudan"
        },
        "DO": {
            "path": "M241.7,234.97l0.15,-0.22l1.73,0.01l1.43,0.64l0.15,0.03l0.45,-0.04l0.36,0.74l0.28,0.17l1.02,-0.04l-0.04,0.43l0.27,0.33l1.03,0.09l0.91,0.7l-0.57,0.64l-0.99,-0.47l-0.16,-0.03l-1.11,0.11l-0.79,-0.12l-0.26,0.09l-0.38,0.4l-0.66,0.11l-0.28,-0.45l-0.38,-0.12l-0.83,0.37l-0.14,0.13l-0.85,1.49l-0.27,-0.17l-0.1,-0.58l0.05,-0.67l-0.07,-0.21l-0.44,-0.53l0.35,-0.25l0.12,-0.19l0.19,-1.0l-0.2,-1.4Z",
            "name": "Dominican Republic"
        },
        "DJ": {
            "path": "M528.78,253.36l0.34,0.45l-0.06,0.76l-1.26,0.54l-0.05,0.53l0.82,0.53l-0.57,0.83l-0.3,-0.25l-0.27,-0.05l-0.56,0.17l-1.07,-0.03l-0.04,-0.56l-0.16,-0.56l0.76,-1.07l0.76,-0.97l0.89,0.18l0.25,-0.06l0.51,-0.42Z",
            "name": "Djibouti"
        },
        "DK": {
            "path": "M452.4,129.07l-1.27,2.39l-2.25,-1.69l-0.26,-1.08l3.15,-1.0l0.63,1.39ZM447.87,126.25l-0.35,0.76l-0.47,-0.24l-0.38,0.09l-1.8,2.53l-0.03,0.29l0.56,1.4l-1.22,0.4l-1.68,-0.41l-0.92,-1.76l-0.07,-3.47l0.38,-0.88l0.62,-0.93l2.07,-0.21l0.19,-0.1l0.84,-0.95l1.5,-0.76l-0.06,1.26l-0.7,1.1l-0.03,0.25l0.3,1.0l0.18,0.19l1.06,0.42Z",
            "name": "Denmark"
        },
        "DE": {
            "path": "M445.51,131.69l0.03,0.94l0.21,0.28l2.32,0.74l-0.02,1.0l0.37,0.3l2.55,-0.65l1.36,-0.89l2.63,1.27l1.09,1.01l0.51,1.51l-0.6,0.78l-0.0,0.36l0.88,1.17l0.58,1.68l-0.18,1.08l0.03,0.18l0.87,1.81l-0.66,0.2l-0.55,-0.32l-0.36,0.05l-0.58,0.58l-1.73,0.62l-0.99,0.84l-1.77,0.7l-0.16,0.4l0.42,0.94l0.26,1.34l0.14,0.2l1.25,0.76l1.22,1.2l-0.71,1.2l-0.81,0.37l-0.17,0.32l0.34,1.99l-0.04,0.09l-0.47,-0.39l-0.17,-0.07l-1.2,-0.1l-1.85,0.57l-2.15,-0.13l-0.29,0.18l-0.21,0.5l-0.96,-0.67l-0.24,-0.05l-0.67,0.16l-2.6,-0.94l-0.34,0.1l-0.42,0.57l-1.64,-0.02l0.26,-1.88l1.24,-2.15l-0.21,-0.45l-3.54,-0.58l-0.98,-0.71l0.12,-1.26l-0.05,-0.2l-0.44,-0.64l0.27,-2.18l-0.38,-3.14l1.17,-0.0l0.27,-0.17l0.63,-1.26l0.65,-3.17l-0.02,-0.17l-0.41,-1.0l0.32,-0.47l1.77,-0.16l0.37,0.6l0.47,0.06l1.7,-1.69l0.06,-0.33l-0.55,-1.24l-0.09,-1.51l1.5,0.36l0.16,-0.01l1.22,-0.4Z",
            "name": "Germany"
        },
        "YE": {
            "path": "M553.53,242.65l-1.51,0.58l-0.17,0.16l-0.48,1.14l-0.07,0.79l-2.31,1.0l-3.98,1.19l-2.28,1.8l-0.97,0.12l-0.7,-0.14l-0.23,0.05l-1.42,1.03l-1.51,0.47l-2.07,0.13l-0.68,0.15l-0.17,0.1l-0.49,0.6l-0.57,0.16l-0.18,0.13l-0.3,0.49l-1.06,-0.05l-0.13,0.02l-0.73,0.32l-1.48,-0.11l-0.55,-1.26l0.07,-1.32l-0.04,-0.16l-0.39,-0.72l-0.48,-1.85l-0.52,-0.79l0.08,-0.02l0.22,-0.36l-0.23,-1.05l0.24,-0.39l0.04,-0.19l-0.09,-0.95l0.96,-0.72l0.11,-0.31l-0.23,-0.98l0.46,-0.88l0.75,0.49l0.26,0.03l0.63,-0.22l2.76,-0.06l0.5,0.25l2.42,0.26l0.85,-0.11l0.52,0.71l0.35,0.1l1.17,-0.43l0.15,-0.12l1.75,-2.64l2.22,-1.11l6.95,-0.96l2.55,5.58Z",
            "name": "Yemen"
        },
        "AT": {
            "path": "M463.17,154.15l-0.14,0.99l-1.15,0.01l-0.24,0.47l0.39,0.56l-0.75,1.84l-0.36,0.4l-2.06,0.07l-0.14,0.04l-1.18,0.67l-1.96,-0.23l-3.43,-0.78l-0.5,-0.97l-0.33,-0.16l-2.47,0.55l-0.2,0.16l-0.18,0.37l-1.27,-0.38l-1.28,-0.09l-0.81,-0.41l0.25,-0.51l0.03,-0.18l-0.05,-0.28l0.35,-0.08l1.16,0.81l0.45,-0.13l0.27,-0.64l2.0,0.12l1.84,-0.57l1.05,0.09l0.71,0.59l0.47,-0.11l0.23,-0.54l0.02,-0.17l-0.32,-1.85l0.69,-0.31l0.13,-0.12l0.73,-1.23l1.61,0.89l0.35,-0.04l1.35,-1.27l0.7,-0.19l1.84,0.93l0.18,0.03l1.08,-0.15l0.81,0.43l-0.07,0.15l-0.02,0.2l0.24,1.06Z",
            "name": "Austria"
        },
        "DZ": {
            "path": "M450.58,224.94l-8.31,4.86l-7.23,5.12l-3.46,1.13l-2.42,0.22l-0.02,-1.33l-0.2,-0.28l-1.15,-0.42l-1.45,-0.69l-0.55,-1.13l-0.1,-0.12l-8.45,-5.72l-17.72,-12.17l0.03,-0.38l-0.02,-3.21l3.84,-1.91l2.46,-0.41l2.1,-0.75l0.14,-0.11l0.9,-1.3l2.84,-1.06l0.19,-0.27l0.09,-1.81l1.21,-0.2l0.15,-0.07l1.06,-0.96l3.19,-0.46l0.23,-0.18l0.46,-1.08l-0.08,-0.34l-0.6,-0.54l-0.83,-2.85l-0.18,-1.8l-0.82,-1.57l2.13,-1.37l2.65,-0.49l0.13,-0.05l1.55,-1.15l2.34,-0.85l4.2,-0.51l4.07,-0.23l1.21,0.41l0.23,-0.01l2.3,-1.11l2.52,-0.02l0.94,0.62l0.2,0.05l1.25,-0.13l-0.36,1.03l-0.01,0.14l0.39,2.66l-0.56,2.2l-1.49,1.52l-0.08,0.24l0.22,2.12l0.11,0.2l1.94,1.58l0.02,0.54l0.12,0.23l1.45,1.06l1.04,4.85l0.81,2.42l0.13,1.19l-0.43,2.17l0.17,1.28l-0.31,1.53l0.2,1.56l-0.9,1.02l-0.01,0.38l1.43,1.88l0.09,1.06l0.04,0.13l0.89,1.48l0.37,0.12l1.03,-0.43l1.79,1.12l0.89,1.34Z",
            "name": "Algeria"
        },
        "US": {
            "path": "M892.64,99.05l1.16,0.57l0.21,0.02l1.45,-0.38l1.92,0.99l2.17,0.47l-1.65,0.72l-1.75,-0.79l-0.93,-0.7l-0.21,-0.06l-2.11,0.22l-0.35,-0.2l0.09,-0.87ZM183.29,150.37l0.39,1.54l0.12,0.17l0.78,0.55l0.14,0.05l1.74,0.2l2.52,0.5l2.4,0.98l0.17,0.02l1.96,-0.4l3.01,0.81l0.91,-0.02l2.22,-0.88l4.67,2.33l3.86,2.01l0.21,0.71l0.15,0.18l0.33,0.17l-0.02,0.05l0.23,0.43l0.67,0.1l0.21,-0.05l0.1,-0.07l0.05,0.29l0.09,0.16l0.5,0.5l0.21,0.09l0.56,0.0l0.13,0.13l-0.2,0.36l0.12,0.41l2.49,1.39l0.99,5.24l-0.69,1.68l-1.16,1.64l-0.6,1.18l-0.06,0.31l0.04,0.22l0.28,0.43l0.11,0.1l0.85,0.47l0.15,0.04l0.63,0.0l0.14,-0.04l2.87,-1.58l2.6,-0.49l3.28,-1.5l0.17,-0.23l0.04,-0.43l-0.23,-0.93l-0.24,-0.39l0.74,-0.32l4.7,-0.01l0.25,-0.13l0.77,-1.15l2.9,-2.41l1.04,-0.52l8.35,-0.02l0.28,-0.21l0.2,-0.6l0.7,-0.14l1.06,-0.48l0.13,-0.11l0.92,-1.49l0.75,-2.39l1.67,-2.08l0.59,0.6l0.3,0.07l1.52,-0.49l0.88,0.72l-0.0,4.14l0.08,0.2l1.6,1.72l0.31,0.72l-2.42,1.35l-2.55,1.05l-2.64,0.9l-0.14,0.11l-1.33,1.81l-0.44,0.7l-0.05,0.15l-0.03,1.6l0.03,0.14l0.83,1.59l0.24,0.16l0.78,0.06l-1.15,0.33l-1.25,-0.04l-1.83,0.52l-2.51,0.29l-2.17,0.88l-0.17,0.36l0.33,0.22l3.55,-0.54l0.15,0.11l-2.87,0.73l-1.19,0.0l-0.16,-0.33l-0.36,0.06l-0.76,0.82l0.17,0.5l0.42,0.08l-0.45,1.75l-1.4,1.74l-0.04,-0.17l-0.21,-0.22l-0.48,-0.13l-0.77,-0.69l-0.36,-0.03l-0.12,0.34l0.52,1.58l0.09,0.14l0.52,0.43l0.03,0.87l-0.74,1.05l-0.39,0.63l0.05,-0.12l-0.08,-0.34l-1.19,-1.03l-0.28,-2.31l-0.26,-0.26l-0.32,0.19l-0.48,1.27l-0.01,0.19l0.39,1.33l-1.14,-0.31l-0.36,0.18l0.14,0.38l1.57,0.85l0.1,2.58l0.22,0.28l0.55,0.15l0.21,0.81l0.33,2.72l-1.46,1.94l-2.5,0.81l-0.12,0.07l-1.58,1.58l-1.15,0.17l-0.15,0.06l-1.27,1.03l-0.09,0.13l-0.32,0.85l-2.71,1.79l-1.45,1.37l-1.18,1.64l-0.05,0.12l-0.39,1.96l0.0,0.13l0.44,1.91l0.85,2.37l1.1,1.91l0.03,1.2l1.16,3.07l-0.08,1.74l-0.1,0.99l-0.57,1.48l-0.54,0.24l-0.97,-0.26l-0.34,-1.02l-0.12,-0.16l-0.89,-0.58l-2.44,-4.28l-0.34,-0.94l0.49,-1.71l-0.02,-0.21l-0.7,-1.5l-2.0,-2.35l-0.11,-0.08l-0.98,-0.42l-0.25,0.01l-2.42,1.19l-0.26,-0.08l-1.26,-1.29l-1.57,-0.68l-0.16,-0.02l-2.79,0.34l-2.18,-0.3l-1.98,0.19l-1.12,0.45l-0.14,0.44l0.4,0.65l-0.04,1.02l0.09,0.22l0.29,0.3l-0.06,0.05l-0.77,-0.33l-0.26,0.01l-0.87,0.48l-1.64,-0.08l-1.79,-1.39l-0.23,-0.06l-2.11,0.33l-1.75,-0.61l-0.14,-0.01l-1.61,0.2l-2.11,0.64l-0.11,0.06l-2.25,1.99l-2.53,1.21l-1.43,1.38l-0.58,1.22l-0.03,0.12l-0.03,1.86l0.13,1.32l0.3,0.62l-0.46,0.04l-1.71,-0.57l-1.85,-0.79l-0.63,-1.14l-0.54,-1.85l-0.07,-0.12l-1.45,-1.51l-0.86,-1.58l-1.26,-1.87l-0.09,-0.09l-1.76,-1.09l-0.17,-0.04l-2.05,0.05l-0.23,0.12l-1.44,1.97l-1.84,-0.72l-1.19,-0.76l-0.6,-1.45l-0.9,-1.52l-1.49,-1.21l-1.27,-0.87l-0.89,-0.96l-0.22,-0.1l-4.34,-0.0l-0.3,0.3l-0.0,0.84l-6.62,0.02l-5.66,-1.93l-3.48,-1.24l0.11,-0.25l-0.3,-0.42l-3.18,0.3l-2.6,0.2l-0.35,-1.19l-0.08,-0.13l-1.62,-1.61l-0.13,-0.08l-1.02,-0.29l-0.22,-0.66l-0.25,-0.2l-1.31,-0.13l-0.82,-0.7l-0.16,-0.07l-2.25,-0.27l-0.48,-0.34l-0.28,-1.44l-0.07,-0.14l-2.41,-2.84l-2.03,-3.89l0.08,-0.58l-0.1,-0.27l-1.08,-0.94l-1.87,-2.36l-0.33,-2.31l-0.07,-0.15l-1.24,-1.5l0.52,-2.4l-0.09,-2.57l-0.78,-2.3l0.96,-2.83l0.61,-5.66l-0.46,-4.26l-0.79,-2.71l-0.68,-1.4l0.13,-0.26l3.24,0.97l1.28,2.88l0.52,0.06l0.62,-0.84l0.06,-0.22l-0.4,-2.61l-0.74,-2.29l68.9,-0.0l0.3,-0.3l0.01,-0.95l0.32,-0.01ZM32.5,67.43l1.75,1.99l0.41,0.04l1.02,-0.81l3.79,0.25l-0.1,0.72l0.24,0.34l3.83,0.77l2.6,-0.44l5.21,1.41l4.84,0.43l1.9,0.57l0.15,0.01l3.25,-0.71l3.72,1.32l2.52,0.58l-0.03,38.14l0.29,0.3l2.41,0.11l2.34,1.0l1.7,1.59l2.22,2.42l0.42,0.03l2.41,-2.04l2.25,-1.08l1.23,1.76l1.71,1.53l2.24,1.62l1.54,2.56l2.56,4.09l0.11,0.11l4.1,2.17l0.06,1.93l-1.12,1.35l-1.22,-1.14l-2.08,-1.05l-0.68,-2.94l-0.09,-0.16l-3.18,-2.84l-1.32,-3.35l-0.25,-0.19l-2.43,-0.24l-3.93,-0.09l-2.85,-1.02l-5.24,-3.85l-6.77,-2.04l-3.52,0.3l-4.84,-1.7l-2.96,-1.6l-0.23,-0.02l-2.78,0.8l-0.21,0.35l0.46,2.31l-1.11,0.19l-2.9,0.78l-2.24,1.26l-2.42,0.68l-0.29,-1.79l1.07,-3.49l2.54,-1.11l0.12,-0.45l-0.69,-0.96l-0.41,-0.07l-3.19,2.12l-1.76,2.54l-3.57,2.62l-0.03,0.46l1.63,1.59l-2.14,2.38l-2.64,1.49l-2.49,1.09l-0.16,0.17l-0.58,1.48l-3.8,1.79l-0.14,0.14l-0.75,1.57l-2.75,1.41l-1.62,-0.25l-0.16,0.02l-2.35,0.98l-2.54,1.19l-2.06,1.15l-4.05,0.93l-0.1,-0.15l2.45,-1.45l2.49,-1.1l2.61,-1.88l3.03,-0.39l0.19,-0.1l1.2,-1.41l3.43,-2.11l0.61,-0.75l1.81,-1.24l0.13,-0.2l0.42,-2.7l1.24,-2.12l-0.03,-0.35l-0.34,-0.09l-2.73,1.05l-0.67,-0.53l-0.39,0.02l-1.13,1.11l-1.43,-1.62l-0.49,0.06l-0.41,0.8l-0.67,-1.31l-0.42,-0.12l-2.43,1.43l-1.18,-0.0l-0.18,-1.86l0.43,-1.3l-0.09,-0.33l-1.61,-1.33l-0.26,-0.06l-3.11,0.68l-2.0,-1.66l-1.61,-0.85l-0.01,-1.97l-0.11,-0.23l-1.76,-1.48l0.86,-1.96l2.01,-2.13l0.88,-1.94l1.79,-0.25l1.65,0.6l0.31,-0.06l1.91,-1.8l1.67,0.31l0.22,-0.04l1.91,-1.23l0.13,-0.33l-0.47,-1.82l-0.15,-0.19l-1.0,-0.52l1.51,-1.27l0.09,-0.34l-0.29,-0.19l-1.62,0.06l-2.66,0.88l-0.13,0.09l-0.62,0.72l-1.77,-0.8l-0.16,-0.02l-3.48,0.44l-3.5,-0.92l-1.06,-1.61l-2.78,-2.09l3.07,-1.51l5.52,-2.01l1.65,0.0l-0.28,1.73l0.31,0.35l5.29,-0.16l0.23,-0.49l-2.03,-2.59l-0.1,-0.08l-3.03,-1.58l-1.79,-2.12l-2.4,-1.83l-3.18,-1.27l1.13,-1.84l4.28,-0.14l0.15,-0.05l3.16,-2.0l0.13,-0.17l0.57,-2.07l2.43,-2.02l2.42,-0.52l4.67,-1.98l2.22,0.29l0.2,-0.04l3.74,-2.37l3.57,0.91ZM37.66,123.49l-2.31,1.26l-1.04,-0.75l-0.31,-1.35l2.06,-1.16l1.24,-0.51l1.48,0.22l0.76,0.81l-1.89,1.49ZM30.89,233.84l1.2,0.57l0.35,0.3l0.48,0.69l-1.6,0.86l-0.3,0.31l-0.24,-0.14l0.05,-0.54l-0.02,-0.15l-0.36,-0.83l0.05,-0.12l0.39,-0.38l0.07,-0.31l-0.09,-0.27ZM29.06,231.89l0.5,0.14l0.31,0.19l-0.46,0.1l-0.34,-0.43ZM25.02,230.13l0.2,-0.11l0.4,0.47l-0.43,-0.05l-0.17,-0.31ZM21.29,228.68l0.1,-0.07l0.22,0.02l0.02,0.21l-0.02,0.02l-0.32,-0.18ZM6.0,113.33l-1.19,0.45l-1.5,-0.64l-0.94,-0.63l1.76,-0.46l1.71,0.29l0.16,0.98Z",
            "name": "United States of America"
        },
        "LV": {
            "path": "M473.99,127.16l0.07,-2.15l1.15,-2.11l2.05,-1.07l1.84,2.48l0.25,0.12l2.01,-0.07l0.29,-0.25l0.45,-2.58l1.85,-0.56l0.98,0.4l2.13,1.33l0.16,0.05l1.97,0.01l1.02,0.7l0.21,1.67l0.71,1.84l-2.44,1.23l-1.36,0.53l-2.28,-1.62l-0.12,-0.05l-1.18,-0.2l-0.28,-0.6l-0.31,-0.17l-2.43,0.35l-4.17,-0.23l-0.12,0.02l-2.45,0.93Z",
            "name": "Latvia"
        },
        "UY": {
            "path": "M276.9,363.17l1.3,-0.23l2.4,2.04l0.22,0.07l0.82,-0.07l2.48,1.7l1.93,1.5l1.28,1.67l-0.95,1.14l-0.04,0.31l0.63,1.45l-0.96,1.57l-2.65,1.47l-1.73,-0.53l-0.15,-0.01l-1.25,0.28l-2.22,-1.16l-0.16,-0.03l-1.56,0.08l-1.33,-1.36l0.17,-1.58l0.48,-0.55l0.07,-0.2l-0.02,-2.74l0.66,-2.8l0.57,-2.02Z",
            "name": "Uruguay"
        },
        "LB": {
            "path": "M510.44,198.11l-0.48,0.03l-0.26,0.17l-0.15,0.32l-0.21,-0.0l0.72,-1.85l1.19,-1.9l0.74,0.09l0.27,0.73l-1.19,0.93l-0.09,0.13l-0.54,1.36Z",
            "name": "Lebanon"
        },
        "LA": {
            "path": "M684.87,248.8l0.61,-0.86l0.05,-0.16l0.11,-2.17l-0.08,-0.22l-1.96,-2.16l-0.15,-2.44l-0.08,-0.18l-1.9,-2.1l-0.19,-0.1l-1.89,-0.18l-0.29,0.15l-0.42,0.76l-1.21,0.06l-0.67,-0.41l-0.31,-0.0l-2.2,1.29l-0.05,-1.77l0.61,-2.7l-0.27,-0.37l-1.44,-0.1l-0.12,-1.31l-0.12,-0.21l-0.87,-0.65l0.38,-0.68l1.76,-1.41l0.08,0.22l0.27,0.2l1.33,0.07l0.31,-0.34l-0.35,-2.75l0.85,-0.25l1.32,1.88l1.11,2.36l0.27,0.17l2.89,0.02l0.78,1.82l-1.32,0.56l-0.12,0.09l-0.72,0.93l0.1,0.45l2.93,1.52l3.62,5.27l1.88,1.78l0.58,1.67l-0.38,2.11l-1.87,-0.79l-0.37,0.11l-0.99,1.54l-1.51,-0.73Z",
            "name": "Laos"
        },
        "TW": {
            "path": "M725.6,222.5l-1.5,4.22l-0.82,1.65l-1.01,-1.7l-0.26,-1.8l1.4,-2.48l1.8,-1.81l0.76,0.53l-0.38,1.39Z",
            "name": "Taiwan"
        },
        "TT": {
            "path": "M266.35,259.46l0.41,-0.39l0.09,-0.23l-0.04,-0.75l1.14,-0.26l0.2,0.03l-0.07,1.37l-1.73,0.23Z",
            "name": "Trinidad and Tobago"
        },
        "TR": {
            "path": "M513.25,175.38l3.63,1.17l0.14,0.01l2.88,-0.45l2.11,0.26l0.18,-0.03l2.9,-1.53l2.51,-0.13l2.25,1.37l0.36,0.88l-0.23,1.36l0.19,0.33l1.81,0.72l0.61,0.53l-1.31,0.64l-0.16,0.34l0.76,3.24l-0.44,0.8l0.01,0.3l1.19,2.02l-0.71,0.29l-0.74,-0.62l-0.15,-0.07l-2.91,-0.37l-0.15,0.02l-1.04,0.43l-2.78,0.44l-1.44,-0.03l-2.83,1.06l-1.95,0.01l-1.28,-0.52l-0.2,-0.01l-2.62,0.76l-0.7,-0.48l-0.47,0.22l-0.13,1.49l-1.01,0.94l-0.58,-0.82l0.79,-0.9l0.04,-0.34l-0.31,-0.15l-1.46,0.23l-2.03,-0.64l-0.3,0.07l-1.65,1.58l-3.58,0.3l-1.94,-1.47l-0.17,-0.06l-2.7,-0.1l-0.28,0.17l-0.51,1.06l-1.47,0.29l-2.32,-1.46l-0.17,-0.05l-2.55,0.05l-1.4,-2.7l-1.72,-1.54l1.11,-2.06l-0.07,-0.37l-1.35,-1.19l2.47,-2.51l3.74,-0.11l0.26,-0.17l0.96,-2.07l4.56,0.38l0.19,-0.05l2.97,-1.92l2.84,-0.83l4.03,-0.06l4.31,2.08ZM488.85,176.8l-1.81,1.38l-0.57,-1.01l0.02,-0.36l0.45,-0.25l0.13,-0.15l0.78,-1.87l-0.11,-0.37l-0.72,-0.47l1.91,-0.71l1.89,0.35l0.25,0.97l0.17,0.2l1.87,0.83l-0.19,0.31l-2.82,0.16l-0.18,0.07l-1.06,0.91Z",
            "name": "Turkey"
        },
        "LK": {
            "path": "M625.44,266.07l-0.35,2.4l-0.9,0.61l-1.91,0.5l-1.04,-1.75l-0.43,-3.5l1.0,-3.6l1.34,1.09l1.13,1.72l1.16,2.52Z",
            "name": "Sri Lanka"
        },
        "TN": {
            "path": "M444.91,206.18l-0.99,-4.57l-0.12,-0.18l-1.43,-1.04l-0.02,-0.53l-0.11,-0.22l-1.95,-1.59l-0.19,-1.85l1.44,-1.47l0.08,-0.14l0.59,-2.34l-0.38,-2.77l0.44,-1.28l2.52,-1.08l1.41,0.28l-0.06,1.2l0.43,0.28l1.81,-0.9l0.02,0.06l-1.14,1.28l-0.08,0.2l-0.02,1.32l0.11,0.24l0.74,0.6l-0.29,2.18l-1.56,1.35l-0.09,0.32l0.48,1.54l0.28,0.21l1.11,0.04l0.55,1.17l0.15,0.14l0.76,0.35l-0.12,1.79l-1.1,0.72l-0.8,0.91l-1.68,1.04l-0.13,0.32l0.25,1.08l-0.18,0.96l-0.74,0.39Z",
            "name": "Tunisia"
        },
        "TL": {
            "path": "M734.21,307.22l0.17,-0.34l1.99,-0.52l1.72,-0.08l0.78,-0.3l0.29,0.1l-0.43,0.32l-2.57,1.09l-1.71,0.59l-0.05,-0.49l-0.19,-0.36Z",
            "name": "East Timor"
        },
        "TM": {
            "path": "M553.16,173.51l-0.12,1.0l-0.26,-0.65l0.38,-0.34ZM553.54,173.16l0.13,-0.12l0.43,-0.09l-0.56,0.21ZM555.68,172.6l0.65,-0.14l1.53,0.76l1.71,2.29l0.27,0.12l1.27,-0.14l2.81,-0.04l0.29,-0.38l-0.35,-1.27l1.98,-0.97l1.96,-1.63l3.05,1.44l0.25,2.23l0.14,0.22l0.96,0.61l0.18,0.05l2.61,-0.13l0.68,0.44l1.2,2.97l0.1,0.13l2.85,2.03l1.67,1.41l2.66,1.45l3.13,1.17l-0.05,1.23l-0.36,-0.04l-1.12,-0.73l-0.44,0.14l-0.34,0.89l-1.96,0.52l-0.22,0.23l-0.47,2.17l-1.26,0.78l-1.93,0.42l-0.21,0.18l-0.46,1.14l-1.64,0.33l-2.3,-0.97l-0.2,-2.23l-0.28,-0.27l-1.76,-0.1l-2.78,-2.48l-0.15,-0.07l-1.95,-0.31l-2.82,-1.48l-1.78,-0.27l-0.18,0.03l-1.03,0.51l-1.6,-0.08l-0.22,0.08l-1.72,1.6l-1.83,0.46l-0.39,-1.7l0.36,-3.0l-0.16,-0.3l-1.73,-0.88l0.57,-1.77l-0.25,-0.39l-1.33,-0.14l0.41,-1.85l2.05,0.63l0.21,-0.01l2.2,-0.95l0.09,-0.49l-1.78,-1.75l-0.69,-1.66l-0.07,-0.03Z",
            "name": "Turkmenistan"
        },
        "TJ": {
            "path": "M597.99,178.71l-0.23,0.23l-2.57,-0.47l-0.35,0.25l-0.24,1.7l0.32,0.34l2.66,-0.22l3.15,0.95l4.47,-0.42l0.58,2.45l0.39,0.21l0.71,-0.25l1.22,0.53l-0.06,1.01l0.29,1.28l-2.19,-0.0l-1.71,-0.21l-0.23,0.07l-1.51,1.25l-1.05,0.27l-0.77,0.51l-0.71,-0.67l0.22,-2.28l-0.24,-0.32l-0.43,-0.08l0.17,-0.57l-0.16,-0.36l-1.36,-0.66l-0.34,0.05l-1.08,1.01l-0.09,0.15l-0.25,1.09l-0.24,0.26l-1.36,-0.05l-0.27,0.14l-0.65,1.06l-0.58,-0.39l-0.3,-0.02l-1.68,0.86l-0.36,-0.16l1.28,-2.65l0.02,-0.2l-0.54,-2.17l-0.18,-0.21l-1.53,-0.58l0.41,-0.82l1.89,0.13l0.26,-0.12l1.19,-1.63l0.77,-1.82l2.66,-0.55l-0.33,0.87l0.01,0.23l0.36,0.82l0.3,0.18l0.23,-0.02Z",
            "name": "Tajikistan"
        },
        "LS": {
            "path": "M493.32,359.69l0.69,0.65l-0.65,1.12l-0.38,0.8l-1.27,0.39l-0.18,0.15l-0.4,0.77l-0.59,0.18l-1.59,-1.78l1.16,-1.5l1.3,-1.02l0.97,-0.46l0.94,0.72Z",
            "name": "Lesotho"
        },
        "TH": {
            "path": "M677.42,253.68l-1.7,-0.88l-0.14,-0.03l-1.77,0.04l0.3,-1.64l-0.3,-0.35l-2.21,0.01l-0.3,0.28l-0.2,2.76l-2.15,5.9l-0.02,0.13l0.17,1.83l0.28,0.27l1.45,0.07l0.93,2.1l0.44,2.15l0.08,0.15l1.4,1.44l0.16,0.09l1.43,0.27l1.04,1.05l-0.58,0.73l-1.24,0.22l-0.15,-0.99l-0.15,-0.22l-2.04,-1.1l-0.36,0.06l-0.23,0.23l-0.72,-0.71l-0.41,-1.18l-0.06,-0.11l-1.33,-1.42l-1.22,-1.2l-0.5,0.13l-0.15,0.54l-0.14,-0.41l0.26,-1.48l0.73,-2.38l1.2,-2.57l1.37,-2.35l0.02,-0.27l-0.95,-2.26l0.03,-1.19l-0.29,-1.42l-0.06,-0.13l-1.65,-2.0l-0.46,-0.99l0.62,-0.34l0.13,-0.15l0.92,-2.23l-0.02,-0.27l-1.05,-1.74l-1.57,-1.86l-1.04,-1.96l0.76,-0.34l0.16,-0.16l1.07,-2.63l1.58,-0.1l0.16,-0.06l1.43,-1.11l1.24,-0.52l0.84,0.62l0.13,1.43l0.28,0.27l1.34,0.09l-0.54,2.39l0.05,2.39l0.45,0.25l2.48,-1.45l0.6,0.36l0.17,0.04l1.47,-0.07l0.25,-0.15l0.41,-0.73l1.58,0.15l1.76,1.93l0.15,2.44l0.08,0.18l1.94,2.15l-0.1,1.96l-0.66,0.93l-2.25,-0.34l-3.24,0.49l-0.19,0.12l-1.6,2.12l-0.06,0.24l0.48,2.46Z",
            "name": "Thailand"
        },
        "TF": {
            "path": "M593.76,417.73l1.38,0.84l2.15,0.37l0.04,0.31l-0.59,1.24l-3.36,0.19l-0.05,-1.38l0.43,-1.56Z",
            "name": "French Southern and Antarctic Lands"
        },
        "TG": {
            "path": "M425.23,269.29l-1.49,0.4l-0.43,-0.68l-0.64,-1.54l-0.18,-1.16l0.54,-2.21l-0.04,-0.24l-0.59,-0.86l-0.23,-1.9l0.0,-1.82l-0.07,-0.19l-0.95,-1.19l0.1,-0.41l1.58,0.04l-0.23,0.97l0.08,0.28l1.55,1.55l0.09,1.13l0.08,0.19l0.42,0.43l-0.11,5.66l0.52,1.53Z",
            "name": "Togo"
        },
        "TD": {
            "path": "M457.57,252.46l0.23,-1.08l-0.28,-0.36l-1.32,-0.05l0.0,-1.35l-0.1,-0.22l-0.9,-0.82l0.99,-3.1l3.12,-2.37l0.12,-0.23l0.13,-3.33l0.95,-5.2l0.53,-1.09l-0.07,-0.36l-0.94,-0.81l-0.03,-0.7l-0.12,-0.23l-0.84,-0.61l-0.57,-3.76l2.21,-1.26l19.67,9.88l0.12,9.74l-1.83,-0.15l-0.28,0.14l-1.14,1.89l-0.68,1.62l0.05,0.31l0.33,0.38l-0.61,0.58l-0.08,0.3l0.25,0.93l-0.58,0.95l-0.29,1.01l0.34,0.37l0.67,-0.11l0.39,0.73l0.03,1.4l0.11,0.23l0.8,0.65l-0.01,0.24l-1.38,0.37l-0.11,0.06l-1.27,1.03l-1.83,2.76l-2.21,1.1l-2.34,-0.15l-0.82,0.25l-0.2,0.37l0.19,0.68l-1.16,0.79l-1.01,0.94l-2.92,0.89l-0.5,-0.46l-0.17,-0.08l-0.41,-0.05l-0.28,0.12l-0.38,0.54l-1.36,0.12l0.1,-0.18l0.01,-0.27l-0.78,-1.72l-0.35,-1.03l-0.17,-0.18l-1.03,-0.41l-1.29,-1.28l0.36,-0.78l0.9,0.2l0.14,-0.0l0.67,-0.17l1.36,0.02l0.26,-0.45l-1.32,-2.22l0.09,-1.64l-0.17,-1.68l-0.04,-0.13l-0.93,-1.53Z",
            "name": "Chad"
        },
        "LY": {
            "path": "M457.99,226.38l-1.57,0.87l-1.25,-1.28l-0.13,-0.08l-3.85,-1.11l-1.04,-1.57l-0.09,-0.09l-1.98,-1.23l-0.27,-0.02l-0.93,0.39l-0.72,-1.2l-0.09,-1.07l-0.06,-0.16l-1.33,-1.75l0.83,-0.94l0.07,-0.24l-0.21,-1.64l0.31,-1.43l-0.17,-1.29l0.43,-2.26l-0.15,-1.33l-0.73,-2.18l0.99,-0.52l0.16,-0.21l0.22,-1.16l-0.22,-1.06l1.54,-0.95l0.81,-0.92l1.19,-0.78l0.14,-0.23l0.12,-1.76l2.57,0.84l0.16,0.01l0.99,-0.23l2.01,0.45l3.19,1.2l1.12,2.36l0.2,0.16l2.24,0.53l3.5,1.14l2.65,1.36l0.29,-0.01l1.22,-0.71l1.27,-1.32l0.07,-0.29l-0.55,-2.0l0.69,-1.19l1.7,-1.23l1.61,-0.35l3.2,0.54l0.78,1.14l0.24,0.13l0.85,0.01l0.84,0.47l2.35,0.31l0.42,0.63l-0.79,1.16l-0.04,0.26l0.35,1.08l-0.61,1.6l-0.0,0.2l0.73,2.16l0.0,24.24l-2.58,0.01l-0.3,0.29l-0.02,0.62l-19.55,-9.83l-0.28,0.01l-2.53,1.44Z",
            "name": "Libya"
        },
        "AE": {
            "path": "M550.59,223.8l0.12,0.08l1.92,-0.41l3.54,0.15l0.23,-0.09l1.71,-1.79l1.86,-1.7l1.31,-1.36l0.26,0.5l0.28,1.72l-0.93,0.01l-0.3,0.26l-0.21,1.73l0.11,0.27l0.08,0.06l-0.7,0.32l-0.17,0.27l-0.01,0.99l-0.68,1.02l-0.05,0.15l-0.06,0.96l-0.32,0.36l-7.19,-1.27l-0.79,-2.22Z",
            "name": "United Arab Emirates"
        },
        "VE": {
            "path": "M240.66,256.5l0.65,0.91l-0.03,1.13l-1.05,1.39l-0.03,0.31l0.95,2.0l0.32,0.17l1.08,-0.16l0.24,-0.21l0.56,-1.83l-0.06,-0.29l-0.71,-0.81l-0.1,-1.58l2.9,-0.96l0.19,-0.37l-0.29,-1.02l0.45,-0.41l0.72,1.43l0.26,0.16l1.65,0.04l1.46,1.27l0.08,0.72l0.3,0.27l2.28,0.02l2.55,-0.25l1.34,1.06l0.14,0.06l1.92,0.31l0.2,-0.03l1.4,-0.79l0.15,-0.25l0.02,-0.36l2.82,-0.14l1.17,-0.01l-0.41,0.14l-0.14,0.46l0.86,1.19l0.22,0.12l1.93,0.18l1.73,1.13l0.37,1.9l0.31,0.24l1.21,-0.05l0.52,0.32l-1.63,1.21l-0.11,0.17l-0.22,0.92l0.07,0.27l0.63,0.69l-0.31,0.24l-1.48,0.39l-0.22,0.3l0.04,1.03l-0.59,0.6l-0.01,0.41l1.67,1.87l0.23,0.48l-0.72,0.76l-2.71,0.91l-1.78,0.39l-0.13,0.06l-0.6,0.49l-1.84,-0.58l-1.89,-0.33l-0.18,0.03l-0.47,0.23l-0.02,0.53l0.96,0.56l-0.08,1.58l0.35,1.58l0.26,0.23l1.91,0.19l0.02,0.07l-1.54,0.62l-0.18,0.2l-0.25,0.92l-0.88,0.35l-1.85,0.58l-0.16,0.13l-0.4,0.64l-1.66,0.14l-1.22,-1.18l-0.79,-2.52l-0.67,-0.88l-0.66,-0.43l0.99,-0.98l0.09,-0.26l-0.09,-0.56l-0.08,-0.16l-0.66,-0.69l-0.47,-1.54l0.18,-1.67l0.55,-0.85l0.45,-1.35l-0.15,-0.36l-0.89,-0.43l-0.19,-0.02l-1.39,0.28l-1.76,-0.13l-0.92,0.23l-1.64,-2.01l-0.17,-0.1l-1.54,-0.33l-3.05,0.23l-0.5,-0.73l-0.15,-0.12l-0.45,-0.15l-0.05,-0.28l0.28,-0.86l0.01,-0.15l-0.2,-1.01l-0.08,-0.15l-0.5,-0.5l-0.3,-1.08l-0.25,-0.22l-0.89,-0.12l0.54,-1.18l0.29,-1.73l0.66,-0.85l0.94,-0.7l0.09,-0.11l0.3,-0.6Z",
            "name": "Venezuela"
        },
        "AF": {
            "path": "M574.42,192.1l2.24,0.95l0.18,0.02l1.89,-0.38l0.22,-0.18l0.46,-1.14l1.82,-0.4l1.5,-0.91l0.14,-0.19l0.46,-2.12l1.93,-0.51l0.2,-0.18l0.26,-0.68l0.87,0.57l0.13,0.05l0.79,0.09l1.35,0.02l1.83,0.59l0.75,0.34l0.26,-0.01l1.66,-0.85l0.7,0.46l0.42,-0.09l0.72,-1.17l1.32,0.05l0.23,-0.1l0.39,-0.43l0.07,-0.14l0.24,-1.08l0.86,-0.81l0.94,0.46l-0.2,0.64l0.23,0.38l0.49,0.09l-0.21,2.15l0.09,0.25l0.99,0.94l0.38,0.03l0.83,-0.57l1.06,-0.27l0.12,-0.06l1.46,-1.21l1.63,0.2l2.4,0.0l0.17,0.32l-1.12,0.25l-1.23,0.52l-2.86,0.33l-2.69,0.6l-0.13,0.06l-1.46,1.25l-0.07,0.36l0.58,1.18l0.25,1.21l-1.13,1.08l-0.09,0.25l0.09,0.98l-0.53,0.79l-2.22,-0.08l-0.28,0.44l0.83,1.57l-1.3,0.58l-0.13,0.11l-1.06,1.69l-0.05,0.18l0.13,1.51l-0.73,0.58l-0.78,-0.22l-0.14,-0.01l-1.91,0.36l-0.23,0.19l-0.2,0.57l-1.65,-0.0l-0.22,0.1l-1.4,1.56l-0.08,0.19l-0.08,2.13l-2.99,1.05l-1.67,-0.23l-0.27,0.1l-0.39,0.46l-1.43,-0.31l-2.43,0.4l-3.69,-1.23l1.96,-2.15l0.08,-0.24l-0.21,-1.78l-0.23,-0.26l-1.69,-0.42l-0.19,-1.62l-0.77,-2.08l0.98,-1.41l-0.14,-0.45l-0.82,-0.31l0.6,-1.79l0.93,-3.21Z",
            "name": "Afghanistan"
        },
        "IQ": {
            "path": "M534.42,190.89l0.13,0.14l1.5,0.78l0.15,1.34l-1.13,0.87l-0.11,0.16l-0.58,2.2l0.04,0.24l1.73,2.67l0.12,0.1l2.99,1.49l1.18,1.94l-0.39,1.89l0.29,0.36l0.5,-0.0l0.02,1.17l0.08,0.2l0.83,0.86l-2.36,-0.29l-0.29,0.13l-1.74,2.49l-4.4,-0.21l-7.03,-5.49l-3.73,-1.94l-2.92,-0.74l-0.89,-3.0l5.33,-2.81l0.15,-0.19l0.95,-3.43l-0.2,-2.0l1.19,-0.61l0.11,-0.09l1.23,-1.73l0.92,-0.38l2.75,0.35l0.81,0.68l0.31,0.05l0.94,-0.38l1.5,3.17Z",
            "name": "Iraq"
        },
        "IS": {
            "path": "M384.26,87.96l-0.51,2.35l0.08,0.28l2.61,2.58l-2.99,2.83l-7.16,2.72l-2.08,0.7l-9.51,-1.71l1.89,-1.36l-0.07,-0.53l-4.4,-1.59l3.33,-0.59l0.25,-0.32l-0.11,-1.2l-0.25,-0.27l-4.82,-0.88l1.38,-2.2l3.54,-0.57l3.8,2.74l0.33,0.01l3.68,-2.18l3.02,1.12l0.25,-0.02l4.01,-2.18l3.72,0.27Z",
            "name": "Iceland"
        },
        "IR": {
            "path": "M556.2,187.5l2.05,-0.52l0.13,-0.07l1.69,-1.57l1.55,0.08l0.15,-0.03l1.02,-0.5l1.64,0.25l2.82,1.48l1.91,0.3l2.8,2.49l0.18,0.08l1.61,0.09l0.19,2.09l-1.0,3.47l-0.69,2.04l0.18,0.38l0.73,0.28l-0.85,1.22l-0.04,0.28l0.81,2.19l0.19,1.72l0.23,0.26l1.69,0.42l0.17,1.43l-2.18,2.39l-0.01,0.4l1.22,1.42l1.0,1.62l0.12,0.11l2.23,1.11l0.06,2.2l0.2,0.27l1.03,0.38l0.14,0.83l-3.38,1.3l-0.18,0.19l-0.87,2.85l-4.44,-0.76l-2.75,-0.62l-2.64,-0.32l-1.01,-3.11l-0.17,-0.19l-1.2,-0.48l-0.18,-0.01l-1.99,0.51l-2.42,1.25l-2.89,-0.84l-2.48,-2.03l-2.41,-0.79l-1.61,-2.47l-1.84,-3.63l-0.36,-0.15l-1.22,0.4l-1.48,-0.84l-0.37,0.06l-0.72,0.82l-1.08,-1.12l-0.02,-1.35l-0.3,-0.29l-0.43,0.0l0.34,-1.64l-0.04,-0.22l-1.29,-2.11l-0.12,-0.11l-3.0,-1.49l-1.62,-2.49l0.52,-1.98l1.18,-0.92l0.11,-0.27l-0.19,-1.66l-0.16,-0.23l-1.55,-0.81l-1.58,-3.33l-1.3,-2.2l0.41,-0.75l0.03,-0.21l-0.73,-3.12l1.2,-0.59l0.35,0.9l1.26,1.35l0.15,0.09l1.81,0.39l0.91,-0.09l0.15,-0.06l2.9,-2.13l0.7,-0.16l0.48,0.56l-0.75,1.26l0.05,0.37l1.56,1.53l0.28,0.08l0.37,-0.09l0.7,1.89l0.21,0.19l2.31,0.59l1.69,1.4l0.15,0.07l3.66,0.49l3.91,-0.76l0.23,-0.19l0.19,-0.52Z",
            "name": "Iran"
        },
        "AM": {
            "path": "M530.51,176.08l2.91,-0.39l0.41,0.63l0.11,0.1l0.66,0.36l-0.32,0.47l0.07,0.41l1.1,0.84l-0.53,0.7l0.06,0.42l1.06,0.8l1.01,0.44l0.04,1.56l-0.44,0.04l-0.88,-1.46l0.01,-0.37l-0.3,-0.31l-0.98,0.01l-0.65,-0.69l-0.26,-0.09l-0.38,0.06l-0.97,-0.82l-1.64,-0.65l0.2,-1.2l-0.02,-0.16l-0.28,-0.69Z",
            "name": "Armenia"
        },
        "IT": {
            "path": "M451.68,158.58l0.2,0.16l3.3,0.75l-0.22,1.26l0.02,0.18l0.35,0.78l-1.4,-0.32l-0.21,0.03l-2.04,1.1l-0.16,0.29l0.13,1.47l-0.29,0.82l0.02,0.24l0.82,1.57l0.1,0.11l2.28,1.5l1.29,2.53l2.79,2.43l0.2,0.07l1.83,-0.02l0.31,0.34l-0.46,0.39l0.06,0.5l4.06,1.97l2.06,1.49l0.17,0.36l-0.24,0.53l-1.08,-1.07l-0.15,-0.08l-2.18,-0.49l-0.33,0.15l-1.05,1.91l0.11,0.4l1.63,0.98l-0.22,1.12l-0.84,0.14l-0.22,0.15l-1.27,2.38l-0.54,0.12l0.01,-0.47l0.48,-1.46l0.5,-0.58l0.03,-0.35l-0.97,-1.69l-0.76,-1.48l-0.17,-0.15l-0.94,-0.33l-0.68,-1.18l-0.16,-0.13l-1.53,-0.52l-1.03,-1.14l-0.19,-0.1l-1.78,-0.19l-1.88,-1.3l-2.27,-1.94l-1.64,-1.68l-0.76,-2.94l-0.21,-0.21l-1.22,-0.35l-2.01,-1.0l-0.24,-0.01l-1.15,0.42l-0.11,0.07l-1.38,1.36l-0.5,0.11l0.19,-0.87l-0.21,-0.35l-1.19,-0.34l-0.56,-2.06l0.76,-0.82l0.03,-0.36l-0.68,-1.08l0.04,-0.31l0.68,0.42l0.19,0.04l1.21,-0.15l0.14,-0.06l1.18,-0.89l0.25,0.29l0.25,0.1l1.19,-0.1l0.25,-0.18l0.45,-1.04l1.61,0.34l0.19,-0.02l1.1,-0.53l0.17,-0.22l0.15,-0.95l1.19,0.35l0.35,-0.16l0.23,-0.47l2.11,-0.47l0.45,0.89ZM459.35,184.63l-0.71,1.81l0.0,0.23l0.33,0.79l-0.37,1.03l-1.6,-0.91l-1.33,-0.34l-3.24,-1.36l0.23,-0.99l2.73,0.24l3.95,-0.5ZM443.95,175.91l1.26,1.77l-0.31,3.47l-0.82,-0.13l-0.26,0.08l-0.83,0.79l-0.64,-0.52l-0.1,-3.42l-0.44,-1.34l0.91,0.1l0.21,-0.06l1.01,-0.74Z",
            "name": "Italy"
        },
        "VN": {
            "path": "M690.8,230.21l-2.86,1.93l-2.09,2.46l-0.06,0.11l-0.55,1.8l0.04,0.26l4.26,6.1l2.31,1.63l1.46,1.97l1.12,4.62l-0.32,4.3l-1.97,1.57l-2.85,1.62l-2.09,2.14l-2.83,2.13l-0.67,-1.19l0.65,-1.58l-0.09,-0.35l-1.47,-1.14l1.67,-0.79l2.57,-0.18l0.22,-0.47l-0.89,-1.24l3.88,-1.8l0.17,-0.24l0.31,-3.05l-0.01,-0.13l-0.56,-1.63l0.44,-2.48l-0.01,-0.15l-0.63,-1.81l-0.08,-0.12l-1.87,-1.77l-3.64,-5.3l-0.11,-0.1l-2.68,-1.39l0.45,-0.59l1.53,-0.65l0.16,-0.39l-0.97,-2.27l-0.27,-0.18l-2.89,-0.02l-1.04,-2.21l-1.28,-1.83l0.96,-0.46l1.97,0.01l2.43,-0.3l0.13,-0.05l1.95,-1.29l1.04,0.85l0.13,0.06l1.98,0.42l-0.32,1.21l0.09,0.3l1.19,1.07l0.12,0.07l1.88,0.51Z",
            "name": "Vietnam"
        },
        "AR": {
            "path": "M258.11,341.34l1.4,1.81l0.51,-0.06l0.89,-1.94l2.51,0.1l0.36,0.49l4.6,4.31l0.15,0.08l1.99,0.39l3.01,1.93l2.5,1.01l0.28,0.91l-2.4,3.97l0.17,0.44l2.57,0.74l2.81,0.41l2.09,-0.44l0.14,-0.07l2.27,-2.06l0.09,-0.17l0.38,-2.2l0.88,-0.36l1.05,1.29l-0.04,1.88l-1.98,1.4l-1.72,1.13l-2.84,2.65l-3.34,3.73l-0.07,0.12l-0.63,2.22l-0.67,2.85l0.02,2.73l-0.47,0.54l-0.07,0.17l-0.36,3.28l0.12,0.27l3.03,2.32l-0.31,1.78l0.11,0.29l1.44,1.15l-0.11,1.17l-2.32,3.57l-3.59,1.51l-4.95,0.6l-2.72,-0.29l-0.32,0.38l0.5,1.67l-0.49,2.13l0.01,0.16l0.4,1.29l-1.27,0.88l-2.41,0.39l-2.33,-1.05l-0.31,0.04l-0.97,0.78l-0.11,0.27l0.35,2.98l0.16,0.23l1.69,0.91l0.31,-0.02l1.08,-0.75l0.46,0.96l-2.1,0.88l-2.01,1.89l-0.09,0.18l-0.36,3.05l-0.51,1.42l-2.16,0.01l-0.19,0.07l-1.96,1.59l-0.1,0.15l-0.72,2.34l0.08,0.31l2.46,2.31l0.13,0.07l2.09,0.56l-0.74,2.45l-2.86,1.75l-0.12,0.14l-1.59,3.71l-2.2,1.24l-0.1,0.09l-1.03,1.54l-0.04,0.23l0.81,3.45l0.06,0.13l1.13,1.32l-2.59,-0.57l-5.89,-0.44l-0.92,-1.73l0.05,-2.4l-0.34,-0.3l-1.49,0.19l-0.72,-0.98l-0.2,-3.21l1.79,-1.33l0.1,-0.13l0.79,-2.04l0.02,-0.16l-0.27,-1.52l1.31,-2.69l0.91,-4.15l-0.23,-1.72l0.91,-0.49l0.15,-0.33l-0.27,-1.16l-0.15,-0.2l-0.87,-0.46l0.65,-1.01l-0.04,-0.37l-1.06,-1.09l-0.54,-3.2l0.83,-0.51l0.14,-0.29l-0.42,-3.6l0.58,-2.98l0.64,-2.5l1.41,-1.0l0.12,-0.32l-0.75,-2.8l-0.01,-2.48l1.81,-1.78l0.09,-0.22l-0.06,-2.3l1.39,-2.69l0.03,-0.14l0.01,-2.58l-0.11,-0.24l-0.57,-0.45l-1.1,-4.59l1.49,-2.73l0.04,-0.17l-0.23,-2.59l0.86,-2.38l1.6,-2.48l1.74,-1.65l0.04,-0.39l-0.64,-0.89l0.42,-0.7l0.04,-0.16l-0.08,-4.26l2.55,-1.23l0.16,-0.18l0.86,-2.75l-0.01,-0.22l-0.22,-0.48l1.84,-2.1l3.0,0.59ZM256.77,438.98l-2.1,0.15l-1.18,-1.14l-0.19,-0.08l-1.53,-0.09l-2.38,-0.0l-0.0,-6.28l0.4,0.65l1.25,2.55l0.11,0.12l3.26,2.07l3.19,0.8l-0.82,1.26Z",
            "name": "Argentina"
        },
        "AU": {
            "path": "M705.55,353.06l0.09,0.09l0.37,0.05l0.13,-0.35l-0.57,-1.69l0.48,0.3l0.71,0.99l0.34,0.11l0.2,-0.29l-0.04,-1.37l-0.04,-0.14l-1.22,-2.07l-0.28,-0.9l-0.51,-0.69l0.24,-1.33l0.52,-0.7l0.34,-1.32l0.01,-0.13l-0.25,-1.44l0.51,-0.94l0.1,1.03l0.23,0.26l0.32,-0.14l1.01,-1.72l1.94,-0.84l1.27,-1.14l1.84,-0.92l1.0,-0.18l0.6,0.28l0.26,-0.0l1.94,-0.96l1.48,-0.28l0.19,-0.13l0.32,-0.49l0.51,-0.18l1.42,0.05l2.63,-0.76l0.11,-0.06l1.36,-1.15l0.08,-0.1l0.61,-1.33l1.42,-1.27l0.1,-0.19l0.11,-1.03l0.06,-1.32l1.39,-1.74l0.85,1.79l0.4,0.14l1.07,-0.51l0.11,-0.45l-0.77,-1.05l0.53,-0.84l0.86,0.43l0.43,-0.22l0.29,-1.85l1.29,-1.19l0.6,-0.98l1.16,-0.4l0.2,-0.27l0.02,-0.34l0.74,0.2l0.38,-0.27l0.03,-0.44l1.98,-0.61l1.7,1.08l1.36,1.48l0.22,0.1l1.55,0.02l1.57,0.24l0.33,-0.4l-0.48,-1.27l1.09,-1.86l1.06,-0.63l0.1,-0.42l-0.28,-0.46l0.93,-1.24l1.36,-0.8l1.16,0.27l0.14,0.0l2.1,-0.48l0.23,-0.3l-0.05,-1.3l-0.18,-0.26l-1.08,-0.49l0.44,-0.12l1.52,0.58l1.39,1.06l2.11,0.65l0.19,-0.0l0.59,-0.21l1.44,0.72l0.27,0.0l1.37,-0.68l0.84,0.2l0.26,-0.06l0.37,-0.3l0.82,0.89l-0.56,1.14l-0.84,0.91l-0.75,0.07l-0.26,0.38l0.26,0.9l-0.67,1.15l-0.88,1.24l-0.05,0.25l0.18,0.72l0.12,0.17l1.99,1.42l1.96,0.84l1.25,0.86l1.8,1.51l0.19,0.07l0.63,-0.0l1.15,0.58l0.34,0.7l0.17,0.15l2.39,0.88l0.24,-0.02l1.65,-0.88l0.14,-0.16l0.49,-1.37l0.52,-1.19l0.31,-1.39l0.75,-2.02l0.01,-0.19l-0.33,-1.16l0.16,-0.67l0.0,-0.13l-0.28,-1.41l0.3,-1.78l0.42,-0.45l0.05,-0.33l-0.33,-0.73l0.56,-1.25l0.48,-1.39l0.07,-0.69l0.58,-0.59l0.48,0.84l0.17,1.53l0.17,0.24l0.47,0.23l0.09,0.9l0.05,0.14l0.87,1.23l0.17,1.33l-0.09,0.89l0.03,0.15l0.9,2.0l0.43,0.13l1.38,-0.83l0.71,0.92l1.06,0.88l-0.22,0.96l0.0,0.14l0.53,2.2l0.38,1.3l0.15,0.18l0.52,0.26l0.62,2.01l-0.23,1.27l0.02,0.18l0.81,1.76l0.14,0.14l2.69,1.35l3.21,2.21l-0.2,0.4l0.04,0.34l1.39,1.6l0.95,2.78l0.43,0.16l0.79,-0.46l0.85,0.96l0.39,0.05l0.22,-0.15l0.36,2.33l0.09,0.18l1.78,1.63l1.16,1.01l1.9,2.1l0.67,2.05l0.06,1.47l-0.17,1.64l0.03,0.17l1.16,2.22l-0.14,2.28l-0.43,1.24l-0.68,2.44l0.04,1.63l-0.48,1.92l-1.06,2.43l-1.79,1.32l-0.1,0.12l-0.91,2.15l-0.82,1.37l-0.76,2.47l-0.98,1.46l-0.63,2.14l-0.33,2.02l0.1,0.82l-1.21,0.85l-2.71,0.1l-0.13,0.03l-2.31,1.19l-1.21,1.17l-1.34,1.11l-1.89,-1.18l-1.33,-0.46l0.32,-1.24l-0.4,-0.35l-1.46,0.61l-2.06,1.98l-1.99,-0.73l-1.43,-0.46l-1.45,-0.22l-2.32,-0.81l-1.51,-1.67l-0.45,-2.11l-0.6,-1.5l-0.07,-0.11l-1.23,-1.16l-0.16,-0.08l-1.96,-0.28l0.59,-0.99l0.03,-0.24l-0.61,-2.1l-0.54,-0.08l-1.16,1.85l-1.23,0.29l0.73,-0.88l0.06,-0.12l0.37,-1.57l0.93,-1.33l0.05,-0.2l-0.2,-2.07l-0.53,-0.17l-2.01,2.35l-1.52,0.94l-0.12,0.14l-0.82,1.93l-1.5,-0.9l0.07,-1.32l-0.06,-0.2l-1.57,-2.04l-1.15,-0.92l0.3,-0.41l-0.1,-0.44l-3.21,-1.69l-0.13,-0.03l-1.69,-0.08l-2.35,-1.31l-0.16,-0.04l-4.55,0.27l-3.24,0.99l-2.8,0.91l-2.33,-0.18l-0.17,0.03l-2.63,1.41l-2.14,0.64l-0.2,0.19l-0.47,1.42l-0.8,0.99l-1.99,0.06l-1.55,0.24l-2.27,-0.5l-1.79,0.3l-1.71,0.13l-0.19,0.09l-1.38,1.39l-0.58,-0.1l-0.21,0.04l-1.26,0.8l-1.13,0.85l-1.72,-0.1l-1.6,-0.0l-2.58,-1.76l-1.21,-0.49l0.04,-1.19l1.04,-0.32l0.16,-0.12l0.42,-0.64l0.05,-0.19l-0.09,-0.97l0.3,-2.0l-0.28,-1.64l-1.34,-2.84l-0.39,-1.49l0.1,-1.51l-0.04,-0.17l-0.96,-1.72l-0.06,-0.73l-0.09,-0.19l-1.04,-1.01l-0.3,-2.02l-0.05,-0.12l-1.23,-1.83ZM784.95,393.35l2.39,1.01l0.2,0.01l3.26,-0.96l1.19,0.16l0.16,3.19l-0.78,0.95l-0.07,0.16l-0.19,1.83l-0.43,-0.41l-0.44,0.03l-1.61,1.96l-0.4,-0.12l-1.38,-0.09l-1.43,-2.42l-0.37,-2.03l-1.4,-2.53l0.04,-0.94l1.27,0.2Z",
            "name": "Australia"
        },
        "IL": {
            "path": "M509.04,199.22l0.71,0.0l0.27,-0.17l0.15,-0.33l0.19,-0.01l0.02,0.73l-0.27,0.34l0.02,0.08l-0.32,0.62l-0.65,-0.27l-0.41,0.19l-0.52,1.85l0.16,0.35l0.14,0.07l-0.17,0.1l-0.14,0.21l-0.11,0.73l0.39,0.33l0.81,-0.26l0.03,0.64l-0.97,3.43l-1.28,-3.67l0.62,-0.78l-0.03,-0.41l0.58,-1.16l0.5,-2.07l0.27,-0.54Z",
            "name": "Israel"
        },
        "IN": {
            "path": "M615.84,192.58l2.4,2.97l-0.24,2.17l0.05,0.2l0.94,1.35l-0.06,0.97l-1.46,-0.3l-0.35,0.36l0.7,3.06l0.12,0.18l2.46,1.75l3.11,1.72l-1.23,0.96l-0.1,0.13l-0.97,2.55l0.16,0.38l2.41,1.02l2.37,1.33l3.27,1.52l3.43,0.37l1.37,1.3l0.17,0.08l1.92,0.25l3.0,0.62l2.15,-0.04l0.28,-0.22l0.29,-1.06l0.0,-0.13l-0.32,-1.66l0.16,-0.94l1.0,-0.37l0.23,2.28l0.18,0.24l2.28,1.02l0.2,0.02l1.52,-0.41l2.06,0.18l2.08,-0.08l0.29,-0.27l0.18,-1.66l-0.1,-0.26l-0.53,-0.44l1.38,-0.23l0.15,-0.07l2.26,-2.0l2.75,-1.65l1.97,0.63l0.25,-0.03l1.54,-0.99l0.89,1.28l-0.72,0.97l0.2,0.48l2.49,0.37l0.11,0.61l-0.69,0.39l-0.15,0.3l0.15,1.22l-1.36,-0.37l-0.23,0.03l-3.24,1.86l-0.15,0.28l0.07,1.44l-1.33,2.16l-0.04,0.13l-0.12,1.24l-0.98,1.91l-1.72,-0.53l-0.39,0.28l-0.09,2.66l-0.52,0.83l-0.04,0.23l0.21,0.89l-0.71,0.36l-1.21,-3.85l-0.29,-0.21l-0.69,0.01l-0.29,0.23l-0.28,1.17l-0.84,-0.84l0.6,-1.17l0.97,-0.13l0.23,-0.16l1.15,-2.25l-0.18,-0.42l-1.54,-0.47l-2.3,0.04l-2.13,-0.33l-0.19,-1.63l-0.26,-0.26l-1.13,-0.13l-1.93,-1.13l-0.42,0.13l-0.88,1.82l0.08,0.37l1.47,1.15l-1.21,0.77l-0.1,0.1l-0.56,0.97l0.13,0.42l1.31,0.61l-0.36,1.35l0.01,0.2l0.85,1.95l0.37,2.05l-0.26,0.68l-1.55,-0.02l-3.09,0.54l-0.25,0.32l0.13,1.84l-1.21,1.4l-3.64,1.79l-2.79,3.04l-1.86,1.61l-2.48,1.68l-0.13,0.25l-0.0,1.0l-1.07,0.55l-2.21,0.9l-1.13,0.13l-0.25,0.19l-0.75,1.96l-0.02,0.15l0.52,3.31l0.13,2.03l-1.03,2.35l-0.03,0.12l-0.01,4.03l-1.02,0.1l-0.23,0.15l-1.14,1.93l0.04,0.36l0.44,0.48l-1.83,0.57l-0.18,0.15l-0.81,1.65l-0.74,0.53l-2.14,-2.12l-1.14,-3.47l-0.96,-2.57l-0.9,-1.26l-1.3,-2.38l-0.61,-3.14l-0.44,-1.62l-2.29,-3.56l-1.03,-4.94l-0.74,-3.29l0.01,-3.12l-0.49,-2.51l-0.41,-0.22l-3.56,1.53l-1.59,-0.28l-2.96,-2.87l0.94,-0.74l0.06,-0.41l-0.74,-1.03l-2.73,-2.1l1.35,-1.43l5.38,0.01l0.29,-0.36l-0.5,-2.29l-0.09,-0.15l-1.33,-1.28l-0.27,-1.96l-0.12,-0.2l-1.36,-1.0l2.42,-2.48l2.77,0.2l0.24,-0.1l2.62,-2.85l1.59,-2.8l2.41,-2.74l0.07,-0.2l-0.04,-1.82l2.01,-1.51l-0.01,-0.49l-1.95,-1.33l-0.83,-1.81l-0.82,-2.27l0.98,-0.97l3.64,0.66l2.89,-0.42l0.17,-0.08l2.18,-2.15Z",
            "name": "India"
        },
        "TZ": {
            "path": "M505.77,287.58l0.36,0.23l8.95,5.03l0.15,1.3l0.13,0.21l3.4,2.37l-1.07,2.88l-0.02,0.14l0.15,1.42l0.15,0.23l1.47,0.84l0.05,0.42l-0.66,1.44l-0.02,0.18l0.13,0.72l-0.16,1.16l0.03,0.19l0.87,1.57l1.03,2.48l0.12,0.14l0.53,0.32l-1.59,1.18l-2.64,0.95l-1.45,-0.04l-0.2,0.07l-0.81,0.69l-1.64,0.06l-0.68,0.3l-2.9,-0.69l-1.71,0.17l-0.65,-3.18l-0.05,-0.12l-1.35,-1.88l-0.19,-0.12l-2.41,-0.46l-1.38,-0.74l-1.63,-0.44l-0.96,-0.41l-0.95,-0.58l-1.31,-3.09l-1.47,-1.46l-0.45,-1.31l0.24,-1.34l-0.39,-1.99l0.71,-0.08l0.18,-0.09l0.91,-0.91l0.98,-1.31l0.59,-0.5l0.11,-0.24l-0.02,-0.81l-0.08,-0.2l-0.47,-0.5l-0.1,-0.67l0.51,-0.23l0.18,-0.25l0.14,-1.47l-0.05,-0.2l-0.76,-1.09l0.45,-0.15l2.71,0.03l5.01,-0.19Z",
            "name": "Tanzania"
        },
        "AZ": {
            "path": "M539.36,175.66l0.16,0.09l1.11,0.2l0.32,-0.15l0.4,-0.71l1.22,-0.99l1.11,1.33l1.26,2.09l0.22,0.14l1.06,0.13l0.28,0.29l-1.46,0.17l-0.26,0.24l-0.43,2.26l-0.39,0.92l-0.85,0.63l-0.12,0.25l0.06,1.2l-0.22,0.05l-1.28,-1.25l0.74,-1.25l-0.03,-0.35l-0.74,-0.86l-0.3,-0.1l-1.05,0.27l-2.49,1.82l-0.04,-1.46l-0.18,-0.27l-1.09,-0.47l-0.8,-0.6l0.53,-0.7l-0.06,-0.42l-1.11,-0.84l0.34,-0.51l-0.11,-0.43l-0.89,-0.48l-0.33,-0.49l0.25,-0.2l1.78,0.81l1.35,0.18l0.25,-0.09l0.34,-0.35l0.02,-0.39l-1.04,-1.36l0.28,-0.18l0.49,0.07l1.65,1.74ZM533.53,180.16l0.63,0.67l0.22,0.09l0.8,-0.0l0.04,0.31l0.66,1.09l-0.94,-0.21l-1.16,-1.24l-0.25,-0.71Z",
            "name": "Azerbaijan"
        },
        "IE": {
            "path": "M405.17,135.35l0.36,2.16l-1.78,2.84l-4.28,1.91l-3.02,-0.43l1.81,-3.13l0.02,-0.26l-1.23,-3.26l3.24,-2.56l1.54,-1.32l0.37,1.33l-0.49,1.77l0.3,0.38l1.49,-0.05l1.68,0.63Z",
            "name": "Ireland"
        },
        "ID": {
            "path": "M756.56,287.86l0.69,4.02l0.15,0.21l2.59,1.5l0.39,-0.07l2.05,-2.61l2.75,-1.45l2.09,-0.0l2.08,0.85l1.85,0.89l2.52,0.46l0.08,15.44l-1.72,-1.6l-0.15,-0.07l-2.54,-0.51l-0.29,0.1l-0.53,0.62l-2.53,0.06l0.78,-1.51l1.48,-0.66l0.17,-0.34l-0.65,-2.74l-1.23,-2.19l-0.14,-0.13l-4.85,-2.13l-2.09,-0.23l-3.7,-2.28l-0.41,0.1l-0.67,1.11l-0.63,0.14l-0.41,-0.67l-0.01,-1.01l-0.14,-0.25l-1.39,-0.89l2.05,-0.69l1.73,0.05l0.29,-0.39l-0.21,-0.66l-0.29,-0.21l-3.5,-0.0l-0.9,-1.36l-0.19,-0.13l-2.14,-0.44l-0.65,-0.76l2.86,-0.51l1.28,-0.79l3.75,0.96l0.32,0.76ZM758.01,300.37l-0.79,1.04l-0.14,-1.07l0.4,-0.81l0.29,-0.47l0.24,0.31l-0.0,1.0ZM747.45,292.9l0.48,1.02l-1.45,-0.69l-2.09,-0.21l-1.45,0.16l-1.28,-0.07l0.35,-0.81l2.86,-0.1l2.58,0.68ZM741.15,285.69l-0.16,-0.25l-0.72,-3.08l0.47,-1.86l0.35,-0.38l0.1,0.73l0.25,0.26l1.28,0.19l0.18,0.78l-0.11,1.8l-0.96,-0.18l-0.35,0.22l-0.38,1.52l0.05,0.24ZM741.19,285.75l0.76,0.97l-0.11,0.05l-0.65,-1.02ZM739.18,293.52l-0.61,0.54l-1.44,-0.38l-0.25,-0.55l1.93,-0.09l0.36,0.48ZM728.4,295.87l-0.27,-0.07l-2.26,0.89l-0.37,-0.41l0.27,-0.8l-0.09,-0.33l-1.68,-1.37l0.17,-2.29l-0.42,-0.3l-1.67,0.76l-0.17,0.29l0.21,2.92l0.09,3.34l-1.22,0.28l-0.78,-0.54l0.65,-2.1l0.01,-0.14l-0.39,-2.42l-0.29,-0.25l-0.86,-0.02l-0.63,-1.4l0.99,-1.61l0.35,-1.97l1.24,-3.73l0.49,-0.96l1.95,-1.7l1.86,0.69l3.16,0.35l2.92,-0.1l0.17,-0.06l2.24,-1.65l0.11,0.14l-1.8,2.22l-1.72,0.44l-2.41,-0.48l-4.21,0.13l-2.19,0.36l-0.25,0.24l-0.36,1.9l0.08,0.27l2.24,2.23l0.4,0.02l1.29,-1.08l3.19,-0.58l-0.19,0.06l-1.04,1.4l-2.13,0.94l-0.12,0.45l2.26,3.06l-0.37,0.69l0.03,0.32l1.51,1.95ZM728.48,295.97l0.59,0.76l-0.02,1.37l-1.0,0.55l-0.64,-0.58l1.09,-1.84l-0.02,-0.26ZM728.64,286.95l0.79,-0.14l-0.07,0.39l-0.72,-0.24ZM732.38,310.1l-1.89,0.49l-0.06,-0.06l0.17,-0.64l1.0,-1.42l2.14,-0.87l0.1,0.2l0.04,0.58l-1.49,1.72ZM728.26,305.71l-0.17,0.63l-3.53,0.67l-3.02,-0.28l-0.0,-0.42l1.66,-0.44l1.47,0.71l0.16,0.03l1.75,-0.21l1.69,-0.69ZM722.98,310.33l-0.74,0.03l-2.52,-1.35l1.42,-0.3l1.19,0.7l0.72,0.63l-0.06,0.28ZM716.24,305.63l0.66,0.49l0.22,0.06l1.35,-0.18l0.31,0.53l-4.18,0.77l-0.8,-0.01l0.51,-0.86l1.2,-0.02l0.24,-0.12l0.49,-0.65ZM715.84,280.21l0.09,0.34l2.25,1.86l-2.25,0.22l-0.24,0.17l-0.84,1.71l-0.03,0.15l0.1,2.11l-2.27,1.62l-0.13,0.24l-0.06,2.46l-0.74,2.92l-0.02,-0.05l-0.39,-0.16l-2.62,1.04l-0.86,-1.33l-0.23,-0.14l-1.71,-0.14l-1.19,-0.76l-0.25,-0.03l-2.78,0.84l-0.79,-1.05l-0.26,-0.12l-1.61,0.13l-1.8,-0.25l-0.36,-3.13l-0.15,-0.23l-1.18,-0.65l-1.13,-2.02l-0.33,-2.1l0.27,-2.19l1.05,-1.17l0.28,1.12l0.1,0.16l1.71,1.41l0.28,0.05l1.55,-0.49l1.54,0.17l0.23,-0.07l1.4,-1.21l1.05,-0.19l2.3,0.68l0.16,0.0l2.04,-0.53l0.21,-0.19l1.26,-3.41l0.91,-0.82l0.09,-0.14l0.8,-2.64l2.63,0.0l1.71,0.33l-1.19,1.89l0.02,0.34l1.74,2.24l-0.37,1.0ZM692.67,302.0l0.26,0.19l4.8,0.25l0.28,-0.16l0.44,-0.83l4.29,1.12l0.85,1.52l0.23,0.15l3.71,0.45l2.37,1.15l-2.06,0.69l-2.77,-1.0l-2.25,0.07l-2.57,-0.18l-2.31,-0.45l-2.94,-0.97l-1.84,-0.25l-0.13,0.01l-0.97,0.29l-4.34,-0.98l-0.38,-0.94l-0.25,-0.19l-1.76,-0.14l1.31,-1.84l2.81,0.14l1.97,0.96l0.95,0.19l0.28,0.74ZM685.63,299.27l-2.36,0.04l-2.07,-2.05l-3.17,-2.02l-1.06,-1.5l-1.88,-2.02l-1.22,-1.85l-1.9,-3.49l-2.2,-2.11l-0.71,-2.08l-0.94,-1.99l-0.1,-0.12l-2.21,-1.54l-1.35,-2.17l-1.86,-1.39l-2.53,-2.68l-0.14,-0.81l1.22,0.08l3.76,0.47l2.16,2.4l1.94,1.7l1.37,1.04l2.35,2.67l0.22,0.1l2.44,0.04l1.99,1.62l1.42,2.06l0.09,0.09l1.67,1.0l-0.88,1.8l0.11,0.39l1.44,0.87l0.13,0.04l0.68,0.05l0.41,1.62l0.87,1.4l0.22,0.14l1.71,0.21l1.06,1.38l-0.61,3.04l-0.09,3.6Z",
            "name": "Indonesia"
        },
        "UA": {
            "path": "M500.54,141.42l0.9,0.13l0.27,-0.11l0.52,-0.62l0.68,0.13l2.43,-0.3l1.32,1.57l-0.45,0.48l-0.07,0.26l0.21,1.03l0.27,0.24l1.85,0.15l0.76,1.22l-0.05,0.55l0.2,0.31l3.18,1.15l0.18,0.01l1.75,-0.47l1.42,1.41l0.22,0.09l1.42,-0.03l3.44,0.99l0.02,0.65l-0.97,1.62l-0.03,0.24l0.52,1.67l-0.29,0.79l-2.24,0.22l-0.14,0.05l-1.29,0.89l-0.13,0.23l-0.07,1.16l-1.75,0.22l-0.12,0.04l-1.6,0.98l-2.27,0.16l-0.12,0.04l-2.16,1.17l-0.16,0.29l0.15,1.94l0.14,0.23l1.23,0.75l0.18,0.04l2.06,-0.15l-0.22,0.51l-2.67,0.54l-3.27,1.72l-1.0,-0.45l0.45,-1.19l-0.19,-0.39l-2.34,-0.78l0.15,-0.2l2.32,-1.0l0.09,-0.49l-0.73,-0.72l-0.15,-0.08l-3.69,-0.75l-0.14,-0.96l-0.35,-0.25l-2.32,0.39l-0.21,0.15l-0.91,1.7l-1.77,2.1l-0.93,-0.44l-0.24,-0.0l-1.05,0.45l-0.48,-0.25l0.13,-0.07l0.14,-0.15l0.43,-1.04l0.67,-0.97l0.04,-0.26l-0.1,-0.31l0.04,-0.02l0.11,0.19l0.24,0.15l1.48,0.09l0.78,-0.25l0.07,-0.53l-0.27,-0.19l0.09,-0.25l-0.08,-0.33l-0.81,-0.74l-0.34,-1.24l-0.14,-0.18l-0.73,-0.42l0.15,-0.87l-0.11,-0.29l-1.13,-0.86l-0.15,-0.06l-0.97,-0.11l-1.79,-0.97l-0.2,-0.03l-1.66,0.32l-0.13,0.06l-0.52,0.41l-0.95,-0.0l-0.23,0.11l-0.56,0.66l-1.74,0.29l-0.79,0.43l-1.01,-0.68l-0.16,-0.05l-1.57,-0.01l-1.52,-0.35l-0.23,0.04l-0.71,0.45l-0.09,-0.43l-0.13,-0.19l-1.18,-0.74l0.38,-1.02l0.53,-0.64l0.35,0.12l0.37,-0.41l-0.57,-1.29l2.1,-2.5l1.16,-0.36l0.2,-0.2l0.27,-0.92l-0.01,-0.2l-1.1,-2.52l0.79,-0.09l0.13,-0.05l1.3,-0.86l1.83,-0.07l2.48,0.26l2.84,0.8l1.91,0.06l0.88,0.45l0.29,-0.01l0.72,-0.44l0.49,0.58l0.25,0.11l2.2,-0.16l0.94,0.3l0.39,-0.26l0.15,-1.57l0.61,-0.59l2.01,-0.19Z",
            "name": "Ukraine"
        },
        "QA": {
            "path": "M548.47,221.47l-0.15,-1.72l0.59,-1.23l0.38,-0.16l0.54,0.6l0.04,1.4l-0.47,1.37l-0.41,0.11l-0.53,-0.37Z",
            "name": "Qatar"
        },
        "MZ": {
            "path": "M507.71,314.14l1.65,-0.18l2.96,0.7l0.2,-0.02l0.6,-0.29l1.68,-0.06l0.18,-0.07l0.8,-0.69l1.5,0.02l2.74,-0.98l1.74,-1.27l0.25,0.7l-0.1,2.47l0.31,2.27l0.1,3.97l0.42,1.24l-0.7,1.71l-0.94,1.73l-1.52,1.52l-5.06,2.21l-2.88,2.8l-1.01,0.51l-1.72,1.81l-0.99,0.58l-0.15,0.23l-0.21,1.86l0.04,0.19l1.17,1.95l0.47,1.47l0.03,0.74l0.39,0.28l0.05,-0.01l-0.06,2.13l-0.39,1.19l0.1,0.33l0.42,0.32l-0.28,0.83l-0.95,0.86l-2.03,0.88l-3.08,1.49l-1.1,0.99l-0.09,0.28l0.21,1.13l0.21,0.23l0.38,0.11l-0.14,0.89l-1.39,-0.02l-0.17,-0.94l-0.38,-1.23l-0.2,-0.89l0.44,-2.91l-0.01,-0.14l-0.65,-1.88l-1.15,-3.55l2.52,-2.85l0.68,-1.89l0.29,-0.18l0.14,-0.2l0.28,-1.53l-0.03,-0.19l-0.36,-0.7l0.1,-1.83l0.49,-1.84l-0.01,-3.26l-0.14,-0.25l-1.3,-0.83l-1.2,-0.21l-0.47,-0.55l-0.1,-0.08l-1.16,-0.54l-0.13,-0.03l-1.83,0.04l-0.32,-2.25l7.19,-1.99l1.32,1.12l0.29,0.06l0.55,-0.19l0.75,0.49l0.11,0.81l-0.49,1.11l-0.02,0.15l0.19,1.81l0.09,0.18l1.63,1.59l0.48,-0.1l0.72,-1.68l0.99,-0.49l0.17,-0.29l-0.21,-3.29l-0.04,-0.13l-1.11,-1.92l-0.9,-0.82l-0.21,-0.08l-0.62,0.03l-0.63,-2.98l0.61,-1.67Z",
            "name": "Mozambique"
        }
    },
    "height": 440.7063107441331,
    "projection": {
        "type": "mill",
        "centralMeridian": 11.5
    },
    "width": 900.0
});
;

/* Downloadify 0.2 (c) 2009 by Douglas Neiner. Licensed under the MIT license */
/* See http://github.com/dcneiner/Downloadify for license and more info */
(function(){Downloadify=window.Downloadify={queue:{},uid:new Date().getTime(),getTextForSave:function(a){var b=Downloadify.queue[a];if(b)return b.getData();return""},getFileNameForSave:function(a){var b=Downloadify.queue[a];if(b)return b.getFilename();return""},getDataTypeForSave:function(a){var b=Downloadify.queue[a];if(b)return b.getDataType();return""},saveComplete:function(a){var b=Downloadify.queue[a];if(b)b.complete();return true},saveCancel:function(a){var b=Downloadify.queue[a];if(b)b.cancel();return true},saveError:function(a){var b=Downloadify.queue[a];if(b)b.error();return true},addToQueue:function(a){Downloadify.queue[a.queue_name]=a},getUID:function(a){if(a.id=="")a.id='downloadify_'+Downloadify.uid++;return a.id}};Downloadify.create=function(a,b){var c=(typeof(a)=="string"?document.getElementById(a):a);return new Downloadify.Container(c,b)};Downloadify.Container=function(d,e){var f=this;f.el=d;f.enabled=true;f.dataCallback=null;f.filenameCallback=null;f.data=null;f.filename=null;var g=function(){f.options=e;if(!f.options.append)f.el.innerHTML="";f.flashContainer=document.createElement('span');f.el.appendChild(f.flashContainer);f.queue_name=Downloadify.getUID(f.flashContainer);if(typeof(f.options.filename)==="function")f.filenameCallback=f.options.filename;else if(f.options.filename)f.filename=f.options.filename;if(typeof(f.options.data)==="function")f.dataCallback=f.options.data;else if(f.options.data)f.data=f.options.data;var a={queue_name:f.queue_name,width:f.options.width,height:f.options.height};var b={allowScriptAccess:'always'};var c={id:f.flashContainer.id,name:f.flashContainer.id};if(f.options.enabled===false)f.enabled=false;if(f.options.transparent===true)b.wmode="transparent";if(f.options.downloadImage)a.downloadImage=f.options.downloadImage;swfobject.embedSWF(f.options.swf,f.flashContainer.id,f.options.width,f.options.height,"10",null,a,b,c);Downloadify.addToQueue(f)};f.enable=function(){var a=document.getElementById(f.flashContainer.id);a.setEnabled(true);f.enabled=true};f.disable=function(){var a=document.getElementById(f.flashContainer.id);a.setEnabled(false);f.enabled=false};f.getData=function(){if(!f.enabled)return"";if(f.dataCallback)return f.dataCallback();else if(f.data)return f.data;else return""};f.getFilename=function(){if(f.filenameCallback)return f.filenameCallback();else if(f.filename)return f.filename;else return""};f.getDataType=function(){if(f.options.dataType)return f.options.dataType;return"string"};f.complete=function(){if(typeof(f.options.onComplete)==="function")f.options.onComplete()};f.cancel=function(){if(typeof(f.options.onCancel)==="function")f.options.onCancel()};f.error=function(){if(typeof(f.options.onError)==="function")f.options.onError()};g()};Downloadify.defaultOptions={swf:'media/downloadify.swf',downloadImage:'images/download.png',width:100,height:30,transparent:true,append:false,dataType:"string"}})();if(typeof(jQuery)!="undefined"){(function($){$.fn.downloadify=function(b){return this.each(function(){b=$.extend({},Downloadify.defaultOptions,b);var a=Downloadify.create(this,b);$(this).data('Downloadify',a)})}})(jQuery)};if(typeof(MooTools)!='undefined'){Element.implement({downloadify:function(a){a=$merge(Downloadify.defaultOptions,a);return this.store('Downloadify',Downloadify.create(this,a))}})};;

/*	SWFObject v2.2 <http://code.google.com/p/swfobject/> 
	is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/
var swfobject=function(){var D="undefined",r="object",S="Shockwave Flash",W="ShockwaveFlash.ShockwaveFlash",q="application/x-shockwave-flash",R="SWFObjectExprInst",x="onreadystatechange",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,X=!+"\v1",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\s+(\S+\s+\S+$)/,"$1");ag[0]=parseInt(ab.replace(/^(.*)\..*$/,"$1"),10);ag[1]=parseInt(ab.replace(/^.*\.(.*)\s.*$/,"$1"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}}else{if(typeof O.ActiveXObject!=D){try{var ad=new ActiveXObject(W);if(ad){ab=ad.GetVariable("$version");if(ab){X=true;ab=ab.split(" ")[1].split(",");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState=="complete")||(typeof j.readyState==D&&(j.getElementsByTagName("body")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener("DOMContentLoaded",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState=="complete"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll("left")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName("body")[0].appendChild(C("span"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener("load",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener("load",Y,false)}else{if(typeof O.attachEvent!=D){i(O,"onload",Y)}else{if(typeof O.onload=="function"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName("body")[0];var aa=C(r);aa.setAttribute("type",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable("$version");if(ab){ab=ab.split(" ")[1].split(",");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute("width")||"0";ai.height=ae.getAttribute("height")||"0";if(ae.getAttribute("class")){ai.styleclass=ae.getAttribute("class")}if(ae.getAttribute("align")){ai.align=ae.getAttribute("align")}var ah={};var X=ae.getElementsByTagName("param");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute("name").toLowerCase()!="movie"){ah[X[ad].getAttribute("name")]=X[ad].getAttribute("value")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName=="OBJECT"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return !a&&F("6.0.65")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName=="OBJECT"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width="310"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height="137"}j.title=j.title.slice(0,47)+" - Flash Player Installation";var ad=M.ie&&M.win?"ActiveX":"PlugIn",ac="MMredirectURL="+O.location.toString().replace(/&/g,"%26")+"&MMplayerType="+ad+"&MMdoctitle="+j.title;if(typeof ab.flashvars!=D){ab.flashvars+="&"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C("div");X+="SWFObjectNew";Y.setAttribute("id",X);ae.parentNode.insertBefore(Y,ae);ae.style.display="none";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C("div");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display="none";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C("div");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName=="PARAM")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah="";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()=="data"){ag.movie=ai[ae]}else{if(ae.toLowerCase()=="styleclass"){ah+=' class="'+ai[ae]+'"'}else{if(ae.toLowerCase()!="classid"){ah+=" "+ae+'="'+ai[ae]+'"'}}}}}var af="";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name="'+ad+'" value="'+ag[ad]+'" />'}}aa.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+ah+">"+af+"</object>";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute("type",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()=="styleclass"){Z.setAttribute("class",ai[ac])}else{if(ac.toLowerCase()!="classid"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!="movie"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C("param");aa.setAttribute("name",X);aa.setAttribute("value",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName=="OBJECT"){if(M.ie&&M.win){X.style.display="none";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]=="function"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(".");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName("head")[0];if(!aa){return}var X=(ad&&typeof ad=="string")?ad:"screen";if(ab){n=null;G=null}if(!n||G!=X){var Z=C("style");Z.setAttribute("type","text/css");Z.setAttribute("media",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+" {"+Y+"}"))}}}function w(Z,X){if(!m){return}var Y=X?"visible":"hidden";if(J&&c(Z)){c(Z).style.visibility=Y}else{v("#"+Z,"visibility:"+Y)}}function L(Y){var Z=/[\\\"<>\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent("onunload",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+="";ag+="";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+="&"+ai+"="+Z[ai]}else{am.flashvars=ai+"="+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\?/.test(Z)){Z=Z.split("?")[1]}if(aa==null){return L(Z)}var Y=Z.split("&");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf("="))==aa){return L(Y[X].substring((Y[X].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display="block"}}if(E){E(B)}}a=false}}}}();;

/*!
* Bootstrap.js by @fat & @mdo
* Copyright 2012 Twitter, Inc.
* http://www.apache.org/licenses/LICENSE-2.0.txt
*/
!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.closest('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".item.active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition.end&&(this.$element.trigger(e.support.transition.end),this.cycle()),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".item.active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide",{relatedTarget:i[0]});this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n),o=typeof n=="string"?n:s.slide;i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):o?i[o]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),e.support.transition&&this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();n[e(i).hasClass("in")?"addClass":"removeClass"]("collapsed"),e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){i(e(t)).removeClass("open")}function i(t){var n=t.attr("data-target"),r;return n||(n=t.attr("href"),n=n&&/#/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,"")),r=e(n),r.length||(r=t.parent()),r}var t="[data-toggle=dropdown]",n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),s,o;if(n.is(".disabled, :disabled"))return;return s=i(n),o=s.hasClass("open"),r(),o||(s.toggleClass("open"),n.focus()),!1},keydown:function(t){var n,r,s,o,u,a;if(!/(38|40|27)/.test(t.keyCode))return;n=e(this),t.preventDefault(),t.stopPropagation();if(n.is(".disabled, :disabled"))return;o=i(n),u=o.hasClass("open");if(!u||u&&t.keyCode==27)return n.click();r=e("[role=menu] li:not(.divider) a",o);if(!r.length)return;a=r.index(r.filter(":focus")),t.keyCode==38&&a>0&&a--,t.keyCode==40&&a<r.length-1&&a++,~a||(a=0),r.eq(a).focus()}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api touchstart.dropdown.data-api",r),e("body").on("click.dropdown touchstart.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api touchstart.dropdown.data-api",t,n.prototype.toggle).on("keydown.dropdown.data-api touchstart.dropdown.data-api",t+", [role=menu]",n.prototype.keydown)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this)),this.options.remote&&this.$element.find(".modal-body").load(this.options.remote)};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,this.escape(),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1).focus(),t.enforceFocus(),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var n=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),this.escape(),e(document).off("focusin.modal"),this.$element.removeClass("in").attr("aria-hidden",!0),e.support.transition&&this.$element.hasClass("fade")?this.hideWithTransition():this.hideModal()},enforceFocus:function(){var t=this;e(document).on("focusin.modal",function(e){t.$element[0]!==e.target&&!t.$element.has(e.target).length&&t.$element.focus()})},escape:function(){var e=this;this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.modal",function(t){t.which==27&&e.hide()}):this.isShown||this.$element.off("keyup.dismiss.modal")},hideWithTransition:function(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),t.hideModal()},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),t.hideModal()})},hideModal:function(e){this.$element.hide().trigger("hidden"),this.backdrop()},removeBackdrop:function(){this.$backdrop.remove(),this.$backdrop=null},backdrop:function(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(this.removeBackdrop,this)):this.removeBackdrop()):t&&t()}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r=n.attr("href"),i=e(n.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},i.data(),n.data());t.preventDefault(),i.modal(s).one("hide",function(){n.focus()})})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger=="click"?this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this)):this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();return n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove(),this},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0,html:!0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content > *")[this.options.html?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll-spy.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&r.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n;return this.query=this.$element.val(),!this.query||this.query.length<this.options.minLength?this.shown?this.hide():this:(n=e.isFunction(this.source)?this.source(this.query,e.proxy(this.process,this)):this.source,n?this.process(n):this)},process:function(t){var n=this;return t=e.grep(t,function(e){return n.matcher(e)}),t=this.sorter(t),t.length?this.render(t.slice(0,this.options.items)).show():this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.chrome||e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keydown,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},move:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:e.preventDefault(),this.prev();break;case 40:e.preventDefault(),this.next()}e.stopPropagation()},keydown:function(t){this.suppressKeyPressRepeat=!~e.inArray(t.keyCode,[40,38,9,13,27]),this.move(t)},keypress:function(e){if(this.suppressKeyPressRepeat)return;this.move(e)},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>',minLength:1},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=e.extend({},e.fn.affix.defaults,n),this.$window=e(window).on("scroll.affix.data-api",e.proxy(this.checkPosition,this)),this.$element=e(t),this.checkPosition()};t.prototype.checkPosition=function(){if(!this.$element.is(":visible"))return;var t=e(document).height(),n=this.$window.scrollTop(),r=this.$element.offset(),i=this.options.offset,s=i.bottom,o=i.top,u="affix affix-top affix-bottom",a;typeof i!="object"&&(s=o=i),typeof o=="function"&&(o=i.top()),typeof s=="function"&&(s=i.bottom()),a=this.unpin!=null&&n+this.unpin<=r.top?!1:s!=null&&r.top+this.$element.height()>=t-s?"bottom":o!=null&&n<=o?"top":!1;if(this.affixed===a)return;this.affixed=a,this.unpin=a=="bottom"?r.top-n:null,this.$element.removeClass(u).addClass("affix"+(a?"-"+a:""))},e.fn.affix=function(n){return this.each(function(){var r=e(this),i=r.data("affix"),s=typeof n=="object"&&n;i||r.data("affix",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.affix.Constructor=t,e.fn.affix.defaults={offset:0},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),t.affix(n)})})}(window.jQuery);;

// lib/handlebars/base.js
var Handlebars = {};

Handlebars.VERSION = "1.0.beta.6";

Handlebars.helpers  = {};
Handlebars.partials = {};

Handlebars.registerHelper = function(name, fn, inverse) {
  if(inverse) { fn.not = inverse; }
  this.helpers[name] = fn;
};

Handlebars.registerPartial = function(name, str) {
  this.partials[name] = str;
};

Handlebars.registerHelper('helperMissing', function(arg) {
  if(arguments.length === 2) {
    return undefined;
  } else {
    throw new Error("Could not find property '" + arg + "'");
  }
});

var toString = Object.prototype.toString, functionType = "[object Function]";

Handlebars.registerHelper('blockHelperMissing', function(context, options) {
  var inverse = options.inverse || function() {}, fn = options.fn;


  var ret = "";
  var type = toString.call(context);

  if(type === functionType) { context = context.call(this); }

  if(context === true) {
    return fn(this);
  } else if(context === false || context == null) {
    return inverse(this);
  } else if(type === "[object Array]") {
    if(context.length > 0) {
      for(var i=0, j=context.length; i<j; i++) {
        ret = ret + fn(context[i]);
      }
    } else {
      ret = inverse(this);
    }
    return ret;
  } else {
    return fn(context);
  }
});

Handlebars.registerHelper('each', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  var ret = "";

  if(context && context.length > 0) {
    for(var i=0, j=context.length; i<j; i++) {
      ret = ret + fn(context[i]);
    }
  } else {
    ret = inverse(this);
  }
  return ret;
});

Handlebars.registerHelper('if', function(context, options) {
  var type = toString.call(context);
  if(type === functionType) { context = context.call(this); }

  if(!context || Handlebars.Utils.isEmpty(context)) {
    return options.inverse(this);
  } else {
    return options.fn(this);
  }
});

Handlebars.registerHelper('unless', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  options.fn = inverse;
  options.inverse = fn;

  return Handlebars.helpers['if'].call(this, context, options);
});

Handlebars.registerHelper('with', function(context, options) {
  return options.fn(context);
});

Handlebars.registerHelper('log', function(context) {
  Handlebars.log(context);
});
;
// lib/handlebars/utils.js
Handlebars.Exception = function(message) {
  var tmp = Error.prototype.constructor.apply(this, arguments);

  for (var p in tmp) {
    if (tmp.hasOwnProperty(p)) { this[p] = tmp[p]; }
  }

  this.message = tmp.message;
};
Handlebars.Exception.prototype = new Error;

// Build out our basic SafeString type
Handlebars.SafeString = function(string) {
  this.string = string;
};
Handlebars.SafeString.prototype.toString = function() {
  return this.string.toString();
};

(function() {
  var escape = {
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#x27;",
    "`": "&#x60;"
  };

  var badChars = /&(?!\w+;)|[<>"'`]/g;
  var possible = /[&<>"'`]/;

  var escapeChar = function(chr) {
    return escape[chr] || "&amp;";
  };

  Handlebars.Utils = {
    escapeExpression: function(string) {
      // don't escape SafeStrings, since they're already safe
      if (string instanceof Handlebars.SafeString) {
        return string.toString();
      } else if (string == null || string === false) {
        return "";
      }

      if(!possible.test(string)) { return string; }
      return string.replace(badChars, escapeChar);
    },

    isEmpty: function(value) {
      if (typeof value === "undefined") {
        return true;
      } else if (value === null) {
        return true;
      } else if (value === false) {
        return true;
      } else if(Object.prototype.toString.call(value) === "[object Array]" && value.length === 0) {
        return true;
      } else {
        return false;
      }
    }
  };
})();;
// lib/handlebars/runtime.js
Handlebars.VM = {
  template: function(templateSpec) {
    // Just add water
    var container = {
      escapeExpression: Handlebars.Utils.escapeExpression,
      invokePartial: Handlebars.VM.invokePartial,
      programs: [],
      program: function(i, fn, data) {
        var programWrapper = this.programs[i];
        if(data) {
          return Handlebars.VM.program(fn, data);
        } else if(programWrapper) {
          return programWrapper;
        } else {
          programWrapper = this.programs[i] = Handlebars.VM.program(fn);
          return programWrapper;
        }
      },
      programWithDepth: Handlebars.VM.programWithDepth,
      noop: Handlebars.VM.noop
    };

    return function(context, options) {
      options = options || {};
      return templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);
    };
  },

  programWithDepth: function(fn, data, $depth) {
    var args = Array.prototype.slice.call(arguments, 2);

    return function(context, options) {
      options = options || {};

      return fn.apply(this, [context, options.data || data].concat(args));
    };
  },
  program: function(fn, data) {
    return function(context, options) {
      options = options || {};

      return fn(context, options.data || data);
    };
  },
  noop: function() { return ""; },
  invokePartial: function(partial, name, context, helpers, partials, data) {
    options = { helpers: helpers, partials: partials, data: data };

    if(partial === undefined) {
      throw new Handlebars.Exception("The partial " + name + " could not be found");
    } else if(partial instanceof Function) {
      return partial(context, options);
    } else if (!Handlebars.compile) {
      throw new Handlebars.Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
    } else {
      partials[name] = Handlebars.compile(partial);
      return partials[name](context, options);
    }
  }
};

Handlebars.template = Handlebars.VM.template;
;
;

// Chosen, a Select Box Enhancer for jQuery and Protoype
// by Patrick Filler for Harvest, http://getharvest.com
// 
// Version 0.9.8
// Full source at https://github.com/harvesthq/chosen
// Copyright (c) 2011 Harvest http://getharvest.com

// MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md
// This file is generated by `cake build`, do not edit it by hand.
(function(){var SelectParser;SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(child){return child.nodeName.toUpperCase()==="OPTGROUP"?this.add_group(child):this.add_option(child)},SelectParser.prototype.add_group=function(group){var group_position,option,_i,_len,_ref,_results;group_position=this.parsed.length,this.parsed.push({array_index:group_position,group:!0,label:group.label,children:0,disabled:group.disabled}),_ref=group.childNodes,_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++)option=_ref[_i],_results.push(this.add_option(option,group_position,group.disabled));return _results},SelectParser.prototype.add_option=function(option,group_position,group_disabled){if(option.nodeName.toUpperCase()==="OPTION")return option.text!==""?(group_position!=null&&(this.parsed[group_position].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:option.value,text:option.text,html:option.innerHTML,selected:option.selected,disabled:group_disabled===!0?group_disabled:option.disabled,group_array_index:group_position,classes:option.className,style:option.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1},SelectParser}(),SelectParser.select_to_array=function(select){var child,parser,_i,_len,_ref;parser=new SelectParser,_ref=select.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++)child=_ref[_i],parser.add_node(child);return parser.parsed},this.SelectParser=SelectParser}).call(this),function(){var AbstractChosen,root;root=this,AbstractChosen=function(){function AbstractChosen(form_field,options){this.form_field=form_field,this.options=options!=null?options:{},this.set_default_values(),this.is_multiple=this.form_field.multiple,this.set_default_text(),this.setup(),this.set_up_html(),this.register_observers(),this.finish_setup()}return AbstractChosen.prototype.set_default_values=function(){var _this=this;return this.click_test_action=function(evt){return _this.test_active_click(evt)},this.activate_action=function(evt){return _this.activate_field(evt)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.result_single_selected=null,this.allow_single_deselect=this.options.allow_single_deselect!=null&&this.form_field.options[0]!=null&&this.form_field.options[0].text===""?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.search_contains=this.options.search_contains||!1,this.choices=0,this.single_backstroke_delete=this.options.single_backstroke_delete||!1,this.max_selected_options=this.options.max_selected_options||Infinity},AbstractChosen.prototype.set_default_text=function(){return this.form_field.getAttribute("data-placeholder")?this.default_text=this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.default_text=this.options.placeholder_text_multiple||this.options.placeholder_text||"Select Some Options":this.default_text=this.options.placeholder_text_single||this.options.placeholder_text||"Select an Option",this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||"No results match"},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(evt){var _this=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return _this.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(evt){var _this=this;if(!this.mouse_on_container)return this.active_field=!1,setTimeout(function(){return _this.blur_test()},100)},AbstractChosen.prototype.result_add_option=function(option){var classes,style;return option.disabled?"":(option.dom_id=this.container_id+"_o_"+option.array_index,classes=option.selected&&this.is_multiple?[]:["active-result"],option.selected&&classes.push("result-selected"),option.group_array_index!=null&&classes.push("group-option"),option.classes!==""&&classes.push(option.classes),style=option.style.cssText!==""?' style="'+option.style+'"':"",'<li id="'+option.dom_id+'" class="'+classes.join(" ")+'"'+style+">"+option.html+"</li>")},AbstractChosen.prototype.results_update_field=function(){return this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.result_single_selected=null,this.results_build()},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(evt){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.keyup_checker=function(evt){var stroke,_ref;stroke=(_ref=evt.which)!=null?_ref:evt.keyCode,this.search_field_scale();switch(stroke){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:evt.preventDefault();if(this.results_showing)return this.result_select(evt);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.generate_field_id=function(){var new_id;return new_id=this.generate_random_id(),this.form_field.id=new_id,new_id},AbstractChosen.prototype.generate_random_char=function(){var chars,newchar,rand;return chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",rand=Math.floor(Math.random()*chars.length),newchar=chars.substring(rand,rand+1)},AbstractChosen}(),root.AbstractChosen=AbstractChosen}.call(this),function(){var $,Chosen,get_side_border_padding,root,__hasProp=Object.prototype.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};root=this,$=jQuery,$.fn.extend({chosen:function(options){return $.browser.msie&&($.browser.version==="6.0"||$.browser.version==="7.0"&&document.documentMode===7)?this:this.each(function(input_field){var $this;$this=$(this);if(!$this.hasClass("chzn-done"))return $this.data("chosen",new Chosen(this,options))})}}),Chosen=function(_super){function Chosen(){Chosen.__super__.constructor.apply(this,arguments)}return __extends(Chosen,_super),Chosen.prototype.setup=function(){return this.form_field_jq=$(this.form_field),this.current_value=this.form_field_jq.val(),this.is_rtl=this.form_field_jq.hasClass("chzn-rtl")},Chosen.prototype.finish_setup=function(){return this.form_field_jq.addClass("chzn-done")},Chosen.prototype.set_up_html=function(){var container_div,dd_top,dd_width,sf_width;return this.container_id=this.form_field.id.length?this.form_field.id.replace(/[^\w]/g,"_"):this.generate_field_id(),this.container_id+="_chzn",this.f_width=this.form_field_jq.outerWidth(),container_div=$("<div />",{id:this.container_id,"class":"chzn-container"+(this.is_rtl?" chzn-rtl":""),style:"width: "+this.f_width+"px;"}),this.is_multiple?container_div.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop" style="left:-9000px;"><ul class="chzn-results"></ul></div>'):container_div.html('<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chzn-drop" style="left:-9000px;"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>'),this.form_field_jq.hide().after(container_div),this.container=$("#"+this.container_id),this.container.addClass("chzn-container-"+(this.is_multiple?"multi":"single")),this.dropdown=this.container.find("div.chzn-drop").first(),dd_top=this.container.height(),dd_width=this.f_width-get_side_border_padding(this.dropdown),this.dropdown.css({width:dd_width+"px",top:dd_top+"px"}),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chzn-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chzn-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chzn-search").first(),this.selected_item=this.container.find(".chzn-single").first(),sf_width=dd_width-get_side_border_padding(this.search_container)-get_side_border_padding(this.search_field),this.search_field.css({width:sf_width+"px"})),this.results_build(),this.set_tab_index(),this.form_field_jq.trigger("liszt:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var _this=this;return this.container.mousedown(function(evt){return _this.container_mousedown(evt)}),this.container.mouseup(function(evt){return _this.container_mouseup(evt)}),this.container.mouseenter(function(evt){return _this.mouse_enter(evt)}),this.container.mouseleave(function(evt){return _this.mouse_leave(evt)}),this.search_results.mouseup(function(evt){return _this.search_results_mouseup(evt)}),this.search_results.mouseover(function(evt){return _this.search_results_mouseover(evt)}),this.search_results.mouseout(function(evt){return _this.search_results_mouseout(evt)}),this.form_field_jq.bind("liszt:updated",function(evt){return _this.results_update_field(evt)}),this.form_field_jq.bind("liszt:activate",function(evt){return _this.activate_field(evt)}),this.form_field_jq.bind("liszt:open",function(evt){return _this.container_mousedown(evt)}),this.search_field.blur(function(evt){return _this.input_blur(evt)}),this.search_field.keyup(function(evt){return _this.keyup_checker(evt)}),this.search_field.keydown(function(evt){return _this.keydown_checker(evt)}),this.search_field.focus(function(evt){return _this.input_focus(evt)}),this.is_multiple?this.search_choices.click(function(evt){return _this.choices_click(evt)}):this.container.click(function(evt){return evt.preventDefault()})},Chosen.prototype.search_field_disabled=function(){this.is_disabled=this.form_field_jq[0].disabled;if(this.is_disabled)return this.container.addClass("chzn-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus",this.activate_action),this.close_field();this.container.removeClass("chzn-disabled"),this.search_field[0].disabled=!1;if(!this.is_multiple)return this.selected_item.bind("focus",this.activate_action)},Chosen.prototype.container_mousedown=function(evt){var target_closelink;if(!this.is_disabled)return target_closelink=evt!=null?$(evt.target).hasClass("search-choice-close"):!1,evt&&evt.type==="mousedown"&&!this.results_showing&&evt.stopPropagation(),!this.pending_destroy_click&&!target_closelink?(this.active_field?!this.is_multiple&&evt&&($(evt.target)[0]===this.selected_item[0]||$(evt.target).parents("a.chzn-single").length)&&(evt.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),$(document).click(this.click_test_action),this.results_show()),this.activate_field()):this.pending_destroy_click=!1},Chosen.prototype.container_mouseup=function(evt){if(evt.target.nodeName==="ABBR"&&!this.is_disabled)return this.results_reset(evt)},Chosen.prototype.blur_test=function(evt){if(!this.active_field&&this.container.hasClass("chzn-container-active"))return this.close_field()},Chosen.prototype.close_field=function(){return $(document).unbind("click",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chzn-container-active"),this.winnow_results_clear(),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chzn-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(evt){return $(evt.target).parents("#"+this.container_id).length?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){var content,data,_i,_len,_ref;this.parsing=!0,this.results_data=root.SelectParser.select_to_array(this.form_field),this.is_multiple&&this.choices>0?(this.search_choices.find("li.search-choice").remove(),this.choices=0):this.is_multiple||(this.selected_item.addClass("chzn-default").find("span").text(this.default_text),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?this.container.addClass("chzn-container-single-nosearch"):this.container.removeClass("chzn-container-single-nosearch")),content="",_ref=this.results_data;for(_i=0,_len=_ref.length;_i<_len;_i++)data=_ref[_i],data.group?content+=this.result_add_group(data):data.empty||(content+=this.result_add_option(data),data.selected&&this.is_multiple?this.choice_build(data):data.selected&&!this.is_multiple&&(this.selected_item.removeClass("chzn-default").find("span").text(data.text),this.allow_single_deselect&&this.single_deselect_control_build()));return this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.search_results.html(content),this.parsing=!1},Chosen.prototype.result_add_group=function(group){return group.disabled?"":(group.dom_id=this.container_id+"_g_"+group.array_index,'<li id="'+group.dom_id+'" class="group-result">'+$("<div />").text(group.label).html()+"</li>")},Chosen.prototype.result_do_highlight=function(el){var high_bottom,high_top,maxHeight,visible_bottom,visible_top;if(el.length){this.result_clear_highlight(),this.result_highlight=el,this.result_highlight.addClass("highlighted"),maxHeight=parseInt(this.search_results.css("maxHeight"),10),visible_top=this.search_results.scrollTop(),visible_bottom=maxHeight+visible_top,high_top=this.result_highlight.position().top+this.search_results.scrollTop(),high_bottom=high_top+this.result_highlight.outerHeight();if(high_bottom>=visible_bottom)return this.search_results.scrollTop(high_bottom-maxHeight>0?high_bottom-maxHeight:0);if(high_top<visible_top)return this.search_results.scrollTop(high_top)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){var dd_top;if(!this.is_multiple)this.selected_item.addClass("chzn-single-with-drop"),this.result_single_selected&&this.result_do_highlight(this.result_single_selected);else if(this.max_selected_options<=this.choices)return this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1;return dd_top=this.is_multiple?this.container.height():this.container.height()-1,this.form_field_jq.trigger("liszt:showing_dropdown",{chosen:this}),this.dropdown.css({top:dd_top+"px",left:0}),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results()},Chosen.prototype.results_hide=function(){return this.is_multiple||this.selected_item.removeClass("chzn-single-with-drop"),this.result_clear_highlight(),this.form_field_jq.trigger("liszt:hiding_dropdown",{chosen:this}),this.dropdown.css({left:"-9000px"}),this.results_showing=!1},Chosen.prototype.set_tab_index=function(el){var ti;if(this.form_field_jq.attr("tabindex"))return ti=this.form_field_jq.attr("tabindex"),this.form_field_jq.attr("tabindex",-1),this.search_field.attr("tabindex",ti)},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(evt){var target;target=$(evt.target).hasClass("active-result")?$(evt.target):$(evt.target).parents(".active-result").first();if(target.length)return this.result_highlight=target,this.result_select(evt),this.search_field.focus()},Chosen.prototype.search_results_mouseover=function(evt){var target;target=$(evt.target).hasClass("active-result")?$(evt.target):$(evt.target).parents(".active-result").first();if(target)return this.result_do_highlight(target)},Chosen.prototype.search_results_mouseout=function(evt){if($(evt.target).hasClass("active-result"))return this.result_clear_highlight()},Chosen.prototype.choices_click=function(evt){evt.preventDefault();if(this.active_field&&!$(evt.target).hasClass("search-choice")&&!this.results_showing)return this.results_show()},Chosen.prototype.choice_build=function(item){var choice_id,html,link,_this=this;return this.is_multiple&&this.max_selected_options<=this.choices?(this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1):(choice_id=this.container_id+"_c_"+item.array_index,this.choices+=1,item.disabled?html='<li class="search-choice search-choice-disabled" id="'+choice_id+'"><span>'+item.html+"</span></li>":html='<li class="search-choice" id="'+choice_id+'"><span>'+item.html+'</span><a href="javascript:void(0)" class="search-choice-close" rel="'+item.array_index+'"></a></li>',this.search_container.before(html),link=$("#"+choice_id).find("a").first(),link.click(function(evt){return _this.choice_destroy_link_click(evt)}))},Chosen.prototype.choice_destroy_link_click=function(evt){return evt.preventDefault(),this.is_disabled?evt.stopPropagation:(this.pending_destroy_click=!0,this.choice_destroy($(evt.target)))},Chosen.prototype.choice_destroy=function(link){if(this.result_deselect(link.attr("rel")))return this.choices-=1,this.show_search_field_default(),this.is_multiple&&this.choices>0&&this.search_field.val().length<1&&this.results_hide(),link.parents("li").first().remove()},Chosen.prototype.results_reset=function(){this.form_field.options[0].selected=!0,this.selected_item.find("span").text(this.default_text),this.is_multiple||this.selected_item.addClass("chzn-default"),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change");if(this.active_field)return this.results_hide()},Chosen.prototype.results_reset_cleanup=function(){return this.current_value=this.form_field_jq.val(),this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(evt){var high,high_id,item,position;if(this.result_highlight)return high=this.result_highlight,high_id=high.attr("id"),this.result_clear_highlight(),this.is_multiple?this.result_deactivate(high):(this.search_results.find(".result-selected").removeClass("result-selected"),this.result_single_selected=high,this.selected_item.removeClass("chzn-default")),high.addClass("result-selected"),position=high_id.substr(high_id.lastIndexOf("_")+1),item=this.results_data[position],item.selected=!0,this.form_field.options[item.options_index].selected=!0,this.is_multiple?this.choice_build(item):(this.selected_item.find("span").first().text(item.text),this.allow_single_deselect&&this.single_deselect_control_build()),(!evt.metaKey||!this.is_multiple)&&this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field_jq.val()!==this.current_value)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[item.options_index].value}),this.current_value=this.form_field_jq.val(),this.search_field_scale()},Chosen.prototype.result_activate=function(el){return el.addClass("active-result")},Chosen.prototype.result_deactivate=function(el){return el.removeClass("active-result")},Chosen.prototype.result_deselect=function(pos){var result,result_data;return result_data=this.results_data[pos],this.form_field.options[result_data.options_index].disabled?!1:(result_data.selected=!1,this.form_field.options[result_data.options_index].selected=!1,result=$("#"+this.container_id+"_o_"+pos),result.removeClass("result-selected").addClass("active-result").show(),this.result_clear_highlight(),this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[result_data.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){if(this.allow_single_deselect&&this.selected_item.find("abbr").length<1)return this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>')},Chosen.prototype.winnow_results=function(){var found,option,part,parts,regex,regexAnchor,result,result_id,results,searchText,startpos,text,zregex,_i,_j,_len,_len2,_ref;this.no_results_clear(),results=0,searchText=this.search_field.val()===this.default_text?"":$("<div/>").text($.trim(this.search_field.val())).html(),regexAnchor=this.search_contains?"":"^",regex=new RegExp(regexAnchor+searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),zregex=new RegExp(searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),_ref=this.results_data;for(_i=0,_len=_ref.length;_i<_len;_i++){option=_ref[_i];if(!option.disabled&&!option.empty)if(option.group)$("#"+option.dom_id).css("display","none");else if(!this.is_multiple||!option.selected){found=!1,result_id=option.dom_id,result=$("#"+result_id);if(regex.test(option.html))found=!0,results+=1;else if(option.html.indexOf(" ")>=0||option.html.indexOf("[")===0){parts=option.html.replace(/\[|\]/g,"").split(" ");if(parts.length)for(_j=0,_len2=parts.length;_j<_len2;_j++)part=parts[_j],regex.test(part)&&(found=!0,results+=1)}found?(searchText.length?(startpos=option.html.search(zregex),text=option.html.substr(0,startpos+searchText.length)+"</em>"+option.html.substr(startpos+searchText.length),text=text.substr(0,startpos)+"<em>"+text.substr(startpos)):text=option.html,result.html(text),this.result_activate(result),option.group_array_index!=null&&$("#"+this.results_data[option.group_array_index].dom_id).css("display","list-item")):(this.result_highlight&&result_id===this.result_highlight.attr("id")&&this.result_clear_highlight(),this.result_deactivate(result))}}return results<1&&searchText.length?this.no_results(searchText):this.winnow_results_set_highlight()},Chosen.prototype.winnow_results_clear=function(){var li,lis,_i,_len,_results;this.search_field.val(""),lis=this.search_results.find("li"),_results=[];for(_i=0,_len=lis.length;_i<_len;_i++)li=lis[_i],li=$(li),li.hasClass("group-result")?_results.push(li.css("display","auto")):!this.is_multiple||!li.hasClass("result-selected")?_results.push(this.result_activate(li)):_results.push(void 0);return _results},Chosen.prototype.winnow_results_set_highlight=function(){var do_high,selected_results;if(!this.result_highlight){selected_results=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),do_high=selected_results.length?selected_results.first():this.search_results.find(".active-result").first();if(do_high!=null)return this.result_do_highlight(do_high)}},Chosen.prototype.no_results=function(terms){var no_results_html;return no_results_html=$('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),no_results_html.find("span").first().html(terms),this.search_results.append(no_results_html)},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var first_active,next_sib;this.result_highlight?this.results_showing&&(next_sib=this.result_highlight.nextAll("li.active-result").first(),next_sib&&this.result_do_highlight(next_sib)):(first_active=this.search_results.find("li.active-result").first(),first_active&&this.result_do_highlight($(first_active)));if(!this.results_showing)return this.results_show()},Chosen.prototype.keyup_arrow=function(){var prev_sibs;if(!this.results_showing&&!this.is_multiple)return this.results_show();if(this.result_highlight)return prev_sibs=this.result_highlight.prevAll("li.active-result"),prev_sibs.length?this.result_do_highlight(prev_sibs.first()):(this.choices>0&&this.results_hide(),this.result_clear_highlight())},Chosen.prototype.keydown_backstroke=function(){var next_available_destroy;if(this.pending_backstroke)return this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke();next_available_destroy=this.search_container.siblings("li.search-choice").last();if(next_available_destroy.length&&!next_available_destroy.hasClass("search-choice-disabled"))return this.pending_backstroke=next_available_destroy,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(evt){var stroke,_ref;stroke=(_ref=evt.which)!=null?_ref:evt.keyCode,this.search_field_scale(),stroke!==8&&this.pending_backstroke&&this.clear_backstroke();switch(stroke){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(evt),this.mouse_on_container=!1;break;case 13:evt.preventDefault();break;case 38:evt.preventDefault(),this.keyup_arrow();break;case 40:this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var dd_top,div,h,style,style_block,styles,w,_i,_len;if(this.is_multiple){h=0,w=0,style_block="position:absolute; left: -1000px; top: -1000px; display:none;",styles=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"];for(_i=0,_len=styles.length;_i<_len;_i++)style=styles[_i],style_block+=style+":"+this.search_field.css(style)+";";return div=$("<div />",{style:style_block}),div.text(this.search_field.val()),$("body").append(div),w=div.width()+25,div.remove(),w>this.f_width-10&&(w=this.f_width-10),this.search_field.css({width:w+"px"}),dd_top=this.container.height(),this.dropdown.css({top:dd_top+"px"})}},Chosen.prototype.generate_random_id=function(){var string;string="sel"+this.generate_random_char()+this.generate_random_char()+this.generate_random_char();while($("#"+string).length>0)string+=this.generate_random_char();return string},Chosen}(AbstractChosen),get_side_border_padding=function(elmt){var side_border_padding;return side_border_padding=elmt.outerWidth()-elmt.width()},root.get_side_border_padding=get_side_border_padding}.call(this);;

/*	
 *	jQuery dotdotdot 1.5.1
 *	
 *	Copyright (c) 2012 Fred Heusschen
 *	www.frebsite.nl
 *
 *	Plugin website:
 *	dotdotdot.frebsite.nl
 *
 *	Dual licensed under the MIT and GPL licenses.
 *	http://en.wikipedia.org/wiki/MIT_License
 *	http://en.wikipedia.org/wiki/GNU_General_Public_License
 */


(function( $ )
{
	if ( $.fn.dotdotdot )
	{
		return;
	}

	$.fn.dotdotdot = function( o )
	{
		if ( this.length == 0 )
		{
			debug( true, 'No element found for "' + this.selector + '".' );
			return this;
		}
		if ( this.length > 1 )
		{
			return this.each(
				function()
				{
					$(this).dotdotdot( o );
				}
			);
		}


		var $dot = this;

		if ( $dot.data( 'dotdotdot' ) )
		{
			$dot.trigger( 'destroy.dot' );
		}

		$dot.bind_events = function()
		{
			$dot.bind(
				'update.dot',
				function( e, c )
				{
					e.preventDefault();
					e.stopPropagation();

					opts.maxHeight = ( typeof opts.height == 'number' ) 
						? opts.height 
						: getTrueInnerHeight( $dot );

					opts.maxHeight += opts.tolerance;

					if ( typeof c != 'undefined' )
					{
						if ( typeof c == 'string' || c instanceof HTMLElement )
						{
					 		c = $('<div />').append( c ).contents();
						}
						if ( c instanceof $ )
						{
							orgContent = c;
						}
					}

					$inr = $dot.wrapInner( '<div class="dotdotdot" />' ).children();
					$inr.empty()
						.append( orgContent.clone( true ) )
						.css({
							'height'	: 'auto',
							'width'		: 'auto',
							'border'	: 'none',
							'padding'	: 0,
							'margin'	: 0
						});

					var after = false,
						trunc = false;

					if ( conf.afterElement )
					{
						after = conf.afterElement.clone( true );
						conf.afterElement.remove();
					}
					if ( test( $inr, opts ) )
					{
						if ( opts.wrap == 'children' )
						{
							trunc = children( $inr, opts, after );
						}
						else
						{
							trunc = ellipsis( $inr, $dot, $inr, opts, after );
						}
					}
					$inr.replaceWith( $inr.contents() );
					$inr = null;
					
					if ( $.isFunction( opts.callback ) )
					{
						opts.callback.call( $dot[ 0 ], trunc, orgContent );
					}

					conf.isTruncated = trunc;
					return trunc;
				}

			).bind(
				'isTruncated.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], conf.isTruncated );
					}
					return conf.isTruncated;
				}

			).bind(
				'originalContent.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], orgContent );
					}
					return orgContent;
				}

			).bind(
				'destroy.dot',
				function( e )
				{
					e.preventDefault();
					e.stopPropagation();

					$dot.unwatch()
						.unbind_events()
						.empty()
						.append( orgContent )
						.data( 'dotdotdot', false );
				}
			);
			return $dot;
		};	//	/bind_events

		$dot.unbind_events = function()
		{
			$dot.unbind('.dot');
			return $dot;
		};	//	/unbind_events

		$dot.watch = function()
		{
			$dot.unwatch();
			if ( opts.watch == 'window' )
			{
				var $window = $(window),
					_wWidth = $window.width(),
					_wHeight = $window.height(); 

				$window.bind(
					'resize.dot' + conf.dotId,
					function()
					{
						if ( _wWidth != $window.width() || _wHeight != $window.height() || !opts.windowResizeFix )
						{
							_wWidth = $window.width();
							_wHeight = $window.height();
	
							if ( watchInt )
							{
								clearInterval( watchInt );
							}
							watchInt = setTimeout(
								function()
								{
									$dot.trigger( 'update.dot' );
								}, 10
							);
						}
					}
				);
			}
			else
			{
				watchOrg = getSizes( $dot );
				watchInt = setInterval(
					function()
					{
						var watchNew = getSizes( $dot );
						if ( watchOrg.width  != watchNew.width ||
							 watchOrg.height != watchNew.height )
						{
							$dot.trigger( 'update.dot' );
							watchOrg = getSizes( $dot );
						}
					}, 100
				);
			}
			return $dot;
		};
		$dot.unwatch = function()
		{
			$(window).unbind( 'resize.dot' + conf.dotId );
			if ( watchInt )
			{
				clearInterval( watchInt );
			}
			return $dot;
		};

		var	orgContent	= $dot.contents(),
			opts 		= $.extend( true, {}, $.fn.dotdotdot.defaults, o ),
			conf		= {},
			watchOrg	= {},
			watchInt	= null,
			$inr		= null;

		conf.afterElement	= getElement( opts.after, $dot );
		conf.isTruncated	= false;
		conf.dotId			= dotId++;


		$dot.data( 'dotdotdot', true )
			.bind_events()
			.trigger( 'update.dot' );

		if ( opts.watch )
		{
			$dot.watch();
		}

		return $dot;
	};


	//	public
	$.fn.dotdotdot.defaults = {
		'ellipsis'	: '... ',
		'wrap'		: 'word',
		'lastCharacter': {
			'remove'		: [ ' ', ',', ';', '.', '!', '?' ],
			'noEllipsis'	: []
		},
		'tolerance'	: 0,
		'callback'	: null,
		'after'		: null,
		'height'	: null,
		'watch'		: false,
		'windowResizeFix': true,
		'debug'		: false
	};
	

	//	private
	var dotId = 1;

	function children( $elem, o, after )
	{
		var $elements 	= $elem.children(),
			isTruncated	= false;

		$elem.empty();

		for ( var a = 0, l = $elements.length; a < l; a++ )
		{
			var $e = $elements.eq( a );
			$elem.append( $e );
			if ( after )
			{
				$elem.append( after );
			}
			if ( test( $elem, o ) )
			{
				$e.remove();
				isTruncated = true;
				break;
			}
			else
			{
				if ( after )
				{
					after.remove();
				}
			}
		}
		return isTruncated;
	}
	function ellipsis( $elem, $d, $i, o, after )
	{
		var $elements 	= $elem.contents(),
			isTruncated	= false;

		$elem.empty();

		var notx = 'table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, select, optgroup, option, textarea, script, style';
		for ( var a = 0, l = $elements.length; a < l; a++ )
		{

			if ( isTruncated )
			{
				break;
			}

			var e	= $elements[ a ],
				$e	= $(e);

			if ( typeof e == 'undefined' )
			{
				continue;
			}

			$elem.append( $e );
			if ( after )
			{
				var func = ( $elem.is( notx ) )
					? 'after'
					: 'append';
				$elem[ func ]( after );
			}
			if ( e.nodeType == 3 )
			{
				if ( test( $i, o ) )
				{
					isTruncated = ellipsisElement( $e, $d, $i, o, after );
				}
			}
			else
			{
				isTruncated = ellipsis( $e, $d, $i, o, after );
			}

			if ( !isTruncated )
			{
				if ( after )
				{
					after.remove();
				}
			}
		}
		return isTruncated;
	}
	function ellipsisElement( $e, $d, $i, o, after )
	{
		var isTruncated	= false,
			e			= $e[ 0 ];

		if ( typeof e == 'undefined' )
		{
			return false;
		}

		var seporator	= ( o.wrap == 'letter' ) ? '' : ' ',
			textArr		= getTextContent( e ).split( seporator ),
			position 	= -1,
			midPos		= -1,
			startPos	= 0,
			endPos		= textArr.length - 1;

		while ( startPos <= endPos )
		{
			var m = Math.floor( ( startPos + endPos ) / 2 );
			if ( m == midPos ) 
			{
				break;
			}
			midPos = m;

			setTextContent( e, textArr.slice( 0, midPos + 1 ).join( seporator ) + o.ellipsis );

			if ( !test( $i, o ) )
			{
				position	= midPos;
				startPos	= midPos; 
			}
			else
			{
				endPos		= midPos;
			}				
		}	
	
		if ( position != -1 )
		{
			var txt = textArr.slice( 0, position + 1 ).join( seporator );
			isTruncated = true;

			while( $.inArray( txt.slice( -1 ), o.lastCharacter.remove ) > -1 )
			{
				txt = txt.slice( 0, -1 );
			}
			if ( $.inArray( txt.slice( -1 ), o.lastCharacter.noEllipsis ) < 0 )
			{
				txt += o.ellipsis;
			}
			setTextContent( e, txt );
		}
		else
		{
			var $w = $e.parent();
			$e.remove();
			$n = $w.contents().eq( -1 );

			isTruncated = ellipsisElement( $n, $d, $i, o, after );
		}

		return isTruncated;
	}
	function test( $i, o )
	{
		return $i.innerHeight() > o.maxHeight;
	}
	function getSizes( $d )
	{
		return {
			'width'	: $d.innerWidth(),
			'height': $d.innerHeight()
		};
	}
	function setTextContent( e, content )
	{
		if ( e.innerText )
		{
			e.innerText = content;
		}
		else if ( e.nodeValue )
		{
			e.nodeValue = content;
		}
		else if (e.textContent)
		{
			e.textContent = content;
		}
	}
	function getTextContent( e )
	{
		if ( e.innerText )
		{
			return e.innerText;
		}
		else if ( e.nodeValue )
		{
			return e.nodeValue;
		}
		else if ( e.textContent )
		{
			return e.textContent;
		}
		else
		{
			return "";
		}
	}
	function getElement( e, $i )
	{
		if ( typeof e == 'undefined' )
		{
			return false;
		}
		if ( !e )
		{
			return false;
		}
		if ( typeof e == 'string' )
		{
			e = $(e, $i);
			return ( e.length )
				? e 
				: false;
		}
		if ( typeof e == 'object' )
		{
			return ( typeof e.jquery == 'undefined' )
				? false
				: e;
		}
		return false;
	}
	function getTrueInnerHeight( $el )
	{
		var h = $el.innerHeight(),
			a = [ 'paddingTop', 'paddingBottom' ];

		for ( z = 0, l = a.length; z < l; z++ ) {
			var m = parseInt( $el.css( a[ z ] ), 10 );
			if ( isNaN( m ) )
			{
				m = 0;
			}
			h -= m;
		}
		return h;
	}
	function debug( d, m )
	{
		if ( !d )
		{
			return false;
		}
		if ( typeof m == 'string' )
		{
			m = 'dotdotdot: ' + m;
		}
		else
		{
			m = [ 'dotdotdot:', m ];
		}

		if ( window.console && window.console.log )
		{
			window.console.log( m );
		}
		return false;
	}
	

	//	override jQuery.html
	var _orgHtml = $.fn.html;
    $.fn.html = function( str ) {
		if ( typeof str != 'undefined' )
		{
			if ( this.data( 'dotdotdot' ) )
			{
				if ( typeof str != 'function' )
				{
					return this.trigger( 'update', [ str ] );
				}
			}
			return _orgHtml.call( this, str );
		}
		return _orgHtml.call( this );
    };


	//	override jQuery.text
	var _orgText = $.fn.text;
    $.fn.text = function( str ) {
		if ( typeof str != 'undefined' )
		{
			if ( this.data( 'dotdotdot' ) )
			{
				var temp = $( '<div />' );
				temp.text( str );
				str = temp.html();
				temp.remove();
				return this.trigger( 'update', [ str ] );
			}
			return _orgText.call( this, str );
		}
        return _orgText.call( this );
    };


})( jQuery );;

/* 
 * version: 3
 *
 * Monkey patch library to JS standard runtime.
 * Because loads of stuff is broken or missing.
 *
 * By Tom, for Tom.
 *
 * Hey, if you're including this: Be wary of collisions
 * when you're including other monkey patches or hacky
 * libraries. This behaviour can legitimately be
 * considered "bad practice", but trust me. I know what
 * I'm doing.
 */

Date.prototype.toUnixTimestamp = function() { return this.getTime()/1000 };

Array.prototype.max = function() { return Math.max.apply(null, this) }

Array.prototype.min = function() { return Math.min.apply(null, this) }

if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(obj, start) {
        for (var i = (start || 0), j = this.length; i < j; i++) {
            if (this[i] === obj) { return i; }
        }
        return -1;
    }
}

Array.prototype.contains = function(x) { return this.indexOf(x)>=0; }

/* Inbuilt assertion statement */

function AssertException(message) { this.message = message; }
AssertException.prototype.toString = function () {
  return 'AssertException: ' + this.message;
}

function assert(exp, message) {
  if (!exp) {
    throw new AssertException(message);
  }
}

;

